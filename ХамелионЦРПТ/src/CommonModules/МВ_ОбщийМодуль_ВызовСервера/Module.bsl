Функция ПолучитьИмяПользователя() Экспорт 
	Возврат ПользователиИнформационнойБазы.ТекущийПользователь().Имя;	
КонецФункции

Функция ПолучитьФалыКМ_ОКТО()

	

КонецФункции // ПолучитьФалыКМ_ОКТО()

//Процедура для обработки события "ПриЗаписи" документов.
//
// Параметры:
//	Объект - Документ объект
//	Отказ - Отказ.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт

	Если Объект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ТипЗначения = ТипЗнч(Объект);
		
	Если ТипЗначения = "" Тогда
		
	ИначеЕсли ТипЗначения = Тип("ДокументОбъект.ВводВОборот_ХамелеонЦРПТ") 
		И  Объект.ТипДокумента = ПредопределенноеЗначение("Перечисление.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВводВОборот")  Тогда
		ВводВОборот_ПриЗаписи(Объект, Отказ)
	//ИначеЕсли ТипЗначения = Тип("ДокументОбъект.ВводВОборот_ХамелеонЦРПТ") 
	//	И  Объект.ТипДокумента = ПредопределенноеЗначение("Перечисление.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ОтчетОбИспользовании")  Тогда
	//	ВводВОборотОтчетОбИспользовании_ПриЗаписи(Объект, Отказ)
	
	КонецЕсли;
	
КонецПроцедуры 

Процедура ВводВОборот_ПриЗаписи(Объект, Отказ)

	Если Объект.ДополнительныеСвойства.Свойство("НеЗаполнятьСоответствие") Тогда
		Возврат;	
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ДокОснование) И НЕ ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.ВводВОборот_ХамелеонЦРПТ") Тогда
		Возврат;
	КонецЕсли;	
	СсылкаНаОбъект = Объект.Ссылка;	
			
	НаборЗаписей = РегистрыСведений.ХН_СоответствиеОперациямВводВОборот.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВводВОборот.Установить(СсылкаНаОбъект);
	
	Если Объект.ПометкаУдаления Тогда
		
		НаборЗаписей.Записать();
		Возврат;
		
	КонецЕсли;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ОтчетОбИспользовании = Объект.ДокОснование;	
	НоваяЗапись.ВводВОборот =  СсылкаНаОбъект;	
//	НоваяЗапись.Дата 	 = Объект.Дата;
	Попытка
		НаборЗаписей.Записать();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	//РегДв=РегистрыСведений.СопоставлениеСправочниковДокументов_ХамелеонЦРПТ.СоздатьНаборЗаписей();
	//РегДв.Отбор.Справочник_Документ.Установить(Стр_1);
	//Добав=РегДв.Добавить();
	//Добав.Справочник_Документ=Стр_1;
	//Добав.СправочникДокумент_Меркурия=НовыйДокумент.Ссылка;
	//РегДв.Записать(Истина);

	
КонецПроцедуры 


Процедура ВводВОборотОтчетОбИспользовании_ПриЗагрузкеИзФайла(Объект, Отказ)

	Если Объект.ДополнительныеСвойства.Свойство("НеЗаполнятьСоответствие") Тогда
		Возврат;	
	КонецЕсли;
	//Если НЕ ЗначениеЗаполнено(Объект.ДокОснование) И НЕ ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.ВводВОборот_ХамелеонЦРПТ") Тогда
	//	Возврат;
	//КонецЕсли;	
	СсылкаНаОбъект = Объект.Ссылка;	
			
	НаборЗаписей = РегистрыСведений.ХН_СоотвествиеФайловВводуВОборот.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВводВОборот.Установить(СсылкаНаОбъект);
	
	Если Объект.ПометкаУдаления Тогда
		
		НаборЗаписей.Записать();
		Возврат;
		
	КонецЕсли;
	
//	НоваяЗапись = НаборЗаписей.Добавить();
//	//НоваяЗапись.ОтчетОбИспользовании = Объект.ДокОснование;	
//	НоваяЗапись.ВводВОборот =  СсылкаНаОбъект;	
////	НоваяЗапись.Дата 	 = Объект.Дата;
//	Попытка
//		НаборЗаписей.Записать();
//	Исключение
//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
//	КонецПопытки;
	
	//РегДв=РегистрыСведений.СопоставлениеСправочниковДокументов_ХамелеонЦРПТ.СоздатьНаборЗаписей();
	//РегДв.Отбор.Справочник_Документ.Установить(Стр_1);
	//Добав=РегДв.Добавить();
	//Добав.Справочник_Документ=Стр_1;
	//Добав.СправочникДокумент_Меркурия=НовыйДокумент.Ссылка;
	//РегДв.Записать(Истина);

	
КонецПроцедуры 
