//////////////////////////////////////////////////////////
// РАБОТА С ФОРМАМИ

#Область СлужебныеПроцедурыИФункции

#Область РаботаСРеквизитамиФормы

// Процедура - Добавить реквизит формы
//
// Параметры:
//  Форма				 - УправляемаяФорма - Форма, на которую добавляем реквизит
//  Имя					 - Строка - Имя реквизита
//  Тип					 - ОписаниеТипов - Тип реквизита 
//  Путь				 - Строка - Путь к создаваемому реквизиту. Не включает имя реквизита. 
//  Заголовок			 - Строка - Содержит отображаемый текст реквизита
//  СохраняемыеДанные	 - Булево - Реквизит содержит сохраняемые данные
//
Процедура ДобавитьРеквизитФормы(Форма, Имя, Знач Тип="", Путь="", Заголовок = "", СохраняемыеДанные = Ложь) Экспорт
	
	Если Тип = "" Тогда
		Тип = Новый ОписаниеТипов("Булево");
	КонецЕсли;
	
	МассивРеквизитов = Новый Массив;
    Реквизит = Новый РеквизитФормы(Имя, Тип, Путь, Заголовок, СохраняемыеДанные);
    МассивРеквизитов.Добавить(Реквизит);
    Форма.ИзменитьРеквизиты(МассивРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСЭлементамиФормы

// Функция - Добавить страницу формы
//
// Параметры:
//  Форма								 - УправляемаяФорма - Форма, на которую добавляем страницу
//  Имя									 - Строка - Имя элемента формы
//  Заголовок							 - Строка - Заголовок страницы
//  ЭлементВладелец						 - ЭлементФормы - Группа на которую добавляем страницу
//  ЭлементСтраницаПередКоторымВставляем - ЭлементФормы - Страница перед которой добавляем страницу
// 
// Возвращаемое значение:
//   ЭлементФормы - добавленный элемент
//
Функция ДобавитьСтраницуФормы(Форма, Имя, Заголовок, ЭлементВладелец, ЭлементСтраницаПередКоторымВставляем=Неопределено) Экспорт
	
	//Добавим или вставим страницу
	Если ЭлементСтраницаПередКоторымВставляем = Неопределено Тогда
		НоваяСтраница = Форма.Элементы.Добавить(Имя,Тип("ГруппаФормы"),ЭлементВладелец);
	Иначе
		НоваяСтраница = Форма.Элементы.Вставить(Имя,Тип("ГруппаФормы"),ЭлементВладелец,ЭлементСтраницаПередКоторымВставляем);
	КонецЕсли;
	
	НоваяСтраница.Вид = ВидГруппыФормы.Страница;
	НоваяСтраница.Видимость = Истина;
	НоваяСтраница.Заголовок = Заголовок;
	
	Возврат НоваяСтраница;
	
КонецФункции

// Функция - Добавить группу формы
//
// Параметры:
//  Форма								 - УправляемаяФорма - Форма, на которую добавляем страницу
//  Имя									 - Строка - Имя элемента формы
//  Заголовок							 - Строка - Заголовок страницы
//  ЭлементВладелец						 - ЭлементФормы - Группа на которую добавляем страницу
//  ЭлементСтраницаПередКоторымВставляем - ЭлементФормы - Страница перед которой добавляем страницу
//  Свертываемая						 - Булево - Сертываемая группа
// 
// Возвращаемое значение:
//   ЭлементФормы - добавленный элемент
//
Функция ДобавитьГруппуФормы(Форма, Имя, Заголовок="", ЭлементВладелец, ЭлементСтраницаПередКоторымВставляем=Неопределено, Свертываемая=Ложь) Экспорт
	
	//Добавим или вставим страницу
	Если ЭлементСтраницаПередКоторымВставляем = Неопределено Тогда
		НоваяГруппа = Форма.Элементы.Добавить(Имя,Тип("ГруппаФормы"),ЭлементВладелец);
	Иначе
		НоваяГруппа = Форма.Элементы.Вставить(Имя,Тип("ГруппаФормы"),ЭлементВладелец,ЭлементСтраницаПередКоторымВставляем);
	КонецЕсли;
	
	НоваяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НоваяГруппа.Видимость = Истина;
	НоваяГруппа.Доступность = Истина;
	НоваяГруппа.Заголовок = Заголовок;
	НоваяГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	
	Если Заголовок = "" Тогда
		НоваяГруппа.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
	
	Если Свертываемая Тогда
		НоваяГруппа.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
		НоваяГруппа.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;		
	КонецЕсли;
	
	Возврат НоваяГруппа;
	
КонецФункции

// Функция - Добавить группу колонок таблицы
//
// Параметры:
//  Форма								 - УправляемаяФорма - Форма, на которую добавляем страницу
//  Имя									 - Строка - Имя элемента формы
//  Заголовок							 - Строка - Заголовок страницы
//  ЭлементВладелец						 - ЭлементФормы - Группа на которую добавляем страницу
//  ЭлементСтраницаПередКоторымВставляем - ЭлементФормы - Страница перед которой добавляем страницу
//  Свертываемая						 - Булево - Сертываемая группа
// 
// Возвращаемое значение:
//   ЭлементФормы - добавленный элемент
//
Функция ДобавитьГруппуКолонок(Форма, Имя, Заголовок="", ЭлементВладелец, ЭлементСтраницаПередКоторымВставляем=Неопределено) Экспорт
	
	//Добавим или вставим страницу
	Если ЭлементСтраницаПередКоторымВставляем = Неопределено Тогда
		НоваяГруппа = Форма.Элементы.Добавить(Имя,Тип("ГруппаФормы"),ЭлементВладелец);
	Иначе
		НоваяГруппа = Форма.Элементы.Вставить(Имя,Тип("ГруппаФормы"),ЭлементВладелец,ЭлементСтраницаПередКоторымВставляем);
	КонецЕсли;
	
	НоваяГруппа.Вид = ВидГруппыФормы.ГруппаКолонок;
	НоваяГруппа.Видимость = Истина;
	НоваяГруппа.Доступность = Истина;
	НоваяГруппа.Заголовок = Заголовок;
	НоваяГруппа.Группировка = ГруппировкаКолонок.Вертикальная;
	
	Если Заголовок = "" Тогда
		НоваяГруппа.ОтображатьЗаголовок = Ложь;
		НоваяГруппа.ОтображатьВШапке = Ложь;
	Иначе
		НоваяГруппа.ОтображатьЗаголовок = Истина;
		НоваяГруппа.ОтображатьВШапке = Истина;
	КонецЕсли;
	
	Возврат НоваяГруппа;
	
КонецФункции

// Функция - Добавить поле формы
//
// Параметры:
//  Форма						 - УравляемаяФорма - Форма, на которую добавляем страницу 
//  Имя							 - Строка - Имя элемента формы 
//  ПутьКДанным					 - Строка - Путь к данным элемента
//  ЭлементВладелец				 - ЭлементФормы - Группа, на которую добавляем элемент 
//  ЭлементПередКоторымВставляем - ЭлементФормы - Элемент перед которым добавляем элемент
// 
// Возвращаемое значение:
//   ЭлементФормы - добавленный элемент
//
Функция ДобавитьТаблицуФормы(Форма, Имя, ПутьКДанным="", ЭлементВладелец=Неопределено, ЭлементПередКоторымВставляем=Неопределено) Экспорт
	
	//Добавим или вставим страницу
	Если ЭлементПередКоторымВставляем = Неопределено Тогда
		НовыйЭлемент = Форма.Элементы.Добавить(Имя,Тип("ТаблицаФормы"),?(ЭлементВладелец=Неопределено,Форма,ЭлементВладелец));
	Иначе
		НовыйЭлемент = Форма.Элементы.Вставить(Имя,Тип("ТаблицаФормы"),?(ЭлементВладелец=Неопределено,Форма,ЭлементВладелец),ЭлементПередКоторымВставляем);
	КонецЕсли;
	
	НовыйЭлемент.Видимость = Истина;
	НовыйЭлемент.ПутьКДанным = ПутьКДанным;
		
	Возврат НовыйЭлемент;
	
КонецФункции

// Функция - Добавить поле формы
//
// Параметры:
//  Форма						 - УравляемаяФорма - Форма, на которую добавляем страницу 
//  Имя							 - Строка - Имя элемента формы 
//  ПутьКДанным					 - Строка - Путь к данным элемента
//  Заголовок					 - Строка - Заголовок элемента
//  ВидПоля						 - ВидПоляФормы - Вид поля формы
//  ЭлементВладелец				 - ЭлементФормы - Группа, на которую добавляем элемент 
//  ЭлементПередКоторымВставляем - ЭлементФормы - Элемент перед которым добавляем элемент
// 
// Возвращаемое значение:
//   ЭлементФормы - добавленный элемент
//
Функция ДобавитьПолеФормы(Форма, Имя, ПутьКДанным="", Заголовок="", ВидПоля=Неопределено, ЭлементВладелец=Неопределено, ЭлементПередКоторымВставляем=Неопределено) Экспорт
	
	//Добавим или вставим страницу
	Если ЭлементПередКоторымВставляем = Неопределено Тогда
		НовыйЭлемент = Форма.Элементы.Добавить(Имя,Тип("ПолеФормы"),?(ЭлементВладелец=Неопределено,Форма,ЭлементВладелец));
	Иначе
		НовыйЭлемент = Форма.Элементы.Вставить(Имя,Тип("ПолеФормы"),?(ЭлементВладелец=Неопределено,Форма,ЭлементВладелец),ЭлементПередКоторымВставляем);
	КонецЕсли;
	
	Если ВидПоля = Неопределено Тогда
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	Иначе
		НовыйЭлемент.Вид = ВидПоля;
	КонецЕсли;	
	НовыйЭлемент.Видимость = Истина;
	НовыйЭлемент.ПутьКДанным = ПутьКДанным;
	
	Если СтрДлина(Заголовок) > 0 Тогда
		НовыйЭлемент.Заголовок = Заголовок;
	КонецЕсли;
	
	Если ВидПоля = ВидПоляФормы.ПолеФлажка Тогда
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;	
	КонецЕсли;	
		
	Возврат НовыйЭлемент;
	
КонецФункции

// Функция - Добавить декорацию формы
//
// Параметры:
//  Форма								 - УправляемаяФорма - Форма, на которую добавляем страницу
//  Имя									 - Строка - Имя элемента формы
//  Заголовок							 - Строка - Заголовок страницы
//  ЭлементВладелец						 - ЭлементФормы - Группа на которую добавляем страницу
//  ЭлементСтраницаПередКоторымВставляем - ЭлементФормы - Страница перед которой добавляем страницу
// 
// Возвращаемое значение:
//   ЭлементФормы - добавленный элемент
//
Функция ДобавитьДекорациюФормы(Форма, Имя, Заголовок, ЭлементВладелец, ЭлементСтраницаПередКоторымВставляем=Неопределено) Экспорт
	
	//Добавим или вставим страницу
	Если ЭлементСтраницаПередКоторымВставляем = Неопределено Тогда
		НовыйЭлемент = Форма.Элементы.Добавить(Имя,Тип("ДекорацияФормы"),ЭлементВладелец);
	Иначе
		НовыйЭлемент = Форма.Элементы.Вставить(Имя,Тип("ДекорацияФормы"),ЭлементВладелец,ЭлементСтраницаПередКоторымВставляем);
	КонецЕсли;
	
	НовыйЭлемент.Видимость = Истина;
	НовыйЭлемент.Доступность = Истина;
	НовыйЭлемент.Заголовок = Заголовок;
	
	Возврат НовыйЭлемент;
	
КонецФункции

// Функция - Добавить команду формы
//
// Параметры:
//  Форма								 - УправляемаяФорма - Форма, на которую добавляем страницу
//  Имя									 - Строка - Имя элемента формы, Имя команды, Имя действия
//  Заголовок							 - Строка - Заголовок страницы
//  ЭлементВладелец						 - ЭлементФормы - Группа на которую добавляем страницу
//  ЭлементСтраницаПередКоторымВставляем - ЭлементФормы - Страница перед которой добавляем страницу
// 
// Возвращаемое значение:
//   ЭлементФормы - добавленный элемент
//
Функция ДобавитьКомандуФормы(Форма, Имя, ИмяКоманды = "", Заголовок, ВидКнопки = Неопределено, ЭлементВладелец, ЭлементСтраницаПередКоторымВставляем = Неопределено) Экспорт
	
	// Добвляем команду формы
	НоваяКоманда = Форма.Команды.Добавить(ИмяКоманды);
	// Свойство "Действие" содержит имя процедуры-обработчика команды
	НоваяКоманда.Действие = ИмяКоманды;
	
	//Добавим или вставим кнопку на форму
	Если ЭлементСтраницаПередКоторымВставляем = Неопределено Тогда
		НовыйЭлемент = Форма.Элементы.Добавить(Имя,Тип("КнопкаФормы"),ЭлементВладелец);
	Иначе
		НовыйЭлемент = Форма.Элементы.Вставить(Имя,Тип("КнопкаФормы"),ЭлементВладелец,ЭлементСтраницаПередКоторымВставляем);
	КонецЕсли;
	
	// Присваиваем команду для созданной кнопки
	НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	
	НовыйЭлемент.Видимость	 = Истина;
	НовыйЭлемент.Доступность = Истина;
	НовыйЭлемент.Заголовок	 = Заголовок;
	НовыйЭлемент.Вид		 = ВидКнопки;
	
	Возврат НовыйЭлемент;
	
КонецФункции

#КонецОбласти
	
#КонецОбласти
