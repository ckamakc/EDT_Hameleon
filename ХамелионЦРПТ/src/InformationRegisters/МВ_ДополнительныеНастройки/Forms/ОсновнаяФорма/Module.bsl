// ФТО:ALNA 22.07.2019 30701

//++ ФТО:DANC 20.05.2020 39229
// Добавлена группа формы "ГруппаУправлениеГруппировками", кнопки "СвернутьВсе" и "РазвернутьВсе"
// Добавлены команды формы "ДеревоНастроекРазвернутьВсе" и "ДеревоНастроекСвернутьВсе"
// Изменено наименование и синоним группы с "КоманднаяПанель" и "Командная панель" на "Настройки" 
//-- ФТО:DANC 20.05.2020

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заголовок = Метаданные.РегистрыСведений.МВ_ДополнительныеНастройки.Синоним;
	Дата = ТекущаяДатаСеанса();
	
	СтрокаОрганизация = Организации.Добавить();
	СтрокаОрганизация.ИмяСтраницы = Элементы.СтраницаОбщие.Имя;
	СтрокаОрганизация.Организация = Справочники.Организации_ХамелеонЦРПТ.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка,
	|	Организации.Наименование КАК Заголовок
	|ИЗ
	|	Справочник.Организации_ХамелеонЦРПТ КАК Организации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	НомерСтраницы = 0;
	Пока Выборка.Следующий() Цикл
		НомерСтраницы = НомерСтраницы + 1;
		
		ЭлементСтраница = Элементы.Добавить("Страница" + НомерСтраницы, Тип("ГруппаФормы"), Элементы.Закладки);
    	ЭлементСтраница.Вид = ВидГруппыФормы.Страница;
    	ЭлементСтраница.Заголовок = Выборка.Заголовок;
		ЭлементСтраница.Подсказка = Выборка.Заголовок;
		ЭлементСтраница.ОтображениеПодсказки = Элементы.СтраницаОбщие.ОтображениеПодсказки;
		
		Декорация = Элементы.Добавить("Декорация" + НомерСтраницы, Тип("ДекорацияФормы"), ЭлементСтраница);
		Декорация.Вид = ВидДекорацииФормы.Картинка;
		Декорация.Картинка = Элементы.ДекорацияОбщие.Картинка;
		
		СтрокаОрганизации = Организации.Добавить();
		СтрокаОрганизации.ИмяСтраницы = ЭлементСтраница.Имя;
		СтрокаОрганизации.Организация = Выборка.Ссылка;
		
	КонецЦикла;
	
	//++ ФТО:SOAL 04.10.2019 32239
	СписокПолей = РегистрыСведений.МВ_ДополнительныеНастройки.СписокПолейСРежимомПароль();
	Для Каждого ПолеПароль Из СписокПолей Цикл
		РегистрыСведений.МВ_ДополнительныеНастройки.УстановитьУсловноеОформлениеДляПароля(ЭтаФорма, "ДеревоНастроекЗначение", "ДеревоНастроек.Значение", "ДеревоНастроек.Настройка", ПолеПароль);
	КонецЦикла;	
		
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ДеревоНастроекНастройка");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ДеревоНастроекЗначение");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ДеревоНастроекОписание");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор, "ДеревоНастроек.ЭтоГруппа", ВидСравненияКомпоновкиДанных.Равно, Истина,, Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ЦветФонаГруппировкиОтчета1);	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(Элементы.ДеревоНастроекЗначение.Шрифт,,, Истина)); 
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ДеревоНастроекЗначение");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор, "ДеревоНастроек.ЭтоГруппа", ВидСравненияКомпоновкиДанных.Равно, Ложь,, Истина);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор, "ДеревоНастроек.ЭтоУмолчание", ВидСравненияКомпоновкиДанных.Равно, Ложь,, Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(Элементы.ДеревоНастроекЗначение.Шрифт,,, Истина));
	//-- ФТО:SOAL 04.10.2019                                                                 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьСписокНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "МВ_ДополнительныеНастройки.ИзменениеНастроек" Тогда
		ОбновитьСписокНастроек();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ОбновитьСписокНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакладкиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ОбновитьСписокНастроек();
	ТекущийЭлемент = Элементы.ДеревоНастроек;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоНастроек

&НаКлиенте
Процедура ДеревоНастроекПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.ДеревоНастроек.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		СтрокаОрганизация = ТекущаяСтрокаОрганизация();
		Если ЗначениеЗаполнено(СтрокаОрганизация.Организация) Тогда
			ВыбраннаяНастройкаОрганизации = ТекДанные.Настройка;
		Иначе
			ВыбраннаяНастройкаОбщая = ТекДанные.Настройка;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекПриАктивизацииЯчейки(Элемент)
	
	ВыбраннаяКолонка = Элементы.ДеревоНастроек.ТекущийЭлемент.Имя;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.ДеревоНастроек.ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаОрганизация = ТекущаяСтрокаОрганизация();
	Настройка = Элементы.ДеревоНастроек.ТекущиеДанные.Настройка;
	
	ПараметрыФормыИстории = Новый Структура;
	ПараметрыФормыИстории.Вставить("МВ_Настройка", Настройка);
	ПараметрыФормыИстории.Вставить("МВ_Организация", СтрокаОрганизация.Организация);
	
	ОткрытьФорму("РегистрСведений.МВ_ДополнительныеНастройки.Форма.ФормаИстории", ПараметрыФормыИстории);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РегистрНастроек(Команда)
	
	ОткрытьФорму("РегистрСведений.МВ_ДополнительныеНастройки.Форма.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПереченьВсехНастроек(Команда)
	
	ОткрытьФорму("ПланВидовХарактеристик.МВ_ПереченьДополнительныхНастроек.ФормаСписка");
	
КонецПроцедуры

//++ ФТО:DANC 20.05.2020 39229
&НаКлиенте
Процедура ДеревоНастроекСвернутьВсе(Команда)
	
	ЭлементыДерева = ДеревоНастроек.ПолучитьЭлементы();
    Для каждого ЭлементДерева Из ЭлементыДерева Цикл
        Элементы.ДеревоНастроек.Свернуть(ЭлементДерева.ПолучитьИдентификатор());
    КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекРазвернутьВсе(Команда)
	
	ЭлементыДерева = ДеревоНастроек.ПолучитьЭлементы();
    Для каждого ЭлементДерева Из ЭлементыДерева Цикл
        Элементы.ДеревоНастроек.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Истина);
    КонецЦикла;
	
КонецПроцедуры 
//-- ФТО:DANC 20.05.2020

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ТекущаяСтрокаОрганизация()
	
	Поиск = Новый Структура("ИмяСтраницы", Элементы.Закладки.ТекущаяСтраница.Имя);
	Строки = Организации.НайтиСтроки(Поиск);
	Если Строки.Количество() = 0 Тогда
		ШаблонСтроки = НСтр("ru = 'Не найдена строка таблицы организации для: %1'");
		СообщениеИсключения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСтроки, Поиск.ИмяСтраницы); 
		ВызватьИсключение СообщениеИсключения;
	КонецЕсли;
	Возврат Строки[0];
	
КонецФункции

&НаКлиенте
Функция ИдентификаторСтрокиПоНастройке(ЭлементыДерева, Настройка)
	
	Для Каждого Элемент Из ЭлементыДерева Цикл
		
		Если Элемент.Настройка = Настройка Тогда
			Возврат Элемент.ПолучитьИдентификатор(); 
		КонецЕсли;
		
		ЭлементыПодчиненные = Элемент.ПолучитьЭлементы();
		Если ЭлементыПодчиненные.Количество() > 0 Тогда
			НайденныйИД = ИдентификаторСтрокиПоНастройке(ЭлементыПодчиненные, Настройка);
			Если НайденныйИД <> Неопределено Тогда
				Возврат НайденныйИД;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;   	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьСписокНастроек()
	
	СтрокаОрганизация = ТекущаяСтрокаОрганизация();
	ЗаполнитьСписокНастроекНаСервере(Дата, СтрокаОрганизация.Организация);
	
	ЭлементыДерева = ДеревоНастроек.ПолучитьЭлементы(); //верхний уровень
	Для Каждого Строка Из ЭлементыДерева Цикл
    	ИдентификаторСтроки = Строка.ПолучитьИдентификатор();
    	Элементы.ДеревоНастроек.Развернуть(ИдентификаторСтроки, Истина);
	КонецЦикла;   		
	
	Если ЗначениеЗаполнено(СтрокаОрганизация.Организация) Тогда
		ВыбраннаяНастройка = ВыбраннаяНастройкаОрганизации;
	Иначе
		ВыбраннаяНастройка = ВыбраннаяНастройкаОбщая;
	КонецЕсли;
	Идентификатор = ИдентификаторСтрокиПоНастройке(ЭлементыДерева, ВыбраннаяНастройка);
	Если ЗначениеЗаполнено(Идентификатор) Тогда
		Элементы.ДеревоНастроек.ТекущаяСтрока = Идентификатор;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ВыбраннаяКолонка) Тогда
		Элементы.ДеревоНастроек.ТекущийЭлемент = Элементы[ВыбраннаяКолонка];
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокНастроекНаСервере(Дата, Организация)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПВХ.Ссылка КАК Настройка,
	|	ПВХ.ЭтоГруппа КАК ЭтоГруппа,
	|	ПВХ.Описание КАК Описание,
	|	ЕСТЬNULL(Срез.Значение, ПВХ.ЗначениеПоУмолчанию) КАК Значение,
	|	ВЫБОР
	|		КОГДА НЕ ПВХ.ЭтоГруппа
	|				И Срез.Значение ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоУмолчание
	|ИЗ
	|	ПланВидовХарактеристик.МВ_ПереченьДополнительныхНастроек КАК ПВХ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МВ_ДополнительныеНастройки.СрезПоследних(&Дата, Организация = &Организация) КАК Срез
	|		ПО ПВХ.Ссылка = Срез.Настройка
	|ГДЕ
	|	ПВХ.Предопределенный
	|	И НЕ ПВХ.ЭтоГруппа
	|	И (&Организация = ЗНАЧЕНИЕ(Справочник.Организации_ХамелеонЦРПТ.ПустаяСсылка)
	|				И ПВХ.Общая
	|			ИЛИ &Организация <> ЗНАЧЕНИЕ(Справочник.Организации_ХамелеонЦРПТ.ПустаяСсылка)
	|				И НЕ ПВХ.Общая)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПВХ.Порядок,
	|	Настройка
	|ИТОГИ ПО
	|	Настройка ИЕРАРХИЯ
	|АВТОУПОРЯДОЧИВАНИЕ";

	ДеревоЗапроса = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией); //с выборкой не будет древовидной структуры
	
	Дерево = РеквизитФормыВЗначение("ДеревоНастроек");
	Дерево.Строки.Очистить();
	ДобавитьВДерево(Дерево.Строки, ДеревоЗапроса.Строки);
	ЗначениеВРеквизитФормы(Дерево, "ДеревоНастроек");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьВДерево(Строки, СтрокиЗапроса)
	
	Для Инд = 0 По СтрокиЗапроса.Количество() - 1 Цикл
		СтрокаЗапроса = СтрокиЗапроса[Инд];
		
		НоваяСтрока = Строки.Добавить();
		НоваяСтрока.ЭтоГруппа = СтрокаЗапроса.ЭтоГруппа;
		НоваяСтрока.Настройка = СтрокаЗапроса.Настройка;
		
		Если СтрокаЗапроса.ЭтоГруппа Тогда
			НоваяСтрока.Картинка = БиблиотекаКартинок.Папка;
			НоваяСтрока.Значение = "";
			НоваяСтрока.ЭтоУмолчание = Неопределено;
			ДобавитьВДерево(НоваяСтрока.Строки, СтрокаЗапроса.Строки);
		Иначе
			НоваяСтрока.Картинка = БиблиотекаКартинок.Реквизит;
			СтрокаФормата = РегистрыСведений.МВ_ДополнительныеНастройки.ФорматнаяСтрокаНастройки(СтрокаЗапроса.Настройка);
			НоваяСтрока.Значение = Формат(СтрокаЗапроса.Строки[0].Значение, СтрокаФормата);
			НоваяСтрока.ЭтоУмолчание = СтрокаЗапроса.Строки[0].ЭтоУмолчание;
			НоваяСтрока.Описание = СтрокаЗапроса.Строки[0].Описание;
		КонецЕсли;
		
	КонецЦикла;
	
	// Элементы "всплывают" над группами:
	УжеВсплыло = 0;
	Для Инд = 0 По Строки.Количество() - 1 Цикл
		Если НЕ Строки[Инд].ЭтоГруппа Тогда
			Строки.Сдвинуть(Инд, УжеВсплыло - Инд);
			УжеВсплыло = УжеВсплыло + 1;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
