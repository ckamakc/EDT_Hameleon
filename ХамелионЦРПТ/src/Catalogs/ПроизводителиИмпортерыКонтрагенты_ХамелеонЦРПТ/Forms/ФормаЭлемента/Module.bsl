
&НаКлиенте
Процедура ЗаполнитьПоИНН(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(Объект.ИНН) Тогда
		Масс1=Новый Массив;
		Масс1.Добавить(Объект.ИНН);
		ОткрытьФорму("Справочник.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.Форма.ФормаКапчаУФ",Новый Структура("МассивКлиентов",Масс1),,,,,Новый ОписаниеОповещения("ВыбратьДвоичн",ЭтаФорма));
		//ПрочитатьДанныеФайла(ДвоичныеДанные, Contractor.INN);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДвоичн(ВыбранноеЗначение_1, ИсточникВыбора) Экспорт
 	// Вставить содержимое обработчика.
	ЭтаФорма.Активизировать();
	Если ЗначениеЗаполнено(ВыбранноеЗначение_1) Тогда
		Если ВыбранноеЗначение_1.Количество()=0 Тогда
			Возврат;
		КонецЕсли;
	         ВыбранноеЗначение=ВыбранноеЗначение_1[0].Значение.Дв;
		Если ВыбранноеЗначение.Свойство("n",Объект.НаименованиеПолное) Тогда
		
		
			ВыбранноеЗначение.Свойство("n",Объект.Наименование);
			Если СтрДлина(СокрЛП(Объект.ИНН))=12 Тогда
				Объект.Наименование="ИП "+Объект.Наименование;
				
				Объект.НаименованиеПолное="ИП "+Объект.НаименованиеПолное;
			КонецЕсли;
		КонецЕсли;
		//Заполним адреса
		ВыбранноеЗначение.Свойство("p",Объект.КПП);
		
		ВыбранноеЗначение.Свойство("a",Объект.ЮридическийАдрес);
		
			//ВыбранноеЗначение.Свойство("o",Объект.ОГРН);
		
		
		//Объект.ИНН						= ВыбранноеЗначение.i;
	
		Если Объект.ИНН<>Объект.Наименование Тогда
			ЭтаФорма.Записать();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	Если Объект.ИНН=Объект.Наименование Тогда
		ЗаполнитьПоИНН(Отказ);
	КонецЕсли;
	ПодключитьОбработчикОжидания("ааа",1,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ааа() 
	Если ТекущийЭлемент=Элементы.АдресДляОткрытия Тогда
		
		
		Форм=ОткрытьФорму("РегистрСведений.Адрес_ХамелеонЦРПТ.Форма.ФормаЗаписи",Новый Структура("ЗначенияЗаполнения",Новый Структура("Объект,Тип",Объект.Ссылка,
		ПредопределенноеЗначение("Перечисление.ТипАдреса_ХамелеонЦРПТ.Юричический"))));
		Форм.Запись.Тип=ПредопределенноеЗначение("Перечисление.ТипАдреса_ХамелеонЦРПТ.Юричический");
	ИначеЕсли ТекущийЭлемент=Элементы.АдресФакт Тогда
		
		Форм=ОткрытьФорму("РегистрСведений.Адрес_ХамелеонЦРПТ.Форма.ФормаЗаписи",Новый Структура("ЗначенияЗаполнения",Новый Структура("Объект,Тип",Объект.Ссылка,
		ПредопределенноеЗначение("Перечисление.ТипАдреса_ХамелеонЦРПТ.Фактический"))));
		Форм.Запись.Тип=ПредопределенноеЗначение("Перечисление.ТипАдреса_ХамелеонЦРПТ.Фактический");
		
		
	Конецесли;
	Элементы.АдресДляОткрытия.Видимость=Ложь;
	Элементы.АдресФакт.Видимость=Ложь;
	
КонецПроцедуры


&НаКлиенте
Процедура ГрузополучательОтличаетсяПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Сообщить("Для отображения в документе поля грузоотправитель и грузополучатель, переоткройте документ");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТокенСрегистра(Thumbprint_1)
	Возврат Регистрысведений.ТокенПоСертификату_ХамелеонЦРПТ.Получить(Новый Структура("Отпечаток",Thumbprint_1)).Токен;
КонецФункции


&НаКлиенте
Процедура ПолучитьСтатусвЦРПТ(Команда,УжеОтправили=Ложь)
	// Вставить содержимое обработчика.
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
		Открыть=не ФОрм.Открыта();
	Если Открыть Тогда
		Форм.Открыть();
	КонецЕсли;
	Пользователь=Форм.Пользователь;
	
	Thumbprint_1=Форм.ПолучитьИзПользователя();	
	
	СерийныйНомер=Неопределено;
		СРегистра=ПолучитьТокенСрегистра(Thumbprint_1.Thumbprint_1);
		Если Не ЗначениеЗаполнено(СРегистра) тогда
			Попытка
				СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
			исключение
				СРегистра=Неопределено;
			КонецПопытки;
		КонецЕсли;
			
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
		
			HTTPЗапрос=Новый HTTPЗапрос("api/v3/org/registry/info?inn="+Объект.ИНН);
		HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
		//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
		///Константин           
		Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
		Текст1=Ответ.ПолучитьТелоКакСтроку();
		Если Ответ.КодСостояния=200 Тогда
			
			NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
			НасервереЗаполнимстатусы(NNN);
			
				ИначеЕсли Ответ.КодСостояния=401 ИЛИ Ответ.КодСостояния=502    Тогда
					    			Если УжеОтправили=Истина Тогда
										ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);		
										Возврат
									Иначе
										ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
										ПолучитьСтатусвЦРПТ(Команда,Истина);			
										Возврат;
									КонецЕсли
			
		КонецЕсли;
		ЭтаФорма.Прочитать();
			Если Открыть Тогда
Форм.Закрыть();
КонецЕсли;
	Попытка
		ЭтаФорма.ВладелецФормы.Активизировать();
	Исключение
	КонецПопытки;
	ПодключитьОбработчикОЖидания("аа",0.1,Истина);	
КонецПроцедуры

&НаКлиенте
Процедура аа()
	ЭтаФорма.Активизировать();
КонецПроцедуры

Процедура НасервереЗаполнимстатусы(NNN)
	Для Каждого Стр_1 Из NNN ЦИкл
			//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.Ссылка
		|ИЗ
		|	Справочник.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ КАК ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ
		|ГДЕ
		|	ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.ИНН = &ИНН";
	
	Запрос.УстановитьПараметр("ИНН", Стр_1.inn);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		ПрК=ВыборкаДетальныеЗаписи.Ссылка.Получитьобъект();
		ПрК.СтатусВЦРПТ=Перечисления.СтатусыРегистрацииКонтрагентовВЦРПТ_ХамелеонЦРПТ[Стр_1.status];
		ПрК.Записать();
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

		
	Конеццикла;
	
КонецПроцедуры
Процедура ОчиститьТокенСрегистра(ТТ)
	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаписатьТокенВРегистр(ТТ,"")
КонецПроцедуры


&НаКлиенте
Процедура Получить(Команда)
	// Вставить содержимое обработчика.
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Открыть=не ФОрм.Открыта();
	Если Открыть Тогда
		Форм.Открыть();
	КонецЕсли;
	Пользователь=Форм.Пользователь;
	
	Thumbprint_1=Форм.ПолучитьИзПользователя();	
	
	СтруктураНастроек=Неопределено;                                                    СерийныйНомер="";
	СРегистра=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьТокенСрегистра(Thumbprint_1.Thumbprint_1,СтруктураНастроек);
		СерийныйНомер=СтруктураНастроек.СерийныйНомер;
	
		Если Не ЗначениеЗаполнено(СРегистра) ИЛИ Не ЗначениеЗаполнено(СерийныйНомер) Тогда
			СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
		Иначе
		   
				Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
					Прокси=Новый ИнтернетПрокси;
					Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
				
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				Иначе
				
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				КонецЕсли;
				
				HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/balance/all");
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
				HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
				//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
				///Константин           
				Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
				//Текст1=Ответ.ПолучитьТелоКакСтроку();
				Если Ответ.КодСостояния<>200 Тогда
					СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
				КонецЕсли;
					
		КонецЕсли;
	

//		КонецЕсли;
		Если Не ЗначениеЗаполнено(СРегистра) Тогда
			ПоказатьПредупреждение(,"Не удалось получить токен по организации");
			Возврат;
		Конецесли;
		
 				                                                     
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;  

	
		ЗаписатьИДЭДОВЦРПТ(Объект.ИНН,СРегистра,Thumbprint_1,HTTPСервисЗапрос,СерийныйНомер);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИДЭДОВЦРПТ(ИНН,СРегистра,Thumbprint_1,HTTPСервисЗапрос,СерийныйНомер)
	HTTPЗапрос=Новый HTTPЗапрос("edo-api/participants/suggestions?query="+ИНН+"&limit=10");
		
		
	//	HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
		HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
		HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:73.0) Gecko/20100101 Firefox/73.0");
		HTTPЗапрос.Заголовки.Вставить("X-Requested-With","XMLHttpRequest");
	//	HTTPЗапрос.Заголовки.Вставить("Host",Thumbprint_1.АдресКАПИ);
	//	HTTPЗапрос.Заголовки.Вставить("Referer","https://"+Thumbprint_1.АдресКАПИ +"/documents/incoming/list");
		
		
		
		HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*, application/json;charset=UTF-8");
		
		HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	//	HTTPЗапрос.Заголовки.Вставить("Cache-Control","no-cache");
		HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
		HTTPЗапрос.Заголовки.Вставить("TE","Trailers");
		
		
		
	//	Куки="certSerial="+Thumbprint_1.Thumbprint_1+";lk-auth-token="+Срегистра ;
		Куки="count=2;"+""+"tokenPart1="+Сред(СРегистра,1,4000)+";"+""+
		"tokenPart2="+Сред(СРегистра,4001)+";"+""+"certSerial="+СерийныйНомер ;


		HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
		
		//Тело="documentType=LP_ACCEPT_GOODS_XML";
	//	HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
		//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
		///Константин           
		Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
		Текст1=Ответ.ПолучитьТелоКакСтроку();
	Попытка
			NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
			Объект.Ид_ЭДО_ЦРПТ=Формат(NNN.items[0].id,"ЧГ=");
		Исключение
			Попытка
				Объект.Ид_ЭДО_ЦРПТ=Формат(NNN.items[0].participant.id,"ЧГ=");
				
			Исключение
			КонецПопытки;
		КонецПопытки;
		
КонецПроцедуры

Функция ВыведимСообщение()
	СпрЭДО=Справочники.ЭДО_ХамелеонЦРПТ.НайтиПоРеквизиту("ИдентификаторОператораЭДО",Сред(Объект.ИД_ЭДО,1,3));
	Сообщить("Клиент подключен к "+СпрЭДО.Наименование+" идентификатору ЭДО "+Сред(Объект.ИД_ЭДО,1,3));
КонецФункции
&НаКлиенте
Процедура ВыборИДЭДО(Команда)
	// Вставить содержимое обработчика.
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json");
	
	Соединение = Новый HTTPСоединение("edo-integration.1c.ru",,,,,, Новый ЗащищенноеСоединениеOpenSSL);
	Запрос = Новый HTTPЗапрос("api/edo-settings/identifiers/search", Заголовки);
	Запрос.УстановитьТелоИзСтроки("{""innList"": ["""+Объект.ИНН+"""],""page"": 0}");
	
	ОтветСтрока = Соединение.ОтправитьДляОбработки(Запрос).ПолучитьТелоКакСтроку();
	
	NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(ОтветСтрока);//ПрочитатьJSON(ЧтениеJSON);
	Если NNN.identifierInfos.Количество()=1 Тогда
		Объект.ИД_ЭДО=NNN.identifierInfos[0].id;
		ВыведимСообщение();
	ИначеЕсли NNN.identifierInfos.Количество()>1 Тогда
		ОткрытьФорму("Справочник.ЭДО_ХамелеонЦРПТ.Форма.ФормаВыбораЭДО",
		Новый структура("ДЖСОН",NNN),,,,,Новый ОписаниеОповещения("ПослеВыбораИД",ЭтаФорма));
		
	Иначе
		ПоказатЬПредупреждение(,"Клиент не подключен к ЭДО");
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораИД(РР,ДД) Экспорт
	Если ЗначениеЗаполнено(РР) Тогда
		Объект.ИД_ЭДО=РР
	КонецЕсли;
КонецПроцедуры


 &НаСервереБезКонтекста
 Функция ПолучитьКлючЗаписи(Структура)
	Запись = РегистрыСведений.Адрес_ХамелеонЦРПТ.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись,Структура);
	Запись.Прочитать();
	Если Запись.Выбран() = Ложь Тогда
	   Возврат Неопределено;
	КонецЕсли; 	 
	Возврат РегистрыСведений.Адрес_ХамелеонЦРПТ.СоздатьКлючЗаписи(Структура);
КонецФункции

&НаКлиенте
Процедура ЮрАдресВXMLНажатие(Элемент)
	// Вставить содержимое обработчика.
	КлючЗаписиРегистра = ПолучитьКлючЗаписи(Новый Структура("Объект,Тип", Объект.Ссылка,ПредопределенноеЗначение("Перечисление.ТипАдреса_ХамелеонЦРПТ.Юричический")));
	 Если КлючЗаписиРегистра =Неопределено тогда
		Форм=ОткрытьФорму("РегистрСведений.Адрес_ХамелеонЦРПТ.Форма.ФормаЗаписи",Новый Структура("ЗначенияЗаполнения",Новый Структура("Объект,Тип",Объект.Ссылка,
		ПредопределенноеЗначение("Перечисление.ТипАдреса_ХамелеонЦРПТ.Юричический"))));
		Форм.Запись.Тип=ПредопределенноеЗначение("Перечисление.ТипАдреса_ХамелеонЦРПТ.Юричический");
	Иначе
		ОткрытьФорму("РегистрСведений.Адрес_ХамелеонЦРПТ.Форма.ФормаЗаписи", Новый Структура("Ключ", КлючЗаписиРегистра)); 		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФактАдресВXML1Нажатие(Элемент)
	// Вставить содержимое обработчика.
	КлючЗаписиРегистра = ПолучитьКлючЗаписи(Новый Структура("Объект,Тип", Объект.Ссылка,ПредопределенноеЗначение("Перечисление.ТипАдреса_ХамелеонЦРПТ.Фактический")));
	 Если КлючЗаписиРегистра =Неопределено тогда
		Форм=ОткрытьФорму("РегистрСведений.Адрес_ХамелеонЦРПТ.Форма.ФормаЗаписи",Новый Структура("ЗначенияЗаполнения",Новый Структура("Объект,Тип",Объект.Ссылка,
		ПредопределенноеЗначение("Перечисление.ТипАдреса_ХамелеонЦРПТ.Фактический"))));
		Форм.Запись.Тип=ПредопределенноеЗначение("Перечисление.ТипАдреса_ХамелеонЦРПТ.Фактический");
	Иначе
		ОткрытьФорму("РегистрСведений.Адрес_ХамелеонЦРПТ.Форма.ФормаЗаписи", Новый Структура("Ключ", КлючЗаписиРегистра)); 		
	КонецЕсли;
//		Форм=ОткрытьФорму("РегистрСведений.Адрес_ХамелеонЦРПТ.Форма.ФормаЗаписи",Новый Структура("ЗначенияЗаполнения",Новый Структура("Объект,Тип",Объект.Ссылка,
//		ПредопределенноеЗначение("Перечисление.ТипАдреса_ХамелеонЦРПТ.Фактический"))));
//		Форм.Запись.Тип=ПредопределенноеЗначение("Перечисление.ТипАдреса_ХамелеонЦРПТ.Фактический");
	
КонецПроцедуры
