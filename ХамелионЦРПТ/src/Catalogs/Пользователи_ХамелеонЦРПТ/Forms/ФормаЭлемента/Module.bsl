&НаСервере
Процедура ОчиститьПриемкуНаСервере()
	// Вставить содержимое обработчика.
	Если ЗначениеЗАполнено(Объект.Ссылка) тогда
		Регдв=РегистрыСведений.ПриемкаПоОрганизациям_ХамелеонЦРПТ.СоздатьНаборЗаписей();
		Регдв.Отбор.Организация.Установить(Объект.Ссылка);
		РегДв.Отбор.СайтВходаВСистему.Установить(Объект.СайтыВходаВСистему);
		РегДв.Записать(Истина);
	КонецЕслИ;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПриемку(Команда)
	ОчиститьПриемкуНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ПроверкаПодключения(Команда)
	// Вставить содержимое обработчика.
	ЭтаФорма.Записать();
	Форм=получитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	ТекП=Форм.Пользователь;
	Форм.Пользователь=Объект.Ссылка;
	Форм.Подключиться(Команда,Истина,Истина);
	Форм.Пользователь=ТекП;
	Форм.Подключиться(Команда,Ложь,Ложь);
	Форм.ОбновитьОтображениеДанных();
	
	ПодключитьОбработчикОжидания("аа",0.1,Истина);
КонецПроцедуры

&НаКлиенте
Процедура аа()
	ЭтаФорма.ОбновитьОтображениеДанных();
	ОбновитьИнтерфейс();	
	ЭтаФорма.Прочитать();
КонецПроцедуры

&НаКлиенте
Процедура ВыборСертификата(Команда)
	// Вставить содержимое обработчика.
//	ЭтаФорма.Записать();
	//Если ЗначениеЗаполнено(Объект.Ссылка) тогда
		Фропм=ОткрытьФорму("Справочник.Пользователи_ХамелеонЦРПТ.Форма.Сертификаты",,ЭтаФорма,,,,Новый ОписаниеОповещения("ПослеПрочтениеСертификата",ЭтаФорма));
		//Фропм.Пользователь=Объект.Ссылка;
	//Иначе
		//ПоказатьПредупреждение(,"Не удалось сохранить пользователя. Для выбора сертификата необходимо записать элемент");
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеПрочтениеСертификата(РР,ДД) Экспорт
	Если РР<>Неопределено Тогда
		ЗанестиВсеВПользователя(РР.T,РР.ИНН,РР.Название,РР.P,РР.Орг,РР.Фамилия,РР.ДатаДо,РР.Должность);
		ЭтаФорма.Записать();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗанестиВсеВПользователя(T,ИНН,Название,P,Орг,Фамилия,ДатаДО,Должность)
	Поль=Объект;
	Если ЗначениеЗаполнено(Фамилия) тогда
		Поль.КонтактноеЛицо=Фамилия;
	КонецЕсли;
	Поль.PIN=P;
	Поль.СрокДействияСертификата=ДатаДО;
	Поль.ИННСертификата=ИНН;
	Поль.НазваниеСертификата=Название;
	Поль.СертификатТумбер=T;
	Если ЗначениеЗаполнено(Должность) Тогда
		Поль.Должность=Должность;
	КонецЕсли;
	Поль.Организация=Орг;
	//Поль.Записать();
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучениеТокеннаСервере(ПараметрыДлякилента,Адрес,Порт,ВвыводитьПс,Защищ_1)
	Если Защищ_1=Истина Тогда
		Защищ=Неопределено
	Иначе
		Защищ=Новый ЗащищенноеСоединениеopenSSL();
	КонецЕсли;
Если ЗначениеЗАполнено(ПараметрыДлякилента.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",ПараметрыДлякилента.АдресПрокси,ПараметрыДлякилента.ПортПрокси,ПараметрыДлякилента.ПользовательПрокси,ПараметрыДлякилента.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Адрес,Порт,,,Прокси,ПараметрыДлякилента.Таймаут,Защищ);
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Адрес,Порт,,,,ПараметрыДлякилента.Таймаут,Защищ);
			КонецЕсли;
			
			HTTPЗапрос = Новый HTTPЗапрос("signin");
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
		
		
			HTTPЗапрос = Новый HTTPЗапрос("static/1555676332000/js/main/preload.js");
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			
			Токен=Ответ.ПолучитьТелоКакСтроку();
			Токен=Сред(Токен,Найти(Токен,"'clientToken', """)+16);
			Токен=Сред(Токен,1,Найти(Токен,"""")-1);
			Тело="{""id"":"""+ПараметрыДлякилента.ПользовательСУЗ+""",""password"":"""+ПараметрыДлякилента.ПарольСУЗ+"""}";
			
			
			
			HTTPЗапрос = Новый HTTPЗапрос("signin");
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.Заголовки.Вставить("clientToken",Токен);
			
			//Объект.ТокенКСУЗ=Токен;
			HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
			Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
			Кэш_3=Ответ.Заголовки["Set-Cookie"];
			Если не ЗначениеЗаполненО(Кэш_3) Тогда
				Кэш_3=Ответ.Заголовки["set-cookie"];
			Конецесли;
			Если Ответ.КодСостояния=200 И Не ЗначениеЗАполнено(Ответ.ПолучитьТелоКакСтроку()) Тогда
				HTTPЗапрос = Новый HTTPЗапрос("/");
				HTTPЗапрос.Заголовки.Вставить("Accept","text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3");
				HTTPЗапрос.Заголовки.Вставить("Refer","http://"+Адрес+":"+Формат(Порт,"ЧГ=")+"/signin");
				HTTPЗапрос.Заголовки.Вставить("Host",""+Адрес+":"+Формат(Порт,"ЧГ=")+"");
				HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
				 
				HTTPЗапрос.Заголовки.Вставить("Cookie",Кэш_3);
				Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
//				Если Ответ.КодСостояния=200 И Не ЗначениеЗАполнено(Ответ.ПолучитьТелоКакСтроку()) Тогда

				Кчму=Ответ.ПолучитЬтелокакСтроку();
				Кчму=Сред(Кчму,найти(Кчму,"Станция управления заказами для"));
				Кчму=Сред(Кчму,1,найти(Кчму,"</span>")-1);
				Если ВвыводитьПс<>Ложь Тогда
					Сообщить("Подключено к " +xml_ЧтениеАтрибут(Кчму))
				Конецесли;
//				Иначе
//					ПоказатьПредупреждение(,"Не удалось подключиться к СУЗ");
//				КонецЕсли;
			Иначе
					Сообщить("Не удалось подключиться к СУЗ");
			КонецЕсли;
		
Конецфункции
&НаКлиенте
Процедура ПроверкаПодключченияКСУЗ(Команда,ВвыводитьПс=Истина,Токен=Неопределено) Экспорт
	// Вставить содержимое обработчика.
	ЭтаФорма.Записать();
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	ТекСт=Форм.Пользователь;
	Форм.Пользователь=ОБъект.Ссылка;
	ПараметрыДлякилента=Неопределено;
	Если Форм.НаКлиенте(ПараметрыДлякилента) Тогда
		Форм.Пользователь=ТекСт;
		
		
		
		
		АдресРаздробить=ПараметрыДлякилента.АдресСУЗ;
		Адрес=Сред(АдресРаздробить,Найти(АдресРаздробить,"://")+3);
		Адрес=Сред(Адрес,1,Найти(Адрес,":")-1);
		Порт=Сред(АдресРаздробить,Найти(АдресРаздробить,"://")+3);
		Порт=Сред(Порт,Найти(Порт,":")+1);
		Попытка
			Порт=число(Порт);
		Исключение
			Порт=Неопределено;
		КонецПопытки;
		
		Если Не ЗначениеЗаполнено(Адрес) Тогда
			
			ПоказатьПредупреждение(,"В пользователе не заполнен адрес СУЗ");
			Возврат;
			
		КонецЕсли;
			Если Найти(АдресРаздробить,"https")=1 Тогда
				Защищ=Новый ЗащищенноеСоединениеopenSSL();
			Иначе
				Защищ=Неопределено;
			КонецЕсли;
		
		Если ОбработкаWEBНаСервере Тогда
			Ответ=ПолучениеТокеннаСервере(ПараметрыДлякилента,Адрес,Порт,ВвыводитьПс,Защищ=Неопределено);
			
		Иначе
			Thumbprint_1=ПараметрыДлякилента;
			
		//Если Thumbprint_1.НаименованиеСтенда="Обувь" 
		//	И Thumbprint_1.ПараметрРаботы="Рабочий"
		//	Тогда
		СРегистра="";
		СерийныйНомер="";
	  Куки=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ПолучитькукиВСУЗ(Thumbprint_1,,СРегистра,СерийныйНомер);
					Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Адрес,Порт,,,Прокси,Thumbprint_1.Таймаут,Защищ);
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Адрес,Порт,,,,Thumbprint_1.Таймаут,Защищ);
			КонецЕсли;

			
			
			
			
		HTTPЗапрос = Новый HTTPЗапрос("webapi/v1/enterpriseProfiles/"+Объект.ИдентификаторСУЗ+"/clientDevices?limit=10&skip=0"); //"static/1555676332000/js/main/preload.js");
			
//				HTTPЗапрос=Новый HTTPЗапрос("enterpriseProfile/list");
	//	HTTPЗапрос=Новый HTTPЗапрос("api/orders");
		
	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	//HTTPЗапрос.Заголовки.Вставить("clientToken",Срегистр);
	HTTPЗапрос.Заголовки.Вставить("TE","Trailers");
	HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0");
	HTTPЗапрос.Заголовки.Вставить("X-Requested-With","XMLHttpRequest");
	HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
	

	

	Адрес11=Адрес;
	Если ЗначениеЗаполнено(Порт) Тогда
		Адрес11=Адрес11+":"+Формат(Порт,"ЧГ=");
	КонецЕслИ;
	HTTPЗапрос.Заголовки.Вставить("Host",Адрес11);

	Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	Если Ответ.КодСостояния=200 Тогда
		Попытка
		Текст1=СтрЗаменить(Текст1,"\""","""");
		Текст1=СтрЗаменить(Текст1,"\\","\");
		
		///NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON_1(СтрЗаменить(Текст1,"""@class"":""com.equiron.sitemanager.common.entity.EnterpriseProfile"",",""));
		Текст1=Сред(Текст1,Найти(Текст1,"name"":")+6);
		Текст1=Сред(Текст1,1,Найти(Текст1,""",""type"));
		
		//name":"API_ООО \"КРОКУС-ВИНОТЕКА\"","type":"AUTO
		ПоказатЬПредупреждение(,"Успешно подключено к " +xml_ЧтениеАтрибут(Текст1));
		
		Возврат;
	Исключение
		КонецПопытки;
	КонецЕсли;
	ПоказатьПредупреждение(,"Не удалось подключиться к СУЗ!");
	Возврат;

	
		КонецЕсли;
		Иначе
			Форм.Пользователь=ТекСт;
		КонецЕсли;		
		ЭтаФорма.Записать();
КонецПроцедуры

&НаСервереБезКонтекста
Функция xml_ЧтениеАтрибут(прм_ЗначениеАтрибута) Экспорт                                              
    
    стр=xmlString(прм_ЗначениеАтрибута);                      
    стр=СтрЗаменить(стр,  "&"+"a"+"m"+"p"+";","&");
    стр=СтрЗаменить(стр,  "&"+"q"+"u"+"o"+"t;","""");
    стр=СтрЗаменить(стр,  "&"+"l"+"t"+";","<");                
    стр=СтрЗаменить(стр,  "&"+"g"+"t"+";",">");
    стр=СтрЗаменить(стр,  "&"+"a"+"p"+"o"+"s;","'");    
	Возврат Стр;
КонецФункции    // xml_ЗаписатьЗаписатьАтрибут   


&НаКлиенте
Процедура РегистрацияГИСНажатие(Элемент)
	// Вставить содержимое обработчика.
	НачатьЗапускПриложения(Новый ОписаниеОповещения("ПослеЗапускаПр",Этаформа),"http://app.gs1ru.org/");
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаПр(РР,ДД) Экспорт
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДоступКЦРПТНажатие(Элемент)
	
	Сайт=ПолучитьСайт();
	НачатьЗапускПриложения(Новый ОписаниеОповещения("ПослеЗапускаПр",Этаформа),Сайт);
	
КонецПроцедуры

Функция ПолучитьСайт()
	Если Константы.РежимРаботыХамелеонЦРПТ.Получить()=2 Тогда
		Если ОБъект.СайтыВходаВСистему.Наименование="Фармацевтика" Тогда
			Возврат "https://"+СтрЗаменить(Объект.СайтыВходаВСистему.ТестовыйСтенд,"api.","");
		КонецЕсли;
		
		Возврат "https://markirovka.demo.crpt.tech";
	ИначеЕсли Константы.РежимРаботыХамелеонЦРПТ.Получить()=1 Тогда
		Если ОБъект.СайтыВходаВСистему.Наименование="Фармацевтика" Тогда
			Возврат "https://"+СтрЗаменить(Объект.СайтыВходаВСистему.ОригинальныйСтенд,"api.","");
		КонецЕсли;
		Возврат "https://markirovka.crpt.ru";
	Иначе
		Сообщить("Выберите режим работы");
		Возврат "";
		
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ТаймаутОжиданияОтСайта=РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().ТаймаутОжиданияОтСайта;
	   ОбработкаWEBНаСервере=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ОбработкаWEBНаСервере();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) тогда
		//Объект.ФормироватьСерийныеНомераАвтоматически=Истина;
	КонецЕсли;
	//Если Не ЗначениеЗаполнено(Объект.АдресСайтаСУЗ) Тогда
	//	Объект.АдресСайтаСУЗ="http://"
	//КонецЕсли;
	РежимРаботы=Константы.РежимРаботыХамелеонЦРПТ.Получить();
	Если ЗначениеЗаполнено(Константы.РежимРаботыХамелеонЦРПТ.Получить()) Тогда
		Элементы.РежимРаботы.ТолькоПросмотр=Истина;
	КонецЕсли;
	ИспользоватьСайтGS1ПоМаркировке=РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().ИспользоватьСайтGS1ПоМаркировке;
	СайтыПриИзмененииСервер()	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	// Вставить содержимое обработчика.
	
	
	Если Найти(Объект.АдресСайтаСУЗ,"http://")<>1 
		И Найти(Объект.АдресСайтаСУЗ,"https://")<>1 
		Тогда
		Сообщить("В адресе сайта СУЗ(URL) не указаны слова http:// (https://)");
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РежимРаботы) Тогда
		Отказ=Истина;
		ПоказатьПредупреждение(,"Выберите режим работы системы");
	Иначе
		Если Не ЗначениеЗаполнено(Объект.Организация) 
			ИЛИ Не ЗначениеЗаполнено(Объект.КонтактноеЛицо) Тогда
		
	ПараметрыДлякилента=ПолучитьИзПользователя();	
	
		Если ПараметрыДлякилента.НаименованиеСтенда="Фармацевтика" Тогда
			Если ЗначениезАполнено(ПараметрыДлякилента.АдресКАПИ) Тогда
				  //			http://pharma.testuot.crpt.ru:45677/enterpriseProfile/list?skip=0&limit=10
				  
				  Контакт="";
				  Организация=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ВернутьОрганизациюПоСУЗ(ПараметрыДлякилента,ТаймаутОжиданияОтСайта,Контакт);
				  Если ЗначениеЗаполнено(Контакт) Тогда
					  Объект.КонтактноеЛицо=Контакт;
					 КонецЕсли ;
					 Если ЗначениеЗаполнено(Организация) И не ЗначениеЗаполнено(Объект.Организация) Тогда
						 Объект.Организация=Организация
						КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		 КонецЕсли;
		
	Конецесли;
	
	
	
КонецПроцедуры

&НасервереБезКонтекста
Процедура ЗаполнитьШаблоныЭтикетокНасервере()
	СпрШ=Справочники.ШаблоныЭтикеток_ХамелеонЦРПТ.Выбрать();
	Если НЕ СпрШ.Следующий() Тогда
		Если Константы.РежимРаботыХамелеонЦРПТ.Получить()=2 Тогда
			Макет_1=Справочники.ШаблоныЭтикеток_ХамелеонЦРПТ.ПолучитьМакет("Тестовый");
		Иначе
			Макет_1=Справочники.ШаблоныЭтикеток_ХамелеонЦРПТ.ПолучитьМакет("Оригинальный");
			
		КонецЕсли;
			Таб=Новый ТабличныйДокумент;
			Таб.Вывести(Макет_1);
			
			Для Сч=2 По Таб.ВысотаТаблицы Цикл
				Если ЗначениеЗАполнено(Таб.Область(Сч,1).Текст) Тогда
					Наименование=СокрЛП(Таб.Область(Сч,1).Текст);
					GUID=СокрЛП(Таб.Область(Сч,2).Текст);
					Статус=СокрЛП(Таб.Область(Сч,3).Текст);
					ДатаСоздания=СокрЛП(Таб.Область(Сч,4).Текст);
					Тип=СокрЛП(Таб.Область(Сч,5).Текст);
					
					СпрТТ=Справочники.ШаблоныЭтикеток_ХамелеонЦРПТ.СоздатьЭлемент();
					СпрТТ.Наименование=Наименование;
					СпрТТ.ДатаСоздания=Дата(Сред(ДатаСоздания,7,4),Сред(ДатаСоздания,4,2),Сред(ДатаСоздания,1,2));
					СпрТТ.Пользователь=Неопределено;
					СпрТТ.Статус=Статус;
					СпрТТ.Тип=Тип;
					СпрТТ.УникальныйИдентификатор=GUID;
					СпрТТ.Записать();
					
				КонецЕсли;
			КонецЦикла;
	
	КонецЕсли;
		
КонецПроцедуры

Процедура ИзменитьРежимРабобтыПолзователя()
	Константы.РежимРаботыХамелеонЦРПТ.Установить(РежимРаботы);
	Если ЗначениеЗаполнено(Константы.РежимРаботыХамелеонЦРПТ.Получить()) Тогда
		Элементы.РежимРаботы.ТолькоПросмотр=Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РежимРаботыПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ИзменитьРежимРабобтыПолзователя();

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// Вставить содержимое обработчика.
	
	Если ЗначениеЗаполнено(РежимРаботы) Тогда
		Если Не ЗначениеЗаполнено(ТекущийОбъект.ТипОплаты) Тогда
			ТекущийОбъект.ТипОплаты=Перечисления.ТипОплаты_ХамелеонЦРПТ.ОплатаПоЭмиссии;

		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекущийОбъект.СпособИзготовленияСИ) Тогда
			ТекущийОбъект.СпособИзготовленияСИ=Перечисления.СпособИзготовленияСИ_ХамелеонЦРПТ.Самостоятельно;

		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТекущийОбъект.ВидСИ) Тогда
			ТекущийОбъект.ВидСИ=Перечисления.ВидСИ_ХамелеонЦРПТ.GLUED;

		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТекущийОбъект.ВидМаркировки) Тогда
			ТекущийОбъект.ВидМаркировки=Перечисления.ВидМаркировки_ХамелеонЦРПТ.НаТовар;

		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТекущийОбъект.НомерДоговораСОператором) Тогда
			ТекущийОбъект.НомерДоговораСОператором="б/н";
		КонецЕсли;
		Если Не ЗначениеЗАполнено(ТекущийОбъект.ДатаДоговораСОператором) Тогда
			ТекущийОбъект.ДатаДоговораСОператором=ТекущаяДата();
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТекущийОбъект.СпособФормированияСН) Тогда
			ТекущийОбъект.СпособФормированияСН=Перечисления.СпособФормированияСН_ХамелеонЦРПТ.ОператорИСМП;
		КонецЕсли;
		Если Не ЗначениеЗАполнено(ТекущийОбъект.ШаблонЭтикетки) тогда
			ЗаполнитьШаблоныЭтикетокНасервере();
			Если Константы.РежимРаботыХамелеонЦРПТ.Получить()=2 Тогда
				ТекущийОбъект.ШаблонЭтикетки=Справочники.ШаблоныЭтикеток_ХамелеонЦРПТ.НайтиПоРеквизиту("УникальныйИдентификатор","29a3b282-3d3b-407f-9071-cd22c60417df");
			Иначе
				ТекущийОбъект.ШаблонЭтикетки=Справочники.ШаблоныЭтикеток_ХамелеонЦРПТ.НайтиПоРеквизиту("УникальныйИдентификатор","2196bc1a-3a32-4f33-8ad3-ff205a78a3e9");
			КонецЕсли;

		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекущийОБъект.АдресСайтаСУЗ) тогда
			Если 
			Константы.РежимРаботыХамелеонЦРПТ.Получить()=1 Тогда
		                  ТекущийОБъект.АдресСайтаСУЗ="https://suzgrid.crpt.ru"
						  
					  Иначе
						  
		                  ТекущийОБъект.АдресСайтаСУЗ="https://intuot.crpt.ru:12011"
						  
			      КонецЕсли;
	
		   КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

Функция ПолучитьИзПользователя()
	Возврат Обработки._Запуск_ХамелеонЦРПТ.ПолучитьИзПользователя(Объект);
КонецФункции

&НаКлиенте
Процедура ПроверкаПодключенияЦРПТ(Команда)
	Thumbprint_1=ПолучитьИзПользователя();	
	Если Thumbprint_1.НаименованиеСтенда="Фармацевтика" Тогда
		СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена_ЛДМП(Thumbprint_1);	
	Иначе
		
	   
		СРегистра=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьТокенСрегистра(Thumbprint_1.Thumbprint_1);
		Если Не ЗначениеЗаполнено(СРегистра) тогда
			СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);	
		Иначе
		   
				Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
					Прокси=Новый ИнтернетПрокси;
					Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
				
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				Иначе
				
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				КонецЕсли;
				
				HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/balance/all");
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
				HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
				//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
				///Константин           
				Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
				//Текст1=Ответ.ПолучитьТелоКакСтроку();
				Если Ответ.КодСостояния<>200 Тогда
					СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);	
				КонецЕсли;
					
		КонецЕсли;
		
		//СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);	
	КонецЕсли;
	Если Значениезаполнено(Срегистра) Тогда
		ПоказатьПредупреждение(,"Подключение успешно установлено к ЦРПТ");
//	Попытка
//		Фор=ПолучитьФорму("Справочник.Продукция_ХамелеонЦРПТ.Форма.ФормаСписка");
//		Фор.Загрузить(Команда);
//	Исключение
//	КонецПопытки;
	Иначе
		ПоказатьПредупреждение(,"Не удалось подключиться к ЦРПТ");
		
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
 Процедура ПослеВопросаСоздания(РР,ДД) Экспорт
	 Если РР=КодВозвратаДиалога.Да Тогда
		 
		HTTPСервисЗапрос=дд.HTTPСервисЗапрос;
		NNN=дд.NNN;
		
		HTTPЗапрос = Новый HTTPЗапрос("webapi/v1/enterpriseProfiles/"+NNN+"/clientDevices"); //"static/1555676332000/js/main/preload.js");
		HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.Заголовки.Вставить("Cookie",ДД.Куки);
		
		Чтен_Подкл=Новый  ЗаписьJSON;
		Чтен_Подкл.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
		Чтен_Подкл.ЗаписатьНачалоОбъекта();
		Чтен_Подкл.ЗаписатьИмяСвойства("name");
		Чтен_Подкл.ЗаписатьЗначение("Основной");
		Чтен_Подкл.ЗаписатьИмяСвойства("type");
		Чтен_Подкл.ЗаписатьЗначение("AUTOMATED_SYSTEM");
		Чтен_Подкл.ЗаписатьИмяСвойства("sendMode");
		Чтен_Подкл.ЗаписатьЗначение("AUTO");
		Чтен_Подкл.ЗаписатьКонецОбъекта();
		Текст_Подкл=Чтен_Подкл.Закрыть();
		
		HTTPЗапрос.УстановитьТелоИзСтроки(Текст_Подкл);
			
		Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
		Текст1=Ответ.ПолучитьТелоКакСтроку();
		
		Если Ответ.КодСостояния<>200 Тогда
			Сообщить("Не удалось создать токен, необходимо вручную создать токен в ЛК ЦРПТ");
		КонецЕсли;
		
		ПолучитьТокенИИД(РР);
		
		//https://intuot.crpt.ru:12011/webapi/v1/enterpriseProfiles/72383613-4941-4806-b670-4ab23294b352/clientDevices
		 
	КонецЕслИ;
КонецПроцедуры


&НаКлиенте
Процедура ПолучитьТокенИИД(Команда,УжеОтправили=Ложь)
	// Вставить содержимое обработчика.
	
	
   
	
    
	Thumbprint_1=ПолучитьИзПользователя();	
		
		
		АдресРаздробить=Thumbprint_1.АдресСУЗ;
		Адрес=Сред(АдресРаздробить,Найти(АдресРаздробить,"://")+3);
		Адрес=Сред(Адрес,1,Найти(Адрес,":")-1);
		Порт=Сред(АдресРаздробить,Найти(АдресРаздробить,"://")+3);
		Порт=Сред(Порт,Найти(Порт,":")+1);
		Попытка
			Порт=число(Порт);
		Исключение
			Порт=Неопределено;
		КонецПопытки;
		
	
			Если Найти(АдресРаздробить,"https")=1 Тогда
				Защищ=Новый ЗащищенноеСоединениеopenSSL();
			Иначе
				Защищ=Неопределено;
			КонецЕсли;
			
			
		
					Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Адрес,Порт,,,Прокси,Thumbprint_1.Таймаут,Защищ);
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Адрес,Порт,,,,Thumbprint_1.Таймаут,Защищ);
			КонецЕсли;

			Срегистра="";
			СерийныйНомер="";
	  	Куки=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ПолучитькукиВСУЗ(Thumbprint_1,,Срегистра,СерийныйНомер);
			
		Если Не ЗначениеЗаполнено(Куки) 
			ИЛИ Не ЗначениеЗаполнено(Срегистра) ИЛИ Не ЗначениеЗаполнено(СерийныйНомер) 
			Тогда
			
		//	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаписатьТокенВРегистр(Thumbprint_1.Thumbprint_1,"");
		//	Если УжеОтправили<>Истина Тогда
		//		 ПолучитьТокенИИД(Команда,Истина)
		//	КонецЕсли;
			Возврат;
			
		КонецЕсли;
		
		ОМС=Сред(Куки,Найти(Куки,"omsId=")+6);
		
		Если Найти(ОМС,";")>0 Тогда
			ОМС=Сред(ОМС,1,Найти(ОМС,";")-1);
			
		КонецЕсли;
		
		Объект.ИдентификаторСУЗ=ОМС;
		
							куки=СтрЗаменить(куки,"Path=/, ","");
							куки=СтрЗаменить(куки,"path=/,","");
		Куки=Куки+"certSerial="+СерийныйНомер+"; tokenPart1="+Сред(СРегистра,1,4000)+"; "+
					"tokenPart2="+Сред(СРегистра,4001) ;
					
				
					//HTTPЗапрос = Новый HTTPЗапрос("webapi/v1/enterpriseProfiles/"+ОМС+"/clientDevices?limit=10&skip=0"); //"static/1555676332000/js/main/preload.js");
					HTTPЗапрос = Новый HTTPЗапрос("webapi/v1/enterpriseProfiles/"+ОМС); //"static/1555676332000/js/main/preload.js");
					HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
				
					
				Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
				Текст1=Ответ.ПолучитьТелоКакСтроку();
				
				
				NNN_20=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON_Соответствие(Текст1);
				
				Если NNN_20["clientDevices"]<>Неопределено Тогда
					
					//ТипЗнч(NNN_20)=Тип("Массив") Тогда
					Если NNN_20["clientDevices"].Количество()>=1 Тогда
					
						Объект.ТокенКСУЗ=NNN_20["clientDevices"][0]["token"];
						Объект.ИдентификаторСоединения=NNN_20["clientDevices"][0]["omsConnectionId"];
//					ИначеЕсли NNN_20["clientDevices"].Количество()>1 Тогда
						
//						Объект.ТокенКСУЗ=NNN_20["clientDevices"][0]["token"];
						
					Иначе
						показатьВопрос(Новый ОПисаниеОповещения("ПослеВопросаСоздания",ЭтаФорма,Новый Структура("HTTPСервисЗапрос,NNN,Куки",HTTPСервисЗапрос,ОМС,Куки)),"На сайте СУЗ нет клиентских устройств. Создать?",РежимДиалогаВопрос.ДаНет);
					КонецЕсли;
				ИначеЕсли ТипЗнч(NNN_20)=Тип("Структура") Тогда
					Если NNN_20.totalCount>0 Тогда
					
						Объект.ТокенКСУЗ=NNN_20.result[0].token;
					//ИначеЕсли NNN_20.Количество()>1 Тогда
						
					//	Объект.ТокенКСУЗ=NNN_20[0].token;
						
					Иначе
						показатьВопрос(Новый ОПисаниеОповещения("ПослеВопросаСоздания",ЭтаФорма,Новый Структура("HTTPСервисЗапрос,NNN,Куки",HTTPСервисЗапрос,ОМС,Куки)),"На сайте СУЗ нет клиентских устройств. Создать?",РежимДиалогаВопрос.ДаНет);
					КонецЕсли;
					
					
				Иначе
						показатьВопрос(Новый ОПисаниеОповещения("ПослеВопросаСоздания",ЭтаФорма,Новый Структура("HTTPСервисЗапрос,NNN,Куки",HTTPСервисЗапрос,ОМС,Куки)),"На сайте СУЗ нет клиентских устройств. Создать?",РежимДиалогаВопрос.ДаНет);
					
				КонецЕсли;
				
				ЭтаФорма.Записать();
				Возврат;
				
КонецПроцедуры

&НаКлиенте
Процедура ВходНаGS1ОбувьНажатие(Элемент)
	// Вставить содержимое обработчика.
	Если ИспользоватьСайтGS1ПоМаркировке=Истина тОгда
		НачатьЗапускПриложения(Новый ОписаниеОповещения("ПослеЗапускаПр",Этаформа),"http://srs.gs1ru.org/io/");
	Иначе
		НачатьЗапускПриложения(Новый ОписаниеОповещения("ПослеЗапускаПр",Этаформа),"http://srs.gs1ru.org/mdo/");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СайтыПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	СайтыПриИзмененииСервер();	
КонецПроцедуры

Процедура СайтыПриИзмененииСервер()
	Фармацевтика=Строка(Объект.СайтыВходаВСистему)="Фармацевтика";
	Табак=Строка(Объект.СайтыВходаВСистему)="Табак"
	ИЛИ Строка(Объект.СайтыВходаВСистему)="Альтернативный табак"
	;
	
	Элементы.МДЛП.Видимость=Фармацевтика;
	Элементы.ШаблонКМПоУмолчанию.Видимость=Фармацевтика;
	Элементы.ШаблонКМТабакПоУмолчанию.Видимость=Табак;
КонецПроцедуры


&НаКлиенте
Процедура ЗарегестрироватьСертификатВСБИС(Команда)
	// Вставить содержимое обработчика.
	
	Thumbprint_1=ПолучитьИзПользователя();	
	РаботаСЭДО_На_Клиенте_ХамелеонЦРПТ.ЗарегистрироватьСертификатПоПользователю(Thumbprint_1);
	 	
КонецПроцедуры



Процедура ПолучитьТаблицуХС(ХС,Кэш,ТаблицаХС,Знач HTTPСервисЗапрос=Неопределено) Экспорт
	Если HTTPСервисЗапрос=Неопределено Тогда
		HTTPСервисЗапрос=New COMObject("WinHttp.WinHttpRequest.5.1");
	Попытка
		// ************************** Начало блока по отключению защищенного соединения **********
		Скрипт= Новый COMОбъект("MSScriptControl.ScriptControl");
		Скрипт.language="javascript";
		Скрипт.AddObject("WinHttp",HTTPСервисЗапрос);
		Скрипт.Eval("WinHttp.Option(4)=13056");//intSslErrorIgnoreFlags Игноировать ошбибки при SSL соединении
		//Скрипт.Eval("WinHttp.Option(6)=true");//blnEnableRedirects Разрешить перенаправления
		//Скрипт.Eval("WinHttp.Option(12)=true");//blnEnableHttpsToHttpRedirects Разрешить перенаправления с защищенного на не защиещенное соединение
		// ************************** Конец блока по отключению защищенного соединения **********	
	Исключение
	КонецПопытки;
		
		Если НЕ ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПодключитьсяКМеркурию_ПОСТОЯННО(HTTPСервисЗапрос,Объект.Инициатор,Объект.ПарольМеркурий) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Сайт=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьСайт();
	Если Сайт="" Тогда
		Сообщить("Не определен режим работы программы!! Зайдите в пользователя и выберите режим работы (тестовый или рабочий)");
		Возврат;
	КонецЕсли;

	
	HTTPСервисЗапрос.Open("GET", Сайт+"/operatorui?firmGuid="+ХС+"&_action=chooseServicedFirm&_language=ru", 0);
	//Обработки._Запуск_ХамелеонМеркурий.УстановитьПрокси(HTTPСервисЗапрос);
	
	
	
	//Заголовки=Новый Соответствие;
	HTTPСервисЗапрос.SetRequestHeader("Content-Type","application/x-www-form-urlencoded");
//	HTTPСервисЗапрос.SetCredentials("Cookie",Кэш);
	
	//HTTPЗапрос = Новый HTTPЗапрос("hs/operatorui?firmGuid="+Обработки._Запуск_ХамелеонМеркурий.xml_ЗаписатьАтрибут(ХС.GUID)+"&_action=chooseServicedFirm&_language=ru",Заголовки);
	
	HTTPСервисЗапрос.Send();
	HTTPСервисЗапрос.WaitForResponse();
		
	//Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
	
	Если HTTPСервисЗапрос.Status<>200 Тогда
		Возврат;
	КонецЕсли;
	ПолучСтр=HTTPСервисЗапрос.ResponseText;

	Try
		MSScriptControl = Новый COMObject("MSScriptControl.ScriptControl");
		MSScriptControl.Language = "javascript";
		TimeStamp = MSScriptControl.Eval("(new Date()).valueOf()");
	Except
		TimeStamp = 1000 * (CurrentDate() - Date(1970,1,1) - 3 * 3600);
	EndTry;

	//HTTPЗапрос = Новый HTTPЗапрос("hs/operatorui?_action=downloadEnterprises&_language=ru&timestamp="+Format(TimeStamp,"ЧГ="),Заголовки);
	
	HTTPСервисЗапрос.Open("GET", Сайт+"/operatorui?_action=downloadEnterprises&_language=ru&timestamp="+Format(TimeStamp,"ЧГ="), 0);
	//Обработки._Запуск_ХамелеонМеркурий.УстановитьПрокси(HTTPСервисЗапрос);
	HTTPСервисЗапрос.Send();
	HTTPСервисЗапрос.WaitForResponse();
	
	//Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
	
	Если HTTPСервисЗапрос.Status<>200 Тогда
		Возврат;
	КонецЕсли;
	
	ПолучПредприятиЭтогоХС=HTTPСервисЗапрос.ResponseText;
	СчСтр=1;
	Чтение=Новый ЧтениеHTML;
	Чтение.УстановитьСтроку(ПолучСтр);
	ПостроительDOM = Новый ПостроительDOM;
	ДокументHTML = ПостроительDOM.Прочитать(Чтение);
//	ТаблицаХС.Очистить();
	Если ДокументHTML.ПолучитьЭлементыПоИмени("table").Количество()>0 Тогда
				Индекс=0;
			Для каждого Стр Из ДокументHTML.ПолучитьЭлементыПоИмени("table")[Индекс].ДочерниеУзлы Цикл
				
				Для Каждого Стр_Т Из Стр.Ячейки Цикл
					
					Если НреГ(Стр_Т.ИмяКласса)="value" Тогда
						Ид="";
						Наименование="";
						Входящих=Неопределено;
						Для Каждого Стр_В Из стр_Т.ДочерниеУзлы Цикл
							Если Стр_В.ТипУзла=ТипУзлаDOM.Элемент И Найти(НРЕГ(Стр_В.ИмяУзла),"label")>0 Тогда
								Наименование=СокрЛП(Стр_В.ДочерниеУзлы[2].ЗначениеУзла);
								Для Каждого Стр_Л Из Стр_В.ДочерниеУзлы Цикл
									Если Стр_Л.ТипУзла=ТипУзлаDOM.Элемент И НРЕГ(Стр_Л.ИмяУзла)="input" Тогда
										Ид=Стр_Л.Значение;
										
									КонецЕсли;
									Если Стр_Л.ТипУзла=ТипУзлаDOM.Элемент И НРЕГ(Стр_Л.ИмяУзла)="a" Тогда
										//Ид=Стр_Л.Значение;
										Входящих=Число(СокрЛП(Стр_Л.ТекстовоеСодержимое));
									КонецЕсли;
									
								КонецциклА;
								
							КонецЕсли;
							
						КонецЦикла;
						Если Ид="null" Тогда
							
						Иначе
							
							//ООО=ТаблицаХС.Добавить();
							//ООО.Ид_1=Ид;
							
							
							
							HTTPСервисЗапрос.Open("GET", Сайт+"/operatorui?commonEnterpriseNumber="+Ид+"&_action=chooseServicedEnterprise&_language=ru", 0);
							//Обработки._Запуск_ХамелеонМеркурий.УстановитьПрокси(HTTPСервисЗапрос);
							
	//						HTTPЗапрос = Новый HTTPЗапрос("/operatorui?commonEnterpriseNumber="+Ид+"&_action=chooseServicedEnterprise&_language=ru");
							HTTPСервисЗапрос.Send();
							HTTPСервисЗапрос.WaitForResponse();
							
							//Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
							
							ПолучСтр_1=HTTPСервисЗапрос.ResponseText;
							
						//	Ид=Сред(ПолучСтр_1,Найти(ПолучСтр_1,"enterprisePk=")+13);
						//	Ид=Сред(Ид,1,Найти(Ид,"&")-1);
							//Чтение_1=Новый ЧтениеHTML;
							//Чтение_1.УстановитьСтроку(ПолучСтр);
							//ПостроительDOM_1 = Новый ПостроительDOM;
							//ДокументHTML_1 = ПостроительDOM_1.Прочитать(Чтение_1);
							//	
							
							ИдУникум=СтрПолучитьСтроку(ПолучПредприятиЭтогоХС,СчСтр);
							СчСтр=СчСтр+1;
							ИдУникум=Сред(ИдУникум,1,Найти(ИдУникум," ")-1);
							
							Объект.ГУИД_Площадки=ИдУникум;
							
							Объект.ИД_ВЭБ_Меркурий=ИД;
							
							Добав=Объект.ТаблицаПлощадок.Добавить();
							Добав.ГУИД_ХС=ХС;
							Добав.ИД_ВЭБ=Ид;
							Добав.ГУИД_Площадок=ИдУникум;
							Добав.Наименование=Наименование;
							//Добав.Наименование=
							
							
							//ООО.ХС=СоздатьНайтиПредприятие(Наименование,Ид,ХС,ИдУникум,,,HTTPСервисЗапрос);
							
							//							Попытка
							//	ООО.Ссылка=ООО.ХС;
							//Исключение
							//КонецПопытки;

							//ООО.НаименованиеПолное=ООО.ХС.НаименованиеПолное;
							//ООО.Ид=Ид;
							//ООО.Входящих=Входящих;
							
							//Если Входящих=Неопределено Тогда
							//	ООО.Машинка=-1
							//Иначе
							//	ООО.Машинка=6
							//	
							//КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		//Конецесли;
	КонецЕсли;

	
КонецПроцедуры


&НаСервере
Процедура ПолучитьГУИДХСНаСервере()
	// Вставить содержимое обработчика.
	HTTPСервисЗапрос=New COMObject("WinHttp.WinHttpRequest.5.1");
	Если НЕ ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПодключитьсяКМеркурию_ПОСТОЯННО(HTTPСервисЗапрос,Объект.Инициатор,Объект.ПарольМеркурий) Тогда
		Возврат;
	Конецесли;
	
		

	Сайт=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьСайт();
	HTTPСервисЗапрос.Open("POST", Сайт+"/operatorui?_action=chooseServicedFirmForm&_language=ru", 0);
//	Обработки._Запуск_ХамелеонМеркурий.УстановитьПрокси(HTTPСервисЗапрос);
				HTTPСервисЗапрос.SetRequestHeader("Content-Type","application/x-www-form-urlencoded");
				HTTPСервисЗапрос.Send();
				HTTPСервисЗапрос.WaitForResponse();
				ПолучСтр=HTTPСервисЗапрос.ResponseText;

				
				HTTPСервисЗапрос.Open("POST", Сайт+"/operatorui?_action=settingsForm&_language=ru", 0);
//				Обработки._Запуск_ХамелеонМеркурий.УстановитьПрокси(HTTPСервисЗапрос);
				
				//ВремФайлУдалить=ПолучитьИмяВременногОФайла(".pdf");	
//				Ответ_КОД=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
				HTTPСервисЗапрос.Send();
				HTTPСервисЗапрос.WaitForResponse();
				
				КодХС=HTTPСервисЗапрос.ResponseText;
				Если Найти(КодХС,"firmPk=")=0 Тогда
					КодХС="";
				Иначе
					
					
					КодХС=Сред(КодХС,Найти(КодХС,"firmPk=")+7);
					КодХС=Сред(КодХС,1,Найти(КодХС,"""")-1);
				КонецЕсли;
				
				
				Чтение=Новый ЧтениеHTML;
				Чтение.УстановитьСтроку(ПолучСтр);
				ПостроительDOM = Новый ПостроительDOM;
				ДокументHTML = ПостроительDOM.Прочитать(Чтение);
				МассивХС=Новый Массив;
				Если Найти(ПолучСтр,"HTTP Post Binding (Request)")>0 Тогда
					Сообщить("В данный момент сайт не доступен, проверьте подключение через браузер!!");
					Возврат;
				КонецЕсли;
				
				МассивИНН=Новый Массив;
				Объект.ТаблицаХС.Очистить();
				Объект.ТаблицаПлощадок.Очистить();
				Для каждого Стр Из ДокументHTML.ПолучитьЭлементыПоИмени("table")[0].ДочерниеУзлы Цикл
					Если НРег(Стр.ДочерниеУзлы[0].ИмяКласса)="label" Тогда
						СамХС=Стр.ДочерниеУзлы[2].ДочерниеУзлы[1].ДочерниеУзлы[1];
						Ид=СамХС.Значение;
						Наименование=СокрЛП(СамХС.СледующийСоседний.ТекстовоеСодержимое);
					Объект.ГУИД_ХС=Ид;
					Добав=Объект.ТаблицаХС.Добавить();
					Добав.ГУИД_ХС=Ид;
					Добав.Наименование=Наименование;
					ПолучитьТаблицуХС(Ид,"",HTTPСервисЗапрос);
					Сообщить("Успешное подключение к ХС "+Наименование);
						
//						ХС=СоздатьНайтиХС_GUID(Ид,Наименование,КодХС,HTTPСервисЗапрос);
//						ДДД=ТаблицаХоз_Наст.Добавить();
//						ДДД.ХС=ХС;
//						МассивИНН.Добавить(ХС.ИНН);
					КонецЕсли;
				КонецЦикла;
				
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьГУИДХС(Команда)
	ПолучитьГУИДХСНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДанноеХС(Команда)
	// Вставить содержимое обработчика.
	Если Элементы.ТаблицаХС.ТекущиеДанные<>Неопределено тогда
		Объект.ГУИД_ХС=Элементы.ТаблицаХС.ТекущиеДанные.ГУИД_ХС;
	Конецесли;
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТекущееПредприятие(Команда)
	// Вставить содержимое обработчика.
	Если Элементы.ТаблицаПлощадок.ТекущиеДанные<>Неопределено тогда
		Объект.ГУИД_ХС=Элементы.ТаблицаПлощадок.ТекущиеДанные.ГУИД_ХС;
		Объект.ГУИД_Площадки=Элементы.ТаблицаПлощадок.ТекущиеДанные.ГУИД_Площадок;
		Объект.ИД_ВЭБ_Меркурий=Элементы.ТаблицаПлощадок.ТекущиеДанные.ИД_ВЭБ;
	Конецесли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегестрироватьХамелоенЦРПТ(Команда)
	// Вставить содержимое обработчика.
	Thumbprint_1=ПолучитьИзПользователя();	
	Если Thumbprint_1.НаименованиеСтенда="Фармацевтика" Тогда
		Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
			
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;


		Тело=ПолучитЬТелоДляЗапроса();
			HTTPЗапрос=Новый HTTPЗапрос("api/v1/registration/accounting_system");
         HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);

				//	Иначе
				//	HTTPЗапрос=Новый HTTPЗапрос("documents/"+Стр.document_id+"");
			/////			
//					Куки="certSerial="+Thumbprint_1.Thumbprint_1+";lk-auth-token="+Срегистра ;
						
//			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
						
				//	КонецЕсли;
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			//HTTPЗапрос.Заголовки.Вставить("Authorization","token "+СРегистра);
			HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
			//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
			///Константин           
			//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
		еСЛи оТВЕТ.КодСостояния=200 Тогда
			Текст1=Ответ.ПолучитьТелоКакСтроку();
			NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);
			Объект.СекретныйКодМДЛП=NNN.client_secret;
			Объект.ИдентификаторКлиентаМДЛП=NNN.client_id;
			ЭтаФорма.Записать();
		КонецЕсли;
	

		
	КонецЕсли;
КонецПроцедуры
Функция ПолучитЬТелоДляЗапроса()
	
 	Чтен=Новый  ЗаписьJSON;                                                                    
	Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON(,,,ЭкранированиеСимволовJSON.СимволыВнеASCII));
	Чтен.ЗаписатьНачалоОбъекта();
	Чтен.ЗаписатьИмяСвойства("sys_id");	
	Чтен.ЗаписатьЗначение(Объект.Организация.subjectIdФармацевтика);
	Чтен.ЗаписатьИмяСвойства("name");
	Чтен.ЗаписатьЗначение("Хамелеон ЦРПТ");
	Чтен.ЗаписатьКонецОбъекта();
	Тело=Чтен.Закрыть();//"{""start_from"":0,""count"":20,""filter"":{}}";
	Тело=СтрЗаменить(Тело,Символы.ПС,"");
	Тело=СтрЗаменить(Тело,Символы.ВК,"");
		
Возврат Тело;

КонецФункции

&НаКлиенте
Процедура ЗаменитьНаДругой(Команда)
	// Вставить содержимое обработчика.
	Объект.АдресСайтаСУЗ="https://suzgrid.crpt.ru"
КонецПроцедуры

&НаСервере
Процедура ОчиститьПодключениюКСУЗНаСервере()
	// Вставить содержимое обработчика.
	РегДв=РегистрыСведений.ТокенДинамичкийДляСУЗ_По_Идентификатору_ХамелеонЦРПТ.СоздатьНаборЗаписей();
	РегДв.Отбор.Пользователь.Установить(Объект.ИдентификаторСоединения);
	РегДв.Записать(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПодключениюКСУЗ(Команда)
	ОчиститьПодключениюКСУЗНаСервере();
КонецПроцедуры
