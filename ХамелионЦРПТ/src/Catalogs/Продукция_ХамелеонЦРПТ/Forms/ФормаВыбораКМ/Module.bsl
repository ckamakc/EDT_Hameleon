


&НаКлиенте
Процедура ПродукцияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
//	СтандартнаяОбработка=Ложь;
	
	Если Элементы.Продукция.ТекущиеДанные<>Неопределено Тогда
		ЭтаФорма.Закрыть(Элементы.Продукция.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Организация="";
	Параметры.Свойство("Организация",Организация);
	Продукция.Параметры.УстановитьЗначениеПараметра("Организация",Организация);
	
	
КонецПроцедуры


&НаКлиенте
Процедура ВыборПартии(Команда)
	// Вставить содержимое обработчика.
	Масс=Новый Массив;
	
	Для Каждого Стр Из Элементы.Список.ВыделенныеСтроки  Цикл
		Масс.Добавить(Стр);
		//Элементы.Список.ТекущаяСтрока=Стр;
	Конеццикла;
	
	Масс_1=Новый Массив;
	Для Каждого Стр Из Масс  Цикл
		Элементы.Список.ТекущаяСтрока=Стр;
		Масс_1.Добавить(Элементы.Список.ТекущиеДанные.СерийныйНомер)
	Конеццикла;
	ЭтаФорма.Закрыть(Масс_1);
	
	//ЭтаФорма.Закрыть(ВернутьМассивУжеЦИСОВ());
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Масс=Новый Массив;
	
	Для Каждого Стр Из Элементы.Список.ВыделенныеСтроки  Цикл
		Масс.Добавить(Стр);
		//Элементы.Список.ТекущаяСтрока=Стр;
	Конеццикла;
	
	Масс_1=Новый Массив;
	Для Каждого Стр Из Масс  Цикл
		Элементы.Список.ТекущаяСтрока=Стр;
		Масс_1.Добавить(Элементы.Список.ТекущиеДанные.СерийныйНомер)
	Конеццикла;
	ЭтаФорма.Закрыть(Масс_1);
	
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	ОбновитьОСтаток();
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьОстаток()
	МассивУдалимначалаВсе=Новый Массив;
	Для Каждого стр_1 Из Продукция.Отбор.Элементы Цикл
		Если Стр_1.Представление="ОТБОРОСТАТКИ" Тогда
			МассивУдалимначалаВсе.Добавить(Стр_1);
		КонецЕсли;
	Конеццикла;
	Для Каждого Стр Из МассивУдалимначалаВсе Цикл
		
		Продукция.Отбор.Элементы.Удалить(Стр);
	Конеццикла;
	Если Не ПоказатьВсе Тогда
		
		Стр=Продукция.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Стр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеРавно;
		Стр.Использование=Истина;
		Стр.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("КоличествоОстаток");
		Стр.ПравоеЗначение=0; 
		Стр.Представление="ОТБОРОСТАТКИ";
		Стр.РежимОтображения=РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсеПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ОбновитьОстаток();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ОбновитьОрганзиацияю();
КонецПроцедуры


Процедура ОбновитьОрганзиацияю()
	Продукция.Параметры.УстановитьЗначениеПараметра("Организация",Организация);
КонецПроцедуры

&НаКлиенте
Процедура Выбор(Команда)
	
	// Вставить содержимое обработчика.
	
	Если Элементы.Продукция.ТекущиеДанные<>Неопределено Тогда
		ЭтаФорма.Закрыть(Элементы.Продукция.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасформироватьУпаковку(Команда)
	// Вставить содержимое обработчика.
	Если Элементы.Список.ТекущиеДанные<>Неопределено Тогда
		Штрих=Элементы.Список.ТекущиеДанные.СерийныйНомер;
		Если СтрДлина(Штрих)=18 
			И Элементы.Список.ТекущиеДанные.КоличествоОстаток>0 Тогда
			
	Обр=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если Обр.Организации.Количество()=0 Тогда
		Обр.ПодключитьсяКЦРПТ(Команда,Ложь);
	КонецЕсли;
	Если Обр.Организации.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
			
			
	
			ДокумС=СОздатьДокументРасформирования(Штрих,Обр.Пользователь,
			Обр.Организации[0].Организация);
			
			ОткрытьФорму("Документ.СозданиеНовогоШкНаКороба_ХамелеонЦРПТ.Форма.ФормаДокумента",
			Новый Структура("КЛюч",ДокумС));
			
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция СОздатьДокументРасформирования(Знач ШШ,Знач Пользователь,Знач Организация)
	
	
		Докум=Документы.СозданиеНовогоШкНаКороба_ХамелеонЦРПТ.СоздатьДокумент();
		Докум.Организация=Организация;
		Докум.ТекущийПользователь=Пользователь;
		Докум.ТипДокумента=Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Расформирование;
		Докум.СтатусКМ=Перечисления.СтатусыКМДляАгрегации_ХамелеонЦРПТ.КМВОбороте;
		
		Докум.Дата=ТекущаяДата();
		Добав=Докум.Марки.Добавить();
		Добав.Марка=ШШ;
	
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	ОстаткиКМ_в_Обороте_ХамелеонЦРПТ.Продукция
						|ИЗ
						|	РегистрНакопления.ОстаткиКМ_в_Обороте_ХамелеонЦРПТ КАК ОстаткиКМ_в_Обороте_ХамелеонЦРПТ
						|ГДЕ
						|	ОстаткиКМ_в_Обороте_ХамелеонЦРПТ.СерийныйНомер = &СерийныйНомер";
					
					Запрос.УстановитьПараметр("СерийныйНомер", ШШ);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						Добав.Продукция=ВыборкаДетальныеЗаписи.Продукция;
						Если ЗначениеЗАполнено(Добав.Продукция) Тогда
							Прервать;
						Конецесли;
					КонецЦикла;
	
	       Докум.Записать(РежимЗаписиДокумента.Запись);
		   Возврат докум.Ссылка
	//Докум.НомерКороба=ШШ;
	  
Конецфункции

&НаКлиенте
Процедура ПоказатьИнформацию(Команда)
	// Вставить содержимое обработчика.
	Обр=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если Обр.Организации.Количество()=0 Тогда
		Обр.ПодключитьсяКЦРПТ(Команда,Ложь);
	КонецЕсли;
	Если Обр.Организации.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
			
	Если Элементы.Список.ТекущиеДанные<>Неопределено Тогда
	ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ПолучитьИнформациюПоКМ(ДеревоКМ,Элементы.Список.ТекущиеДанные.СерийныйНомер,Обр.Пользователь);
	Элементы.Страницы.ТекущаяСтраница=Элементы.ИнформацияОКМ;
	КонецЕсли;
КонецПроцедуры
