&НаСервереБезКонтекста
Функция ПолучитьТокенСрегистра(Thumbprint_1)
	Возврат Регистрысведений.ТокенПоСертификату_ХамелеонЦРПТ.Получить(Новый Структура("Отпечаток",Thumbprint_1)).Токен;
КонецФункции


&НаСервереБезКонтекста
Функция ПолучитьИзПользователя(ТекущийПользователь)
	Возврат Обработки._Запуск_ХамелеонЦРПТ.ПолучитьИзПользователя(ТекущийПользователь);
КонецФункции

&НаСервереБезКонтекста
Процедура ОчиститьТокенСрегистра(ТТ)
	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаписатьТокенВРегистр(ТТ,"")
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьИНН(Орг)
	Возврат Орг.Организация.ИНН
КонецФункции


&НаСервере
Функция ЗагрузитьНаСервере(Thumbprint_1,Знач Организация,УжеОтправили,СРегистра)
Организация=Организация.Организация;
Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
	HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
	HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
			
			ИНН=Организация.ИНН;
			
			
			
			что=Thumbprint_1.что;

	
			
	HTTPЗапрос=Новый HTTPЗапрос("api/v3/product/search?offset=10&page=0&pg="+Что);;
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	
	Если Ответ.КодСостояния=200 Тогда
		//ЗагружаемШаблоныНасервере(Текст1,Обр.Пользователь);
		Тотал=1;
		числоЗагрузили=0;
		Первый1=0;
		Пока Тотал>0 Цикл
 		
			ЗагружаемГТИН(Текст1,ИНН,Тотал,числоЗагрузили,Thumbprint_1);
			Если Тотал<=0 Тогда
				Прервать;
			Конецесли;
			Первый1=Первый1+1;
			//Если Первый1*100>=Тотал Тогда
			//	Прервать;
			//КонецЕсли;
			
			HTTPЗапрос=Новый HTTPЗапрос("api/v3/product/search?offset="+Формат((Первый1+1)*10,"ЧГ=")+"&page="+Формат(Первый1,"ЧГ=")+"&pg="+Что);
 			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
			//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
			///Константин           
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			Если Ответ.КодСостояния<>200 Тогда
				Сообщить("Не удалось получить все GTIN");
				Прервать;
			КонецЕсли;
			Текст1=Ответ.ПолучитьТелоКакСтроку();
			
		Конеццикла;	
	Сообщить("Загружено "+Строка(числоЗагрузили)+" "+Thumbprint_1.НаименованиеСтенда);		
	ИначеЕсли Ответ.КодСостояния=401 
		ИЛИ Ответ.КодСостояния=502  
		Тогда
			
			Если УжеОтправили=Истина Тогда
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
			Иначе
				Возврат ложь;			
		КонецЕсли
	КонецЕсли;
	Возврат Истина
КонецФункции


Процедура ЗагружаемГТИНЛекарства(Текст,Тотал,числоЗагрузили,Thumbprint_1)
			ЧтениеJSON = Новый ЧтениеJSON;
			ЧтениеJSON.УстановитьСтроку(Текст);
			Попытка
				NNN=ПрочитатьJSON(ЧтениеJSON);
				Тотал=NNN.total;
				
				Для Каждого Стр Из NNN.entries Цикл
					//Если ИНН<>Стр.INN Тогда
					//	Продолжить;
					//КонецЕсли;
					числоЗагрузили=числоЗагрузили+1;
					СпрД=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("gtin",Число(Стр.gtin));
					Если СпрД<>Справочники.Продукция_ХамелеонЦРПТ.ПустаяСсылка() Тогда
						СпрД=СпрД.ПолучитьОбъект();
					Иначе
						СпрД=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
					КонецЕсли;
						СпрД.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Фармацевтика;
						
					country="";
					СпрД.БрендТорговаяМарка=Стр.prod_desc_label;
					
					Стр.Свойство("glf_country",country);
					Если ЗначениеЗАполнено(country) Тогда
						Если country="РОССИЙСКАЯ ФЕДЕРАЦИЯ" Тогда
							СпрД.СтранаПроизводства=справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоКоду("643");;
						Иначе
							СпрД.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоНаименованию(country);
						КонецЕсли;	
						
						//СпрД.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоНаименованию(country);
					ИначеЕсли Не ЗначениеЗаполнено(	СпрД.СтранаПроизводства) Тогда
						СпрД.СтранаПроизводства=справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоКоду("643");;
					КонецЕсли;
					СпрД.GTIN=Число(Стр.gtin);
					//СпрД.id=Стр.id;
					gf_name="";
					//Если Стр.Свойство("glf_name",gf_name) Тогда
					//СпрД.ИННПроизводителяИмпортёра=Справочники.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.НайтиПоНаименованию(gf_name);
					//Если Не ЗначениеЗАполнено(СпрД.ИННПроизводителяИмпортёра) Тогда
					//	Спр_К=Справочники.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.СоздатьЭлемент();
						//Спр_К.ИНН=Стр.inn;
					//	Спр_К.Наименование=gf_name;
					//	Спр_К.Записать();
					//	СпрД.ИННПроизводителяИмпортёра=Спр_К.Ссылка;
						
					//Конецесли;
					//КонецЕсли;
					Стр.Свойство("materialDown",СпрД.МатериалНиза);
					Стр.Свойство("materialLining",СпрД.МатериалПодкладки);
					Стр.Свойство("materialUpper",СпрД.МатериалВерха);
					Стр.Свойство("color",СпрД.Цвет);
					
					Стр.Свойство("model",СпрД.МодельПроизводителяАртикул);
					СпрД.Наименование=Стр.prod_desc;
					СпрД.НаименованиеТовара=Стр.prod_desc;
					
					Стр.Свойство("tnVedCode",СпрД.КодТНВЭДКороткий);
					
									
					КодПр="";
					Стр.Свойство("productType",КодПр);
					Если ЗначениеЗаполнено(КодПр) Тогда
					СпрД.ВидОбуви=Справочники.ВидОбуви_ХамелеонЦРПТ.НайтиПоКоду(Стр.productType);
					Если Не ЗначениеЗаполнено(СпрД.ВидОбуви) тогда
						СпрВ=Справочники.ВидОбуви_ХамелеонЦРПТ.СоздатьЭлемент();
						СпрВ.Код=Стр.productType;
						СпрВ.Наименование=Стр.productTypeDesc;
						СпрВ.Записать();
						СпрД.ВидОбуви=СпрВ.Ссылка;
					КонецЕсли;
				КонецЕсли;
				publicationDate=Неопределено;
				    Стр.Свойство("reg_date",publicationDate);
					Если ЗначениеЗаполнено(publicationDate) тогда
						СпрД.ДатаПубликации=Дата(Число(Сред(publicationDate,1,4)),Число(Сред(publicationDate,6,2)),
						Число(Сред(publicationDate,9,2)),Число(Сред(publicationDate,12,2)),
						Число(Сред(publicationDate,15,2)),Число(Сред(publicationDate,18,2)));					
					Конецесли;
					////То была обувь теперь сигареты
				packageType=Неопределено;
				    Стр.Свойство("packageType",packageType);
									Если ЗначениеЗАполнено(packageType) тогда
						Попытка
							СПрд.ТипУпаковкиСигарет=Перечисления.ТипУпаковкиСигареты_ХамелеонЦРПТ[packageType];
						Исключение
							 Если packageType="КОРОБКА/БОКС" Тогда
								СПрд.ТипУпаковкиСигарет=Перечисления.ТипУпаковкиСигареты_ХамелеонЦРПТ.box;
							КонецЕсли;
						КонецПопытки;
					КонецЕсли;
					КоличествоВГруппе=0;
					Если Стр.Свойство("innerUnitCount",КоличествоВГруппе) И
						ЗначениеЗаполненО(КоличествоВГруппе) Тогда
						СпрД.КоличествоВГруппе=КоличествоВГруппе;
					Конецесли;
				productGroup=Неопределено;
				    Стр.Свойство("productGroup",productGroup);
					Если ЗначениеЗаполнено(productGroup) тогда
						СпрГр=Справочники.ГруппаСигарет_ХамелеонЦРПТ.НайтиПоНаименованию(productGroup);
						Если Не ЗначениеЗаполнено(СпрГр) Тогда
							СпрГр=Справочники.ГруппаСигарет_ХамелеонЦРПТ.СоздатьЭлемент();
							СпрГр.Наименование=productGroup;
							СпрГр.Записать();
						КонецЕсли;
						СпрД.ГруппаСигарет=СпрГр.Ссылка;
						
					КонецЕсли;
					
					productSize=Неопределено;
				    Стр.Свойство("productSize",productSize);
					Если ЗначениеЗаполнено(productSize) тогда
						productSize=СтрЗаменить(productSize,".",",");
						СпрД.Размер=Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.НайтиПоНаименованию(productSize,истина);
					КонецЕсли;
					
					
					
					СпрД.Записать();
				Конеццикла;
				
				Элементы.Список.Обновить();
				
			Исключение
				Возврат
			КонецПопытки;
	
	
		КонецПроцедуры


&НаКлиенте
Процедура ПоучитьСписокПоЛекарствам(Thumbprint_1,Пользователь,УжеОтправили=Ложь)
	
	///ТОЛЬКО ПО ВЭБ
	//СРегистра=Thumbprint_1.ТокенПоОтпечатку;
	СРегистра="";
	Если Не ЗначениеЗаполнено(СРегистра) тогда
		Попытка
			СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена_ЛДМП(Thumbprint_1);	
		исключение
			СРегистра=Неопределено;
		КонецПопытки;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СРегистра) Тогда
		ПоказатьПредупреждение(,"Не удалось получить токен по организации");
		Возврат;
	Конецесли;
	
		
		АдресКАПИ=СтрЗаменить(Thumbprint_1.АдресКАПИ,"api.","");
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
	HTTPСервисЗапрос=Новый HTTPСоединение(АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
	HTTPСервисЗапрос=Новый HTTPСоединение(АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
			
			//ИНН=ВернутьИНН(Обр.Пользователь);
					HTTPЗапрос=Новый HTTPЗапрос("api/v1/reestr/med_products/current");
					
				Куки="lk-auth-token="+Срегистра ;
				
				
				 
	Чтен=Новый  ЗаписьJSON;
	Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
	Чтен.ЗаписатьНачалоОбъекта();
	Чтен.ЗаписатьИмяСвойства("start_from");	
	Чтен.ЗаписатьЗначение(0);
	Чтен.ЗаписатьИмяСвойства("count");
	Чтен.ЗаписатьЗначение(20);
	Чтен.ЗаписатьИмяСвойства("filter");
	Чтен.ЗаписатьНачалоОбъекта();
	
				       Чтен.ЗаписатьКонецОбъекта();
	
	//Чтен.ЗаписатьЗначение("{}");
				       Чтен.ЗаписатьКонецОбъекта();
				
				Тело=Чтен.Закрыть();//"{""start_from"":0,""count"":20,""filter"":{}}";
		HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","token "+СРегистра);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин 
	HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
	Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	
	Если Ответ.КодСостояния=200 Тогда
		//ЗагружаемШаблоныНасервере(Текст1,Обр.Пользователь);
		Тотал=1;
		числоЗагрузили=0;
		Первый1=0;
		Пока Первый1<Тотал Цикл
			
		//				ЧтениеJSON = Новый ЧтениеJSON;
		//	ЧтениеJSON.УстановитьСтроку(Текст1);
		//		NNN=ПрочитатьJSON(ЧтениеJSON);

			ЗагружаемГТИНЛекарства(Текст1,Тотал,числоЗагрузили,Thumbprint_1);
			Первый1=Первый1+1;
			Если Первый1*20>=Тотал Тогда
				Прервать;
			КонецЕсли;
			
							HTTPЗапрос=Новый HTTPЗапрос("api/v1/reestr/med_products/current");
					
				Куки="lk-auth-token="+Срегистра ;
				
				
				 
	Чтен=Новый  ЗаписьJSON;
	Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
	Чтен.ЗаписатьНачалоОбъекта();
	Чтен.ЗаписатьИмяСвойства("start_from");	
	Чтен.ЗаписатьЗначение(Первый1*20);
	Чтен.ЗаписатьИмяСвойства("count");
	Чтен.ЗаписатьЗначение(20);
	Чтен.ЗаписатьИмяСвойства("filter");
	Чтен.ЗаписатьНачалоОбъекта();
	
				       Чтен.ЗаписатьКонецОбъекта();
	
	//Чтен.ЗаписатьЗначение("{}");
				       Чтен.ЗаписатьКонецОбъекта();
				
				Тело=Чтен.Закрыть();//"{""start_from"":0,""count"":20,""filter"":{}}";
		HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","token "+СРегистра);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин 
	HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
	Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	

			///Константин           
			Если Ответ.КодСостояния<>200 Тогда
				Сообщить("Не удалось получить все GTIN");
				Прервать;
			КонецЕсли;
			Текст1=Ответ.ПолучитьТелоКакСтроку();
			
		Конеццикла;	
	Сообщить("Загружено "+Строка(числоЗагрузили)+" "+Thumbprint_1.НаименованиеСтенда);		
	ИначеЕсли Ответ.КодСостояния=401  ИЛИ Ответ.КодСостояния=403
		ИЛИ Ответ.КодСостояния=502  
		Тогда
			Если УжеОтправили=Истина Тогда
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
			Иначе
				ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена_ЛДМП(Thumbprint_1);
				Thumbprint_1=ПолучитьИзПользователя(Пользователь);	
	
				ПоучитьСписокПоЛекарствам(Thumbprint_1,Пользователь,Истина)		КонецЕсли
	КонецЕсли;
//	КонецЕсли;
	Элементы.Список.Обновить();
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоучитьСписокПоТабаку(Thumbprint_1,Пользователь,УжеОтправили,Что)
	
	
	СРегистра=Thumbprint_1.ТокенПоОтпечатку;
//	СРегистра="";
	Если Не ЗначениеЗаполнено(СРегистра) тогда
		Попытка
			СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);	
		исключение
			СРегистра=Неопределено;
		КонецПопытки;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СРегистра) Тогда
		ПоказатьПредупреждение(,"Не удалось получить токен по организации");
		Возврат;
	Конецесли;
	
	Если ОбработкаWEBНаСервере Тогда
		Если НЕ ЗагрузитьНаСервере(Thumbprint_1,Пользователь,УжеОтправили,СРегистра) Тогда
			Если УжеОтправили=Истина Тогда
			Иначе
				Загрузить("",Истина)
			КонецЕсли;
	
		КонецЕсли;
	Иначе
	
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
	HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
	HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
			
			
			
			ИНН=ВернутьИНН(Пользователь);
					HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/product/search?limit=10&page=0");;
	//HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("authorization","Bearer "+СРегистра);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	
	Если Ответ.КодСостояния=200 Тогда
		//ЗагружаемШаблоныНасервере(Текст1,Обр.Пользователь);
		Тотал=1;
		числоЗагрузили=0;
		Первый1=0;
		Пока Первый1<Тотал Цикл
 		
			ЗагружаемГТИН(Текст1,ИНН,Тотал,числоЗагрузили,Thumbprint_1);
			Первый1=Первый1+1;
			Если Первый1*10>=Тотал Тогда
				Прервать;
			КонецЕсли;
			
			HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/product/search?limit=10&page="+Формат(Первый1,"ЧГ="));
 			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
			//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
			///Константин           
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			Если Ответ.КодСостояния<>200 Тогда
				Сообщить("Не удалось получить все GTIN");
				Прервать;
			КонецЕсли;
			Текст1=Ответ.ПолучитьТелоКакСтроку();
			
		Конеццикла;	
	Сообщить("Загружено "+Строка(числоЗагрузили)+" "+Thumbprint_1.НаименованиеСтенда);		
	ИначеЕсли Ответ.КодСостояния=401 
		ИЛИ Ответ.КодСостояния=502  ИЛИ Ответ.КодСостояния=500
		Тогда
			Если УжеОтправили=Истина Тогда
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
			Иначе
				Загрузить("",Истина)			
		КонецЕсли
	КонецЕсли;
	КонецЕсли;
	Элементы.Список.Обновить();
	
	
	Возврат;
	СРегистра=Thumbprint_1.ТокенПоОтпечатку;
//	СРегистра="";
	Если Не ЗначениеЗаполнено(СРегистра) тогда
		Попытка
			СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);	
		исключение
			СРегистра=Неопределено;
		КонецПопытки;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СРегистра) Тогда
		ПоказатьПредупреждение(,"Не удалось получить токен по организации");
		Возврат;
	Конецесли;
	
	Если ОбработкаWEBНаСервере Тогда
	//	Если НЕ ЗагрузитьНаСервере(Thumbprint_1,Пользователь,УжеОтправили,СРегистра) Тогда
	//		Если УжеОтправили=Истина Тогда
	//		Иначе
	//			Загрузить(Команда,Истина)
	//		КонецЕсли;
	//
	//	КонецЕсли;
	Иначе
	
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
	HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
	HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
			
			
			
			ИНН=ВернутьИНН(Пользователь);
	HTTPЗапрос=Новый HTTPЗапрос("/products/listV2?ownerInn="+ИНН+"&limit=1000&offset=0");
	//&pg="+Что);;
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	
	Если Ответ.КодСостояния=200 Тогда
		//ЗагружаемШаблоныНасервере(Текст1,Обр.Пользователь);
		Тотал=1;
		числоЗагрузили=0;
		Первый1=0;
		Пока Первый1<Тотал Цикл
 		
			ЗагружаемГТИН(Текст1,ИНН,Тотал,числоЗагрузили,Thumbprint_1);
			Первый1=Первый1+1;
			Если Первый1*10>=Тотал Тогда
				Прервать;
			КонецЕсли;
			
			Прервать;
			HTTPЗапрос=Новый HTTPЗапрос("api/v3/product/search?inn="+ИНН+"&limit=10&page="+Формат(Первый1,"ЧГ=")+"&pg="+Что);
 			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
			//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
			///Константин           
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			Если Ответ.КодСостояния<>200 Тогда
				Сообщить("Не удалось получить все GTIN");
				Прервать;
			КонецЕсли;
			Текст1=Ответ.ПолучитьТелоКакСтроку();
			
		Конеццикла;	
	Сообщить("Загружено "+Строка(числоЗагрузили)+" "+Thumbprint_1.НаименованиеСтенда);		
	ИначеЕсли Ответ.КодСостояния=401 
		ИЛИ Ответ.КодСостояния=502  ИЛИ Ответ.КодСостояния=500
		Тогда
			Если УжеОтправили=Истина Тогда
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
			Иначе
				Загрузить("",Истина)			
		КонецЕсли
	КонецЕсли;
	КонецЕсли;
	Элементы.Список.Обновить();
	
КонецПроцедуры


&НаКлиенте
Процедура Загрузить(Команда,УжеОтправили=Ложь) Экспорт
	// Вставить содержимое обработчика.
					
	
	
	
	Обр=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	
	Thumbprint_1=ПолучитьИзПользователя(Обр.Пользователь);	
	
		
			
			что=Thumbprint_1.что;

	
		
	Если Thumbprint_1.НаименованиеСтенда="Фармацевтика" Тогда
		
		ПоучитьСписокПоЛекарствам(Thumbprint_1,Обр.Пользователь);
		Возврат;
		
	ИначеЕсли Thumbprint_1.НаименованиеСтенда="Табак"
		ИЛИ Thumbprint_1.НаименованиеСтенда="Альтернативный табак" Тогда

		ПоучитьСписокПоТабаку(Thumbprint_1,Обр.Пользователь,УжеОтправили,Что);
		Возврат;
		
		
	КонецЕсли;
	СРегистра=Thumbprint_1.ТокенПоОтпечатку;
//	СРегистра="";
	Если Не ЗначениеЗаполнено(СРегистра) тогда
		Попытка
			СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);	
		исключение
			СРегистра=Неопределено;
		КонецПопытки;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СРегистра) Тогда
		ПоказатьПредупреждение(,"Не удалось получить токен по организации");
		Возврат;
	Конецесли;
	
	Если ОбработкаWEBНаСервере Тогда
		Если НЕ ЗагрузитьНаСервере(Thumbprint_1,Обр.Пользователь,УжеОтправили,СРегистра) Тогда
			Если УжеОтправили=Истина Тогда
			Иначе
				Загрузить(Команда,Истина)
			КонецЕсли;
	
		КонецЕсли;
	Иначе
	
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
	HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
	HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
			
			
			
			ИНН=ВернутьИНН(Обр.Пользователь);
			
			
			
			
			
			
			
			
			
			HTTPЗапрос=Новый HTTPЗапрос("api/v3/product/search?offset=10&page=0&pg="+Что);;
			//	КонецЕсли;
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	
	Если Ответ.КодСостояния=200 Тогда
		//ЗагружаемШаблоныНасервере(Текст1,Обр.Пользователь);
		Тотал=1;
		числоЗагрузили=0;
		Первый1=0;
		Пока Тотал>0 Цикл
 		
			ЗагружаемГТИН(Текст1,ИНН,Тотал,числоЗагрузили,Thumbprint_1);
			Первый1=Первый1+1;
			Если Тотал<=0 Тогда
				ПрерватЬ;
			КонецеслИ;
			
			//Если Первый1*10>=Тотал Тогда
			//	Прервать;
			//КонецЕсли;
			
			HTTPЗапрос=Новый HTTPЗапрос("api/v3/product/search?offset="+Формат((Первый1+1)*10,"ЧГ=")+"&page="+Формат(Первый1,"ЧГ=")+"&pg="+Что);
 			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
			//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
			///Константин           
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			Если Ответ.КодСостояния<>200 Тогда
				Сообщить("Не удалось получить все GTIN");
				Прервать;
			КонецЕсли;
			Текст1=Ответ.ПолучитьТелоКакСтроку();
			
		Конеццикла;	
	Сообщить("Загружено "+Строка(числоЗагрузили)+" "+Thumbprint_1.НаименованиеСтенда);		
	ИначеЕсли Ответ.КодСостояния=401 
		ИЛИ Ответ.КодСостояния=502  ИЛИ Ответ.КодСостояния=500
		Тогда
			Если УжеОтправили=Истина Тогда
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
			Иначе
				Загрузить(Команда,Истина)			
		КонецЕсли
	КонецЕсли;
	КонецЕсли;
	Элементы.Список.Обновить();
КонецПроцедуры

Процедура ЗагружаемГТИН(Текст,ИНН,Тотал,числоЗагрузили,Thumbprint_1)
			ЧтениеJSON = Новый ЧтениеJSON;
			ЧтениеJSON.УстановитьСтроку(Текст);
			Попытка
				NNN=ПрочитатьJSON(ЧтениеJSON);
				Если NNN.results.Количество()=0 Тогда
					Тотал=0;
				Иначе
					Тотал=NNN.total;
				Конецесли;
				
				Для Каждого Стр Из NNN.results Цикл
					Если ИНН<>Стр.INN Тогда
						Продолжить;
					КонецЕсли;
					
					Попытка
					
						ОбщийМодуль_НаСервере_ХамелеонЦРПТ.СоздатьПродукцию(Стр,Thumbprint_1);
						числоЗагрузили=числоЗагрузили+1;
						
					Исключение
					КонецПопытки;

				Конеццикла;
				
				Элементы.Список.Обновить();
			Исключение
				Возврат
			КонецПопытки;
	
	
		КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Настройка=РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить();
	МаксимальноеКоличествоДляОтправкиВНКПоAPI=Настройка.МаксимальноеКоличествоДляОтправкиВНКПоAPI;
	
	Если Не ЗначениеЗаполнено(МаксимальноеКоличествоДляОтправкиВНКПоAPI) Тогда
		МаксимальноеКоличествоДляОтправкиВНКПоAPI=25;
	Конецесли;
	
	ОбработкаWEBНаСервере=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ОбработкаWEBНаСервере();
	ЗаполнитьСправочникВнешний("СписокПродукций_ЦРПТ","",Элементы.ГруппаКнопокВнешняя,"Подключаемый_ВыполнитьКомандуВнешняя_ЗаказМарокОсновная");

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПоСУЗ(Команда)
	// Вставить содержимое обработчика.
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	
	ТекСт=Форм.Пользователь;
	//Форм.Пользователь=Объект.ТекущийПользователь;
	ПараметрыДлякилента=Неопределено;
	Если Форм.НаКлиенте(ПараметрыДлякилента) Тогда
		Форм.Пользователь=ТекСт;
		
		АдресРаздробить=ПараметрыДлякилента.АдресСУЗ;
		Адрес=Сред(АдресРаздробить,Найти(АдресРаздробить,"://")+3);
		Адрес=Сред(Адрес,1,Найти(Адрес,":")-1);
		Порт=Сред(АдресРаздробить,Найти(АдресРаздробить,"://")+3);
		Порт=Сред(Порт,Найти(Порт,":")+1);
		Попытка
			Порт=число(Порт);
		Исключение
			Порт=Неопределено;
		КонецПопытки;
			Если Найти(АдресРаздробить,"https")=1 Тогда
				Защищ=Новый ЗащищенноеСоединениеopenSSL();
			Иначе
				Защищ=Неопределено;
			КонецЕсли;
		
		
				Если Не ЗначениеЗаполнено(Адрес) Тогда
			
			ПоказатьПредупреждение(,"В пользователе не заполнен адрес СУЗ");
			Возврат;
			
		КонецЕсли;

Если ОбработкаWEBНаСервере Тогда
		//Если НЕ ЗагрузканаСервереПолучитьКМ(ПараметрыДлякилента,Адрес,Порт) Тогда
					ПоказатьПредупреждение(,"Не удалось подключиться к СУЗ");
	
		//КонецЕсли;
		
		
	Иначе
		
			Если ЗначениеЗАполнено(ПараметрыДлякилента.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",ПараметрыДлякилента.АдресПрокси,ПараметрыДлякилента.ПортПрокси,ПараметрыДлякилента.ПользовательПрокси,ПараметрыДлякилента.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Адрес,Порт,,,Прокси,ПараметрыДлякилента.Таймаут,Защищ);
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Адрес,Порт,,,,ПараметрыДлякилента.Таймаут,Защищ);
			КонецЕсли;
			
			HTTPЗапрос = Новый HTTPЗапрос("api/v2/"+ПараметрыДлякилента.СайтКСУЗ+"/product/info?omsId="+ПараметрыДлякилента.ИдентификаторСУЗ);
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.Заголовки.Вставить("clientToken",ПараметрыДлякилента.ТокенСУЗ);
			 Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			     Текст1=Ответ.ПолучитьТелоКакСтроку();
		Если Ответ.КодСостояния=200 Тогда
		//ЗагружаемШаблоныНасервере(Текст1,Обр.Пользователь);
		Тотал=1;
		числоЗагрузили=0;
		
			ЗагружаемГТИН_Шин(Текст1,Тотал,числоЗагрузили,ПараметрыДлякилента);
	//Сообщить("Загружено "+Строка(числоЗагрузили));		
	Сообщить("Загружено "+Строка(числоЗагрузили)+" "+ПараметрыДлякилента.НаименованиеСтенда);		
	ИначеЕсли Ответ.КодСостояния=401 
		ИЛИ Ответ.КодСостояния=502  
		Тогда
			
	КонецЕсли;
	  
			
		КонецЕсли;	
		Иначе
			Форм.Пользователь=ТекСт;
		КонецЕсли;	
	
	Элементы.Список.Обновить();
КонецПроцедуры
		
Процедура ЗагружаемГТИН_Шин(Текст,Тотал,числоЗагрузили,Thumbprint_1)
			ЧтениеJSON = Новый ЧтениеJSON;
			ЧтениеJSON.УстановитьСтроку(Текст);
			Попытка
				NNN=ПрочитатьJSON(ЧтениеJSON);
				
				Для Каждого Стр Из NNN.products Цикл
					числоЗагрузили=числоЗагрузили+1;
					СпрД=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("gtin",Число(Стр.gtin));
					Если СпрД<>Справочники.Продукция_ХамелеонЦРПТ.ПустаяСсылка() Тогда
						СпрД=СпрД.ПолучитьОбъект();
					Иначе
						СпрД=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
					КонецЕсли;
					СпрД.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Шины;
					СпрД.Gtin=число(Стр.gtin);
					СпрД.Наименование=Стр.name;
					СпрД.НаименованиеТовара=Стр.name;
					СпрД.Записать();
				Конеццикла;
				
				Элементы.Список.Обновить();
			Исключение
				Возврат
			КонецПопытки;
	
	
		КонецПроцедуры


&НаКлиенте
Процедура ЗарегестрироватьВЦРПТОстаток(Команда,УжеОтправили=Ложь,Товар_1=Неопределено) Экспорт
	// Вставить содержимое обработчика.
	СозданиеОстатковПоПродукциям("Обувь",Ложь,Товар_1);
	Элементы.Список.Обновить();;
	
КонецПроцедуры

&НаКлиенте
Процедура СозданиеОстатковПоПродукциям(Тип,УжеОтправили=Ложь,Товар_1) Экспорт
	
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если Не Форм.Открыта() Тогда
		//Форм=ОткрытьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
		
		Форм.Открыть();
	КонецЕсли;
	//Форм.ОбновитьСтатусыДокументов("");
	
	Если Не ЗначениеЗаполнено(Товар_1) Тогда	
		ЭтаФорма.Активизировать();
	КонецЕсли;
	Польз=Форм.Пользователь;
	Thumbprint_1=ПолучитьИзПользователя(Польз);	
	Если Не ЗначениеЗаполнено(Товар_1) Тогда
	//	Тип=Thumbprint_1.СайтКСУЗ
	//Иначе
		Фор=ПолучитьФорму("Справочник.Продукция_ХамелеонЦРПТ.Форма.ФормаСписка");
		Фор.Загрузить("");

	КонецЕсли;
	
	
	
	
	СРегистра=Thumbprint_1.ТокенПоОтпечатку;
	Если Не ЗначениеЗаполнено(СРегистра) тогда
		Попытка
			СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);	
		исключение
			СРегистра=Неопределено;
		КонецПопытки;
	КонецЕсли;
	Если не ЗначениеЗаполнено(Срегистра) Тогда
		Возврат;
	Конецесли;
	                      		
	
				Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
					Прокси=Новый ИнтернетПрокси;
					Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
				
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				Иначе
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
					
					
				КонецЕсли;
				
				
				
		
			
//		НСтр=Сред(Текст1,Найти(Текст1,"?sid=")+5);
//		НСтр=Сред(НСтр,1,Найти(НСтр,"""")-1);
			
			
		Куки="certSerial="+Thumbprint_1.Thumbprint_1+"; count=2; tokenPart1="+Сред(СРегистра,1,4000)+"; "+
		"tokenPart2="+Сред(СРегистра,4001) ;
		//Куки=Ответ.Заголовки["Set-Cookie"];
		
				
	//Для Каждого Стр_1 Из Элементы.Список.ВыделенныеСтроки Цикл
		
		СформироватьФайлДляОтправки_1 =ВернутьПараметрыПоТовару_Массив(Товар_1,Польз,Тип);
		
		Для Каждого СформироватьФайлДляОтправки_3 Из      СформироватьФайлДляОтправки_1 Цикл
			СформироватьФайлДляОтправки=СформироватьФайлДляОтправки_3.Сф;
		Если не значениеЗаполнено(СформироватьФайлДляОтправки) Тогда
			Продолжить;
		КонецЕсли;
		
		
		
		
		
		//Добав=base64Строка(ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьДвоичныеДанныеИзСтроки_Сервер(
		//СформироватьФайлДляОтправки,КодировкаТекста.UTF8,Ложь));
		
		Добав=base64Строка(ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьДвоичныеДанныеИзСтроки_Сервер(
		СформироватьФайлДляОтправки,КодировкаТекста.UTF8,Ложь));
		
		
		
					Добав=СтрЗаменить(Добав,Символы.ПС,"\r\n");
				Добав=СтрЗаменить(Добав,Символы.ВК,"\r\n");
				Добав=СтрЗаменить(Добав,"\r\n","");

				
				Подписанный="";
		ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ПодписатьФайл(Thumbprint_1.Внешняя,СформироватьФайлДляОтправки ,Thumbprint_1,Подписанный,Истина,,,Thumbprint_1.PIN);
		
		//Подписанный=base64Строка(ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьДвоичныеДанныеИзСтроки_Сервер(
		//Подписанный,КодировкаТекста.UTF8,Ложь));
		
					Подписанный=СтрЗаменить(Подписанный,Символы.ПС,"\r\n");
				Подписанный=СтрЗаменить(Подписанный,Символы.ВК,"");
				 Подписанный=СтрЗаменить(Подписанный,"\r\n","");
				 
				 
				 
	Чтен=Новый  ЗаписьJSON;
	Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
	Чтен.ЗаписатьНачалоОбъекта();
	Чтен.ЗаписатьИмяСвойства("product_document");	
	Чтен.ЗаписатьЗначение(Добав);
	Чтен.ЗаписатьИмяСвойства("document_format");
	Чтен.ЗаписатьЗначение("MANUAL");
	Чтен.ЗаписатьИмяСвойства("signature");
	Чтен.ЗаписатьЗначение(Подписанный);
	Чтен.ЗаписатьИмяСвойства("type");
	Чтен.ЗаписатьЗначение("OST_DESCRIPTION");
			Чтен.ЗаписатьКонецОбъекта();	 
		Тело=    Чтен.Закрыть();
		
		
		
		Если Тип="Обувь" Тогда
			Что="shoes"
		ИначеЕсли Тип="Одежда"
			ИЛИ Тип="Белье" Тогда
			что="lp"
		ИначеЕсли Тип="Парфюм" Тогда
			
			что="perfumery"
		Иначе
			что=Thumbprint_1.СайтКСУЗ
			
		КонецЕсли;

		
		
			HTTPЗапрос=Новый HTTPЗапрос("api/v3/lk/documents/create?pg="+что);
		HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
		HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
		//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
		///Константин           
		HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
		Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
		Текст1=Ответ.ПолучитьТелоКакСтроку();
		
			
	Если Ответ.КодСостояния=202 ИЛИ Ответ.КодСостояния=200 
		ИЛИ Ответ.КодСостояния=201 
		Тогда
		
			ЗапишемДляНоменклтаурыОТвет(СформироватьФайлДляОтправки_3.Продукция,Текст1,Thumbprint_1.ИНН);			
	ИначеЕсли Ответ.КодСостояния=401 		ИЛИ Ответ.КодСостояния=502    Тогда
			Если УжеОтправили=Истина Тогда
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
			Иначе
				ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
				СозданиеОстатковПоПродукциям(Тип,Истина,Товар_1)			
			КонецЕсли
		   КонецЕсли;
		
		     Конеццикла;
		
	//Конеццикла;
		
			
КонецПроцедуры

Процедура ЗапишемДляНоменклтаурыОТвет(Ном,Тек,ИНН)
	
	Пр=Ном.ПолучитьОбъект();
	Пр.guid=Тек;
	Пр.ИННПроизводителяИмпортёра=Справочники.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.НайтиПоРеквизиту(
	"ИНН",ИНН);
	Пр.Записать();
	
КонецПроцедуры

Функция ВернутьПараметрыПоТовару(Товар,ТекПОль)
	
		
	Если Не ЗначениеЗаполнено(Товар.СтранаПроизводства) ИЛИ Товар.СтранаПроизводства.Код="643" Тогда
		СтранаР=Истина;
	Иначе
		СтранаР=Ложь;
	КонецЕсли;
	
	Чтен=Новый  ЗаписьJSON;
	Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
	Чтен.ЗаписатьНачалоОбъекта();
	Чтен.ЗаписатьИмяСвойства("trade_participant_inn");	
	Чтен.ЗаписатьЗначение(ТекПОль.Организация.ИНН);
	Чтен.ЗаписатьИмяСвойства("products_list");
	Чтен.ЗаписатьНачалоМассива();
	Чтен.ЗаписатьНачалоОбъекта();
	Если Товар.ТНВЭДДляОстатка="40" Тогда
		
		Чтен.ЗаписатьИмяСвойства("model");
			Чтен.ЗаписатьЗначение(Товар.ДополнительныйРеквизитШины.МодельШины);
		
		
	ИначеЕсли Товар.ТНВЭДДляОстатка<>"63" Тогда
		Чтен.ЗаписатьИмяСвойства("product_gender");
		Если Товар.Пол.Наименование="Женская" Тогда
			Чтен.ЗаписатьЗначение("FEMALE");
		ИначеЕсли Товар.Пол.Наименование="Мужская" Тогда
			Чтен.ЗаписатьЗначение("MALE");
		ИначеЕсли Товар.Пол.Наименование="Детская" Тогда
			Чтен.ЗаписатьЗначение("BABY");
		Иначе
			
			Чтен.ЗаписатьЗначение("UNISEX");
		КонецЕсли;
	КонецЕсли;
	Чтен.ЗаписатьИмяСвойства("tnved_code_2");
	
	Если ЗначениеЗаполнено(Товар.ТНВЭДДляОстатка) тогда
		Чтен.ЗаписатьЗначение(Товар.ТНВЭДДляОстатка);
	Иначе
		Чтен.ЗаписатьЗначение("64");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Товар.ТНВЭДДляОстатка) И Товар.ТНВЭДДляОстатка<>"64" 
		И ЗначениеЗаполнено(Товар.БрендТорговаяМарка)
		Тогда
		Чтен.ЗаписатьИмяСвойства("brand");
		
	//Если Товар.Пол.Наименование="Женская" Тогда
		Чтен.ЗаписатьЗначение(Товар.БрендТорговаяМарка);
		
		
	КонецЕсли;
	
	Если Товар.ТНВЭДДляОстатка="63" Тогда
		Чтен.ЗаписатьИмяСвойства("consumer_age");
		
	//Если Товар.Пол.Наименование="Женская" Тогда
		Чтен.ЗаписатьЗначение(xmlString(Товар.ВозрастнаяКатегория));
	//ИначеЕсли Товар.Пол.Наименование="Мужская" Тогда
	//	Чтен.ЗаписатьЗначение("MALE");
	//ИначеЕсли Товар.Пол.Наименование="Детская" Тогда
	//	Чтен.ЗаписатьЗначение("BABY");
	//Иначе
		
	//	Чтен.ЗаписатьЗначение("UNISEX");
	//КонецЕсли;
		
		
	КонецЕсли;
	
	Если Товар.ТНВЭДДляОстатка<>"40" Тогда
		Чтен.ЗаписатьИмяСвойства("release_method");
		Если СтранаР<>Истина Тогда
			Чтен.ЗаписатьЗначение("IMPORTED_INTO_RF");
		Иначе
			Чтен.ЗаписатьЗначение("PRODUCED_IN_RF");
		КонецЕсли;
		
	КонецЕсли;
	Чтен.ЗаписатьКонецОбъекта();
	Чтен.ЗаписатьКонецМассива();
	Чтен.ЗаписатьКонецОбъекта();
	Возврат Чтен.Закрыть();

КонецФункции

Функция ВернутьПараметрыПоТоваруТабак(Товар,ТекПОль)
	
		
	Чтен=Новый  ЗаписьJSON;
	Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
	Чтен.ЗаписатьНачалоОбъекта();
	Чтен.ЗаписатьИмяСвойства("trade_participant_inn");	
	Чтен.ЗаписатьЗначение(ТекПОль.Организация.ИНН);
	Чтен.ЗаписатьИмяСвойства("products_list");
	Чтен.ЗаписатьНачалоМассива();
	Чтен.ЗаписатьНачалоОбъекта();
	
		Чтен.ЗаписатьИмяСвойства("tnved_code_4");
		Чтен.ЗаписатьЗначение(Товар.ТНВЭДДляОстатка);
	
		Чтен.ЗаписатьИмяСвойства("name");
		Чтен.ЗаписатьЗначение(Товар.Наименование);
	
		Чтен.ЗаписатьИмяСвойства("brand");
		Чтен.ЗаписатьЗначение(Товар.БрендТорговаяМарка);
	
		Чтен.ЗаписатьИмяСвойства("product_group");
		Чтен.ЗаписатьЗначение("TOBACCO");
	
	Чтен.ЗаписатьКонецОбъекта();
	Чтен.ЗаписатьКонецМассива();
	Чтен.ЗаписатьКонецОбъекта();
	Возврат Чтен.Закрыть();

КонецФункции

Функция ВернутьПараметрыПоТоваруАТП(Товар,ТекПОль)
	
		
	Чтен=Новый  ЗаписьJSON;
	Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
	Чтен.ЗаписатьНачалоОбъекта();
	Чтен.ЗаписатьИмяСвойства("trade_participant_inn");	
	Чтен.ЗаписатьЗначение(ТекПОль.Организация.ИНН);
	Чтен.ЗаписатьИмяСвойства("products_list");
	Чтен.ЗаписатьНачалоМассива();
	Чтен.ЗаписатьНачалоОбъекта();
	
		Чтен.ЗаписатьИмяСвойства("tnved_code_4");
		Чтен.ЗаписатьЗначение(Товар.ТНВЭДДляОстатка);
	
		Чтен.ЗаписатьИмяСвойства("name");
		Чтен.ЗаписатьЗначение(Товар.Наименование);
	
		Чтен.ЗаписатьИмяСвойства("brand");
		Чтен.ЗаписатьЗначение(Товар.БрендТорговаяМарка);
	
		Чтен.ЗаписатьИмяСвойства("product_group");
		Чтен.ЗаписатьЗначение("OTP");
	
	Чтен.ЗаписатьКонецОбъекта();
	Чтен.ЗаписатьКонецМассива();
	Чтен.ЗаписатьКонецОбъекта();
	Возврат Чтен.Закрыть();

КонецФункции


Функция СоздатьНайтиПроизводительПоОрганизации(Орган)
	Произ=Справочники.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.НайтиПоРеквизиту("ИНН",Орган.ИНН);
	Если ЗначениеЗаполнено(Произ) тогда
		Возврат произ
	КонецЕсли;
	
	Произв=Справочники.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.СоздатьЭлемент();
	Произв.Наименование=Орган.Наименование;
	Произв.НаименованиеПолное=Орган.Наименование;
	Произв.ИНН=Орган.ИНН;
	ПРоизв.КПП=Орган.КПП;
	Произв.Записать();
	ВОзврат Произв.Ссылка;
	
	
КонецФункции


Функция ФормируемПоПараметрам(Производитель,Пол,Страна,ТНВЭД,Импорт=Ложь)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	Если ТНВЭД="63" Тогда
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Продукция_ХамелеонЦРПТ.Ссылка
		|ИЗ
		|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
		|ГДЕ
		|	Продукция_ХамелеонЦРПТ.ВозрастнаяКатегория = &Пол
		|	И Продукция_ХамелеонЦРПТ.ИННПроизводителяИмпортёра = &ИННПроизводителяИмпортёра
		|	И Продукция_ХамелеонЦРПТ.СтранаПроизводства.Код "+?(Импорт,"<>","=")+" &Код
		|	И Продукция_ХамелеонЦРПТ.Остатки
		|	И Продукция_ХамелеонЦРПТ.ТНВЭДДляОстатка = &ТНВЭДДляОстатка";
	
	Запрос.УстановитьПараметр("ИННПроизводителяИмпортёра", Производитель);
	Запрос.УстановитьПараметр("Пол", Пол);
	Запрос.УстановитьПараметр("Код", Страна);
	Запрос.УстановитьПараметр("ТНВЭДДляОстатка", ТНВЭД);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	
	НаимТовараИщем="Белье. Без товарного знака. ";
	
	//Белье. Без товарного знака. Взрослое. Произведен в РФ
	//Белье. Без товарного знака. Без Возраста. Произведен в РФ
	Если Пол=Перечисления.ВозратнаяКатегория_ХамелеонЦРПТ.ADULT Тогда
		НаимТовараИщем=НаимТовараИщем+"Взрослое. ";
	ИначеЕсли Пол=Перечисления.ВозратнаяКатегория_ХамелеонЦРПТ.ADULT Тогда
		НаимТовараИщем=НаимТовараИщем+"Детское. ";
	Иначе
		НаимТовараИщем=НаимТовараИщем+"Без Возраста. ";
	КонецЕсли;
	
	//Белье. Без товарного знака. Без Возраста. Ввезен в РФ
	Если Импорт=Истина Тогда
		НаимТовараИщем=НаимТовараИщем+"Ввезен в РФ";
	Иначе
		НаимТовараИщем=НаимТовараИщем+"Произведен в РФ";
		
	КонецЕсли;
	
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	Продукция_ХамелеонЦРПТ.Ссылка
					|ИЗ
					|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
					|ГДЕ
					|	Продукция_ХамелеонЦРПТ.Наименование = &Наименование
					|	И Продукция_ХамелеонЦРПТ.ИННПроизводителяИмпортёра = &ИННПроизводителяИмпортёра";
				
				Запрос.УстановитьПараметр("ИННПроизводителяИмпортёра", Производитель);
				Запрос.УстановитьПараметр("Наименование", НаимТовараИщем);
				
				РезультатЗапроса_2323 = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи_2232= РезультатЗапроса_2323.Выбрать();
				
				СпрУжеЕсть=Неопределено;
				Пока ВыборкаДетальныеЗаписи_2232.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					СпрУжеЕсть=ВыборкаДетальныеЗаписи_2232.Ссылка;
				КонецЦикла;
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
	
	
	//Белье. Без товарного знака. Детское. Ввезен в РФ;
	Если НЕ ВыборкаДетальныеЗаписи.Следующий() И Не ЗначениеЗаполнено(СпрУжеЕсть) Тогда
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	
	СпрТовар=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
	СпрТовар.ВозрастнаяКатегория=Пол;
	СпрТовар.Остатки=Истина;
	СпрТовар.ТНВЭДДляОстатка=ТНВЭД;
	СпрТовар.Наименование="Остатки для отправки в ЦРПТ";
	СпрТовар.НаименованиеТовара="Остатки для отправки в ЦРПТ";
	
	Если Импорт Тогда
		СпрТовар.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоКоду("896");
	Иначе
		СпрТовар.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоКоду(Страна);
	КонецЕсли;
	СпрТовар.ИННПроизводителяИмпортёра=Производитель;
	СпрТовар.Записать();
	Товар=СпрТовар.Ссылка;
	Возврат Товар
	//МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
КонецЕсли;
Возврат Неопределено
		
		
	КонецЕслИ;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Продукция_ХамелеонЦРПТ.Ссылка
		|ИЗ
		|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
		|ГДЕ
		|	Продукция_ХамелеонЦРПТ.Пол = &Пол
		|	И Продукция_ХамелеонЦРПТ.ИННПроизводителяИмпортёра = &ИННПроизводителяИмпортёра
		|	И Продукция_ХамелеонЦРПТ.СтранаПроизводства.Код "+?(Импорт,"<>","=")+" &Код
		|	И Продукция_ХамелеонЦРПТ.Остатки
		|	И Продукция_ХамелеонЦРПТ.ТНВЭДДляОстатка = &ТНВЭДДляОстатка";
	
	Запрос.УстановитьПараметр("ИННПроизводителяИмпортёра", Производитель);
	Запрос.УстановитьПараметр("Пол", Пол);
	Запрос.УстановитьПараметр("Код", Страна);
	Запрос.УстановитьПараметр("ТНВЭДДляОстатка", ТНВЭД);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	
	//Одежда. Без товарного знака. Детская. Ввезен в РФ
	Если ТНВЭД="64" Тогда
		НаимТовараИщем="Остатки. Обувь. ";
	Иначе
		НаимТовараИщем="Одежда. Без товарного знака. ";
	КонецЕсли;
	
	Если Пол.Наименование="Детская" Тогда
		НаимТовараИщем=НаимТовараИщем+"Детская. ";
	ИначеЕсли Пол.Наименование="Женская" Тогда
		НаимТовараИщем=НаимТовараИщем+"Женская. ";
	ИначеЕсли Пол.Наименование="Мужская" Тогда
		НаимТовараИщем=НаимТовараИщем+"Мужская. ";
	Иначе
		НаимТовараИщем=НаимТовараИщем+"Унисекс. ";
	КонецЕсли;
	
	//Белье. Без товарного знака. Без Возраста. Ввезен в РФ
	Если Импорт=Истина Тогда
		НаимТовараИщем=НаимТовараИщем+"Ввезен в РФ";
	Иначе
		НаимТовараИщем=НаимТовараИщем+"Произведен в РФ";
		
	КонецЕсли;
	
	            
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	Продукция_ХамелеонЦРПТ.Ссылка
					|ИЗ
					|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
					|ГДЕ
					|	Продукция_ХамелеонЦРПТ.Наименование = &Наименование
					|	И Продукция_ХамелеонЦРПТ.ИННПроизводителяИмпортёра = &ИННПроизводителяИмпортёра";
				
				Запрос.УстановитьПараметр("ИННПроизводителяИмпортёра", Производитель);
				Запрос.УстановитьПараметр("Наименование", НаимТовараИщем);
				
				РезультатЗапроса_2323 = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи_2232= РезультатЗапроса_2323.Выбрать();
				
				СпрУжеЕсть=Неопределено;
				Пока ВыборкаДетальныеЗаписи_2232.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					СпрУжеЕсть=ВыборкаДетальныеЗаписи_2232.Ссылка;
				КонецЦикла;
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
	
	
	//Белье. Без товарного знака. Детское. Ввезен в РФ;
	Если НЕ ВыборкаДетальныеЗаписи.Следующий() И Не ЗначениеЗаполнено(СпрУжеЕсть) Тогда
		
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	
	СпрТовар=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
	СпрТовар.Пол=Пол;
	СпрТовар.Остатки=Истина;
	СпрТовар.ТНВЭДДляОстатка=ТНВЭД;
	СпрТовар.Наименование="Остатки для отправки в ЦРПТ";
	СпрТовар.НаименованиеТовара="Остатки для отправки в ЦРПТ";
	Если Импорт Тогда
		СпрТовар.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоКоду("896");
	Иначе
		СпрТовар.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоКоду(Страна);
	КонецЕсли;
	СпрТовар.ИННПроизводителяИмпортёра=Производитель;
	СпрТовар.Записать();
	Товар=СпрТовар.Ссылка;
	Возврат Товар
	//МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
КонецЕсли;
Возврат Неопределено
	
	
Конецфункции
Функция ФормируемДляОдежди(ТекПоль,Товар_1)
	
	
	МассивТоваров=Новый Массив;
	
	Если ЗначениеЗаполнено(Товар_1) Тогда
		
		Товар=Товар_1;
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
		Возврат МассивТоваров;
	КонецЕсли;
	
	Производитель=СоздатьНайтиПроизводительПоОрганизации(ТекПоль.Организация);
	
	
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Детская"),"643","42");
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Женская"),"643","42");
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
		
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Мужская"),"643","42");
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Унисекс"),"643","42");
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	
	
	
	
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Детская"),"643","42",Истина);
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Женская"),"643","42",Истина);
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
		
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Мужская"),"643","42",Истина);
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	
	
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Унисекс"),"643","42",Истина);
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	
	
	
	
		Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Детская"),"643","61");
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Женская"),"643","61");
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
		
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Мужская"),"643","61");
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Унисекс"),"643","61");
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	
	
	
	
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Детская"),"643","61",Истина);
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Женская"),"643","61",Истина);
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
		
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Мужская"),"643","61",Истина);
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	

	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Унисекс"),"643","61",Истина);
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	
	
	
	
	
		Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Детская"),"643","62");
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Женская"),"643","62");
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
		
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Мужская"),"643","62");
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Унисекс"),"643","62");
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	
	
	
	
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Детская"),"643","62",Истина);
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Женская"),"643","62",Истина);
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
		
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Мужская"),"643","62",Истина);
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Унисекс"),"643","62",Истина);
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	

	
	
	Возврат      МассивТоваров

	
КонецФункции

Функция ФормируемДляБелья(ТекПоль,Товар_1)
	
	
	МассивТоваров=Новый Массив;
	
	Если ЗначениеЗаполнено(Товар_1) Тогда
		
		Товар=Товар_1;
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
		Возврат МассивТоваров;
	КонецЕсли;
	
	Производитель=СоздатьНайтиПроизводительПоОрганизации(ТекПоль.Организация);
	
	
	
	Товар=ФормируемПоПараметрам(Производитель,Перечисления.ВозратнаяКатегория_ХамелеонЦРПТ.ADULT,"643","63");
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	Товар=ФормируемПоПараметрам(Производитель,Перечисления.ВозратнаяКатегория_ХамелеонЦРПТ.BABY,"643","63");
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
		
	Товар=ФормируемПоПараметрам(Производитель,Перечисления.ВозратнаяКатегория_ХамелеонЦРПТ.NO_AGE,"643","63");
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	
	
	Товар=ФормируемПоПараметрам(Производитель,Перечисления.ВозратнаяКатегория_ХамелеонЦРПТ.ADULT,"643","63",Истина);
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	Товар=ФормируемПоПараметрам(Производитель,Перечисления.ВозратнаяКатегория_ХамелеонЦРПТ.BABY,"643","63",Истина);
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
		
	Товар=ФормируемПоПараметрам(Производитель,Перечисления.ВозратнаяКатегория_ХамелеонЦРПТ.NO_AGE,"643","63",Истина);
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	
	
	Возврат      МассивТоваров

	
КонецФункции

Функция ФормируемДляШины(ТекПоль,Товар_1)
	
	
	МассивТоваров=Новый Массив;
	
	Если ЗначениеЗаполнено(Товар_1) Тогда
		
		Товар=Товар_1;
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
		Возврат МассивТоваров;
	КонецЕсли;
	
	
	
	Возврат      МассивТоваров

	
КонецФункции


Функция ФормируемДляТабака(ТекПоль,Товар_1)
	
	
	МассивТоваров=Новый Массив;
	
	Если ЗначениеЗаполнено(Товар_1) Тогда
		
		Товар=Товар_1;
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТоваруТабак(Товар,ТекПОль)));
		Возврат МассивТоваров;
	КонецЕсли;
	
	
	
	Возврат      МассивТоваров

	
КонецФункции

Функция ФормируемДляАТП(ТекПоль,Товар_1)
	
	
	МассивТоваров=Новый Массив;
	
	Если ЗначениеЗаполнено(Товар_1) Тогда
		
		Товар=Товар_1;
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТоваруАТП(Товар,ТекПОль)));
		Возврат МассивТоваров;
	КонецЕсли;
	
	
	
	Возврат      МассивТоваров

	
КонецФункции

Функция ВернутьПараметрыПоТовару_Массив(Товар_1,ТекПОль,Тип="Обувь") Экспорт
	
	Если Тип="Табак" Тогда
		МассивТоваров=ФормируемДляТабака(ТекПоль,Товар_1); 
		Возврат МассивТоваров;
	ИначеЕсли Тип="АТП" Тогда
		МассивТоваров=ФормируемДляАТП(ТекПоль,Товар_1); 
		Возврат МассивТоваров;
	ИначеЕсли тип="Белье" Тогда
		МассивТоваров=ФормируемДляБелья(ТекПоль,Товар_1); 
		Возврат МассивТоваров;
	ИначеЕсли Тип="Одежда" Тогда
		МассивТоваров=ФормируемДляОдежди(ТекПоль,Товар_1); 
		Возврат МассивТоваров;
	ИначеЕсли Тип="Шины" Тогда
		МассивТоваров=ФормируемДляШины(ТекПоль,Товар_1); 
		Возврат МассивТоваров;
		
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Товар_1) Тогда
		
		
		Товар=Товар_1;
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
		
		
	Иначе
		МассивТоваров=Новый Массив;
		
		Производитель=СоздатьНайтиПроизводительПоОрганизации(ТекПоль.Организация);
		
		
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Детская"),"643","64");
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Женская"),"643","64");
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
		
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Мужская"),"643","64");
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Унисекс"),"643","64");
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	
	
	
	
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Детская"),"643","64",Истина);
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Женская"),"643","64",Истина);
	
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
		
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Мужская"),"643","64",Истина);
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	
	
	Товар=ФормируемПоПараметрам(Производитель,Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Унисекс"),"643","64",Истина);
	Если ЗначениеЗаполнено(Товар) тогда
		МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	КонецЕслИ;
	
	
	//	
	//	
	//		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	//	// Данный фрагмент построен конструктором.
	//	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	Продукция_ХамелеонЦРПТ.Ссылка
	//		|ИЗ
	//		|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
	//		|ГДЕ
	//		|	Продукция_ХамелеонЦРПТ.Пол = &Пол
	//		|	И Продукция_ХамелеонЦРПТ.ИННПроизводителяИмпортёра = &ИННПроизводителяИмпортёра
	//		|	И Продукция_ХамелеонЦРПТ.СтранаПроизводства.Код = &Код
	//		|	И Продукция_ХамелеонЦРПТ.Остатки";
	//	
	//	Запрос.УстановитьПараметр("ИННПроизводителяИмпортёра", Производитель);
	//	Запрос.УстановитьПараметр("Пол", Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Детская"));
	//	Запрос.УстановитьПараметр("Код", "643");
	//	
	//	РезультатЗапроса = Запрос.Выполнить();
	//	
	//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//	
	//	

	////Одежда. Без товарного знака. Детская. Ввезен в РФ
	//НаимТовараИщем="Остатки. Обувь. ";
	//
	//	НаимТовараИщем=НаимТовараИщем+"Детская. ";
	//	НаимТовараИщем=НаимТовараИщем+"Произведен в РФ";
	//		
	//	Если НЕ ВыборкаДетальныеЗаписи.Следующий() 
	//		И Не ЗначениеЗаполнено(Справочники.Продукция_ХамелеонЦРПТ.НайтиПоНаименованию(НаимТовараИщем))
	//		Тогда
	//		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//	
	//	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	//	
	//	
	//	СпрТовар=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
	//	СпрТовар.Пол=Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Детская");
	//	СпрТовар.Остатки=Истина;
	//	СпрТовар.Наименование="Отстаки для отправки в ЦРПТ";
	//	СпрТовар.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоКоду("643");
	//	СпрТовар.ИННПроизводителяИмпортёра=Производитель;
	//	СпрТовар.Записать();
	//	Товар=СпрТовар.Ссылка;
	//	МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	//	КонецЕсли;
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	Продукция_ХамелеонЦРПТ.Ссылка
	//		|ИЗ
	//		|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
	//		|ГДЕ
	//		|	Продукция_ХамелеонЦРПТ.Пол = &Пол
	//		|	И Продукция_ХамелеонЦРПТ.ИННПроизводителяИмпортёра = &ИННПроизводителяИмпортёра
	//		|	И Продукция_ХамелеонЦРПТ.СтранаПроизводства.Код = &Код
	//		|	И Продукция_ХамелеонЦРПТ.Остатки";
	//	
	//	Запрос.УстановитьПараметр("ИННПроизводителяИмпортёра", Производитель);
	//	Запрос.УстановитьПараметр("Пол", Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Женская"));
	//	Запрос.УстановитьПараметр("Код", "643");
	//	
	//	РезультатЗапроса = Запрос.Выполнить();
	//	
	//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//	
	//НаимТовараИщем="Остатки. Обувь. ";
	//
	//	НаимТовараИщем=НаимТовараИщем+"Женская. ";
	//	НаимТовараИщем=НаимТовараИщем+"Произведен в РФ";
	//		
	//	Если НЕ ВыборкаДетальныеЗаписи.Следующий() Тогда
	//		//И Не ЗначениеЗаполнено(Справочники.Продукция_ХамелеонЦРПТ.НайтиПоНаименованию(НаимТовараИщем))
	//		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//	
	//	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	//	
	//	СпрТовар=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
	//	СпрТовар.Пол=Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Женская");
	//	СпрТовар.Остатки=Истина;
	//	СпрТовар.Наименование="Отстаки для отправки в ЦРПТ";
	//	СпрТовар.ИННПроизводителяИмпортёра=Производитель;
	//	СпрТовар.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоКоду("643");
	//	СпрТовар.Записать();
	//	Товар=СпрТовар.Ссылка;
	//	МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	//	
	//КонецЕсли;
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	Продукция_ХамелеонЦРПТ.Ссылка
	//		|ИЗ
	//		|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
	//		|ГДЕ
	//		|	Продукция_ХамелеонЦРПТ.Пол = &Пол
	//		|	И Продукция_ХамелеонЦРПТ.ИННПроизводителяИмпортёра = &ИННПроизводителяИмпортёра
	//		|	И Продукция_ХамелеонЦРПТ.СтранаПроизводства.Код = &Код
	//		|	И Продукция_ХамелеонЦРПТ.Остатки";
	//	
	//	Запрос.УстановитьПараметр("ИННПроизводителяИмпортёра", Производитель);
	//	Запрос.УстановитьПараметр("Пол", Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Мужская"));
	//	Запрос.УстановитьПараметр("Код", "643");
	//	
	//	РезультатЗапроса = Запрос.Выполнить();
	//	
	//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//	
	//	Если НЕ ВыборкаДетальныеЗаписи.Следующий() Тогда
	//		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//	
	//	СпрТовар=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
	//	СпрТовар.Пол=Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Мужская");
	//	СпрТовар.Остатки=Истина;
	//	СпрТовар.Наименование="Отстаки для отправки в ЦРПТ";
	//	
	//	СпрТовар.ИННПроизводителяИмпортёра=Производитель;
	//	СпрТовар.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоКоду("643");
	//	СпрТовар.Записать();
	//	Товар=СпрТовар.Ссылка;
	//	МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	//	
	//КонецЕсли;

	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	Продукция_ХамелеонЦРПТ.Ссылка
	//		|ИЗ
	//		|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
	//		|ГДЕ
	//		|	Продукция_ХамелеонЦРПТ.Пол = &Пол
	//		|	И Продукция_ХамелеонЦРПТ.ИННПроизводителяИмпортёра = &ИННПроизводителяИмпортёра
	//		|	И Продукция_ХамелеонЦРПТ.СтранаПроизводства.Код = &Код
	//		|	И Продукция_ХамелеонЦРПТ.Остатки";
	//	
	//	Запрос.УстановитьПараметр("ИННПроизводителяИмпортёра", Производитель);
	//	Запрос.УстановитьПараметр("Пол", Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Унисекс"));
	//	Запрос.УстановитьПараметр("Код", "643");
	//	
	//	РезультатЗапроса = Запрос.Выполнить();
	//	
	//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//	
	//	Если НЕ ВыборкаДетальныеЗаписи.Следующий() Тогда
	//		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//	


	//СпрТовар=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
	//	СпрТовар.Пол=Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Унисекс");
	//	СпрТовар.ИННПроизводителяИмпортёра=Производитель;
	//	СпрТовар.Остатки=Истина;
	//		СпрТовар.Наименование="Отстаки для отправки в ЦРПТ";

	//	СпрТовар.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоКоду("643");
	//	СпрТовар.Записать();
	//	Товар=СпрТовар.Ссылка;
	//	МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	//КонецЕсли;
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	Продукция_ХамелеонЦРПТ.Ссылка
	//		|ИЗ
	//		|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
	//		|ГДЕ
	//		|	Продукция_ХамелеонЦРПТ.Пол = &Пол
	//		|	И Продукция_ХамелеонЦРПТ.ИННПроизводителяИмпортёра = &ИННПроизводителяИмпортёра
	//		|	И Продукция_ХамелеонЦРПТ.СтранаПроизводства.Код <> &Код
	//		|	И Продукция_ХамелеонЦРПТ.Остатки";
	//	
	//	Запрос.УстановитьПараметр("ИННПроизводителяИмпортёра", Производитель);
	//	Запрос.УстановитьПараметр("Пол", Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Детская"));
	//	Запрос.УстановитьПараметр("Код", "643");
	//	
	//	РезультатЗапроса = Запрос.Выполнить();
	//	
	//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//	
	//	Если НЕ ВыборкаДетальныеЗаписи.Следующий() Тогда
	//	
	//	
	//	СпрТовар=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
	//	СпрТовар.Пол=Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Детская");
	//	СпрТовар.Остатки=Истина;
	//		СпрТовар.Наименование="Отстаки для отправки в ЦРПТ";

	//	СпрТовар.ИННПроизводителяИмпортёра=Производитель;
	//	СпрТовар.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоКоду("896");
	//	СпрТовар.Записать();
	//	Товар=СпрТовар.Ссылка;
	//	МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	//	
	//	
	//КонецЕсли;
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	Продукция_ХамелеонЦРПТ.Ссылка
	//		|ИЗ
	//		|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
	//		|ГДЕ
	//		|	Продукция_ХамелеонЦРПТ.Пол = &Пол
	//		|	И Продукция_ХамелеонЦРПТ.ИННПроизводителяИмпортёра = &ИННПроизводителяИмпортёра
	//		|	И Продукция_ХамелеонЦРПТ.СтранаПроизводства.Код <> &Код
	//		|	И Продукция_ХамелеонЦРПТ.Остатки";
	//	
	//	Запрос.УстановитьПараметр("ИННПроизводителяИмпортёра", Производитель);
	//	Запрос.УстановитьПараметр("Пол", Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Женская"));
	//	Запрос.УстановитьПараметр("Код", "643");
	//	
	//	РезультатЗапроса = Запрос.Выполнить();
	//	
	//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//	
	//	Если НЕ ВыборкаДетальныеЗаписи.Следующий() Тогда
	//	
	//	


	//	СпрТовар=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
	//	СпрТовар.Пол=Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Женская");
	//	СпрТовар.ИННПроизводителяИмпортёра=Производитель;
	//	СпрТовар.Остатки=Истина;
	//		СпрТовар.Наименование="Отстаки для отправки в ЦРПТ";

	//	СпрТовар.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоКоду("896");
	//	СпрТовар.Записать();
	//	Товар=СпрТовар.Ссылка;
	//	МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	//	
	//КонецЕсли;	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	Продукция_ХамелеонЦРПТ.Ссылка
	//		|ИЗ
	//		|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
	//		|ГДЕ
	//		|	Продукция_ХамелеонЦРПТ.Пол = &Пол
	//		|	И Продукция_ХамелеонЦРПТ.ИННПроизводителяИмпортёра = &ИННПроизводителяИмпортёра
	//		|	И Продукция_ХамелеонЦРПТ.СтранаПроизводства.Код <> &Код
	//		|	И Продукция_ХамелеонЦРПТ.Остатки";
	//	
	//	Запрос.УстановитьПараметр("ИННПроизводителяИмпортёра", Производитель);
	//	Запрос.УстановитьПараметр("Пол", Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Мужская"));
	//	Запрос.УстановитьПараметр("Код", "643");
	//	
	//	РезультатЗапроса = Запрос.Выполнить();
	//	
	//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//	
	//	Если НЕ ВыборкаДетальныеЗаписи.Следующий() Тогда
	//	
	//	


	//	СпрТовар=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
	//	СпрТовар.Пол=Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Мужская");
	//	СпрТовар.Остатки=Истина;
	//		СпрТовар.Наименование="Отстаки для отправки в ЦРПТ";

	//	СпрТовар.ИННПроизводителяИмпортёра=Производитель;
	//	СпрТовар.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоКоду("896");
	//	СпрТовар.Записать();
	//	Товар=СпрТовар.Ссылка;
	//	МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	//КонецЕсли;
	//	Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	Продукция_ХамелеонЦРПТ.Ссылка
	//		|ИЗ
	//		|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
	//		|ГДЕ
	//		|	Продукция_ХамелеонЦРПТ.Пол = &Пол
	//		|	И Продукция_ХамелеонЦРПТ.ИННПроизводителяИмпортёра = &ИННПроизводителяИмпортёра
	//		|	И Продукция_ХамелеонЦРПТ.СтранаПроизводства.Код <> &Код
	//		|	И Продукция_ХамелеонЦРПТ.Остатки";
	//	
	//	Запрос.УстановитьПараметр("ИННПроизводителяИмпортёра", Производитель);
	//	Запрос.УстановитьПараметр("Пол", Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Унисекс"));
	//	Запрос.УстановитьПараметр("Код", "643");
	//	
	//	РезультатЗапроса = Запрос.Выполнить();
	//	
	//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//	
	//	Если НЕ ВыборкаДетальныеЗаписи.Следующий() Тогда
	//	
	//	

	//	СпрТовар=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
	//	СпрТовар.Пол=Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Унисекс");
	//	СпрТовар.Остатки=Истина;
	//		СпрТовар.Наименование="Отстаки для отправки в ЦРПТ";

	//	СпрТовар.ИННПроизводителяИмпортёра=Производитель;
	//	СпрТовар.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоКоду("896");
	//	СпрТовар.Записать();
	//	Товар=СпрТовар.Ссылка;
	//	МассивТоваров.Добавить(Новый Структура("Продукция,Сф",Товар,ВернутьПараметрыПоТовару(Товар,ТекПОль)));
	//КонецЕсли;
	КонецЕсли;
	Возврат      МассивТоваров
	//Если ЗначениеЗаполнено(Товар.guid) ИЛИ ЗначениеЗаполнено(Товар.ДатаПубликации) 
	
	//	ИЛИ Товар.Остатки=Ложь
	//	Тогда
	//	Возврат Неопределено;
	//КонецЕсли;
	//Возврат Новый Структура("Пол,ТипВвоза",Товар.Пол,СтранаР);
	
Конецфункции

&НаКлиенте
Процедура Обновить(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	Обр=ОткрытьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Обр.ОбновитьСтатусыДокументов(Команда);
	ЭтаФорма.Активизировать();
	
	
	ВернутьМ=ВернутьМ_Остатки();
	Для Каждого Стр_1 Из ВернутьМ Цикл
		Форм=ПолучитьФорму("Справочник.Продукция_ХамелеонЦРПТ.Форма.ФормаЭлемента", Новый Структура("Ключ",Стр_1));
		Форм.ОбновитьПродукцияюПоGTIN(Команда)
	Конеццикла;
	
	
	
	Элементы.Список.Обновить();;
	
	

КонецПроцедуры

Функция ВернутьМ_Остатки()
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Продукция_ХамелеонЦРПТ.Ссылка
		|ИЗ
		|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
		|ГДЕ
		|	Продукция_ХамелеонЦРПТ.Наименование ПОДОБНО ""%для отправки в ЦРПТ%""
		|	И Продукция_ХамелеонЦРПТ.GTIN <> 0
		|
		|";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МассивТТ=Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Если МассивТТ.Найти(ВыборкаДетальныеЗаписи.Ссылка)=Неопределено Тогда
			МассивТТ.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Продукция_ХамелеонЦРПТ.Ссылка
		|ИЗ
		|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
		|ГДЕ
		|	Продукция_ХамелеонЦРПТ.Пол = ЗНАЧЕНИЕ(Справочник.ПолОбуви_ХамелеонЦРПТ.ПустаяСсылка)
		|	И Продукция_ХамелеонЦРПТ.Наименование ПОДОБНО ""%Остатки%""";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		СпрПр=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Если Найти(СпрПр.Наименование,"Женская") Тогда
			СпрПр.Пол=Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Женская");
		ИначеЕсли Найти(СпрПр.Наименование,"Мужская") Тогда
			СпрПр.Пол=Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Мужская");
		ИначеЕсли Найти(СпрПр.Наименование,"Унисекс") Тогда
			СпрПр.Пол=Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Унисекс");
		ИначеЕсли Найти(СпрПр.Наименование,"Детская") Тогда
			СпрПр.Пол=Справочники.ПолОбуви_ХамелеонЦРПТ.НайтиПоНаименованию("Детская");
			
		КонецЕсли;
		СпрПр.Записать();
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
Возврат         МассивТТ
	
КонецФункции


&НаКлиенте
Процедура ОткрытьВнешниеОбработки(Команда)
	// Вставить содержимое обработчика.
		// Вставить содержимое обработчика.
		ОткрытьФорму("Справочник.ВнешниеОбработки_ХамелеонЦРПТ.Форма.ФормаСписка",
		Новый структура("Тип",
			"СписокПродукций_ЦРПТ"));

КонецПроцедуры

Функция ВернутьИмяФайла(Команда)
//	Если РегистрыСведений.НастройкиПрограммыЦРПТ.Получить().ЗагружатьВнешниеОбработкиИзХранилища Тогда
		Возврат Справочники.ВнешниеОбработки_ХамелеонЦРПТ.НайтиПоКоду(Сред(Команда,8)).Хранилище.Получить();
//	Иначе
//		СпрВн=Справочники.ВнешниеОбработки_ХамелеонЦРПТ.НайтиПоКоду(Сред(Команда,8));
//	Конецесли;
	
//	Возврат СпрВн.ИмяВнешнейОБработки
	//НаимСправочника=Метаданные.НайтиПоТипу(ТипЗнч(Объект.Ссылка)).ПолноеИмя();
	//Спр=Справочники.ВнешниеОбработки_ХамелеонЦРПТ.НайтиПоНаименованию(НаимСправочника,Истина);
	//Если Спр<>Справочники.ВнешниеОбработки_ХамелеонЦРПТ.ПустаяСсылка() Тогда
	//	Возврат Спр.ИмяВнешнейОБработки;
	//Конецесли;
	
КонецФункции

Функция ПолучитьИмяВнешней(ИмяФайла)
    АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ИмяФайла);
    ИмяОбр = ВнешниеОбработки.Подключить(АдресВоВременномХранилище,,Ложь);
    Возврат ИмяОбр;
КонецФункции



Процедура   ЗаполнитьСправочникВнешний(ИмяСпрД,Доп,ГруппаКнопокВнешняя,ИмяДейстия)
			//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВнешниеОбработки_ХамелеонЦРПТ.ИмяВнешнейОБработки,
		|	ВнешниеОбработки_ХамелеонЦРПТ.НаименованиеКнопки,
		|	ВнешниеОбработки_ХамелеонЦРПТ.Код
		|ИЗ
		|	Справочник.ВнешниеОбработки_ХамелеонЦРПТ КАК ВнешниеОбработки_ХамелеонЦРПТ
		|ГДЕ
		|	ВнешниеОбработки_ХамелеонЦРПТ.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", ИмяСпрД); //"Документ.ВетеринарныеСправки_ХамелеонЦРПТ");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		ИмяКоманды="Команда"+ВыборкаДетальныеЗаписи.Код;
		Попытка
		КомандаФормы = Команды.Добавить(ИмяКоманды);
		КомандаФормы.Действие = ИмяДейстия;
		КомандаФормы.Заголовок = ВыборкаДетальныеЗаписи.ИмяВнешнейОБработки;
		КомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
		КомандаФормы.Отображение = ОтображениеКнопки.Текст;
		
		//ОписаниеКомандыПечати.ИмяКомандыНаФорме = ИмяКоманды;
		
		НовыйЭлемент = Элементы.Добавить("ГруппаКнопокВнешняя"+Доп+ ИмяКоманды, Тип("КнопкаФормы"), ГруппаКнопокВнешняя);
		НовыйЭлемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		НовыйЭлемент.Заголовок=ВыборкаДетальныеЗаписи.НаименованиеКнопки;
		НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	Исключение
		КонецПопытки;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуВнешняя_ЗаказМарокОсновная(Команда)
	
//	// Вставить содержимое обработчика.	// Вставить содержимое обработчика.
	Если Элементы.Список.ТекущиеДанные<>Неопределено Тогда
		Ссылка=Элементы.Список.ТекущиеДанные.Ссылка;
	Иначе
		Ссылка=ПредопределенноеЗначение("Справочник.Продукция_ХамелеонЦРПТ.ПустаяСсылка");
	КонецЕсли;	
		Попытка
			ВернДв=ВернутьИмяФайла(Команда.Имя);
			Если Тип("ДвоичныеДанные")=ТипЗнч(ВернДв) Тогда
				ДвоичныеДанные=ВернДв;
			Иначе
				ДвоичныеДанные=Новый ДвоичныеДанные(ВернДв);
			Конецесли;
			ОбработкаИмя=ПолучитьИмяВнешней(Двоичныеданные);
			ОткрытьФорму("ВнешняяОбработка."+ОбработкаИмя+".Форма",Новый Структура("Ссылка",Ссылка),ЭтаФорма);
		Исключение
			Попытка
#Если ТолстыйКлиентОбычноеПриложение  Тогда
		ВернДв=ВернутьИмяФайла(Команда.Имя);
		Если Тип("ДвоичныеДанные")=ТипЗнч(ВернДв) Тогда
			//ДвоичныеДанные=ВернДв;
			ДвоичныеДанные=ПолучитьИмяВременногоФайла();
			ВернДв.Записать(ДвоичныеДанные);
			
		Иначе
			ДвоичныеДанные=ВернДв;
		Конецесли;
				ВернутьВн(ДвоичныеДанные);
				Если Тип("ДвоичныеДанные")=ТипЗнч(ВернДв) Тогда
					УдалитьФайлы(ДвоичныеДанные);
				КонецЕсли;
#Иначе
				
			ПоказатьПредупреждение(,"Не удалось выполнить внешнюю обработку");
#КонецЕсли
			Исключение
				ПоказатьПредупреждение(,"Не удалось выполнить внешнюю обработку");
			КонецПопытки;
		КонецПопытки;
	//КонецЕсли;
КонецПроцедуры


#Если ТолстыйКлиентОбычноеПриложение  Тогда
&НаКлиенте
Процедура ВернутьВн(ДвоичныеДанные)
	//ИмяВременФ=ПолучитьИмяВременногоФайла();
	//ДвоичныеДанные.Записать(ИмяВременФ);
	ВнешняяОбработка=ВнешниеОбработки.Создать(ДвоичныеДанные);
	Фоорма=ВнешняяОбработка.ПолучитьФорму(,ЭтаФорма);
	Попытка
		Фоорма.УФ=ЭтаФорма;
	Исключение
	КонецПопытки;
	Фоорма.Открыть();
Конецпроцедуры      	
#КонецЕсли

&НаСервере
Процедура СохранитьXLSДЛяЗагрузиВСБНаСервере(Табл)
	// Вставить содержимое обработчика.
	Макет=Справочники.Продукция_ХамелеонЦРПТ.ПолучитьМакет("XLSСб");
	ОлС=Макет.ПолучитьОбласть("Строка");
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Продукция_ХамелеонЦРПТ.Ссылка,
		|	Продукция_ХамелеонЦРПТ.GTIN,
		|	Продукция_ХамелеонЦРПТ.Наименование
		|ИЗ
		|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
		|ГДЕ
		|	(Продукция_ХамелеонЦРПТ.Тип = &Тип ИЛИ Продукция_ХамелеонЦРПТ.Тип = &Тип1)
		|	И НЕ Продукция_ХамелеонЦРПТ.ПометкаУдаления
		|	И НЕ Продукция_ХамелеонЦРПТ.ЭтоГруппа";
	
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипПродукции_ХамелеонЦРПТ.Табак);
	Запрос.УстановитьПараметр("Тип1", Перечисления.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.GTIN) Тогда	
			ОлС.Параметры.Код=Обработки._Запуск_ХамелеонЦРПТ.ДополнитьСтроку_11(xmlString(ВыборкаДетальныеЗаписи.GTIN),14,"0");
			ОлС.Параметры.Наименование=ВыборкаДетальныеЗаписи.Наименование;
			Табл.Вывести(ОЛС);
		КонецЕсли;
			
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьXLSДЛяЗагрузиВСБИС(Команда)
	Табл=Новый ТабличныйДокумент;
	СохранитьXLSДЛяЗагрузиВСБНаСервере(Табл);
	
	ДиалогФыбораФайла= НОвый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогФыбораФайла.Заголовок="Выберите файл для сохранения xls" ;
	ДиалогФыбораФайла.Фильтр="Файл xls (*.xls)|*.xls";
	ДиалогФыбораФайла.ПредварительныйПросмотр		=	Ложь;
	ДиалогФыбораФайла.Расширение					=	"xls";
	ДиалогФыбораФайла.ИндексФильтра					=	0;
	ДиалогФыбораФайла.ПолноеИмяФайла				=	"";
	ДиалогФыбораФайла.ПроверятьСуществованиеФайла	=	Истина;
	
	Подразделение=НеопределенО;
	ДиалогФыбораФайла.Показать(Новый ОписаниеОповещения("ВыборФайлаСохранить",ЭтаФорма,Табл));

	
	
КонецПроцедуры

	
&наКлиенте
Процедура ВыборФайлаСохранить(ВыборЗагрExcel,РР) Экспорт
	Если ЗначениеЗАполнено(ВыборЗагрExcel)
		И ВыборЗагрExcel.Количество()>0  тогда
	
		ИмяФ=ВыборЗагрExcel[0];
		РР.НачатьЗапись(,ИмяФ,ТипФайлаТабличногоДокумента.XLS);
		//РР.НачатьЗапись(,Сред(ИмяФ,1,СтрДлина(ИмяФ)-1),ТипФайлаТабличногоДокумента.XLS)
		
	КонецЕсли
	
КонецПроцедуры


&НаКлиенте
Процедура ЗарегестрироватьЦРПТОстатокБелье(Команда)
	// Вставить содержимое обработчика.
	СозданиеОстатковПоПродукциям("Белье",Ложь,Неопределено)  ;
	Элементы.Список.Обновить();;
КонецПроцедуры


&НаКлиенте
Процедура ЗарегестрироватьЦРПТОстатокОдежда(Команда)
	// Вставить содержимое обработчика.
	
	СозданиеОстатковПоПродукциям("Одежда",Ложь,Неопределено)  ;
	Элементы.Список.Обновить();;
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьПродукциюПоКМДляВыделеных(Команда)
	// Вставить содержимое обработчика.
	Для Каждого Стр_1 Из Элементы.Список.ВыделенныеСтроки Цикл
		Форм=ПолучитьФорму("Справочник.Продукция_ХамелеонЦРПТ.Форма.ФормаЭлемента", Новый Структура("Ключ",Стр_1));
		Форм.ОбновитьПродукциюПоКМ(Команда)
	Конеццикла;
	Элементы.Список.Обновить();
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьПроудкциюПоGTINВыделенные(Команда)
		Для Каждого Стр_1 Из Элементы.Список.ВыделенныеСтроки Цикл
		Форм=ПолучитьФорму("Справочник.Продукция_ХамелеонЦРПТ.Форма.ФормаЭлемента", Новый Структура("Ключ",Стр_1));
		Форм.ОбновитьПродукцияюПоGTIN(Команда)
	Конеццикла;
	Элементы.Список.Обновить();

КонецПроцедуры


Функция ВернутьМ()
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	             МассивКМ=Новый массив;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Продукция_ХамелеонЦРПТ.Ссылка,
		|	Продукция_ХамелеонЦРПТ.Наименование,
		|	Продукция_ХамелеонЦРПТ.GTIN
		|ИЗ
		|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
		|ГДЕ
		|	Продукция_ХамелеонЦРПТ.GTIN <> 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Попытка
			//Ссылк=ВыборкаДетальныеЗаписи.Ссылка;
			Если Число(ВыборкаДетальныеЗаписи.Наименование)=Число(ВыборкаДетальныеЗаписи.GTIN) Тогда
				МассивКМ.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
				
			КонецЕсли;
		Исключение
		КонецПопытки;
		
	КонецЦикла;
	Возврат МассивКМ
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

Конецфункции

&НаКлиенте
Процедура ОббновитьИнформациюПоКМ(Команда)
	ВернутьМ=ВернутьМ();
	Для Каждого Стр_1 Из ВернутьМ Цикл
		Форм=ПолучитьФорму("Справочник.Продукция_ХамелеонЦРПТ.Форма.ФормаЭлемента", Новый Структура("Ключ",Стр_1));
		Форм.ОбновитьПродукцияюПоGTIN(Команда)
	Конеццикла;
	Элементы.Список.Обновить();
	
	//ОббновитьИнформациюПоКМНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура РедактироватьКарточки(Команда)
	// Вставить содержимое обработчика.
	Для Каждого Стр_1 Из Элементы.Список.ВыделенныеСтроки   Цикл
		Форм=ПолучитьФорму("Справочник.Продукция_ХамелеонЦРПТ.Форма.ФормаЭлемента",Новый структура("Ключ",Стр_1));
		Форм.ЗарегистрироватьВКаталогеТоваров(Команда);
	Конеццикла
КонецПроцедуры


&НаКлиенте
Процедура ОтправитьнаМодерацию(Команда)
	// Вставить содержимое обработчика.
	Для Каждого Стр_1 Из Элементы.Список.ВыделенныеСтроки   Цикл
		Форм=ПолучитьФорму("Справочник.Продукция_ХамелеонЦРПТ.Форма.ФормаЭлемента",Новый структура("Ключ",Стр_1));
		Форм.ОтправитьНаМодерацию(Команда);
	Конеццикла
	
КонецПроцедуры


&НаКлиенте
Процедура ПописатьИОпубликовать(Команда)
	// Вставить содержимое обработчика.
	Для Каждого Стр_1 Из Элементы.Список.ВыделенныеСтроки   Цикл
		Форм=ПолучитьФорму("Справочник.Продукция_ХамелеонЦРПТ.Форма.ФормаЭлемента",Новый структура("Ключ",Стр_1));
		Форм.ПодписатьИОпубликовать(Команда);
	Конеццикла
	
КонецПроцедуры


&НаКлиенте
Процедура ОтчетОДвжиенииПоВыделенным(Команда)
		МассивКМ=Новый СписокЗначений;
	Для Каждого Стр Из Элементы.Список.ВыделенныеСтроки Цикл
		Если ЗначениеЗаполненО(Стр) Тогда
			МассивКМ.Добавить(Стр);
		КонецЕсли;
		
	Конеццикла;
	
	Форм=ОткрытьФорму("Отчет.ОтчетПоКМ_ХамелеонЦРПТ.Форма.ФормаОтчета");
	Форм.ПрименитьОтбор(МассивКМ);
	

КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьПродукциюИзНК(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	ЗагрузитьИЗНКНаклиенте(Ложь)
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьПродукцияСТАкимГТИН(ГТИН)
	Попытка
		Возврат ЗначениеЗаполнено(Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(ГТИН)))
	Исключение
		Возврат Ложь;
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура ЗагрузитьИЗНКНаклиенте(ТолькоНовые=Ложь)
	
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если НЕ Форм.Открыта() Тогда
		Форм.Открыть(); 
	КонецЕсли;
	
		Thumbprint_1=ПолучитьИзПользователя(Форм.Пользователь);
//	Если Не ЗначениеЗаполнено(объект.GTIN) тогда
//		Возврат;
//	КонецЕслИ;	
	
	
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
	
	
	
	crsfToken="";
	Срегистра="";
	Куки="";
	
	Если ПодключилисьОк(Thumbprint_1,crsfToken,Срегистра,Куки,HTTPСервисЗапрос) Тогда
		
		Попытка
		Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
		
		Тотал=10000;
		Страница=0;
		Пока Истина Цикл
			
			Если Страница*100>=Тотал Тогда
				Прервать;
			КонецЕсли;
			
			Страница=Страница+1;
		
			Тело=Запрос_1(Страница);
			
			
				
				
				HTTPЗапрос=Новый HTTPЗапрос("rest/goods/list");
				
		HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
								
						
			//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			//HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
			HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
			
			HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
			HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
			HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
	//		HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			
			HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
			//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
			HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
			HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
			HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
		
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		
			//	
			//	
			//	HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			//			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			//			
			//HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			//		
			//		HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
			//	
			//HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
			//				
			//	
			//	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
				#Если ВебКлиент Тогда
						HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);	
				#Иначе
						HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);	
				#КонецЕсли
				Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
				NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
				
				Тотал=NNN.totalObjects;
				
				Для Каждого СтР_1 Из NNN.data Цикл
					
					
					
					Попытка
					goods=Стр_1.goods;
					Если goods=Неопределено Тогда
						goods=Стр_1.draft;
						
						Если ТолькоНовые=Истина тогда
							
							Если ЕстьПродукцияСТАкимГТИН(goods.GTIN) Тогда
								Продолжить;
							Конецесли;
							
						Конецесли;
						
						
						id=                    goods.id;
						
						HTTPЗапрос=Новый HTTPЗапрос("rest/draft/"+Формат(id,"ЧГ="));
						
						HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
						HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
						HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
				
						HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
							
						HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
						//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
						Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
						
						NNN_1=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
						
						
					Иначе
						
						Если ТолькоНовые=Истина тогда
							
							Если ЕстьПродукцияСТАкимГТИН(goods.GTIN) Тогда
								Продолжить;
							Конецесли;
							
						Конецесли;

						id=                    goods.goodId;
						
						HTTPЗапрос=Новый HTTPЗапрос("rest/goods/"+Формат(id,"ЧГ="));
						
						HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
						HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
						HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
				
						HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
							
						HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
						//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
						Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
						
						NNN_1=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
					КонецЕсли;
					
					//Если 	goods.
					Если goods.category="Сигары, сигариллы, сигареты, папиросы" Тогда
						СпрПр=СоздатьПродукциюПоГТИН(goods,NNN_1,ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак"),ТолькоНовые);
					ИначеЕсли goods.category="Табак" Тогда
						СпрПр=СоздатьПродукциюПоГТИН(goods,NNN_1,ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Табак"),ТолькоНовые);
					Иначе
						СпрПр=СоздатьПродукциюПоГТИН(goods,NNN_1,,ТолькоНовые);
						
					КонецЕслИ;
					
					Если ЗначениеЗаполнено(СпрПр) Тогда
						Форм=ПолучитьФорму("Справочник.Продукция_ХамелеонЦРПТ.Форма.ФормаЭлемента",
						Новый Структура("Ключ",СпрПр));
						
						        	Форм.ОбновитьтипПродукции(NNN_1);
												
												Если ЗначениеЗаполнено(Форм.Объект.Тип) тогда
												
													Форм.ОбновляемВсеДанныеНаСервере(NNN_1);
													Форм.Записать();
												КонецЕсли;
							//				
							//Если NNN.data[0].draft<>Неопределено Тогда
							//					id=                    NNN.data[0].draft.id;
							//					
							//					HTTPЗапрос=Новый HTTPЗапрос("rest/draft/"+Формат(id,"ЧГ="));
							//					
							//					HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
							//					HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
							//					HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
							//			
							//					HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
							//						
							//					HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
							//					//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
							//					Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
							//					
							//					NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
							//					Форм.ОбновитьтипПродукции(NNN);
							//					
							//					Если ЗначениеЗаполнено(Форм.Объект.Тип) тогда
							//					
							//						Форм.ОбновляемВсеДанныеНаСервере(NNN);
							//						Форм.Записать();
							//					КонецЕсли;
							//					
							//					
							//				Иначе
							//					id=                    NNN.data[0].goods.goodId;
							//					
							//					HTTPЗапрос=Новый HTTPЗапрос("rest/goods/"+Формат(id,"ЧГ="));
							//					
							//					HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
							//					HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
							//					HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
							//			
							//					HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
							//						
							//					HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
							//					//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
							//					Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
							//					
							//					NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
							//					Форм.ОбновитьтипПродукции(NNN);
							//					
							//					Если ЗначениеЗаполнено(Форм.Объект.Тип) тогда
							//					
							//						Форм.ОбновляемВсеДанныеНаСервере(NNN);
							//					КонецЕсли;
							//					
							//				КонецЕсли;
						
						//Форм.ОбновитьтипПродукции(NNN);
						//Если ЗначениеЗаполнено(Форм.Объект.Тип) тогда
						//	Форм.ОбновляемВсеДанныеНаСервере(NNN);
						//	Форм.Записать();
						//КонецЕсли;
					  	
					
					КонецЕсли;
					Исключение
					КонецПопытки;
					
				Конеццикла;
				
				//Возврат;
		Конеццикла;
		
	Исключение
		
	КонецПопытки;
	КонецЕсли;

	
	Элементы.Список.Обновить();;
	
КонецПроцедуры

Функция СоздатьПродукциюПоГТИН(ГООДС,NNN,Тип=Неопределено,ТолькоНовые)
	
	
	
	
	ГТИН=ГООДС.gtin;
	
	
	
	
	
	СпрПр=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("gtin",Число(ГТИН));
	Если ЗначениеЗаполнено(СпрПр) тогда
		Если ТолькоНовые=Истина Тогда
			Возврат Неопределено
		КонецЕсли;
		СпрПр=СпрПр.ПолучитьОбъект();
	Иначе
		СпрПр=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
	КонецЕсли;
	СпрПр.GTIN=Число(ГТИН);
	Если ЗначениеЗаполнено(Тип) Тогда
		СпрПр.Тип=Тип;//Перечисления.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак;
	КонецЕсли;
	ГООДС.Свойство("brand",СпрПр.БрендТорговаяМарка);
	Если ГООДС.Свойство("name",СпрПр.Наименование) ТОгда
		Спрпр.НаименованиеТовара=ГООДС.name;
	КонецЕсли;
	Для Каждого Стр_1 Из NNN.categories Цикл
		Если Стр_1.classifier="tnved" Тогда
			ТНВЭД=СокрЛП(Сред(Стр_1.categoryName,1,Найти(Стр_1.categoryName," ")-1));
			Если СтрДлина(ТНВЭД)>=10 Тогда
				Спрпр.КодТНВЭД=Справочники.КодТНВЭД_ХамелеонЦРПТ.НайтиПоКоду(ТНВЭД);
				Если не ЗначениеЗаполнено(Спрпр.КодТНВЭД) Тогда
					ТнвЭД=Справочники.КодТНВЭД_ХамелеонЦРПТ.СоздатьЭлемент();
					ТнвЭД.Код=ТНВЭД;
					ТнвЭД.Наименование=ТНВЭД;
					ТнвЭД.Записать();
					СпрПр.КодТНВЭД=ТнвЭД.Ссылка;
				КонецЕсли;
			Иначе
				СпрПр.КодТНВЭДКороткий=ТНВЭД;
			КонецЕсли;
			
			
		КонецЕсли;
	Конеццикла;
	
	//СпрПр.КодТНВЭД=NNN.
	
	СпрПр.Записать();	
	
	
	Возврат СпрПр.Ссылка
КонецФункции

Функция Запрос_1(Страница)
	
	Возврат "{""pageSize"":100,""pageNumber"":"+xmlString(Страница)+",""sort"":{""field"":""created"",""direction"":""DESC""},""fields"":[""photo"",""created"",""gtin"",""name"",""category"",""packages"",""brand"",""status"",""categories""],""filter"":{}}";
КонецФункции
	
&НаКлиенте
Функция ПодключилисьОк(Thumbprint_1,CSRFДляНК,Срегистра,КукиДляНК,HTTPСервисЗапрос)
	
	Возврат ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ПодключилисьОк(Thumbprint_1,CSRFДляНК,Срегистра,КукиДляНК,HTTPСервисЗапрос)	
КонецФункции


Функция Запрос_Архив(Страница)
	
	Возврат "{""pageSize"":10,""pageNumber"":"+xmlString(Страница)+",""sort"":{""field"":""created"",""direction"":""DESC""},""fields"":[""photo"",""created"",""gtin"",""name"",""category"",""packages"",""brand"",""status"",""categories""],""filter"":{""status"":""archive""}}";
КонецФункции
	

&НаКлиенте
Процедура ОновитьКарточкиВАрхиве(Команда)
	// Вставить содержимое обработчика.
Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если НЕ Форм.Открыта() Тогда
		Форм.Открыть(); 
	КонецЕсли;
	
		Thumbprint_1=ПолучитьИзПользователя(Форм.Пользователь);
//	Если Не ЗначениеЗаполнено(объект.GTIN) тогда
//		Возврат;
//	КонецЕслИ;	
	
	
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
	
	
	
	crsfToken="";
	Срегистра="";
	Куки="";
	
	Если ПодключилисьОк(Thumbprint_1,crsfToken,Срегистра,Куки,HTTPСервисЗапрос) Тогда
		
		Попытка
		Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
		
		Тотал=100;
		Страница=0;
		Пока Истина Цикл
			
			Если Страница*10>=Тотал Тогда
				Прервать;
			КонецЕсли;
			
			Страница=Страница+1;
		
			Тело=Запрос_Архив(Страница);
			
			
				
				
				HTTPЗапрос=Новый HTTPЗапрос("rest/goods/list");
				
		HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
								
						
			//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			//HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
			HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
			
			HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
			HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
			HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
	//		HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			
			HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
			//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
			HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
			HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
			HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
		
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		
			//	
			//	
			//	HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			//			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			//			
			//HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			//		
			//		HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
			//	
			//HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
			//				
			//	
			//	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
				#Если ВебКлиент Тогда
						HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);	
				#Иначе
						HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);	
				#КонецЕсли
				Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
				NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
				
				Тотал=NNN.totalObjects;
				
				Для Каждого СтР_1 Из NNN.data Цикл
					//Попытка
					goods=Стр_1.goods;
					Если goods=Неопределено Тогда
						goods=Стр_1.draft;
						
						//ОбновитьСтатусПоGTINВархив(goods.gtin);
						
				КонецЕсли;
					ОбновитьСтатусПоGTINВархив(goods.gtin)
	
					//Если 	goods.
					
				Конеццикла;
				
				//Возврат;
		Конеццикла;
		
	Исключение
		
	КонецПопытки;
	КонецЕсли;

	
	Элементы.Список.Обновить();;
	
	
КонецПроцедуры

Процедура ОбновитьСтатусПоGTINВархив(gtin)
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Продукция_ХамелеонЦРПТ.Ссылка
		|ИЗ
		|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
		|ГДЕ
		|	Продукция_ХамелеонЦРПТ.GTIN = &GTIN";
	
	Запрос.УстановитьПараметр("GTIN", число(GTIN));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		ПолОб=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОБъект();
		ПолОб.СтатусКарточки=Перечисления.СтатусыКарточекВНК_ХамелеонЦРПТ.archive;
		ПолОб.Записать();
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	
	
Конецпроцедуры

&НаКлиенте
Процедура ЗагрузитьТолькоНовыеКарточкиИЗНК(Команда)
		ЗагрузитьИЗНКНаклиенте(Истина)

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВыделенныеИзНК(Команда)
	// Вставить содержимое обработчика.
	Для Каждого СтР_1 Из Элементы.Список.ВыделенныеСтроки Цикл
		Форм=ПолучитьФорму("Справочник.Продукция_ХамелеонЦРПТ.Форма.ФормаЭлемента",Новый Структура("Ключ",Стр_1));
		Форм.ОбновитьКарточкуИзНК(Команда);
	Конеццикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзНКПоAPI(Команда)
	// Вставить содержимое обработчика.
	отказ=Истина;
Обр=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	
	Thumbprint_1=ПолучитьИзПользователя(Обр.Пользователь);	
	
	
	Если ЗначениеЗаполнено(Thumbprint_1.КлючAPIККМТ) тогда
		КлючПодключения="apikey="+Thumbprint_1.КлючAPIККМТ;	
	Иначе
		
			СерийныйНомер="";

			СтруктураНастроек=Неопределено;                                                    СерийныйНомер="";
							СРегистра=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьТокенСрегистра(Thumbprint_1.Thumbprint_1,СтруктураНастроек);
									СерийныйНомер=СтруктураНастроек.СерийныйНомер;
							
								Если Не ЗначениеЗаполнено(СРегистра)  Тогда
									СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
								Иначе
								   
										Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
											Прокси=Новый ИнтернетПрокси;
											Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
										
											HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
										Иначе
										
											HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
										КонецЕсли;
										
										HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/balance/all");
										HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
										HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
										//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
										///Константин           
										Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
										//Текст1=Ответ.ПолучитьТелоКакСтроку();
										Если Ответ.КодСостояния<>200 Тогда
											СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
										КонецЕсли;
											
								КонецЕсли;
								Если Не ЗначениеЗАполнено(Срегистра) Тогда
									Возврат;
								Конецесли;
		КлючПодключения="";	
		
		
	Конецесли;
	
	
	
	
	//Тотал=1;
	Смещение=0;
	Пока Истина Цикл
	
		Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
				
				
			//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайтAPI,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
			///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайтAPI,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
			
			Если значениеЗаполнено(КлючПодключения ) тогда
				Если Смещение=0 Тогда
					ЗапросТекст="v3/linked-gtins?apikey="+Thumbprint_1.КлючAPIККМТ+"&limit=1000&offset="+"0";
				Иначе
					ЗапросТекст="v3/linked-gtins?apikey="+Thumbprint_1.КлючAPIККМТ+"&limit=1000&offset="+Формат(Смещение,"ЧГ=");
				Конецесли;
				
				
					HTTPЗапрос=Новый HTTPЗапрос(ЗапросТекст);
				//Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
				//HTTPЗапрос=Новый HTTPЗапрос("v3/linked-gtins?"+КлючПодключения );
			Иначе
				Если Смещение=0 Тогда
					
					ЗапросТекст="v3/linked-gtins?limit=1000&offset="+"0";
				иначе			
					ЗапросТекст="v3/linked-gtins?limit=1000&offset="+Формат(Смещение,"ЧГ=");
				конецесли;
						HTTPЗапрос=Новый HTTPЗапрос(ЗапросТекст );
					HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
						
						
	Конецесли;
	
					Пока Истина Цикл
						Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
						Если Ответ.КодСостояния=429 Тогда
							ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(60);
						Иначе
							Прервать;
						Конецесли;
					Конеццикла;

				Если Ответ.КодСостояния<>200 Тогда
					ПоказатьПредупреждение(,"Не смогли получить GTIN с каталога маркированных товаров "+Ответ.ПолучитьТелоКакСтроку());
					Сообщить(Ответ.ПолучитьТелоКакСтроку());
					Возврат;
				КонецЕсли;
				
				NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON_Соответствие(Ответ.ПолучитьТелоКакСтроку());
				
				Для Каждого Стр_1 Из NNN["result"]["linked_gtins"]   Цикл
					
					ГТИН=Стр_1["gtin"];
					
					
				Если значениеЗаполнено(КлючПодключения ) тогда
					//HTTPЗапрос=Новый HTTPЗапрос("v3/linked-gtins?apikey="+Thumbprint_1.КлючAPIККМТ+"&limit=20" );
					HTTPЗапрос=Новый HTTPЗапрос("v3/product?apikey="+Thumbprint_1.КлючAPIККМТ+"&gtin="+ГТИН);
				//Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
				//HTTPЗапрос=Новый HTTPЗапрос("v3/linked-gtins?"+КлючПодключения );
			Иначе
					HTTPЗапрос=Новый HTTPЗапрос("v3/product?gtin="+ГТИН);
						//HTTPЗапрос=Новый HTTPЗапрос("v3/linked-gtins" );
					HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
						
						
					Конецесли;
		
					
					Пока Истина Цикл
						Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
						Если Ответ.КодСостояния=429 Тогда
							ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(60);
						Иначе
							Прервать;
						Конецесли;
					Конеццикла;
					
					//Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
					Если Ответ.КодСостояния<>200 Тогда
						Сообщить("Не удалось загрузить ГТИН "+ГТИН );
						Сообщить(Ответ.ПолучитьТелоКакСтроку());
						Продолжить;
					КонецЕсли;
					NNN_1=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
					
					Для каждого Стр_1 Из NNN_1.result Цикл
						
						ЗаписатьКарточкуТовара(Стр_1,ГТИН);
						
						
					Конеццикла;
					
					
				Конеццикла;
				Если   NNN["result"]["linked_gtins"].Количество()<1000 Тогда
					Прервать;
				Конецесли;
				Смещение=Смещение+1000;
	Конеццикла;	
		
		
	Элементы.Список.Обновить();
	
		
	
КонецПроцедуры


Процедура ЗаписатьКарточкуТовара(Стр_1,ГТИН )
	спрПр=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(ГТИН));
	Если ЗначениеЗаполнено(СпрПр) Тогда
		СпрПр=СпрПр.ПолучитьОбъект();
	Иначе
		СпрПр=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
		СПрПр.GTIN=Число(ГТИН)
	КонецеслИ;
	
	Если ЗначениеЗАполненО(СПрПр.ДополнительныйРеквизитОбщиеНК) Тогда
		ДополнительныйРеквизитОбщиеНК=СПрПр.ДополнительныйРеквизитОбщиеНК.ПолучитьОбъект();
	Иначе
		ДополнительныйРеквизитОбщиеНК=Справочники.ДополинтельныеРеквизиты_ДругиеНК_ХамелеонЦРПТ.СоздатьЭлемент();
	КонецЕсли;
	ДополнительныйРеквизитОбщиеНК.Изготовители.Очистить();
	
	
	
	Стр_1.Свойство("good_name",СпрПр.НаименованиеТовара);
	СпрПр.Наименование=СпрПр.НаименованиеТовара;
	стр_1.Свойство("brand_name",СпрПр.БрендТорговаяМарка);
	//стр_1.Свойство("brand_name",СпрПр.БрендТорговаяМарка);
	
	Сет=неопределено;
	Если стр_1.Свойство("is_Set",Сет) тогда
		Если Сет=Истина Тогда
			СпрПр.ТипУпаковки=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.НайтиПоНаименованию("SET");
			Если Не ЗначениеЗаполнено(СпрПр.ТипУпаковки) Тогда
				
				СпрТип=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.СоздатьЭлемент();
				СпрТип.Наименование="SET";
				СпрТип.Записать();
				СпрПр.ТипУпаковки=СпРТип.Ссылка;
				
			Конецесли;
			
		Конецесли;
		
	Конецесли;
	
	Сет=Неопределено;
	Если Стр_1.Свойство("is_Kit",Сет) тогда
		Если Сет=Истина Тогда
			СпрПр.ТипУпаковки=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.НайтиПоНаименованию("BUNDLE");
			Если Не ЗначениеЗаполнено(СпрПр.ТипУпаковки) Тогда
				
				СпрТип=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.СоздатьЭлемент();
				СпрТип.Наименование="BUNDLE";
				СпрТип.Записать();
				СпрПр.ТипУпаковки=СпРТип.Ссылка;
				
			Конецесли;
		Конецесли;
		
	Конецесли;
	
	
	Статус="";
	
	Если Стр_1.Свойство("good_status",Статус) Тогда
		Попытка
			СпрПр.СтатусКарточки=Перечисления.СтатусыКарточекВНК_ХамелеонЦРПТ[Статус]
		Исключение
		КонецПопытки;
	Конецесли;
	Для Каждого Стр_2 Из Стр_1.good_attrs Цикл
		Если Стр_2.attr_name="Группа ТНВЭД" Тогда
			СпрПр.КодТНВЭДКороткий=Стр_2.attr_value;
		ИначеЕсли Стр_2.attr_name="Код ТНВЭД" Тогда
			СпрПр.КодТНВЭД=Обработки._Запуск_ХамелеонЦРПТ.КодТВЭДПоКОду(Стр_2.attr_value);
		ИначеЕсли Стр_2.attr_name="Товарный знак" Тогда
			СпрПр.БрендТорговаяМарка=Стр_2.attr_value;
		ИначеЕсли Стр_2.attr_name="Размер в штихмассовой системе" Тогда
			СпрПр.Размер=Обработки._Запуск_ХамелеонЦРПТ.РазмерСправочник(Стр_2.attr_value);
		ИначеЕсли Стр_2.attr_name="Цвет" Тогда
			СпрПр.Цвет=Стр_2.attr_value;
			
		ИначеЕсли Стр_2.attr_name="Модель / артикул производителя" Тогда
			СпрПр.МодельПроизводителяАртикул=Стр_2.attr_value;
			
		ИначеЕсли Стр_2.attr_name="Производитель" Тогда
			ДополнительныйРеквизитОбщиеНК.Производитель=Стр_2.attr_value;
		ИначеЕсли Стр_2.attr_name="Импортер" Тогда
			ДополнительныйРеквизитОбщиеНК.Импортер=Стр_2.attr_value;
		ИначеЕсли Стр_2.attr_name="Изготовитель / Производственная площадка" Тогда
			Если ЗначениеЗаполнено(Стр_2.attr_value) Тогда
				Добав=ДополнительныйРеквизитОбщиеНК.Изготовители.Добавить();
				Добав.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",Стр_2.attr_value_type);
				Добав.Изготовитель=Стр_2.attr_value;
			КонецЕсли;
			//ДополнительныйРеквизитОбщиеНК.Импортер=Стр_2.value;
		КонецЕсли;
			
		//ИначеЕсли Стр_2.attr_name="Размер одежды" Тогда
		//	
		//	Если ЗначениеЗАполнено(СпрПр.ДополнительныеРеквизитОдежда) Тогда
		//		ДопРекв=СпрПр.ДополнительныеРеквизитОдежда.ПолучитьОбъект();
		//	Иначе
		//		ДопРекв=Справочники.ДополнительныеРеквизиты_ПредметыОдежды_ХамелеонЦРПТ.СоздатьЭлемент();
		//	КонецЕсли;
		//	ДопРекв.РазмерВИныхСистемахИзмерения=Стр_2.attr_value
			//СпрПр.БрендТорговаяМарка=Стр_2.attr_value;
		//КонецеслИ;
	Конеццикла;
	ДополнительныйРеквизитОбщиеНК.Записать();
	СпрПр.ДополнительныйРеквизитОбщиеНК=ДополнительныйРеквизитОбщиеНК.Ссылка;
	
	СпрПр.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзНКПоAPI_GTIN(Команда)
	// Вставить содержимое обработчика.
	Форм=ОткрытьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.ВводСтроки",,,,,,Новый ОПисаниеОповещения("ВводГТИН",ЭтаФорма),РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	Форм.Заголовок="Укажите ГТИН карточки для загрузки из ЦРПТ";
	//Форм.Заголовок="Аннулирование транзакций";
	Форм.Строка="";
КонецПроцедуры

&НаКлиенте
Процедура ВводГТИН(РР,ДД) Экспорт
	
	Если ЗначениеЗАполнено(РР) Тогда
		        ГТИН=РР;
				
			Обр=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
				
				Thumbprint_1=ПолучитьИзПользователя(Обр.Пользователь);	
				
				
				Если ЗначениеЗаполнено(Thumbprint_1.КлючAPIККМТ) тогда
					КлючПодключения="apikey="+Thumbprint_1.КлючAPIККМТ;	
				Иначе
					
						СерийныйНомер="";

						СтруктураНастроек=Неопределено;                                                    СерийныйНомер="";
										СРегистра=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьТокенСрегистра(Thumbprint_1.Thumbprint_1,СтруктураНастроек);
												СерийныйНомер=СтруктураНастроек.СерийныйНомер;
										
											Если Не ЗначениеЗаполнено(СРегистра)  Тогда
												СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
											Иначе
											   
													Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
														Прокси=Новый ИнтернетПрокси;
														Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
													
														HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
													Иначе
													
														HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
													КонецЕсли;
													
													HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/balance/all");
													HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
													HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
													//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
													///Константин           
													Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
													//Текст1=Ответ.ПолучитьТелоКакСтроку();
													Если Ответ.КодСостояния<>200 Тогда
														СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
													КонецЕсли;
														
											КонецЕсли;
											Если Не ЗначениеЗАполнено(Срегистра) Тогда
												Возврат;
											Конецесли;
					КлючПодключения="";	
					
					
				Конецесли;
				
				Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
					Прокси=Новый ИнтернетПрокси;
					Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
					
					
				//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайтAPI,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				Иначе
				///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
					//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайтAPI,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				КонецЕсли;


				
				
				Если значениеЗаполнено(КлючПодключения ) тогда
					//HTTPЗапрос=Новый HTTPЗапрос("v3/linked-gtins?apikey="+Thumbprint_1.КлючAPIККМТ+"&limit=20" );
					HTTPЗапрос=Новый HTTPЗапрос("v3/product?apikey="+Thumbprint_1.КлючAPIККМТ+"&gtin="+ГТИН);
				//Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
				//HTTPЗапрос=Новый HTTPЗапрос("v3/linked-gtins?"+КлючПодключения );
			Иначе
					HTTPЗапрос=Новый HTTPЗапрос("v3/product?gtin="+ГТИН);
						//HTTPЗапрос=Новый HTTPЗапрос("v3/linked-gtins" );
					HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
						
						
					Конецесли;
		
					
					Пока Истина Цикл
						Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
						Если Ответ.КодСостояния=429 Тогда
							ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(60);
						Иначе
							Прервать;
						Конецесли;
					Конеццикла;
					Если Ответ.КодСостояния<>200 Тогда
						Сообщить("Не удалось загрузить ГТИН "+ГТИН );
						Сообщить(Ответ.ПолучитьТелоКакСтроку());
						Возврат;
					КонецЕсли;
					NNN_1=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
					
					Попытка
					Для каждого Стр_1 Из NNN_1.result Цикл
						
						ЗаписатьКарточкуТовара(Стр_1,ГТИН);
						
						
					Конеццикла;
				Исключение
					КонецПопытки;
					
				//Конеццикла;
		
	Конецесли;
	
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьКарточкиПоAPI(Команда)
	// Вставить содержимое обработчика.
	СписокПродукцией=Новый Массив;
	Для Каждого Стр Из Элементы.Список.ВыделенныеСтроки Цикл
		СписокПродукцией.Добавить(Новый Структура("ГТИН,Текст",Стр,""));
	Конеццикла;
	
	ВернемБезГТИНов=ВернемБезГТИНов(СписокПродукцией);
	
	Обр=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	
	
	Откытааа=Ложь;
	Если НЕ Обр.Открыта() Тогда
		Откытааа=Истина;
		Обр.Открыть();
		
	Конецесли;
	Пользователь=Обр.Пользователь;
	
	Thumbprint_1=ПолучитьИзПользователя(Пользователь);
	
	
	Если Откытааа Тогда
		Обр.Закрыть()
	Конецесли;
	
	
	
	Если ЗначениеЗаполнено(Thumbprint_1.КлючAPIККМТ) тогда
		КлючПодключения="apikey="+Thumbprint_1.КлючAPIККМТ;	
	Иначе
		
			СерийныйНомер="";

			СтруктураНастроек=Неопределено;                                                    СерийныйНомер="";
							СРегистра=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьТокенСрегистра(Thumbprint_1.Thumbprint_1,СтруктураНастроек);
									СерийныйНомер=СтруктураНастроек.СерийныйНомер;
							
								Если Не ЗначениеЗаполнено(СРегистра)  Тогда
									СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
								Иначе
								   
										Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
											Прокси=Новый ИнтернетПрокси;
											Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
										
											HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
										Иначе
										
											HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
										КонецЕсли;
										
										HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/balance/all");
										HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
										HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
										//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
										///Константин           
										Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
										//Текст1=Ответ.ПолучитьТелоКакСтроку();
										Если Ответ.КодСостояния<>200 Тогда
											СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
										КонецЕсли;
											
								КонецЕсли;
								Если Не ЗначениеЗАполнено(Срегистра) Тогда
									Возврат;
								Конецесли;
		КлючПодключения="";	
		
		
	Конецесли;
	
	
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайтAPI,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайтAPI,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
			

	Если ВернемБезГТИНов.Количество()>0 Тогда
		
		Если значениеЗаполнено(КлючПодключения ) тогда
			
			ЗапросТекст="v3/generate-gtins?apikey="+Thumbprint_1.КлючAPIККМТ+"&quantity="+Формат(ВернемБезГТИНов.Количество(),"ЧГ=");
			HTTPЗапрос=Новый HTTPЗапрос(ЗапросТекст);
		Иначе
			ЗапросТекст="v3/generate-gtins?quantity="+Формат(ВернемБезГТИНов.Количество(),"ЧГ=");
			HTTPЗапрос=Новый HTTPЗапрос(ЗапросТекст );
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
		Конецесли;
		Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
		Если Ответ.КодСостояния=200 Тогда
			NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON_Соответствие(Ответ.ПолучитьТелоКакСтроку());
			Если NNN["result"]<>Неопределено И NNN["result"]["drafts"]<>Неопределено И NNN["result"]["drafts"].Количество()>0 Тогда
				ЗаполнимГТИНАМИ(ВернемБезГТИНов,NNN["result"]["drafts"]);
			ИначеЕсли NNN["result"]<>Неопределено И NNN["result"]["error"]<>Неопределено Тогда
				Сообщить("Не удалось полуить ГТИНы "+NNN["result"]["error"]);
			Иначе
				
				Сообщить("Не удалось полуить ГТИНы "+Ответ.ПолучитьТелоКакСтроку());
			Конецесли;
		Конецесли;
		
	Конецесли;
	
	
	////СНАЧАЛА РЕГИСТРУЕМ ГТИН!!!
	ВернемДляРегистрацииЧерновика=ВернемДляРегистрацииЧерновика(СписокПродукцией);
	
	Для каждого Стр_111 Из ВернемДляРегистрацииЧерновика Цикл
		Если значениеЗаполнено(КлючПодключения ) тогда
			ЗапросТекст="v3/feed-product?apikey="+Thumbprint_1.КлючAPIККМТ+"&gtin="+Формат(Стр_111,"ЧГ=");
			HTTPЗапрос=Новый HTTPЗапрос(ЗапросТекст);
		Иначе
			ЗапросТекст="v3/feed-product?gtin="+Формат(Стр_111,"ЧГ=");
			HTTPЗапрос=Новый HTTPЗапрос(ЗапросТекст );
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
		Конецесли;
		Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
		Если Ответ.КодСостояния=200 Тогда
			NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON_Соответствие(Ответ.ПолучитьТелоКакСтроку());
			Если NNN["result"]<>Неопределено И NNN["result"].Количество()>0 Тогда
				
				ЗаписатьГоодИД(NNN["result"][0],Стр_111);
				
			Конецесли;
			//	ЗаполнимГТИНАМИ(ВернемБезГТИНов,NNN["result"]["drafts"]);
			//ИначеЕсли NNN["result"]<>Неопределено И NNN["result"]["error"]<>Неопределено Тогда
			//	Сообщить("Не удалось полуить ГТИНы "+NNN["result"]["error"]);
			//Иначе
				
			//	Сообщить("Не удалось полуить ГТИНы "+Ответ.ПолучитьТелоКакСтроку());
			///Конецесли;
		Конецесли;
		
		
	Конеццикла;
	
	
	СписокДляСозданияКарточек=ВернемДляРегистрацииЧерновика_Элемент(СписокПродукцией);
	
	КоличествоОтправленных=0;
	
	Пока КоличествоОтправленных<СписокДляСозданияКарточек.Количество() Цикл
		
		ВернутьТелоЗапроса=СозданиеЧерновика_МассивAPI(СписокДляСозданияКарточек,МаксимальноеКоличествоДляОтправкиВНКПоAPI,КоличествоОтправленных);
		
		Если значениеЗаполнено(КлючПодключения ) тогда
			ЗапросТекст="v3/feed?apikey="+Thumbprint_1.КлючAPIККМТ;
			HTTPЗапрос=Новый HTTPЗапрос(ЗапросТекст);
		Иначе
			ЗапросТекст="v3/feed";
			HTTPЗапрос=Новый HTTPЗапрос(ЗапросТекст );
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
		Конецесли;
		
		HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(ВернутьТелоЗапроса,КодировкаТекста.UTF8);	
		#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(ВернутьТелоЗапроса,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);	
		#КонецЕсли
		Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
		Если Ответ.КодСостояния=200 Тогда
			Сообщить("Продукция отправлена в НК успешно. Ждем обработки.");
		Иначе
			Сообщить("Не удалось создать продукцию в НК "+Ответ.ПолучитьТелоКакСтроку());
			
		конецесли;
		
		
		//Смещение=Смещение+;
	Конеццикла;
	
	
	
	
	
	ТипыПродукций=Новый Массив;
	СписокДляСозданияКарточек=ВернемДляРегистрацииПродукции_Элемент(СписокПродукцией,ТипыПродукций);
	
	Текстсы.Очистить();
	Для Каждого Стр_11 Из ТипыПродукций Цикл
		
		Если значениеЗаполнено(КлючПодключения ) тогда
			ЗапросТекст="v3/attributes?apikey="+Thumbprint_1.КлючAPIККМТ+"&tnved="+Стр_11.feed_id;
			HTTPЗапрос=Новый HTTPЗапрос(ЗапросТекст);
		Иначе
			ЗапросТекст="v3/attributes?tnved="+Стр_11.feed_id;
			HTTPЗапрос=Новый HTTPЗапрос(ЗапросТекст );
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
		Конецесли;
		Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
		Если Ответ.КодСостояния=200 Тогда
			
			Добав=Текстсы.Добавить();
			Добав.ТипПродукции=Стр_11.Тип;
			Добав.ТекстJSON=Ответ.ПолучитьТелоКакСтроку();
			
			//NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON_Соответствие(Ответ.ПолучитьТелоКакСтроку());
			//Если NNN["result"]<>Неопределено И NNN["result"].Количество()>0 Тогда
				
				//ЗаписатьГоодИД(NNN["result"][0],Стр_111);
				
			//Конецесли;
			//	ЗаполнимГТИНАМИ(ВернемБезГТИНов,NNN["result"]["drafts"]);
			//ИначеЕсли NNN["result"]<>Неопределено И NNN["result"]["error"]<>Неопределено Тогда
			//	Сообщить("Не удалось полуить ГТИНы "+NNN["result"]["error"]);
			//Иначе
				
			//	Сообщить("Не удалось полуить ГТИНы "+Ответ.ПолучитьТелоКакСтроку());
			///Конецесли;
		Конецесли;
		
	
	Конеццикла;
	
	
	
	
	
	КоличествоОтправленных=0;
	
	
	
	Пока КоличествоОтправленных<СписокДляСозданияКарточек.Количество() Цикл
		
		ВернутьТелоЗапроса=СозданиеПродукции_МассивAPI(СписокДляСозданияКарточек,МаксимальноеКоличествоДляОтправкиВНКПоAPI,КоличествоОтправленных);
		
		//Если значениеЗаполнено(КлючПодключения ) тогда
		//	ЗапросТекст="v3/feed?apikey="+Thumbprint_1.КлючAPIККМТ;
		//	HTTPЗапрос=Новый HTTPЗапрос(ЗапросТекст);
		//Иначе
		//	ЗапросТекст="v3/feed";
		//	HTTPЗапрос=Новый HTTPЗапрос(ЗапросТекст );
		//	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
		//Конецесли;
		//
		//HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		//#Если ВебКлиент Тогда
		//		HTTPЗапрос.УстановитьТелоИзСтроки(ВернутьТелоЗапроса,КодировкаТекста.UTF8);	
		//#Иначе
		//		HTTPЗапрос.УстановитьТелоИзСтроки(ВернутьТелоЗапроса,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);	
		//#КонецЕсли
		//Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
		//Если Ответ.КодСостояния=200 Тогда
		//	Сообщить("Продукция отправлена в НК успешно. Ждем обработки.");
		//Иначе
		//	Сообщить("Не удалось создать продукцию в НК "+Ответ.ПолучитьТелоКакСтроку());
		//	
		//конецесли;
		
		
		//Смещение=Смещение+;
	Конеццикла;
	
	
	
	
	
	//Для Каждого Стр_111 Из СписокПродукцией Цикл
		
	//Конеццикла;
	
КонецПроцедуры


&НаСервере
Функция СозданиеПродукции_МассивAPI(СписокДляСозданияКарточек,МаксимальноеКоличествоДляОтправкиВНКПоAPI,КоличествоОтправленных)
	
	КоличествоНадоОтправить=СписокДляСозданияКарточек.Количество()-КоличествоОтправленных;
	Отправим=Мин(КоличествоНадоОтправить,МаксимальноеКоличествоДляОтправкиВНКПоAPI);
	
	
	
	//Чтен=Новый  ЗаписьJSON;
	//Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
	//Чтен.ЗаписатьНачалоМассива();;
	
	
	МассивПродукцийДляОтправки=Новый Массив;
	
	Смещение=КоличествоОтправленных;
	Для Сч=Смещение По Смещение+Отправим-1 Цикл
		
		СтруктураДляОтправки=Новый Структура;
		
		//Чтен.ЗаписатьНачалоОбъекта();;
		GTIN=СписокДляСозданияКарточек[сч];
		
		Текст=Текстсы.НайтиСтроки(Новый Структура("ТипПродукции",Сред(GTIN.КодТНВЭД.Код,1,4)))[0].ТекстJSON;
		
		NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст);
		NNN=NNN.result;
		ДополнительныйРеквизитОбщиеНК=GTIN.ДополнительныйРеквизитОбщиеНК;
		ДополнительныйРеквизитБелье=GTIN.ДополнительныйРеквизитБелье;
		ДополнительныеРеквизитОдежда=GTIN.ДополнительныеРеквизитОдежда;
		ДополнительныйРеквизитВелосипед=GTIN.ДополнительныйРеквизитВелосипед;
		ДополнительныеРеквизитФото=GTIN.ДополнительныеРеквизитФото;
		ДополнительныйРеквизитПарфюм=GTIN.ДополнительныйРеквизитПарфюм;
		ДополнительныеРеквизитыШины=GTIN.ДополнительныеРеквизитыШины;
		ДополнительныеРеквизитВода=GTIN.ДополнительныеРеквизитВода;
		ДополнителныеРеквизитМолоко=GTIN.ДополнителныеРеквизитМолоко;
		ДополнительныйРеквизитОбувь=GTIN.ДополнительныйРеквизитОбувь;
		МассивАтрибутовДляДобавления=Новый Массив;
		
		Объект=GTIN;
		Если ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки.Количество()>0 Тогда
								
								 
//								 СЧ=ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки.Количество()-1;
//								 Пока сч>=0 Цикл
//									 Стр_123123=ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки[сч];
//									 сч=сч-1;
//									 Если БылаУпаковка.Найти(Стр_123123)<>Неопределено Тогда
//										 Продолжить;
//										Конецесли;
//								//Для Каждого Стр_123123 Из  ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки Цикл
//									Стр_Н=Новый Структура;
//									Для Каждого Стр_Стр Из Запишемсюда_Потр Цикл
//										Стр_Н.Вставить(Стр_Стр.Ключ,Неопределено);
//										
//										
//										Если Стр_Стр.Ключ="vghList" тогда
//											 МассивСтруктура=Новый Массив;
//											 
//											 
//											 Для Каждого Стр_М_1 Из Стр_Стр.Значение Цикл
//												 
//												 Стр_М_Структура=Новый Структура;
//												 
//												 Для Каждого Стр_Стр_СтруктураМ Из Стр_М_1 Цикл
//													 
//													 Если Стр_Стр_СтруктураМ.Ключ="value" Тогда
//													    Стр_М_Структура.Вставить(Стр_Стр_СтруктураМ.Ключ,"");
//														Иначе
//													    Стр_М_Структура.Вставить(Стр_Стр_СтруктураМ.Ключ,Стр_Стр_СтруктураМ.Значение);
//										                Конецесли;
//													 
//												Конеццикла;
//												МассивСтруктура.Добавить(Стр_М_Структура);
//												
//											Конеццикла;
//											
//											Стр_Н.vghList=МассивСтруктура;
//										Конецесли;
//										
//										
//									Конеццикла;
//									Стр_Н.disableRequired=Ложь;
//									Стр_Н.disabled=Ложь;
//									Стр_Н.gtinType=1;
//									Стр_Н.multiplier=0;
//									Стр_Н.name="";
//									Стр_Н.unitType=Запишемсюда_Потр.unitType;
//									
//									
//									
//									Если Стр_123123.УровеньУпаковки=ПредопределенноеЗначение("Перечисление.УровниУпаковок_ХамелеонЦРПТ.ГрупповаяПотребительскаяУпаковка") тогда
//										Стр_Н.level="inner-pack";
//									ИначеЕсли Стр_123123.УровеньУпаковки=ПредопределенноеЗначение("Перечисление.УровниУпаковок_ХамелеонЦРПТ.ТранспортнаяУпаковка") тогда
//										Стр_Н.level="box";
//									Иначе
//										Стр_Н.level="";
//									Конецесли;
//									Стр_Н.gtin=Стр_123123.КодТовараУпаковки;
//									Стр_Н.gtinInner=Стр_123123.КодТовараВложенияВУпаковку;
//									
//									Стр_Н.name=Стр_123123.НаименованиеУпаковкиТовара;
//									
//									Если ЗначениеЗаполнено(Стр_123123.КоличествоВложенийВУпаковку) тогда
//										Стр_Н.multiplier=Стр_123123.КоличествоВложенийВУпаковку;
//									Конецесли;
//									
//									Если ЗначениеЗаполнено(Стр_123123.ВесБрутто) тогда
//											Стр_Н.weight=Стр_123123.ВесБрутто;
//										Конецесли;
//										Если ЗначениеЗаполнено(Стр_123123.Высота) тогда
//												Стр_Н.height=Стр_123123.Высота;
//											Конецесли;
//											Если ЗначениеЗАполнено(Стр_123123.Глубина) тогда
//												Стр_Н.length=Стр_123123.Глубина
//											
//											;
//										Конецесли;
//										Если ЗначениеЗаполнено(Стр_123123.РасчетныйОбъем) тогда
//												Стр_Н.capacity=Стр_123123.РасчетныйОбъем;		
//											Конецесли;
//											Если ЗначениеЗАполнено(Стр_123123.Ширина) тогда
//												Стр_Н.width=Стр_123123.Ширина;
//											Конецесли;
//												
//												
//												
//												
//												//////////////////////УПАК
//												Для Каждого Стр_Уп Из Стр_Н.vghList Цикл
//													Если Стр_Уп.name="packageType" Тогда
//														Если ЗначениеЗаполнено(Стр_123123.ТипУпаковки) тогда
//															Стр_Уп.value=Строка(Стр_123123.ТипУпаковки);
//														Конецесли;
//													КонецЕсли;
//													Если Стр_Уп.name="packageMaterial" Тогда
//														Если ЗначениеЗаполнено(Стр_123123.МатериалУпаковки) тогда
//															Стр_Уп.value=Строка(Стр_123123.МатериалУпаковки);
//														Конецесли;
//													КонецЕсли;
//												Конеццикла;

//												NNN.identifier.Добавить(Стр_Н);												
//															
//															
//															//Стр_Н.value=Строка(Стр_.Материал);
//															//Стр_Н.valueType=Формат(Стр_.Процент,"ЧГ=") ;
//															// Стр_1.attributes.Вставить();
////															 МассивТиповМатериалов.Добавить(Стр_Н);

//								    Конеццикла;
								
							Конецесли;
							
							
							
							
							////ПО КАЖДОМУ ТИПУ
							
							
					Если Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Белье") Тогда
							Для Каждого Стр_1 Из NNN Цикл
								
								
								Если Стр_1.attr_group_name="Наименование товара и идентификация" Тогда
										Если Стр_1.attr_name="Количество единиц употребления в потребительской упаковке" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ПотребительскаяУпаковка) Тогда
												
												Структура_добавим=Новый Структура;
												Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
												Структура_добавим.Вставить("attr_value",Формат(ДополнительныйРеквизитБелье.КоличествоВПотребительскойУпаковке,"ЧГ="));
												Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитБелье.ПотребительскаяУпаковка));
												МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												//Стр_а.value=Формат(ДополнительныйРеквизитБелье.КоличествоВПотребительскойУпаковке,"ЧГ=");
												//Стр_а.valueType=Строка(ДополнительныйРеквизитБелье.ПотребительскаяУпаковка)
												
											КонецЕсли;
									 	//ИначеЕсли  Стр_1.attr_name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
									
								ИначеЕсли Стр_1.attr_group_name="Происхождение и бренды" Тогда
										
										Если  Стр_1.attr_name="СТМ" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.СТМ) Тогда
												Структура_добавим=Новый Структура;
												Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
												Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитБелье.СТМ));
												//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитБелье.ПотребительскаяУпаковка));
												МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитБелье.СТМ);
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Модель / артикул производителя" Тогда
											Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул)
												И ДополнительныйРеквизитБелье.ДопМодельАртикулы.Количество()=0 Тогда
												
												
												Структура_добавим=Новый Структура;
												Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
												Структура_добавим.Вставить("attr_value",Объект.МодельПроизводителяАртикул);
												Структура_добавим.Вставить("attr_value_type",Строка("Артикул"));
												МассивАтрибутовДляДобавления.Добавить(Структура_добавим);

												
											КонецЕсли;
											Для Каждого Стр_22 Из ДополнительныйРеквизитБелье.ДопМодельАртикулы Цикл
												
												Структура_добавим=Новый Структура;
												Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
												Структура_добавим.Вставить("attr_value",Стр_22.МодельАртикул);
												Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
												МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
											Конеццикла;
											
										Конецесли;
								
									
									
								ИначеЕсли Стр_1.attr_group_name="Потребительские свойства" Тогда
										
										
										Если  Стр_1.attr_name="Вид товара" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ВидИзделия) Тогда
												Структура_добавим=Новый Структура;
												Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
												Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитБелье.ВидИзделия));
												//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
												МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитБелье.ВидИзделия);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитБелье.ВидИзделия);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Цвет" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.Цвет) Тогда
												Структура_добавим=Новый Структура;
												Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
												Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитБелье.Цвет));
												//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
												МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитБелье.Цвет);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитБелье.Цвет);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Возраст потребителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ВозрастПотребителя) Тогда
												Структура_добавим=Новый Структура;
												Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
												Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитБелье.ВозрастПотребителя));
												//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
												МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитБелье.ВозрастПотребителя);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитБелье.ВозрастПотребителя);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Тип текстиля" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ВидМатериала) Тогда
												Структура_добавим=Новый Структура;
												Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
												Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитБелье.ВидМатериала));
												//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
												МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитБелье.ВидМатериала);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитБелье.ВидМатериала);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
																		
										ИначеЕсли  Стр_1.attr_name="Декоративные элементы" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ДекоративныеЭлементы) Тогда
												Структура_добавим=Новый Структура;
												Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
												Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитБелье.ДекоративныеЭлементы));
												//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
												МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитБелье.ДекоративныеЭлементы);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитБелье.ДекоративныеЭлементы);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Дизайн" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.Дизайн) Тогда
												Структура_добавим=Новый Структура;
												Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
												Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитБелье.Дизайн);
												//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
												МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитБелье.Дизайн;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Дополнительные характеристики изделия (описание)" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ДополнительныеХарактеристики) Тогда
												Структура_добавим=Новый Структура;
												Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
												Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитБелье.ДополнительныеХарактеристики);
												//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
												МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитБелье.ДополнительныеХарактеристики;
											КонецЕсли;
										Конецесли;
									
								ИначеЕсли Стр_1.attr_group_name="Состав" Тогда
										
										
										
										Если  Стр_1.attr_name="Состав" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.Состав) Тогда
												Структура_добавим=Новый Структура;
												Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
												Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитБелье.Состав);
												//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
												МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитБелье.Состав;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Комплектация" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.Комплектация) Тогда
												Структура_добавим=Новый Структура;
												Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
												Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитБелье.Комплектация);
												//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
												МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитБелье.Комплектация;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Тип материала, %" Тогда
											
											Если ДополнительныйРеквизитБелье.ТипМатериалов.Количество()>0 Тогда
													
													Для Каждого Стр_ Из ДополнительныйРеквизитБелье.ТипМатериалов Цикл
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",Строка(Стр_.Материал));
														Структура_добавим.Вставить("attr_value_type",Формат(Стр_.Процент,"ЧГ="));
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
													Конеццикла;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Тип материала" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ТипМатериала) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитБелье.ТипМатериала);
														//Структура_добавим.Вставить("attr_value_type",Формат(Стр_.Процент,"ЧГ="));
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитБелье.ТипМатериала;
											КонецЕсли;
																																			
										Конецесли;

								ИначеЕсли Стр_1.attr_group_name="Характеристики товара в состоянии использования" Тогда
									
										Если  Стр_1.attr_name="Размер изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.РазмерИзделия) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитБелье.РазмерИзделия);
														//Структура_добавим.Вставить("attr_value_type",Формат(Стр_.Процент,"ЧГ="));
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитБелье.РазмерИзделия;
											КонецЕсли;
										КонецЕсли;
								ИначеЕсли Стр_1.attr_group_name="Эксплуатация и условия хранения" Тогда
										Если  Стр_1.attr_name="Срок службы" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ТипСрокаСлужбы) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитБелье.СрокСлужбы);
														Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитБелье.ТипСрокаСлужбы));
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитБелье.СрокСлужбы;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитБелье.ТипСрокаСлужбы)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Гарантийный срок, от производителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ТипГарантийногоСрока) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитБелье.ГарантийныйСрокОтПроизводителя);
														Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитБелье.ТипГарантийногоСрока));
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитБелье.ГарантийныйСрокОтПроизводителя;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитБелье.ТипГарантийногоСрока)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Особые условия хранения" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ОсобыеУсловияХранения) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитБелье.ОсобыеУсловияХранения);
														//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитБелье.ТипГарантийногоСрока);
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитБелье.ОсобыеУсловияХранения;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Рекомендации по использованию" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.РекомендацияПоИспользованию) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитБелье.РекомендацияПоИспользованию);
														//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитБелье.ТипГарантийногоСрока);
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитБелье.РекомендацияПоИспользованию;
											КонецЕсли;
										КонецЕсли;
									
									
								ИначеЕсли Стр_1.attr_group_name="Нормативно-сопроводительная документация" Тогда
										Если  Стр_1.attr_name="Номер Регламента/стандарта" Тогда
											
											Если ДополнительныйРеквизитБелье.НомерРегламента005=Истина Тогда
												
												
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value","ТР ТС 005/2011 ""О безопасности упаковки""");
														//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитБелье.ТипГарантийногоСрока);
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);

												
												
											КонецЕсли;
											
											
											Если ДополнительныйРеквизитБелье.НомерРегламента007=Истина Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value","ТР ТС 007/2011 ""О безопасности продукции, предназначенной для детей и подростков""");
														//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитБелье.ТипГарантийногоСрока);
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												
											КонецЕсли;
											
											
											Если ДополнительныйРеквизитБелье.НомерРегламента017=Истина Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value","ТР ТС 017/2011 ""О безопасности продукции легкой промышленности""");
														//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитБелье.ТипГарантийногоСрока);
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												
											КонецЕсли;
											 
											 Если ДополнительныйРеквизитБелье.БезРегламента=Истина Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value","Действие технических регламентов не распространяется");
														//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитБелье.ТипГарантийногоСрока);
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="ГОСТ / ТУ / СТО" Тогда
											
											Если ДополнительныйРеквизитБелье.ГОСТЫИТУ.Количество()>0 Тогда
												
												Для Каждого Стр_ Из ДополнительныйРеквизитБелье.ГОСТЫИТУ Цикл
													
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",Стр_.ГОСТТУ);
														Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
													
														
												Конеццикла;
												
											КонецЕсли;

											
											
										Конецесли;
																		
								КонецЕсли;
								
								
							Конеццикла;
							
						ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Одежда") Тогда
							Для Каждого Стр_1 Из NNN Цикл
								
								
								Если Стр_1.attr_group_name="Наименование товара и идентификация" Тогда
										Если Стр_1.attr_name="Количество единиц употребления в потребительской упаковке" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ПотребительскаяУпаковка) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",Формат(ДополнительныеРеквизитОдежда.КоличествоВПотребительскойУпаковке,"ЧГ="));
														Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитОдежда.ПотребительскаяУпаковка));
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Формат(ДополнительныеРеквизитОдежда.КоличествоВПотребительскойУпаковке,"ЧГ=");
												//Стр_а.valueType=Строка(ДополнительныеРеквизитОдежда.ПотребительскаяУпаковка)
												
											КонецЕсли;
									 	//ИначеЕсли  Стр_1.attr_name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
									
								ИначеЕсли Стр_1.attr_group_name="Происхождение и бренды" Тогда
										
										Если  Стр_1.attr_name="СТМ" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.СТМ) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитОдежда.СТМ));
														Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитОдежда.ПотребительскаяУпаковка));
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитОдежда.СТМ);
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Модель / артикул производителя" Тогда
											Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул)
												И ДополнительныйРеквизитБелье.ДопМодельАртикулы.Количество()=0 Тогда
												
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",Объект.МодельПроизводителяАртикул);
														Структура_добавим.Вставить("attr_value_type",Строка("Артикул"));
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
											КонецЕсли;
											Для Каждого Стр_22 Из ДополнительныеРеквизитОдежда.ДопМодельАртикулы Цикл
												
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",Стр_22.МодельАртикул);
														Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул)  );
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
											Конеццикла;
											
										Конецесли;
									
									
								
									
									
								ИначеЕсли Стр_1.attr_group_name="Потребительские свойства" Тогда
										
										
										Если  Стр_1.attr_name="Вид товара" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ВидИзделия) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитОдежда.ВидИзделия));
														//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул)  );
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитОдежда.ВидИзделия);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитОдежда.ВидИзделия);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Цвет" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.Цвет) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитОдежда.Цвет));
														//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул)  );
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитОдежда.Цвет);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитОдежда.Цвет);
												///Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Возраст потребителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ВозрастПотребителя) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитОдежда.ВозрастПотребителя));
														//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул)  );
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитОдежда.ВозрастПотребителя);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитОдежда.ВозрастПотребителя);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Целевой пол" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ЦелевойПол) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитОдежда.ЦелевойПол));
														//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул)  );
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитОдежда.ЦелевойПол);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитОдежда.ЦелевойПол);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Размер одежды" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.РазмерИзделияГОСТ) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитОдежда.РазмерИзделияГОСТДругое);
														Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитОдежда.РазмерИзделияГОСТ) );
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
//												Стр_а.value=ДополнительныеРеквизитОдежда.РазмерИзделияГОСТДругое;
//												Стр_а.valueType=Строка(ДополнительныеРеквизитОдежда.РазмерИзделияГОСТ)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Размер в иных системах измерения" Тогда
											
											Если ДополнительныеРеквизитОдежда.РазмерВИныхСистемахИзмерения.Количество()>0 Тогда
													
													Для Каждого Стр_ Из ДополнительныеРеквизитОдежда.РазмерВИныхСистемахИзмерения Цикл
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",Стр_.Размер);
														Структура_добавим.Вставить("attr_value_type",Строка(Стр_.Страна));
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
														
													Конеццикла;
											КонецЕсли;
																						
										ИначеЕсли  Стр_1.attr_name="Рост" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.Рост) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитОдежда.Рост));
														//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.Страна);
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитОдежда.Рост);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитОдежда.Рост);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Дополнительные характеристики изделия (описание)" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ДополнительныеХарактеристики) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитОдежда.ДополнительныеХарактеристики);
														//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.Страна);
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитОдежда.ДополнительныеХарактеристики;
											КонецЕсли;
										Конецесли;
									
								ИначеЕсли Стр_1.attr_group_name="Состав" Тогда
										
										
										
										Если  Стр_1.attr_name="Состав" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.Состав) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитОдежда.Состав);
														//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.Страна);
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитОдежда.Состав;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Комплектация" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.Комплектация) Тогда
														Структура_добавим=Новый Структура;
														Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
														Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитОдежда.Комплектация);
														//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.Страна);
														МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитОдежда.Комплектация;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Тип материала, %" Тогда
											
											Если ДополнительныеРеквизитОдежда.ТипМатериалов.Количество()>0 Тогда
													
													Для Каждого Стр_ Из ДополнительныеРеквизитОдежда.ТипМатериалов Цикл
														
														Если ЗначениеЗаполнено(Стр_.Процент) И ЗначениеЗАполнено(Стр_.Материал) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.Материал);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.Процент));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
															
															
														Конецесли;
													Конеццикла;
												
											Конецесли;										
										ИначеЕсли  Стр_1.attr_name="Тип материала" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ТипМатериала) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитОдежда.ТипМатериала);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.Процент));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитОдежда.ТипМатериала;
											КонецЕсли;
																																			
										Конецесли;
										
									
									
								ИначеЕсли Стр_1.attr_group_name="Эксплуатация и условия хранения" Тогда
										Если  Стр_1.attr_name="Срок службы" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ТипСрокаСлужбы) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитОдежда.СрокСлужбы);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитОдежда.ТипСрокаСлужбы));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитОдежда.СрокСлужбы;
												//Стр_а.valueType=Строка(ДополнительныеРеквизитОдежда.ТипСрокаСлужбы)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Гарантийный срок, от производителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ТипГарантийногоСрока) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитОдежда.ГарантийныйСрокОтПроизводителя);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитОдежда.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитОдежда.ГарантийныйСрокОтПроизводителя;
												//Стр_а.valueType=Строка(ДополнительныеРеквизитОдежда.ТипГарантийногоСрока)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Особые условия хранения" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ОсобыеУсловияХранения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитОдежда.ОсобыеУсловияХранения);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитОдежда.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитОдежда.ОсобыеУсловияХранения;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Рекомендации по использованию" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.РекомендацияПоИспользованию) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитОдежда.РекомендацияПоИспользованию);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитОдежда.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитОдежда.РекомендацияПоИспользованию;
											КонецЕсли;
										КонецЕсли;
									
								ИначеЕсли Стр_1.attr_group_name="Нормативно-сопроводительная документация" Тогда
										Если  Стр_1.attr_name="Номер Регламента/стандарта" Тогда
											
											Если ДополнительныеРеквизитОдежда.НомерРегламента005=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 005/2011 ""О безопасности упаковки""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитОдежда.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
											КонецЕсли;
											
											
											Если ДополнительныеРеквизитОдежда.НомерРегламента007=Истина Тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 007/2011 ""О безопасности продукции, предназначенной для детей и подростков""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитОдежда.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
											КонецЕсли;
											
											
											Если ДополнительныеРеквизитОдежда.НомерРегламента017=Истина Тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 017/2011 ""О безопасности продукции легкой промышленности""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитОдежда.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												
											КонецЕсли;
											 
											
											Если ДополнительныеРеквизитОдежда.НомерРегламента019=Истина Тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 019/2011 ""О безопасности средств индивидуальной защиты""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитОдежда.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												
												
											КонецЕсли;
											 
											Если ДополнительныеРеквизитОдежда.БезРегламента=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","Действие технических регламентов не распространяется");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитОдежда.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="ГОСТ / ТУ / СТО" Тогда
											
											Если ДополнительныеРеквизитОдежда.ГОСТЫИТУ.Количество()>0 Тогда
												
												Для Каждого Стр_ Из ДополнительныеРеквизитОдежда.ГОСТЫИТУ Цикл
													
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.ГОСТТУ);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
													
												Конеццикла;
												
											КонецЕсли;
											
										КонецЕсли;

										
									КонецЕсли;
											
									
								
							Конеццикла;
							
							
						ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Велосипеды") Тогда
							Для Каждого Стр_1 Из NNN Цикл
								
								Если Стр_1.attr_group_name="Происхождение и бренды" Тогда
										
										Если  Стр_1.attr_name="СТМ" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.СТМ) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.СТМ));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.СТМ);
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Модель / артикул производителя" Тогда
											Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул)
												И ДополнительныйРеквизитБелье.ДопМодельАртикулы.Количество()=0 Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Объект.МодельПроизводителяАртикул);
															Структура_добавим.Вставить("attr_value_type",Строка("Артикул"));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
											КонецЕсли;
											Для Каждого Стр_22 Из ДополнительныйРеквизитВелосипед.ДопМодельАртикулы Цикл
																Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_22.МодельАртикул);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
											
											Конеццикла;
											
										Конецесли;
									
									
								ИначеЕсли Стр_1.attr_group_name="Потребительские свойства" Тогда
										
										
										Если  Стр_1.attr_name="Вид товара" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ТипВелосипеда) Тогда
																Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_22.МодельАртикул);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
											
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ТипВелосипеда);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ТипВелосипеда);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Класс велосипеда" Тогда
											Если Значениезаполнено(ДополнительныйРеквизитВелосипед.КлассВелосипеда) тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.КлассВелосипеда));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.КлассВелосипеда);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.КлассВелосипеда);
												//Стр_а.valueType=Неопределено
											Конецесли;

											
										ИначеЕсли  Стр_1.attr_name="Цвет" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.Цвет) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.Цвет));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.Цвет);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.Цвет);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Возраст потребителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ВозрастПотребителя) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.ВозрастПотребителя));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ВозрастПотребителя);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ВозрастПотребителя);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Пол целевого потребителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ПолЦелевогоПотребителя) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.ПолЦелевогоПотребителя));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ПолЦелевогоПотребителя);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ПолЦелевогоПотребителя);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Год производства" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ГодПроизводства) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.ГодПроизводства));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ГодПроизводства);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ГодПроизводства);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Размер рамы" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ЕдиницаИзмеренияРазмераРамы) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.РазмерРамы));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.РазмерРамы);
												//Стр_а.valueType=НРег(Строка(ДополнительныйРеквизитВелосипед.ЕдиницаИзмеренияРазмераРамы))
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Материал рамы" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.МатериалРамы) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.МатериалРамы));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.МатериалРамы);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.МатериалРамы);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Тип тормозной системы" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ТипТормознойСистемы) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.ТипТормознойСистемы));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ТипТормознойСистемы);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ТипТормознойСистемы);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Тип конструкции рамы" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ТипКонструкцииРамы) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.ТипКонструкцииРамы));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ТипКонструкцииРамы);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ТипКонструкцииРамы);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Тип передней вилки" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ТипПереднейВилки) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.ТипПереднейВилки));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ТипПереднейВилки);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ТипПереднейВилки);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Ширина профиля шины (камеры), дюйм" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ШиринаПрофиляШины) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.ШиринаПрофиляШины));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ШиринаПрофиляШины);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ШиринаПрофиляШины);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Номинальный посадочный диаметр обода, дюйм" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ПосадочныйДиамтерОбода) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.ПосадочныйДиамтерОбода));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ПосадочныйДиамтерОбода);
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Номинальный посадочный диаметр обода, мм" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.НоминальныйПосадочныйДиаметрОбодаВмм) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.НоминальныйПосадочныйДиаметрОбодаВмм));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.НоминальныйПосадочныйДиаметрОбодаВмм);
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Количество колес" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.КоличествоКолес) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.КоличествоКолес));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.КоличествоКолес);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.КоличествоКолес);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Тип колесных дисков" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ТипКолесныхДисков) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.ТипКолесныхДисков));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ТипКолесныхДисков);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ТипКолесныхДисков);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Колесная база, мм" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.КолеснаяБаза) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.КолеснаяБаза));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.КолеснаяБаза);
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Дорожный просвет, мм" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ДорожныйПросвет) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.ДорожныйПросвет));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ДорожныйПросвет);
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Тип подвески" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ТипПодвески) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.ТипПодвески));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ТипПодвески);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ТипПодвески);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Количество скоростей" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.КоличествоСкоростей) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.КоличествоСкоростей));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.КоличествоСкоростей);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.КоличествоСкоростей);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Материал подкрылков" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.МатериалПодкрылок) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.КоличествоСкоростей));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.МатериалПодкрылок);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.МатериалПодкрылок);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Расположение фар" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.РасположениеФар) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.РасположениеФар));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.РасположениеФар);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.РасположениеФар);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Наличие кофра" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.НаличиеКофра) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитВелосипед.НаличиеКофра));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.НаличиеКофра);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.НаличиеКофра);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Максимальная нагрузка, кг" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.МаксимальнаяНагрузка) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитВелосипед.МаксимальнаяНагрузка);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитВелосипед.МаксимальнаяНагрузка;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Дополнительные характеристики изделия (описание)" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ДополнительныеХарактеристики) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитВелосипед.ДополнительныеХарактеристики);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитВелосипед.ДополнительныеХарактеристики;
											КонецЕсли;
										Конецесли;
								
								ИначеЕсли Стр_1.attr_group_name="Состав" Тогда
										Если  Стр_1.attr_name="Комплектация" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.Состав) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитВелосипед.Состав);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитВелосипед.Состав;
											КонецЕсли;
											
										Конецесли;
									
								ИначеЕсли Стр_1.attr_group_name="Характеристики товара в состоянии использования" Тогда
										Если Стр_1.attr_name="Конструктивная масса, кг" Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитВелосипед.КонструктивнаяМасса);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
											//Стр_2.value=ДополнительныйРеквизитВелосипед.КонструктивнаяМасса;
										ИначеЕсли  Стр_1.attr_name="Длина изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ДлинаЕдиницаИзмерения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитВелосипед.Длина);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитВелосипед.ДлинаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитВелосипед.Длина;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитВелосипед.ДлинаЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Ширина изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ШиринаЕдиницаИзмерения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитВелосипед.Ширина);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитВелосипед.ШиринаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитВелосипед.Ширина;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитВелосипед.ШиринаЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Высота изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ВысотаЕдиницаИзмерения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитВелосипед.Высота);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитВелосипед.ВысотаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитВелосипед.Высота;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитВелосипед.ВысотаЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Длина сложенного изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ДлинаСложенногоИзделияЕдиницаИзмерения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитВелосипед.ДлинаСложенногоИзделия);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитВелосипед.ДлинаСложенногоИзделияЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитВелосипед.ДлинаСложенногоИзделия;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитВелосипед.ДлинаСложенногоИзделияЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Ширина сложенного изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ШиринаСложенногоИзделияЕдиницаИзмерения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитВелосипед.ШиринаСложенногоИзделия);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитВелосипед.ШиринаСложенногоИзделияЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитВелосипед.ШиринаСложенногоИзделия;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитВелосипед.ШиринаСложенногоИзделияЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Высота сложенного изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ВысотаСложенногоИзделияЕдиницыИзмерения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитВелосипед.ВысотаСложенногоИзделния);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитВелосипед.ВысотаСложенногоИзделияЕдиницыИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитВелосипед.ВысотаСложенногоИзделния;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитВелосипед.ВысотаСложенногоИзделияЕдиницыИзмерения)
											КонецЕсли;
										Конецесли;
									
									
									
									
								ИначеЕсли Стр_1.attr_group_name="Эксплуатация и условия хранения" Тогда
										Если  Стр_1.attr_name="Срок службы" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ТипСрокаСлужбы) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитВелосипед.СрокСлужбы);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитВелосипед.ТипСрокаСлужбы));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитВелосипед.СрокСлужбы;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитВелосипед.ТипСрокаСлужбы)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Гарантийный срок, от производителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ТипГарантийногоСрока) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитВелосипед.ГарантийныйСрокОтПроизводителя);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитВелосипед.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитВелосипед.ГарантийныйСрокОтПроизводителя;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитВелосипед.ТипГарантийногоСрока)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Особые условия хранения" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ОсобыеУсловияХранения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитВелосипед.ОсобыеУсловияХранения);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитВелосипед.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитВелосипед.ОсобыеУсловияХранения;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Рекомендации по использованию" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.РекомендацияПоИспользованию) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитВелосипед.РекомендацияПоИспользованию);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитВелосипед.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитВелосипед.РекомендацияПоИспользованию;
											КонецЕсли;
										КонецЕсли;
									
									
								ИначеЕсли Стр_1.attr_group_name="Нормативно-сопроводительная документация" Тогда
									МассивНормативово=Новый Массив;
									МассивНормативово.Очистить();
									//Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_1.attr_name="Номер Регламента/стандарта" Тогда
											
											Если ДополнительныйРеквизитВелосипед.НомерРегламента005=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 005/2011 ""О безопасности упаковки""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитВелосипед.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);

												
											КонецЕсли;
											
											
											Если ДополнительныйРеквизитВелосипед.НомерРегламента007=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 007/2011 ""О безопасности продукции, предназначенной для детей и подростков""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитВелосипед.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
											КонецЕсли;
											
											
											Если ДополнительныйРеквизитВелосипед.НомерРегламента010=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 010/2011 ""О безопасности машин и оборудования""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитВелосипед.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
											КонецЕсли;
											 
											
											Если ДополнительныйРеквизитВелосипед.НомерРегламента012=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 012/2011 ""О безопасности оборудования для работы во взрывоопасных средах""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитВелосипед.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
											КонецЕсли;
											 
											Если ДополнительныйРеквизитВелосипед.НомерРегламента018=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 018/2011 ""О безопасности колесных транспортных средств""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитВелосипед.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												
												
											КонецЕсли;

											
											
										;
											КонецЕсли;
										//Конецесли;
									
								КонецЕсли;
								
								
							Конеццикла;
						ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Фото") Тогда
							Для Каждого Стр_1 Из NNN Цикл
								
								Если Стр_1.attr_group_name="Наименование товара и идентификация" Тогда
										Если Стр_1.attr_name="Количество единиц употребления в потребительской упаковке" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитФото.ПотребительскаяУпаковка) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Формат(ДополнительныеРеквизитФото.КоличествоВПотребительскойУпаковке,"ЧГ="));
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитФото.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												//Стр_а.value=Формат(ДополнительныеРеквизитФото.КоличествоВПотребительскойУпаковке,"ЧГ=");
												//Стр_а.valueType=Строка(ДополнительныеРеквизитФото.ПотребительскаяУпаковка)
												
											КонецЕсли;
									 	//ИначеЕсли  Стр_1.attr_name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
									
									
								ИначеЕсли Стр_1.attr_group_name="Происхождение и бренды" Тогда
										
										Если  Стр_1.attr_name="Модель / артикул производителя" Тогда
											
											Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул)
												И ДополнительныйРеквизитБелье.ДопМодельАртикулы.Количество()=0 Тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Объект.МодельПроизводителяАртикул);
															Структура_добавим.Вставить("attr_value_type",Строка("Артикул"));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
											КонецЕсли;
											Для Каждого Стр_22 Из ДополнительныеРеквизитФото.ДопМодельАртикулы Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_22.МодельАртикул);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
											Конеццикла;
											
										Конецесли;
									
									
									
								ИначеЕсли Стр_1.attr_group_name="Потребительские свойства" Тогда
										
										
										Если  Стр_1.attr_name="Вид товара" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитФото.ТипИзделия) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитФото.ТипИзделия));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
//												Стр_а.value=Строка(ДополнительныеРеквизитФото.ТипИзделия);
//												Стр_а.valueTitle=Строка(ДополнительныеРеквизитФото.ТипИзделия);
//												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Материал изделия" Тогда
											Если Значениезаполнено(ДополнительныеРеквизитФото.МатериалИзделия) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитФото.МатериалИзделия));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												//Стр_а.value=Строка(ДополнительныеРеквизитФото.МатериалИзделия);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитФото.МатериалИзделия);
												//Стр_а.valueType=Неопределено
											Конецесли;

											
										ИначеЕсли  Стр_1.attr_name="Цвет" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитФото.Цвет) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитФото.Цвет));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитФото.Цвет);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитФото.Цвет);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										Конецесли;
								
								ИначеЕсли Стр_1.attr_group_name="Состав" Тогда
										Если  Стр_1.attr_name="Комплектация" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитФото.Состав) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитФото.Состав);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитФото.Состав;
											КонецЕсли;
											
										Конецесли;
									
								ИначеЕсли Стр_1.attr_group_name="Эксплуатация и условия хранения" Тогда
								//	Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_1.attr_name="Срок службы" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитФото.ТипСрокаСлужбы) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитФото.СрокСлужбы);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитФото.ТипСрокаСлужбы));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитФото.СрокСлужбы;
												//Стр_а.valueType=Строка(ДополнительныеРеквизитФото.ТипСрокаСлужбы)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Рекомендации по использованию" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитФото.РекомендацияПоИспользованию) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитФото.РекомендацияПоИспользованию);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитФото.ТипСрокаСлужбы));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитФото.РекомендацияПоИспользованию;
											КонецЕсли;
										КонецЕсли;
									
									
								ИначеЕсли Стр_1.attr_group_name="Нормативно-сопроводительная документация" Тогда
										Если  Стр_1.attr_name="Номер Регламента/стандарта" Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ЕАЭС 037/2016 ""Об ограничении применения опасных веществ в изделиях электротехники и радиоэлектроники""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитФото.ТипСрокаСлужбы));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
											КонецЕсли;
											
											
											Если ДополнительныеРеквизитФото.НомерРегламента005=Истина Тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 005/2011 ""О безопасности упаковки""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитФото.ТипСрокаСлужбы));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
																								
											КонецЕсли;
											
											
											Если ДополнительныеРеквизитФото.НомерРегламента012=Истина Тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 012/2011 ""О безопасности оборудования для работы во взрывоопасных средах""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитФото.ТипСрокаСлужбы));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
																								
												
											КонецЕсли;
											
											
											Если ДополнительныеРеквизитФото.НомерРегламента020=Истина Тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 020/2011 ""Электромагнитная совместимость технических средств""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитФото.ТипСрокаСлужбы));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
											КонецЕсли;
											 
											
											Если ДополнительныеРеквизитФото.НомерРегламента037=Истина Тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ЕАЭС 037/2016 ""Об ограничении применения опасных веществ в изделиях электротехники и радиоэлектроники""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитФото.ТипСрокаСлужбы));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
																								
											КонецЕсли;
											 
										//Конецесли;
									
									
								КонецЕсли;
								
								
							//	Если Стр_1.attr_group_name="Состав" Тогда
							//		Стр_1.attributes[0].value="Мой состав";
							//	КонецЕсли;
								
							Конеццикла;
						
						
						ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Парфюм") Тогда
														
							Для Каждого Стр_1 Из NNN Цикл
								
								Если Стр_1.attr_group_name="Наименование товара и идентификация" Тогда
										Если Стр_1.attr_name="Заявленный объём / вес нетто" Тогда
											//Стр_а.value=объект
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.Объем)
												И Значениезаполнено(ДополнительныйРеквизитПарфюм.ЕдиницаИзмеренияОбъема) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",формат(ДополнительныйРеквизитПарфюм.Объем,"ЧГ=ЧРД=""."""));
															Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныйРеквизитПарфюм.ЕдиницаИзмеренияОбъема)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
																								
												
												//Стр_а.value=формат(ДополнительныйРеквизитПарфюм.Объем,"ЧГ=ЧРД="".""");
												//Стр_а.valueType=НРег(Строка(ДополнительныйРеквизитПарфюм.ЕдиницаИзмеренияОбъема))
											Конецесли;
											
										ИначеЕсли Стр_1.attr_name="Количество единиц употребления в потребительской упаковке" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ПотребительскаяУпаковка) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Формат(ДополнительныйРеквизитПарфюм.КоличествоВПотребительскойУпаковке,"ЧГ="));
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Формат(ДополнительныйРеквизитПарфюм.КоличествоВПотребительскойУпаковке,"ЧГ=");
												//Стр_а.valueType=Строка(ДополнительныйРеквизитПарфюм.ПотребительскаяУпаковка)
												
											КонецЕсли;
									 	//ИначеЕсли  Стр_1.attr_name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
										
								ИначеЕсли Стр_1.attr_group_name="Потребительские свойства" Тогда
										Если  Стр_1.attr_name="Тип парфюмерии" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ТипПарфюмерии) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитПарфюм.ТипПарфюмерии));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ТипПарфюмерии);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.ТипПарфюмерии);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Возраст потребителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ВозрастПотребителя) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитПарфюм.ВозрастПотребителя));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ВозрастПотребителя);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.ВозрастПотребителя);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Пол целевого потребителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ПолЦелевогоПотребителя) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитПарфюм.ПолЦелевогоПотребителя));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ПолЦелевогоПотребителя);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.ПолЦелевогоПотребителя);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Форма / состояние / формат" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ФормаСостояниеФормат) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитПарфюм.ФормаСостояниеФормат);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ФормаСостояниеФормат);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.ФормаСостояниеФормат);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Тип дозатора" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ТипДозатора) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитПарфюм.ТипДозатора));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ТипДозатора);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.ТипДозатора);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Селектив" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.Селектив) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитПарфюм.Селектив));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.Селектив);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.Селектив);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Тип аромата" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ТипАромата) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитПарфюм.ТипАромата));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ТипАромата);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.ТипАромата);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Входящие в аромат ноты" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ВходящиеВАроматНоты) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитПарфюм.ВходящиеВАроматНоты));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ВходящиеВАроматНоты);;
											КонецЕсли;
											
										ИначеЕсли Стр_1.attr_name="Дополнительные характеристики изделия (описание)" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ДополнительныеХарактеристики) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитПарфюм.ДополнительныеХарактеристики));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ДополнительныеХарактеристики);;
											КонецЕсли;
										Конецесли;
									//Конеццикла;
									
									
								
								ИначеЕсли Стр_1.attr_group_name="Эксплуатация и условия хранения" Тогда
										Если  Стр_1.attr_name="Срок годности" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ТипСрокаГодности) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитПарфюм.СрокГодности);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ТипСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитПарфюм.СрокГодности;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитПарфюм.ТипСрокаГодности)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Особые условия хранения" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ОсобыеУсловияХранения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитПарфюм.ОсобыеУсловияХранения);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ТипСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитПарфюм.ОсобыеУсловияХранения;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Рекомендации по использованию" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.РекомендацияПоИспользованию) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитПарфюм.РекомендацияПоИспользованию);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ТипСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитПарфюм.РекомендацияПоИспользованию;
											КонецЕсли;
										
										ИначеЕсли  Стр_1.attr_name="Альтернативный срок годности" Тогда
											
											Если ДополнительныйРеквизитПарфюм.ДополнительныеСрокиГодности.Количество()>0 Тогда
												
												Для Каждого Стр_ Из ДополнительныйРеквизитПарфюм.ДополнительныеСрокиГодности Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.СрокГодности);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
															
													Конеццикла;
												КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Дополнительный срок годности" Тогда
											
											Если ДополнительныйРеквизитПарфюм.ДополнительныеСрокиГодности.Количество()>0 Тогда
												
												Для Каждого Стр_ Из ДополнительныйРеквизитПарфюм.ДополнительныеСрокиГодности Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.СрокГодности);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
															
													Конеццикла;
												КонецЕсли;
											КонецЕсли;
										//Конецесли;
										
								ИначеЕсли Стр_1.attr_group_name="Рекомендации производителя" Тогда
										Если Стр_1.attr_name="Меры предосторожности" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.МерыПредосторожности) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитПарфюм.МерыПредосторожности));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.МерыПредосторожности);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.МерыПредосторожности);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										КонецЕсли;
								ИначеЕсли Стр_1.attr_group_name="Характеристики товара в состоянии использования" Тогда
										Если  Стр_1.attr_name="Ширина изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ШиринаЕдиницаИзмерения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитПарфюм.Ширина);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ШиринаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитПарфюм.Ширина;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитПарфюм.ШиринаЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Высота изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ВысотаЕдиницаИзмерения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитПарфюм.Высота);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ВысотаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитПарфюм.Высота;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитПарфюм.ВысотаЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Глубина изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ГлубинаЕдиницаИзмерения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитПарфюм.Глубина);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ГлубинаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитПарфюм.Глубина;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитПарфюм.ГлубинаЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Тип упаковки использования" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ТипУпаковкиИспользования) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитПарфюм.ТипУпаковкиИспользования));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ГлубинаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ТипУпаковкиИспользования);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.ТипУпаковкиИспользования);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Материал упаковки использования" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.МатериалУпаковки) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитПарфюм.МатериалУпаковки));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ГлубинаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.МатериалУпаковки);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.МатериалУпаковки);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										Конецесли;
									
									
								ИначеЕсли Стр_1.attr_group_name="Нормативно-сопроводительная документация" Тогда
									
										Если  Стр_1.attr_name="Номер Регламента/стандарта" Тогда
											
											Если ДополнительныйРеквизитПарфюм.НомерРегламента005=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 005/2011 ""О безопасности упаковки""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ГлубинаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
											КонецЕсли;
											 
											Если ДополнительныйРеквизитПарфюм.НомерРегламента029=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 029/2012 ""Требования к безопасности пищевых добавок, ароматизаторов и технологических вспомогательных средств""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ГлубинаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
																								
											КонецЕсли;
											

											Если ДополнительныйРеквизитПарфюм.НомерРегламента009=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 009/2011 ""О безопасности парфюмерно-косметической продукции""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитПарфюм.ГлубинаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												
											КонецЕсли;
											

																						
											
											
										ИначеЕсли  Стр_1.attr_name="ГОСТ / ТУ / СТО" Тогда
											
											Если ДополнительныйРеквизитПарфюм.ГОСТЫИТУ.Количество()>0 Тогда
												
												Для Каждого Стр_ Из ДополнительныйРеквизитПарфюм.ГОСТЫИТУ Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.ГОСТТУ);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
																										Конеццикла;
												КонецЕсли;
											КонецЕсли;
										//Конецесли;
									
									
									
									
								ИначеЕсли Стр_1.attr_group_name="Состав" Тогда
										Если  Стр_1.attr_name="Состав" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.Состав) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитПарфюм.Состав);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитПарфюм.Состав;
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Комплектация" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.Комплектация) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитПарфюм.Комплектация);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитПарфюм.Комплектация;
											КонецЕсли;
											
										Конецесли;
										
																	
								КонецЕсли;
								
								
								
							//	Если Стр_1.attr_group_name="Состав" Тогда
							//		Стр_1.attributes[0].value="Мой состав";
							//	КонецЕсли;
								
							Конеццикла;
							
							
						ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Шины") Тогда
							Для Каждого Стр_1 Из NNN Цикл
								
								Если Стр_1.attr_group_name="Происхождение и бренды" Тогда
										Если  Стр_1.attr_name="Модель / артикул производителя" Тогда
											Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул)
												И ДополнительныйРеквизитБелье.ДопМодельАртикулы.Количество()=0 Тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Объект.МодельПроизводителяАртикул);
															Структура_добавим.Вставить("attr_value_type",Строка("Артикул"));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
											КонецЕсли;
											Для Каждого Стр_22 Из ДополнительныеРеквизитыШины.ДопМодельАртикулы Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_22.МодельАртикул);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
											Конеццикла;
											
										Конецесли;

									
								ИначеЕсли Стр_1.attr_group_name="Потребительские свойства" Тогда
										Если  Стр_1.attr_name="Целевое использование/применение" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ЦелевоеИспользование) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитыШины.ЦелевоеИспользование));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитыШины.ЦелевоеИспользование);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ЦелевоеИспользование);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Ширина профиля шины (камеры), мм/дюйм" Тогда
											Если Значениезаполнено(ДополнительныеРеквизитыШины.ЕдиницаИзмерения) тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитыШины.ШиринаПрофиляШины);
															Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиницаИзмерения)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитыШины.ШиринаПрофиляШины;
												//Стр_а.valueType=НРег(Строка(ДополнительныеРеквизитыШины.ЕдиницаИзмерения))
											Конецесли;

											
										ИначеЕсли  Стр_1.attr_name="Ширина профиля шины (камеры), дюйм" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ШиринаПрофиляШиныКамерыДюйм) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитыШины.ШиринаПрофиляШиныКамерыДюйм));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиницаИзмерения)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитыШины.ШиринаПрофиляШиныКамерыДюйм);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ШиринаПрофиляШиныКамерыДюйм);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
											
										ИначеЕсли  Стр_1.attr_name="Номинальное отношение высоты профиля шины к его ширине, %" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитыШины.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиницаИзмерения)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитыШины.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Тип конструкции каркаса шины" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ТипКонструкцииКаркасаШины) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитыШины.ТипКонструкцииКаркасаШины));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиницаИзмерения)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитыШины.ТипКонструкцииКаркасаШины);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ТипКонструкцииКаркасаШины);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Номинальный посадочный диаметр обода, дюйм" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ПосадочныйДиамтерОбода) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитыШины.ПосадочныйДиамтерОбода);
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиницаИзмерения)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитыШины.ПосадочныйДиамтерОбода;
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Номинальный посадочный диаметр обода, мм" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.НоминальныйПосадочныйДиаметрОбодаВМм) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитыШины.НоминальныйПосадочныйДиаметрОбодаВМм);
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиницаИзмерения)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитыШины.НоминальныйПосадочныйДиаметрОбодаВМм;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Индекс нагрузки на шину" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ИндексНагрузкиНаШину) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитыШины.ИндексНагрузкиНаШину));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиницаИзмерения)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитыШины.ИндексНагрузкиНаШину);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ИндексНагрузкиНаШину);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Категория скорости" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.КатегорияСкорости) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитыШины.КатегорияСкорости));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиницаИзмерения)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитыШины.КатегорияСкорости);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.КатегорияСкорости);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Сезонность" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.Сезонность) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитыШины.Сезонность));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиницаИзмерения)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитыШины.Сезонность);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.Сезонность);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Тип шины по способу герметизации" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ТипШиныПоСпособуГерметизации) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитыШины.ТипШиныПоСпособуГерметизации));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиницаИзмерения)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитыШины.ТипШиныПоСпособуГерметизации);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ТипШиныПоСпособуГерметизации);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Наружный диаметр" Тогда
											Если Значениезаполнено(ДополнительныеРеквизитыШины.ЕдиинцаНаружногоДиаметра) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитыШины.НаружныйДиаметр);
															Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиинцаНаружногоДиаметра)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												//Стр_а.value=ДополнительныеРеквизитыШины.НаружныйДиаметр;
												//Стр_а.valueType=НРег(Строка(ДополнительныеРеквизитыШины.ЕдиинцаНаружногоДиаметра))
											Конецесли;
										ИначеЕсли  Стр_1.attr_name="Топливная экономичность" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ТопливнаяЭкономичность) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитыШины.ТопливнаяЭкономичность));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиинцаНаружногоДиаметра)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитыШины.ТопливнаяЭкономичность);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ТопливнаяЭкономичность);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Индекс сцепления с мокрой дорогой" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ИндексСцепленияСМокройДорогой) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитыШины.ИндексСцепленияСМокройДорогой));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиинцаНаружногоДиаметра)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитыШины.ИндексСцепленияСМокройДорогой);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ИндексСцепленияСМокройДорогой);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Уровень шума, в децибелах (dB)" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.УровеньШумаВДецибелах) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитыШины.УровеньШумаВДецибелах);
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиинцаНаружногоДиаметра)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитыШины.УровеньШумаВДецибелах;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Рисунок протектора" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.РисунокПротектроа) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитыШины.РисунокПротектроа));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиинцаНаружногоДиаметра)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитыШины.РисунокПротектроа);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.РисунокПротектроа);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Технология RunFlat" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ТехнологияRunFlat) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитыШины.ТехнологияRunFlat));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиинцаНаружногоДиаметра)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитыШины.ТехнологияRunFlat);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ТехнологияRunFlat);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Усиленная шина (XL, Extra Load)" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.УсиленнаяШина) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитыШины.УсиленнаяШина));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиинцаНаружногоДиаметра)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитыШины.УсиленнаяШина);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.УсиленнаяШина);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Шины с цельнометаллическим кордом" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ШинаСЦельнометаллическимКордом) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитыШины.ШинаСЦельнометаллическимКордом));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиинцаНаружногоДиаметра)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитыШины.ШинаСЦельнометаллическимКордом);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ШинаСЦельнометаллическимКордом);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Дополнительные характеристики изделия (описание)" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ДополнительныеХарактеристики) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитыШины.ДополнительныеХарактеристики);
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиинцаНаружногоДиаметра)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитыШины.ДополнительныеХарактеристики;
											КонецЕсли;
										Конецесли;
								
								ИначеЕсли Стр_1.attr_group_name="Состав" Тогда
										Если  Стр_1.attr_name="Комплектация" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.Состав) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитыШины.Состав);
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитыШины.ЕдиинцаНаружногоДиаметра)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитыШины.Состав;
											КонецЕсли;
											
										Конецесли;
								ИначеЕсли Стр_1.attr_group_name="Эксплуатация и условия хранения" Тогда
										Если  Стр_1.attr_name="Срок службы" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ТипСрокаСлужбы) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитыШины.СрокСлужбы);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитыШины.ТипСрокаСлужбы));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитыШины.СрокСлужбы;
												//Стр_а.valueType=Строка(ДополнительныеРеквизитыШины.ТипСрокаСлужбы)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Гарантийный срок, от производителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ТипГарантийногоСрока) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитыШины.ГарантийныйСрокОтПроизводителя);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитыШины.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитыШины.ГарантийныйСрокОтПроизводителя;
												//Стр_а.valueType=Строка(ДополнительныеРеквизитыШины.ТипГарантийногоСрока)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Особые условия хранения" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ОсобыеУсловияХранения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитыШины.ОсобыеУсловияХранения);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитыШины.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитыШины.ОсобыеУсловияХранения;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Рекомендации по использованию" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.РекомендацияПоИспользованию) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитыШины.РекомендацияПоИспользованию);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитыШины.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитыШины.РекомендацияПоИспользованию;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Срок хранения" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ТипСрокаХранения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитыШины.СрокХранения);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитыШины.ТипСрокаХранения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитыШины.СрокХранения;
												//Стр_а.valueType=Строка(ДополнительныеРеквизитыШины.ТипСрокаХранения)
											КонецЕсли;
										КонецЕсли;
									
									
								ИначеЕсли Стр_1.attr_group_name="Нормативно-сопроводительная документация" Тогда
										Если  Стр_1.attr_name="Номер Регламента/стандарта" Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 005/2011 ""О безопасности упаковки""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитыШины.ТипСрокаХранения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
											КонецЕсли;
											
											
											Если ДополнительныеРеквизитыШины.НомерРегламента018=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 018/2011 ""О безопасности колесных транспортных средств""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитыШины.ТипСрокаХранения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												
											КонецЕсли;
											
											
											Если ДополнительныеРеквизитыШины.НомерРегламента031=Истина Тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 031/2012 ""О безопасности сельскохозяйственных и лесохозяйственных тракторов и прицепов к ним""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитыШины.ТипСрокаХранения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												
											КонецЕсли;
											 
											
											
											
											//КонецЕсли;
										//Конецесли;
									
									
								КонецЕсли;
								
								
							//	Если Стр_1.attr_group_name="Состав" Тогда
							//		Стр_1.attributes[0].value="Мой состав";
							//	КонецЕсли;
								
							Конеццикла;
						ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода") Тогда
							Для Каждого Стр_1 Из NNN Цикл
								
								Если Стр_1.attr_group_name="Наименование товара и идентификация" Тогда
										Если Стр_1.attr_name="Заявленный объём / вес нетто" Тогда
											//Стр_а.value=объект
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.ЗаявленныйОбъемВесНетто)
												И Значениезаполнено(ДополнительныеРеквизитВода.ЕдиницаОбъема) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",формат(ДополнительныеРеквизитВода.ЗаявленныйОбъемВесНетто,"ЧГ=ЧРД=""."""));
															Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитВода.ЕдиницаОбъема)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												//Стр_а.value=формат(ДополнительныеРеквизитВода.ЗаявленныйОбъемВесНетто,"ЧГ=ЧРД="".""");
												//Стр_а.valueType=НРег(Строка(ДополнительныеРеквизитВода.ЕдиницаОбъема))
											Конецесли;
											
										//ИначеЕсли  Стр_1.attr_name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
								ИначеЕсли Стр_1.attr_group_name="Происхождение и бренды" Тогда
										Если  Стр_1.attr_name="СТМ" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.СТМ) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитВода.СТМ));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитВода.ЕдиницаОбъема)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитВода.СТМ);
											КонецЕсли;
											
										Конецесли;
								ИначеЕсли Стр_1.attr_group_name="Потребительские свойства" Тогда
										Если  Стр_1.attr_name="Общая минерализация" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.ОбщаяМинерализация)
												И Значениезаполнено(ДополнительныеРеквизитВода.ЕдиницаИзмеренияМинерализации) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",формат(ДополнительныеРеквизитВода.ОбщаяМинерализация,"ЧГ=ЧРД=""."""));
															Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитВода.ЕдиницаИзмеренияМинерализации)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												//Стр_а.value=формат(ДополнительныеРеквизитВода.ОбщаяМинерализация,"ЧГ=ЧРД="".""");
												//Стр_а.valueType=НРег(Строка(ДополнительныеРеквизитВода.ЕдиницаИзмеренияМинерализации))
											Конецесли;
										иначеЕсли  Стр_1.attr_name="Метод газирования" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.МетодГазирования) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитВода.МетодГазирования));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитВода.ЕдиницаИзмеренияМинерализации)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитВода.МетодГазирования);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитВода.МетодГазирования);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Тип продукта" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.ТипПродукта) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитВода.ТипПродукта));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитВода.ЕдиницаИзмеренияМинерализации)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитВода.ТипПродукта);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитВода.ТипПродукта);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Продукция для детского питания" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.ПродукцияДляДетскогоПитания) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитВода.ПродукцияДляДетскогоПитания));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитВода.ЕдиницаИзмеренияМинерализации)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитВода.ПродукцияДляДетскогоПитания);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитВода.ПродукцияДляДетскогоПитания);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
											
										ИначеЕсли  Стр_1.attr_name="Содержит ГМО" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.СодержитГМО) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныеРеквизитВода.СодержитГМО));
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитВода.ЕдиницаИзмеренияМинерализации)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныеРеквизитВода.СодержитГМО);
												//Стр_а.valueTitle=Строка(ДополнительныеРеквизитВода.СодержитГМО);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
											
										Конецесли;
								
								ИначеЕсли Стр_1.attr_group_name="Состав" Тогда
										Если  Стр_1.attr_name="Состав" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.Состав) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитВода.Состав);
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнительныеРеквизитВода.ЕдиницаИзмеренияМинерализации)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитВода.Состав;
											КонецЕсли;
											
										Конецесли;
								ИначеЕсли Стр_1.attr_group_name="Эксплуатация и условия хранения" Тогда
										Если  Стр_1.attr_name="Срок годности" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.ТипСрокаГодности) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитВода.СрокГодности);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитВода.ТипСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитВода.СрокГодности;
												//Стр_а.valueType=Строка(ДополнительныеРеквизитВода.ТипСрокаГодности)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Рекомендации по употреблению" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.РекомендацияПоУпотреблению) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныеРеквизитВода.РекомендацияПоУпотреблению);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныеРеквизитВода.ТипСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныеРеквизитВода.РекомендацияПоУпотреблению;
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Альтернативный срок годности" Тогда
											
											Если ДополнительныеРеквизитВода.ДополнительныеСрокиГодности.Количество()>0 Тогда
												
												Для Каждого Стр_ Из ДополнительныеРеквизитВода.ДополнительныеСрокиГодности Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.СрокГодности);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
													Конеццикла;
												КонецЕсли;
												
										ИначеЕсли  Стр_1.attr_name="Дополнительный срок годности" Тогда
											
											Если ДополнительныеРеквизитВода.ДополнительныеСрокиГодности.Количество()>0 Тогда
												
												Для Каждого Стр_ Из ДополнительныеРеквизитВода.ДополнительныеСрокиГодности Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.СрокГодности);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
													Конеццикла;
												КонецЕсли;
											КонецЕсли;
										//Конецесли;
								ИначеЕсли Стр_1.attr_group_name="Нормативно-сопроводительная документация" Тогда
										Если  Стр_1.attr_name="Номер Регламента/стандарта" Тогда
											
											Если ДополнительныеРеквизитВода.НомерРегламента005=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 005/2011 ""О безопасности упаковки""");
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
															
														КонецЕсли;
											
											Если ДополнительныеРеквизитВода.НомерРегламента021=Истина Тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 021/2011 ""О безопасности пищевой продукции""");
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
																								
												
											КонецЕсли;
											
											
											Если ДополнительныеРеквизитВода.НомерРегламента027=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 027/2012 ""О безопасности отдельных видов специализированной пищевой продукции, в том числе диетического лечебного и диетического профилактического питания""");
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
																								
												
												
											КонецЕсли;
											

											Если ДополнительныеРеквизитВода.НомерРегламента029=Истина Тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 029/2012 ""Требования к безопасности пищевых добавок, ароматизаторов и технологических вспомогательных средств""");
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
																								
											КонецЕсли;
											

											
											
											
										ИначеЕсли  Стр_1.attr_name="ГОСТ / ТУ / СТО" Тогда
											
											Если ДополнительныеРеквизитВода.ГОСТЫИТУ.Количество()>0 Тогда
												
												Первая=ложь;
												Для Каждого Стр_ Из ДополнительныеРеквизитВода.ГОСТЫИТУ Цикл
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.ГОСТТУ);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												Конеццикла;
												КонецЕсли;
											КонецЕсли;
										//Конецесли;
								КонецЕсли;
								
								
							//	Если Стр_1.attr_group_name="Состав" Тогда
							//		Стр_1.attributes[0].value="Мой состав";
							//	КонецЕсли;
								
							Конеццикла;
							
						ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Молоко") Тогда
														
							Для Каждого Стр_1 Из NNN Цикл
								
								Если Стр_1.attr_group_name="Наименование товара и идентификация" Тогда
										Если Стр_1.attr_name="Заявленный объём / вес нетто" Тогда
											//Стр_а.value=объект
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ЗаявленныйОбъемВесНетто)
												И Значениезаполнено(ДополнителныеРеквизитМолоко.ЕдиницаОбъема) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",формат(ДополнителныеРеквизитМолоко.ЗаявленныйОбъемВесНетто,"ЧГ=ЧРД=""."""));
															Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнителныеРеквизитМолоко.ЕдиницаОбъема)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												//Стр_а.value=формат(ДополнителныеРеквизитМолоко.ЗаявленныйОбъемВесНетто,"ЧГ=ЧРД="".""");
												//Стр_а.valueType=НРег(Строка(ДополнителныеРеквизитМолоко.ЕдиницаОбъема))
											Конецесли;
											
										ИначеЕсли Стр_1.attr_name="Базовая единица измерения" Тогда
											Если ДополнителныеРеквизитМолоко.ТоварВесовой Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","КГ");
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнителныеРеквизитМолоко.ЕдиницаОбъема)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value="КГ";
											Иначе
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","КГ");
															//Структура_добавим.Вставить("attr_value_type",НРег(Строка(ДополнителныеРеквизитМолоко.ЕдиницаОбъема)));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value="ШТ";
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Количество единиц употребления в потребительской упаковке" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Формат(ДополнителныеРеквизитМолоко.КоличествоВПотребительскойУпаковке,"ЧГ="));
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Формат(ДополнителныеРеквизитМолоко.КоличествоВПотребительскойУпаковке,"ЧГ=");
												//Стр_а.valueType=Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка)
												
											КонецЕсли;
									 	//ИначеЕсли  Стр_1.attr_name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
								
								ИначеЕсли Стр_1.attr_group_name="Происхождение и бренды" Тогда
										Если  Стр_1.attr_name="СТМ" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.СТМ) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.СТМ));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.СТМ);
											КонецЕсли;
											
										Конецесли;
																
								ИначеЕсли Стр_1.attr_group_name="Потребительские свойства" Тогда
										Если  Стр_1.attr_name="Тип продукта" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ТипПродукта) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.ТипПродукта));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ТипПродукта);
												//Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ТипПродукта);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Происхождение сырья" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ПроисхождениеСырья) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.ПроисхождениеСырья));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ПроисхождениеСырья);
												//Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ПроисхождениеСырья);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Жирность, %" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.Жирность) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",формат(ДополнителныеРеквизитМолоко.Жирность,"ЧГ=ЧРД=""."""));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=формат(ДополнителныеРеквизитМолоко.Жирность,"ЧГ=ЧРД="".""");;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Продукция для детского питания" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ПродукцияДляДетскогоПитания) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.ПродукцияДляДетскогоПитания));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ПродукцияДляДетскогоПитания);
												//Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ПродукцияДляДетскогоПитания);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Содержит ГМО" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.СодержитГМО) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.СодержитГМО));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.СодержитГМО);
												//Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.СодержитГМО);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Пищевые добавки / ароматизаторы" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ПищевыеДобавкиАроматизаторы) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.ПищевыеДобавкиАроматизаторы));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ПищевыеДобавкиАроматизаторы);;
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Вкус" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.Вкус) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.Вкус));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.Вкус);;
											КонецЕсли;
											
										ИначеЕсли Стр_1.attr_name="Заменитель молочного жира" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ЗаменительМолочногоЖира) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.ЗаменительМолочногоЖира));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ЗаменительМолочногоЖира);
												//Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ЗаменительМолочногоЖира);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Тип обработки молока" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ТипОбработкиМолока) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.ТипОбработкиМолока));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ТипОбработкиМолока);
												//Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ТипОбработкиМолока);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Целевой возраст" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ЦелевойВозраст) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.ЦелевойВозраст));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ЦелевойВозраст);
												//Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ЦелевойВозраст);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Тип хранения" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ТипХранения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.ТипХранения));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ТипХранения);
												//Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ТипХранения);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Органический продукт" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ОрганическийПродукт) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.ОрганическийПродукт));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ОрганическийПродукт);
												//Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ОрганическийПродукт);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Содержит пальмовое масло" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.СодержитПальмовоеМасло) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.СодержитПальмовоеМасло));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.СодержитПальмовоеМасло);
												//Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.СодержитПальмовоеМасло);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли Стр_1.attr_name="Витаминизация" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.Витаминизация) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.Витаминизация));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.Витаминизация);
												//Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.Витаминизация);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Аллергены" Тогда
											
											 Если ДополнителныеРеквизитМолоко.Аллергены.Количество()>0 Тогда
												
												Для Каждого Стр_ Из ДополнителныеРеквизитМолоко.Аллергены Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(Стр_.Аллерген));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
													
													Конеццикла;
												КонецЕсли;
											

											
										Конецесли;
									
								ИначеЕсли Стр_1.attr_group_name="Пищевая и энергетическая ценности" Тогда
									
										Если Стр_1.attr_name="Белки" Тогда
											Если ЗначениеЗАполнено(ДополнителныеРеквизитМолоко.БелкиЕдиницаИзмерения) тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнителныеРеквизитМолоко.Белки);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.БелкиЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнителныеРеквизитМолоко.Белки;
												//Стр_а.valueType=Строка(ДополнителныеРеквизитМолоко.БелкиЕдиницаИзмерения)

											КонецЕсли;
											
										ИначеЕсли Стр_1.attr_name="Жиры" Тогда
											Если ЗначениеЗАполнено(ДополнителныеРеквизитМолоко.ЖирыЕдиницаИзмерения) тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнителныеРеквизитМолоко.Жиры);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ЖирыЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнителныеРеквизитМолоко.Жиры;
												//Стр_а.valueType=Строка(ДополнителныеРеквизитМолоко.ЖирыЕдиницаИзмерения)

											КонецЕсли;
											
										ИначеЕсли Стр_1.attr_name="Углеводы" Тогда
											Если ЗначениеЗАполнено(ДополнителныеРеквизитМолоко.УглеводыЕдиницаИзмерения) тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнителныеРеквизитМолоко.Углеводы);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.УглеводыЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнителныеРеквизитМолоко.Углеводы;
												//Стр_а.valueType=Строка(ДополнителныеРеквизитМолоко.УглеводыЕдиницаИзмерения)

											КонецЕсли;
											
										ИначеЕсли Стр_1.attr_name="Энергетическая ценность" Тогда
											
											Если ДополнителныеРеквизитМолоко.ЭнергетическаяЦенность.Количество()>0 Тогда
												
												Для Каждого Стр_ Из ДополнителныеРеквизитМолоко.ЭнергетическаяЦенность Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(Стр_.ЭнергетическаяЦенность));
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
													Конеццикла;
												КонецЕсли;
											

											

											
										КонецЕсли;

								ИначеЕсли Стр_1.attr_group_name="Эксплуатация и условия хранения" Тогда
										Если  Стр_1.attr_name="Срок годности" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ТипСрокаГодности) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнителныеРеквизитМолоко.СрокГодности);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ТипСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнителныеРеквизитМолоко.СрокГодности;
												//Стр_а.valueType=Строка(ДополнителныеРеквизитМолоко.ТипСрокаГодности)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Особые условия хранения" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ОсобыеУсловияХранения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнителныеРеквизитМолоко.ОсобыеУсловияХранения);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ТипСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнителныеРеквизитМолоко.ОсобыеУсловияХранения;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Рекомендации по употреблению" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.РекомендацияПоУпотреблению) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнителныеРеквизитМолоко.РекомендацияПоУпотреблению);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ТипСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнителныеРеквизитМолоко.РекомендацияПоУпотреблению;
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Альтернативный срок годности" Тогда
											
											Если ДополнителныеРеквизитМолоко.ДополнительныеСрокиГодности.Количество()>0 Тогда
												
												Для Каждого Стр_ Из ДополнителныеРеквизитМолоко.ДополнительныеСрокиГодности Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.СрокГодности);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
													
													Конеццикла;
												КонецЕсли;
												
										ИначеЕсли  Стр_1.attr_name="Дополнительный срок годности" Тогда
											
											Если ДополнителныеРеквизитМолоко.ДополнительныеСрокиГодности.Количество()>0 Тогда
												
												Для Каждого Стр_ Из ДополнителныеРеквизитМолоко.ДополнительныеСрокиГодности Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.СрокГодности);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
													Конеццикла;
												КонецЕсли;
											КонецЕсли;
										//Конецесли;
									
									
									
									
								ИначеЕсли Стр_1.attr_group_name="Нормативно-сопроводительная документация" Тогда
									
										Если  Стр_1.attr_name="Номер Регламента/стандарта" Тогда
											
											Если ДополнителныеРеквизитМолоко.НомерРегламента005=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 005/2011 ""О безопасности упаковки""");
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												
											КонецЕсли;
											
											Если ДополнителныеРеквизитМолоко.НомерРегламента021=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 021/2011 ""О безопасности пищевой продукции""");
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
											КонецЕсли;
											
											
											Если ДополнителныеРеквизитМолоко.НомерРегламента027=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 027/2012 ""О безопасности отдельных видов специализированной пищевой продукции, в том числе диетического лечебного и диетического профилактического питания""");
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
											КонецЕсли;
											

											Если ДополнителныеРеквизитМолоко.НомерРегламента029=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 029/2012 ""Требования к безопасности пищевых добавок, ароматизаторов и технологических вспомогательных средств""");
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												
											КонецЕсли;
											

											Если ДополнителныеРеквизитМолоко.НомерРегламента033=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 033/2013 ""О безопасности молока и молочной продукции""");
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
											КонецЕсли;
											

											Если ДополнителныеРеквизитМолоко.НомерРегламента022=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 022/2011 ""Пищевая продукция в части ее маркировки""");
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
																								
											КонецЕсли;
											
											Если ДополнителныеРеквизитМолоко.НомерРегламента024=Истина Тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 024/2011 ""Технический регламент на масложировую продукцию""");
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипДополнительногоСрокаГодности));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
											КонецЕсли;
											
											
											
										ИначеЕсли  Стр_1.attr_name="ГОСТ / ТУ / СТО" Тогда
											
											Если ДополнителныеРеквизитМолоко.ГОСТЫИТУ.Количество()>0 Тогда
												
												Для Каждого Стр_ Из ДополнителныеРеквизитМолоко.ГОСТЫИТУ Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.ГОСТТУ);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
													Конеццикла;
												КонецЕсли;
											КонецЕсли;
									
									
									
									
									
									
									
									
									
									
								ИначеЕсли Стр_1.attr_group_name="Состав" Тогда
										Если  Стр_1.attr_name="Состав" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.Состав) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнителныеРеквизитМолоко.Состав);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнителныеРеквизитМолоко.Состав;
											КонецЕсли;
											
										Конецесли;
								ИначеЕсли Стр_1.attr_group_name="Данные для ФГИС ВетИС" Тогда
									
									
										Если  Стр_1.attr_name="Подлежит ветеринарному контролю (надзору)" Тогда
											//Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ИдентификаторТовараВФГИСМеркурий) Тогда
											
											Если ДополнителныеРеквизитМолоко.ПодлежитВетеринарномуКонтролю ТОгда
												ЗапишемПодл="ДА"
											Иначе
												ЗапишемПодл="НЕТ"
												
											Конецесли;
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ЗапишемПодл));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
											//Стр_а.value=Строка(ЗапишемПодл);
											//Стр_а.valueTitle=Строка(ЗапишемПодл);
											//Стр_а.valueType=Неопределено ;
											
											
											
										ИначеЕсли Стр_1.attr_name="Тип продукции" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ТипПродукции) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.ТипПродукции));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ТипПродукции);
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Продукция" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.Продукция) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.Продукция));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.Продукция);
											КонецЕсли;
											
										ИначеЕсли Стр_1.attr_name="Вид продукции" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ВидПродукции) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.ВидПродукции));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ВидПродукции);
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Категория продукции" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.КатегорияПродукции) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.КатегорияПродукции));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.КатегорияПродукции);
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="ГОСТ" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ТипГОСТ) ИЛИ
												ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ГОСТ)
												Тогда
											
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
											Конецесли;
												МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
											
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ТипГОСТ) Тогда
												Структура_добавим.Вставить("attr_value_type",Строка(ДополнителныеРеквизитМолоко.ТипГОСТ));
												//Стр_а.valueType=Строка(ДополнителныеРеквизитМолоко.ТипГОСТ)
											Конецесли;
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ГОСТ) Тогда
												Структура_добавим.Вставить("attr_value",ДополнителныеРеквизитМолоко.ГОСТ);
												//Стр_а.value=ДополнителныеРеквизитМолоко.ГОСТ
											Конецесли;
										ИначеЕсли Стр_1.attr_name="ХС-производитель" Тогда
											
											Если ЗначениеЗаполненО(ДополнителныеРеквизитМолоко.ХСПроизводитель) Тогда
												СтруктурК=ПолучитьИнфуПоХСИПл(ДополнителныеРеквизитМолоко.ХСПроизводитель);
												
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",СтруктурК.ГУИД);
															Структура_добавим.Вставить("attr_value_type",СтруктурК.Наименование);
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												//Стр_а.value=СтруктурК.ГУИД;
												//Стр_а.valueTitle=СтруктурК.Наименование;
												
												
											Конецесли;
											
											
										ИначеЕсли Стр_1.attr_name="Предприятие-производитель" Тогда
											Для Каждого Стр_222 Из ДополнителныеРеквизитМолоко.ПредприятияПроизводители Цикл
												Если Не ЗначениеЗАполнено(Стр_222.ПредприятиеПроизводитель) ТОгда
													Продолжить;
												Конецесли;
												СтруктурК=ПолучитьИнфуПоХСИПл(Стр_222.ПредприятиеПроизводитель);
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",СтруктурК.ГУИД);
															Структура_добавим.Вставить("attr_value_type",СтруктурК.Наименование);
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
											Конеццикла;
											
										ИначеЕсли Стр_1.attr_name="Массовая доля белка, %" Тогда
											Для Каждого Стр_222 Из ДополнителныеРеквизитМолоко.МассоваяДоляБелка Цикл
												Если Не ЗначениеЗАполнено(Стр_222.Вид) 
													И Не ЗначениеЗАполнено(Стр_222.МассоваяДоляБелка)
													
													ТОгда
													Продолжить;
												Конецесли;
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Формат(Стр_222.МассоваяДоляБелка,"ЧГ="));
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_222.Вид));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);

												
											Конеццикла;
											
											
																				//	
										ИначеЕсли Стр_1.attr_name="Массовая доля жира, %" Тогда
											
											Для Каждого Стр_222 Из ДополнителныеРеквизитМолоко.МассоваяДоляЖира Цикл
												Если Не ЗначениеЗАполнено(Стр_222.Вид) 
													И Не ЗначениеЗАполнено(Стр_222.МассоваяДоляЖира)
													
													ТОгда
													Продолжить;
												Конецесли;

															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Формат(Стр_222.МассоваяДоляЖира,"ЧГ="));
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_222.Вид));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
											Конеццикла;
											
										Конецесли;
												
									
								ИначеЕсли Стр_1.attr_group_name="ФГИС ВетИС" Тогда
									
									МассивИДГУИДВ=Новый Массив;
									//ДополнителныеРеквизитМолоко.ИдентификаторыТовараВФГИСМеркурий.Очистить();
										Если  Стр_1.attr_name="Идентификатор товара в ФГИС ВетИС (GUID ProductItem)" Тогда
											
											Для Каждого Стр_222 Из ДополнителныеРеквизитМолоко.ИдентификаторыТовараВФГИСМеркурий Цикл
												Если Не ЗначениеЗАполнено(Стр_222.ИдентификаторТовараВФГИСМеркурий) 
													ТОгда
													Продолжить;
												Конецесли;
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_222.ИдентификаторТовараВФГИСМеркурий);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_222.Вид));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												

												
											Конеццикла;

											//Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ИдентификаторТовараВФГИСМеркурий) Тогда
											//	Стр_а.value=ДополнителныеРеквизитМолоко.ИдентификаторТовараВФГИСМеркурий;
											//КонецЕсли;
											
										Конецесли;
									
										
								ИначеЕсли Стр_1.attr_group_name="Дополнительная информация" Тогда
										Если  Стр_1.attr_name="Заявление о жирности продукта" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ЗаявленияОЖирностиМолока) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.ЗаявленияОЖирностиМолока));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_222.Вид));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ЗаявленияОЖирностиМолока);
												//Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ЗаявленияОЖирностиМолока);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Обогащающие компоненты" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ОбогащающиеКомпоненты) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.ОбогащающиеКомпоненты));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_222.Вид));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ОбогащающиеКомпоненты);
												//Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ОбогащающиеКомпоненты);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Социально значимый товар" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.СоциальноЗначимыйТовар) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.СоциальноЗначимыйТовар));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_222.Вид));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.СоциальноЗначимыйТовар);
												//Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.СоциальноЗначимыйТовар);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Заявление о пригодности для диетического питания" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ЗаявлениеОПригодностиДляДиетическогоПитания) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.ЗаявлениеОПригодностиДляДиетическогоПитания));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_222.Вид));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ЗаявлениеОПригодностиДляДиетическогоПитания);
												//Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ЗаявлениеОПригодностиДляДиетическогоПитания);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Особенности питания" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ОсобенностиПитания) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнителныеРеквизитМолоко.ОсобенностиПитания));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_222.Вид));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ОсобенностиПитания);
												//Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ОсобенностиПитания);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										Конецесли;
									
									
								КонецЕсли;
								
								
								
							//	Если Стр_1.attr_group_name="Состав" Тогда
							//		Стр_1.attributes[0].value="Мой состав";
							//	КонецЕсли;
								
							Конеццикла;
							
							
						ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Обувь") Тогда
							Для Каждого Стр_1 Из NNN Цикл
								
								Если Стр_1.attr_group_name="Происхождение и бренды" Тогда        
										Если  Стр_1.attr_name="СТМ" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.СТМ) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитОбувь.СТМ));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_222.Вид));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитОбувь.СТМ);
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Модель / артикул производителя" Тогда
											Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул)
												И ДополнительныйРеквизитБелье.ДопМодельАртикулы.Количество()=0 Тогда
												
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Объект.МодельПроизводителяАртикул);
															Структура_добавим.Вставить("attr_value_type",Строка("Артикул"));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
											КонецЕсли;
											Для Каждого Стр_22 Из ДополнительныйРеквизитОбувь.ДопМодельАртикулы Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_22.МодельАртикул);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
															
												Конеццикла;
											
										Конецесли;
																
								ИначеЕсли Стр_1.attr_group_name="Потребительские свойства" Тогда 
										Если  Стр_1.attr_name="Вид обуви" Тогда
											Если ЗначениеЗаполнено(Объект.ВидОбуви) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(Объект.ВидОбуви)));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(Объект.ВидОбуви));
												//Стр_а.valueTitle=Врег(Строка(Объект.ВидОбуви));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Цвет" Тогда
											Если ЗначениеЗаполнено(Объект.Цвет) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(Объект.Цвет)));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(Объект.Цвет));
												//Стр_а.valueTitle=Врег(Строка(Объект.Цвет));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Целевой возраст" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ЦелевойВозраст) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(ДополнительныйРеквизитОбувь.ЦелевойВозраст)));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ЦелевойВозраст));
												//Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ЦелевойВозраст));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Пол целевого потребителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ПолЦелевогоПотребителя) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(ДополнительныйРеквизитОбувь.ПолЦелевогоПотребителя)));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ПолЦелевогоПотребителя));
												//Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ПолЦелевогоПотребителя));
												//Стр_а.valueType=Неопределено
												
											ИначеЕсли ЗначениеЗаполнено(Объект.Пол) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(Объект.Пол)));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(Объект.Пол));
												//Стр_а.valueTitle=Врег(Строка(Объект.Пол));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Размер в штихмассовой системе" Тогда
											Если ЗначениеЗаполнено(Объект.Размер) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(Объект.Размер)));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(Объект.Размер));
												//Стр_а.valueTitle=Врег(Строка(Объект.Размер));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Размер в метрической системе, мм" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.РазмерВМетрическойСистемемм) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(Объект.РазмерВМетрическойСистемемм)));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(Объект.РазмерВМетрическойСистемемм));
												//Стр_а.valueTitle=Врег(Строка(Объект.РазмерВМетрическойСистемемм));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
											
										ИначеЕсли  Стр_1.attr_name="Размер в иных системах измерения" Тогда
											
											Если ДополнительныйРеквизитОбувь.РазмерВИныхСистемахИзмерения.Количество()>0 Тогда
													
													Для Каждого Стр_ Из ДополнительныйРеквизитОбувь.РазмерВИныхСистемахИзмерения Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.Размер);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.Страна));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
													Конеццикла;
											КонецЕсли;
																									
										ИначеЕсли  Стр_1.attr_name="Длина стельки, см" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ДлинаСтелькисм) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбувь.ДлинаСтелькисм);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.Страна));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбувь.ДлинаСтелькисм;
											Конецесли;
											
																									
										ИначеЕсли  Стр_1.attr_name="Размер полноты обуви" Тогда
											
											Если ЗначениеЗАполнено(ДополнительныйРеквизитОбувь.РазмерПолнотыОбувиСистема) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбувь.РазмерПолнотыОбуви);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.РазмерПолнотыОбувиСистема));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
													//Стр_а.value=ДополнительныйРеквизитОбувь.РазмерПолнотыОбуви;
													//Стр_а.valueType=Строка(ДополнительныйРеквизитОбувь.РазмерПолнотыОбувиСистема)
											Конецесли;
										ИначеЕсли  Стр_1.attr_name="Наличие каблука" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.НаличиеКаблука) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(ДополнительныйРеквизитОбувь.НаличиеКаблука)));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.РазмерПолнотыОбувиСистема));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.НаличиеКаблука));
												//Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.НаличиеКаблука));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Высота каблука" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ВысотаКаблука) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(ДополнительныйРеквизитОбувь.ВысотаКаблука)));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.РазмерПолнотыОбувиСистема));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ВысотаКаблука));
												//Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ВысотаКаблука));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Цвет фурнитуры" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ЦветФурнитуры) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(ДополнительныйРеквизитОбувь.ЦветФурнитуры)));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.РазмерПолнотыОбувиСистема));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ЦветФурнитуры));
												//Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ЦветФурнитуры));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Цвет фурнитуры" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ЦветФурнитуры) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(ДополнительныйРеквизитОбувь.ЦветФурнитуры)));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.РазмерПолнотыОбувиСистема));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ЦветФурнитуры));
												//Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ЦветФурнитуры));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Водонепроницаемая/Водостойкая" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ВодонепроницаемаяВодостойкая) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(ДополнительныйРеквизитОбувь.ВодонепроницаемаяВодостойкая)));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.РазмерПолнотыОбувиСистема));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ВодонепроницаемаяВодостойкая));
												//Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ВодонепроницаемаяВодостойкая));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Имеет ли гладкую подошву" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ИмеетЛиГладкуюПодошву) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(ДополнительныйРеквизитОбувь.ИмеетЛиГладкуюПодошву)));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.РазмерПолнотыОбувиСистема));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ИмеетЛиГладкуюПодошву));
												//Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ИмеетЛиГладкуюПодошву));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Тип частично закрытого верха" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ТипЧастичноЗакрытогоВерха) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(ДополнительныйРеквизитОбувь.ТипЧастичноЗакрытогоВерха)));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.РазмерПолнотыОбувиСистема));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ТипЧастичноЗакрытогоВерха));
												//Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ТипЧастичноЗакрытогоВерха));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Тип застежки" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ТипЗастежки) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(ДополнительныйРеквизитОбувь.ТипЗастежки)));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.РазмерПолнотыОбувиСистема));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ТипЗастежки));
												//Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ТипЗастежки));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Сезонность" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.Сезонность) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(ДополнительныйРеквизитОбувь.Сезонность)));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.РазмерПолнотыОбувиСистема));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.Сезонность));
												//Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.Сезонность));
												//Стр_а.valueType=Неопределено
											ИначеЕсли ЗначениеЗаполнено(Объект.Сезон) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(Объект.Сезон)));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.РазмерПолнотыОбувиСистема));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(Объект.Сезон));
												//Стр_а.valueTitle=Врег(Строка(Объект.Сезон));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										Конецесли;
									

								ИначеЕсли Стр_1.attr_group_name="Состав" Тогда
										Если  Стр_1.attr_name="Материал верха" Тогда
											Если ЗначениеЗаполнено(Объект.МатериалВерха) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(Объект.МатериалВерха)));
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.РазмерПолнотыОбувиСистема));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(Объект.МатериалВерха));
												//Стр_а.valueTitle=Врег(Строка(Объект.МатериалВерха));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Материал верха, %" Тогда
											
											Если ДополнительныйРеквизитОбувь.МатериалВерха.Количество()>0 Тогда
													
													Для Каждого Стр_ Из ДополнительныйРеквизитОбувь.МатериалВерха Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.МатериалВверха);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.Процент));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
														
													Конеццикла;
												КонецЕсли;	
										ИначеЕсли  Стр_1.attr_name="Материал подкладки" Тогда
											Если ЗначениеЗаполнено(Объект.МатериалПодкладки) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(Объект.МатериалПодкладки)));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.Процент));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(Объект.МатериалПодкладки));
												//Стр_а.valueTitle=Врег(Строка(Объект.МатериалПодкладки));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Материал подкладки, %" Тогда
											Если ДополнительныйРеквизитОбувь.МатериалПодкладки.Количество()>0 Тогда
													
													Для Каждого Стр_ Из ДополнительныйРеквизитОбувь.МатериалПодкладки Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.МатериалПодкладки);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.Процент));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
													Конеццикла;
												КонецЕсли;	
										ИначеЕсли  Стр_1.attr_name="Материал стельки" Тогда
											Если ЗначениеЗаполнено(Объект.Стелька) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(Объект.Стелька)));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.Процент));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(Объект.Стелька));
												//Стр_а.valueTitle=Врег(Строка(Объект.Стелька));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Материал стельки, %" Тогда
											Если ДополнительныйРеквизитОбувь.МатериалСтельки.Количество()>0 Тогда
													
													Для Каждого Стр_ Из ДополнительныйРеквизитОбувь.МатериалСтельки Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.МатериалСтельки);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.Процент));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
														
													Конеццикла;
												КонецЕсли;	
											
										ИначеЕсли  Стр_1.attr_name="Материал низа / подошвы" Тогда
											Если ЗначениеЗаполнено(Объект.МатериалНиза) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Врег(Строка(Объект.МатериалНиза)));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.Процент));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Врег(Строка(Объект.МатериалНиза));
												//Стр_а.valueTitle=Врег(Строка(Объект.МатериалНиза));
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Материал низа / подошвы, %" Тогда
											Если ДополнительныйРеквизитОбувь.МатериалНизаПодошвы.Количество()>0 Тогда
													
													Для Каждого Стр_ Из ДополнительныйРеквизитОбувь.МатериалНизаПодошвы Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.МатериалНизаПодошвы);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.Процент));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
													Конеццикла;
												КонецЕсли;	

											
											
										КонецЕсли;
										
										
								ИначеЕсли Стр_1.attr_group_name="Характеристики товара в состоянии использования" Тогда
										Если  Стр_1.attr_name="Ширина изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ШиринаЕдиницаИзмерения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбувь.Ширина);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ШиринаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбувь.Ширина;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитОбувь.ШиринаЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Высота изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ВысотаЕдиницаИзмерения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбувь.Высота);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ВысотаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбувь.Высота;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитОбувь.ВысотаЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Глубина изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ГлубинаЕдиницаИзмерения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбувь.Глубина);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ГлубинаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбувь.Глубина;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитОбувь.Глубина)
											КонецЕсли;
										Конецесли;
									
							ИначеЕсли Стр_1.attr_group_name="Эксплуатация и условия хранения" Тогда
							     		Если Стр_1.attr_name="Мин. температура, С" Тогда
											Если Значениезаполнено(ДополнительныйРеквизитОбщиеНК.МинимальнаяТемпература
										) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбщиеНК.МинимальнаяТемпература);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ГлубинаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
											//Стр_а.value=ДополнительныйРеквизитОбщиеНК.МинимальнаяТемпература
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Макс. температура, С" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.МаксимальнаяТемпература) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбщиеНК.МаксимальнаяТемпература);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ГлубинаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбщиеНК.МаксимальнаяТемпература
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Мин. относительная влажность, %" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.МинимальнаяОтносительнаяВлажность) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбщиеНК.МинимальнаяОтносительнаяВлажность);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ГлубинаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбщиеНК.МинимальнаяОтносительнаяВлажность
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Макс. относительная влажность, %" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.МаксимальнаяОтносительнаяВлажность) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбщиеНК.МаксимальнаяОтносительнаяВлажность);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ГлубинаЕдиницаИзмерения));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбщиеНК.МаксимальнаяОтносительнаяВлажность
												
											КонецЕсли;
										//ИначеЕсли  Стр_1.attr_name="Заявленный объём / вес нетто" Тогда
											
										ИначеЕсли  Стр_1.attr_name="Срок службы" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ТипСрокаСлужбы) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбувь.СрокСлужбы);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ТипСрокаСлужбы));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбувь.СрокСлужбы;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитОбувь.ТипСрокаСлужбы)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Гарантийный срок, от производителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ТипГарантийногоСрока) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбувь.ГарантийныйСрокОтПроизводителя);
															Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбувь.ГарантийныйСрокОтПроизводителя;
												//Стр_а.valueType=Строка(ДополнительныйРеквизитОбувь.ТипГарантийногоСрока)
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Особые условия хранения" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ОсобыеУсловияХранения) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбувь.ОсобыеУсловияХранения);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбувь.ОсобыеУсловияХранения;
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Рекомендации по использованию" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.РекомендацияПоИспользованию) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбувь.РекомендацияПоИспользованию);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбувь.РекомендацияПоИспользованию;
											КонецЕсли;											
										Конецесли;
						ИначеЕсли Стр_1.attr_group_name="Нормативно-сопроводительная документация" Тогда
										Если  Стр_1.attr_name="BRICK GPC" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.BRICKGPC) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбувь.BRICKGPC);
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбувь.BRICKGPC
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Номер Регламента/стандарта" Тогда
											
											Если ДополнительныйРеквизитОбувь.НомерРегламента005=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 005/2011 ""О безопасности упаковки""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
											КонецЕсли;
											
											
											Если ДополнительныйРеквизитОбувь.НомерРегламента007=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 007/2011 ""О безопасности продукции, предназначенной для детей и подростков""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												
											КонецЕсли;
											
											
											Если ДополнительныйРеквизитОбувь.НомерРегламента017=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 017/2011 ""О безопасности продукции легкой промышленности""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												
											КонецЕсли;
											
											Если ДополнительныйРеквизитОбувь.НомерРегламента019=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ТР ТС 019/2011 ""О безопасности средств индивидуальной защиты""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												
											КонецЕсли;
											
											
											Если ДополнительныйРеквизитОбувь.ФЗ123=Истина Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","ФЗ от 22.07.2008 N 123-ФЗ ""Технический регламент о требованиях пожарной безопасности""");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												
											КонецЕсли;
											
											
											 Если ДополнительныйРеквизитОбувь.БезРегламента=Истина Тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value","Действие технических регламентов не распространяется");
															//Структура_добавим.Вставить("attr_value_type",Строка(ДополнительныйРеквизитОбувь.ТипГарантийногоСрока));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="ГОСТ / ТУ / СТО" Тогда
											
											Если ДополнительныйРеквизитОбувь.ГОСТЫИТУ.Количество()>0 Тогда
												
												Для Каждого Стр_ Из ДополнительныйРеквизитОбувь.ГОСТЫИТУ Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.ГОСТТУ);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												Конеццикла;
												
											КонецЕсли;
										КонецЕсли
											
											
									

								ИначеЕсли Стр_1.attr_group_name="Сведения о свидетельствах о гос. регистрации" Тогда
										Если  Стр_1.attr_name="Номер экспертного заключения (ЭЗ)" Тогда
											Если	 ДополнительныйРеквизитОбувь.СведенияОСвидетельствахОГосРегистрации.Количество()>0 Тогда
													
												Для Каждого Стр_ Из ДополнительныйРеквизитОбувь.СведенияОСвидетельствахОГосРегистрации Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.НомерЭкспертногоЗаключенияЭЗ);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_.ТипГОСТТУ));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
													
													
												Конеццикла;
													 

													 
												КонецЕсли;	

											
												
											КонецЕсли;
									
									
								ИначеЕсли Стр_1.attr_group_name="Происхождение и бренды" Тогда
										Если  Стр_1.attr_name="Модель / артикул производителя" Тогда
											Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул)
												И ДополнительныйРеквизитБелье.ДопМодельАртикулы.Количество()=0 Тогда
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Объект.МодельПроизводителяАртикул);
															Структура_добавим.Вставить("attr_value_type",Строка("Артикул"));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												
												КонецЕсли;
											Для Каждого Стр_22 Из ДополнительныйРеквизитБелье.ДопМодельАртикулы Цикл
												
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_22.МодельАртикул);
															Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												
												
												
											Конеццикла;
											
										Конецесли;

									
					ИначеЕсли Стр_1.attr_group_name="Дополнительная информация" Тогда
										Если  Стр_1.attr_name="Описание товара" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ОписаниеТовара) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитОбувь.ОписаниеТовара));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитОбувь.ОписаниеТовара);
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Наименование товара на этикетке" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.НаименованиеТовараНаЭтикетке) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитОбувь.НаименованиеТовараНаЭтикетке));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитОбувь.НаименованиеТовараНаЭтикетке);
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Социально значимый товар" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.СоциальноЗначимыйТовар) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитОбувь.СоциальноЗначимыйТовар));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитОбувь.СоциальноЗначимыйТовар);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитОбувь.СоциальноЗначимыйТовар);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_1.attr_name="Формат продажи" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ФорматПродажи) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитОбувь.ФорматПродажи));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитОбувь.ФорматПродажи);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитОбувь.ФорматПродажи);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_1.attr_name="Способ ввода товара в оборот" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.СпособВводаТовараВОборот) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитОбувь.СпособВводаТовараВОборот));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитОбувь.СпособВводаТовараВОборот);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитОбувь.СпособВводаТовараВОборот);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
										Конецесли;
									
									
									
								КонецЕсли;
								
																
								
							//	Если Стр_1.attr_group_name="Состав" Тогда
							//		Стр_1.attributes[0].value="Мой состав";
							//	КонецЕсли;
								
							Конеццикла;
							
							
						Конецесли;
						
						
						
						МассивСтранДобавить=Новый Массив;
						УжеБылаСтрана=ложь;
						
						
						
						Для Каждого Стр_1 Из NNN Цикл
							
							Если Стр_1.attr_group_name="Дополнительная информация" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_1.attr_name="Код товара в учетной системе поставщика" Тогда
											Если ЗначениеЗаполнено(объект.КодВУчетнойСистеме) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",объект.КодВУчетнойСистеме);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=объект.КодВУчетнойСистеме
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Наименование товара в учетной системе поставщика" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.НаименованиеТовараВУчетнойСистемеПоставщика) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбщиеНК.НаименованиеТовараВУчетнойСистемеПоставщика);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбщиеНК.НаименованиеТовараВУчетнойСистемеПоставщика
											КонецЕсли;
											
										ИначеЕсли Стр_1.attr_name="Ставка НДС" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.СтавкаНДС) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Строка(ДополнительныйРеквизитОбщиеНК.СтавкаНДС));
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=Строка(ДополнительныйРеквизитОбщиеНК.СтавкаНДС);
												//Стр_а.valueTitle=Строка(ДополнительныйРеквизитОбщиеНК.СтавкаНДС);
												//Стр_а.valueType=Неопределено
											КонецЕсли;
											
										Конецесли;
									Конеццикла;
							ИначеЕсли Стр_1.attr_group_name="Наименование товара и идентификация" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_1.attr_name="Полное наименование товара" Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",объект.НаименованиеТовара);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
											//Стр_а.value=объект.НаименованиеТовара
											
										//ИначеЕсли  Стр_1.attr_name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
									Конеццикла;
																
							ИначеЕсли Стр_1.attr_group_name="Происхождение и бренды" Тогда
										Если Стр_1.attr_name="Страна производства" Тогда
									//Для Каждого Стр_а Из Стр_1.attributes Цикл
												Альфа=Объект.СтранаПроизводства.Альфа2;
												Если ЗначениеЗаполнено(Альфа) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Альфа);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												КонецеслИ;	
													//Стр_а.value=Альфа;
													//Стр_а.valueTitle="("+Альфа+") "+Строка(Объект.СтранаПроизводства);
													
													Для Каждого Стр_ДопСтр Из ДополнительныйРеквизитОбщиеНК.ДополнительныеСтраныПроизводств Цикл
														Альфа=Альфа2(Стр_ДопСтр.СтранаПроизводства);
														
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Альфа);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
														
															
													Конеццикла;
										ИначеЕсли Стр_1.attr_name="Суббренд" Тогда
		                                           Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.Суббренд) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбщиеНК.Суббренд);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
														//Стр_а.value=ДополнительныйРеквизитОбщиеНК.Суббренд;
													КонецЕсли;
	
																								
										КонецЕсли;
																							
						ИначеЕсли Стр_1.attr_group_name="Эксплуатация и условия хранения" Тогда
										Если Стр_1.attr_name="Мин. температура, С" Тогда
											Если Значениезаполнено(ДополнительныйРеквизитОбщиеНК.МинимальнаяТемпература
										) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбщиеНК.МинимальнаяТемпература);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
											//Стр_а.value=ДополнительныйРеквизитОбщиеНК.МинимальнаяТемпература
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Макс. температура, С" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.МаксимальнаяТемпература) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбщиеНК.МаксимальнаяТемпература);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбщиеНК.МаксимальнаяТемпература
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Мин. относительная влажность, %" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.МинимальнаяОтносительнаяВлажность) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбщиеНК.МинимальнаяОтносительнаяВлажность);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбщиеНК.МинимальнаяОтносительнаяВлажность
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Макс. относительная влажность, %" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.МаксимальнаяОтносительнаяВлажность) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбщиеНК.МаксимальнаяОтносительнаяВлажность);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбщиеНК.МаксимальнаяОтносительнаяВлажность
												
											КонецЕсли;
										//ИначеЕсли  Стр_1.attr_name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
								
								ИначеЕсли Стр_1.attr_group_name="Идентификация Участников Оборота Товаров" Тогда
									
										Если Стр_1.attr_name="Производитель" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.Производитель) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбщиеНК.Производитель);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбщиеНК.Производитель
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Импортер" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.Импортер) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбщиеНК.Импортер);
															//Структура_добавим.Вставить("attr_value_type",Строка(Стр_22.ТипМодельАртикул));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
												//Стр_а.value=ДополнительныйРеквизитОбщиеНК.Импортер
											КонецЕсли;
										ИначеЕсли Стр_1.attr_name="Изготовитель / Производственная площадка" Тогда
											
											  Если ДополнительныйРеквизитОбщиеНК.Изготовители.Количество()>0 Тогда
												
												Для Каждого Стр_ Из ДополнительныйРеквизитОбщиеНК.Изготовители Цикл
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",Стр_.Изготовитель);
															Структура_добавим.Вставить("attr_value_type",Альфа2(Стр_.СтранаПроизводства));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
													Конеццикла;
												КонецЕсли;

											
											//Стр_а.value=ДополнительныйРеквизитОбщиеНК.МинимальнаяОтносительнаяВлажность
											
										//ИначеЕсли  Стр_1.attr_name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
							
				ИначеЕсли Стр_1.attr_group_name="Маркетинговая информация" Тогда
					 		Если Стр_1.attr_name="Маркетинговое описание" Тогда
								Если ЗначениеЗаполнено( ДополнительныйРеквизитОбщиеНК.МаркетинговоеОписание) Тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбщиеНК.МаркетинговоеОписание);
															//Структура_добавим.Вставить("attr_value_type",Альфа2(Стр_.СтранаПроизводства));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
											//Стр_а.value=ДополнительныйРеквизитОбщиеНК.МаркетинговоеОписание
										КонецЕсли;
									ИначеЕсли Стр_1.attr_name="Уникальные характеристики товара" Тогда
										Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.УникальныеХарактеристикиТовара) тогда
															Структура_добавим=Новый Структура;
															Структура_добавим.Вставить("attr_id",Стр_1.attr_id);
															Структура_добавим.Вставить("attr_value",ДополнительныйРеквизитОбщиеНК.УникальныеХарактеристикиТовара);
															//Структура_добавим.Вставить("attr_value_type",Альфа2(Стр_.СтранаПроизводства));
															МассивАтрибутовДляДобавления.Добавить(Структура_добавим);
											//Стр_а.value=ДополнительныйРеквизитОбщиеНК.УникальныеХарактеристикиТовара
										КонецЕсли;
											
											
										Конецесли;
									
								КонецЕсли;	
					Конеццикла;
								
								
							
														
						//КонецЕсли;
							
							
						//	Если Стр_1.attr_group_name="Состав" Тогда
						//		Стр_1.attributes[0].value="Мой состав";
						//	КонецЕсли;
							
					///Конеццикла;
					
					
				//	Тело=ИзСтруктурыВДжсон(NNN);
						
								
		
		
	    //Продолжить;
		СтруктураДляОтправки.Вставить("gtin",GTIN.GTIN);
		
		ШтучныйТовар=Истина;
		//Если ЗначениеЗаполнено(GTIN.ТипУпаковки) Тогда
		//			
		//	Если Найти(ВРег(GTIN.ТипУпаковки.Наименование),"BUNDLE")>0 Тогда
		//		ШтучныйТовар=Ложь;
		//		
		//		Чтен.ЗаписатьИмяСвойства("is_kit");
		//		Чтен.ЗаписатьЗначение(true);
		//		
		//		
		//	Иначе
		//		Чтен.ЗаписатьИмяСвойства("is_kit");
		//		Чтен.ЗаписатьЗначение(false);
		//		
		//		
		//	Конецесли;
		//		
		//	Если Найти(ВРег(GTIN.ТипУпаковки.Наименование),"SET")>0 Тогда
		//		
		//		ШтучныйТовар=Ложь;
		//		Чтен.ЗаписатьИмяСвойства("is_set");
		//		Чтен.ЗаписатьЗначение(true);
		//		
		//		
		//	Иначе
		//		Чтен.ЗаписатьИмяСвойства("is_set");
		//		Чтен.ЗаписатьЗначение(false);
		//		
		//		
		//	Конецесли;
		//Конецесли;	
		//
		//
		//Чтен.ЗаписатьИмяСвойства("good_name");
		//Чтен.ЗаписатьЗначение(GTIN.НаименованиеТовара);
		//Чтен.ЗаписатьИмяСвойства("tnved");
		//Чтен.ЗаписатьЗначение(GTIN.КодТНВЭД.Код);
		//Чтен.ЗаписатьИмяСвойства("brand");
		//Чтен.ЗаписатьЗначение(GTIN.БрендТорговаяМарка);
		//
		//Если ШтучныйТовар=Истина Тогда
		//	
		//	Чтен.ЗаписатьИмяСвойства("identified_by");
		//	Чтен.ЗаписатьНачалоМассива();
		//	
		//	Чтен.ЗаписатьНачалоОбъекта();;
		//	
		//	Чтен.ЗаписатьИмяСвойства("type");
		//	Чтен.ЗаписатьЗначение("gtin");
		//	
		//	Чтен.ЗаписатьИмяСвойства("value");
		//	Чтен.ЗаписатьЗначение(xmlString(GTIN.GTIN));
		//	
		//	Чтен.ЗаписатьИмяСвойства("level");
		//	Чтен.ЗаписатьЗначение("trade-unit");
		//	
		//	
		//	Чтен.ЗаписатьКонецОбъекта();
		//	Чтен.ЗаписатьКонецМассива();
		//	
		//Конецесли;
		
		//Чтен.ЗаписатьКонецОбъекта();
		КоличествоОтправленных=КоличествоОтправленных+1;
	Конеццикла;
	//Чтен.ЗаписатьКонецМассива();;
	
	//Возврат чтен.Закрыть()
КонецФункции


&НаСервереБезКонтекста
Функция СозданиеЧерновика_МассивAPI(СписокДляСозданияКарточек,МаксимальноеКоличествоДляОтправкиВНКПоAPI,КоличествоОтправленных)
	
	КоличествоНадоОтправить=СписокДляСозданияКарточек.Количество()-КоличествоОтправленных;
	Отправим=Мин(КоличествоНадоОтправить,МаксимальноеКоличествоДляОтправкиВНКПоAPI);
				 
	Чтен=Новый  ЗаписьJSON;
	Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
	Чтен.ЗаписатьНачалоМассива();;
	
	Смещение=КоличествоОтправленных;
	Для Сч=Смещение По Смещение+Отправим-1 Цикл
		
		Чтен.ЗаписатьНачалоОбъекта();;
		GTIN=СписокДляСозданияКарточек[сч];
		
		Чтен.ЗаписатьИмяСвойства("gtin");
		Чтен.ЗаписатьЗначение(xmlString(GTIN.GTIN));
		
		ШтучныйТовар=Истина;
		Если ЗначениеЗаполнено(GTIN.ТипУпаковки) Тогда
					
			Если Найти(ВРег(GTIN.ТипУпаковки.Наименование),"BUNDLE")>0 Тогда
				ШтучныйТовар=Ложь;
				
				Чтен.ЗаписатьИмяСвойства("is_kit");
				Чтен.ЗаписатьЗначение(true);
				
				
			Иначе
				Чтен.ЗаписатьИмяСвойства("is_kit");
				Чтен.ЗаписатьЗначение(false);
				
				
			Конецесли;
				
			Если Найти(ВРег(GTIN.ТипУпаковки.Наименование),"SET")>0 Тогда
				
				ШтучныйТовар=Ложь;
				Чтен.ЗаписатьИмяСвойства("is_set");
				Чтен.ЗаписатьЗначение(true);
				
				
			Иначе
				Чтен.ЗаписатьИмяСвойства("is_set");
				Чтен.ЗаписатьЗначение(false);
				
				
			Конецесли;
		Конецесли;	
		
		
		Чтен.ЗаписатьИмяСвойства("good_name");
		Чтен.ЗаписатьЗначение(GTIN.НаименованиеТовара);
		Чтен.ЗаписатьИмяСвойства("tnved");
		Чтен.ЗаписатьЗначение(GTIN.КодТНВЭД.Код);
		Чтен.ЗаписатьИмяСвойства("brand");
		Чтен.ЗаписатьЗначение(GTIN.БрендТорговаяМарка);
		
		Если ШтучныйТовар=Истина Тогда
			
			Чтен.ЗаписатьИмяСвойства("identified_by");
			Чтен.ЗаписатьНачалоМассива();
			
			Чтен.ЗаписатьНачалоОбъекта();;
			
			Чтен.ЗаписатьИмяСвойства("type");
			Чтен.ЗаписатьЗначение("gtin");
			
			Чтен.ЗаписатьИмяСвойства("value");
			Чтен.ЗаписатьЗначение(xmlString(GTIN.GTIN));
			
			Чтен.ЗаписатьИмяСвойства("level");
			Чтен.ЗаписатьЗначение("trade-unit");
			
			
			Чтен.ЗаписатьКонецОбъекта();
			Чтен.ЗаписатьКонецМассива();
			
		Конецесли;
		
		Чтен.ЗаписатьКонецОбъекта();
		КоличествоОтправленных=КоличествоОтправленных+1;
	Конеццикла;
	Чтен.ЗаписатьКонецМассива();;
	
	Возврат чтен.Закрыть()
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьГоодИД(good_id,Стр_111)
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Продукция_ХамелеонЦРПТ.Ссылка
		|ИЗ
		|	Справочник.Продукция_ХамелеонЦРПТ КАК Продукция_ХамелеонЦРПТ
		|ГДЕ
		|	Продукция_ХамелеонЦРПТ.GTIN = &GTIN";
	
	Запрос.УстановитьПараметр("GTIN", Стр_111);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		ПолОб=ВыборкаДетальныеЗаписи.Ссылка.ПолучитЬобъект();
		ПолОб.feed_id=good_id["good_id"];
		
		ПолОб.СтатусКарточки=Перечисления.СтатусыКарточекВНК_ХамелеонЦРПТ[good_id["good_status"]];
		//Если ПолОб.СтатусКарточки=Перечисления.СтатусыКарточекВНК_ХамелеонЦРПТ.ОбработкаВНК 
		//	ИЛИ Не ЗначениеЗаполненО(ПолОб.СтатусКарточки)
		//	Тогда
			
		//Конецесли;
		
		ПолОб.ЗаписатЬ();
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернемДляРегистрацииПродукции_Элемент(СписокПродукцией,ТипыПродукций)
	МассивВозвращаем=Новый Массив;
	
	УжеБылТип=Новый Массив;
	
	Для Каждого Стр Из СписокПродукцией Цикл
		Если ЗначениеЗаполнено(Стр.ГТИН.feed_id) 
			И Стр.Гтин.СтатусКарточки<>Перечисления.СтатусыКарточекВНК_ХамелеонЦРПТ.moderation
			И Стр.Гтин.СтатусКарточки<>Перечисления.СтатусыКарточекВНК_ХамелеонЦРПТ.notsigned
			И Стр.Гтин.СтатусКарточки<>Перечисления.СтатусыКарточекВНК_ХамелеонЦРПТ.published
			Тогда
			Если МассивВозвращаем.Найти(Стр.ГТИН)=Неопределено Тогда
				МассивВозвращаем.Добавить(Стр.ГТИН);
				     
				Если УжеБылТип.Найти(Сред(Стр.ГТИН.КодТНВЭД.Код,1,4))=Неопределено Тогда
					УжеБылТип.Добавить(Стр.ГТИН.Тип);
					ТипыПродукций.Добавить(Новый Структура("Тип,feed_id",Сред(Стр.ГТИН.КодТНВЭД.Код,1,4),Сред(Стр.ГТИН.КодТНВЭД.Код,1,4)));
				Конецесли;
				
			Конецесли;
			
		КонецеслИ;
		
		
	Конеццикла;
	Возврат МассивВозвращаем
	
Конецфункции



&НаСервереБезКонтекста
Функция ВернемДляРегистрацииЧерновика_Элемент(СписокПродукцией)
	МассивВозвращаем=Новый Массив;
	Для Каждого Стр Из СписокПродукцией Цикл
		Если Не ЗначениеЗаполнено(Стр.ГТИН.feed_id) Тогда
			Если МассивВозвращаем.Найти(Стр.ГТИН)=Неопределено Тогда
				МассивВозвращаем.Добавить(Стр.ГТИН);
			Конецесли;
			
		КонецеслИ;
		
		
	Конеццикла;
	Возврат МассивВозвращаем
	
Конецфункции

&НаСервереБезКонтекста
Функция ВернемДляРегистрацииЧерновика(СписокПродукцией)
	МассивВозвращаем=Новый Массив;
	Для Каждого Стр Из СписокПродукцией Цикл
		Если Не ЗначениеЗаполнено(Стр.ГТИН.feed_id) Тогда
			Если МассивВозвращаем.Найти(Стр.ГТИН.GTIN)=Неопределено Тогда
				МассивВозвращаем.Добавить(Стр.ГТИН.GTIN);
			Конецесли;
			
		КонецеслИ;
		
		
	Конеццикла;
	Возврат МассивВозвращаем
	
Конецфункции

&НаСервереБезКонтекста
Процедура ЗаполнимГТИНАМИ(ВернемБезГТИНов,drafts)
	сч=0;
	Для Каждого Стр Из ВернемБезГТИНов Цикл
		ПолОб=Стр.ПолучитЬобъект();
		ПолОб.GTIN=drafts[сч].gtin;
		ПолОб.Записать();
		сч=сч+1;
		Если drafts.Количество()>=сч Тогда
			Сообщить("Получено "+Строка(сч)+" из "+Строка(ВернемБезГТИНов.Количество()));
			Прервать;
		Конецесли;
		
	Конеццикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернемБезГТИНов(СписокПродукцией)
	
	МассивБезГтин=Новый Массив;
	Для Каждого Стр Из СписокПродукцией Цикл
		Если Не ЗначениеЗаполнено(Стр.ГТИН.GTIN) Тогда
			МассивБезГтин.Добавить(Стр.ГТИН);
			
		КонецеслИ;
		
	Конеццикла;
	
	Возврат МассивБезГтин
Конецфункции

&НаСервереБезКонтекста
Функция ПолучитьИнфуПоХСИПл(ХСПроизводитель)
	
	Возврат Новый Структура("ГУИД,Наименование",ХСПроизводитель.Код,ХСПроизводитель.Наименование)
	
КонецФункции

&НаСервереБезКонтекста
Функция Альфа2(Стр)
	Возврат Стр.Альфа2
КонецФункции


&НаСервере
Функция ОтправитьВыделеннуюПродукциюВНКПоAPIНаСервере(МассивН,Пользователь)
	// Вставить содержимое обработчика.
	Докум=Документы.ОтправкаКарточекВНКПоAPI_ХамелеонЦРПТ.СоздатьДокумент();
	Докум.Дата=ТекущаяДата();
	Докум.ТекущийПользователь=Пользователь;
	Для  Каждого Стр Из МассивН Цикл
		Добав=Докум.Товары.Добавить();
		Добав.Продукция=Стр;
		Добав.GTIN=Добав.Продукция.GTIN;
	Конеццикла;
	Докум.Записать();
	Возврат Докум.Ссылка
КонецФункции


&НаКлиенте
Процедура ОтправитьВыделеннуюПродукциюВНКПоAPI(Команда)
	Обр=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если Обр.Открыта()=Ложь Тогда
		Обр.Открыть();
		Этаформа.Активизировать();
	Конецесли;
	МассивН=Новый Массив;
	Для Каждого Стр Из Элементы.Список.ВыделенныеСтроки Цикл
		МассивН.Добавить(Стр);
	Конеццикла;
	Докум=ОтправитьВыделеннуюПродукциюВНКПоAPIНаСервере(МассивН,Обр.Пользователь);
	Если ЗначениеЗаполнено(Докум) Тогда
		ОткрытьФорму("Документ.ОтправкаКарточекВНКПоAPI_ХамелеонЦРПТ.Форма.ФормаДокумента",Новый Структура("Ключ",
		Докум));
	Конецесли;
КонецПроцедуры

