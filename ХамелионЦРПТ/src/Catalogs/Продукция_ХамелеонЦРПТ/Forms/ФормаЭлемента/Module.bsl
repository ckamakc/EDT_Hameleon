&НаСервереБезКонтекста
Функция Альфа2(Стр)
	Возврат Стр.Альфа2
КонецФункции


&НаСервереБезКонтекста
Функция ВернутьСтруктуройКодИНОКПД(ОКПД2)
	
	Возврат Новый Структура("Код,Наименование",ОКПД2.Код,
	ОКПД2.Наименование);
	
Конецфункции

&НаСервереБезКонтекста
Функция ПолучитьИнфуПоХСИПл(ХСПроизводитель)
	
	Возврат Новый Структура("ГУИД,Наименование",ХСПроизводитель.Код,ХСПроизводитель.Наименование)
	
КонецФункции

Процедура ОбновляемВсеДанныеНаСервере(NNN)  Экспорт
	
	СтранаБыла=Ложь;
	ДополнительныйРеквизитОбщиеНК.ДополнительныеСтраныПроизводств.Очистить();
	ДополнительныйРеквизитОбщиеНК.Изготовители.Очистить();;
	ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки.Очистить();;
	Если Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Табак Тогда
		
		ДопРеквизитСюдаЗаписывать=ДополнительныйРеквизитАльтернативныйТабак;
	ИначеЕсли Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак Тогда
		
		ДопРеквизитСюдаЗаписывать=ДополнительныйРеквизитАльтернативныйТабак;
		
	ИначеЕсли Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
		ДополнительныеРеквизитВода.ГОСТЫИТУ.Очистить();
		ДополнительныеРеквизитВода.ДополнительныеСрокиГодности.Очистить();
		ДополнительныеРеквизитВода.НомерРегламента005=ложь;
		ДополнительныеРеквизитВода.НомерРегламента021=ложь;
		ДополнительныеРеквизитВода.НомерРегламента027=ложь;
		ДополнительныеРеквизитВода.НомерРегламента029=ложь;
		ДопРеквизитСюдаЗаписывать=ДополнительныеРеквизитВода;
		
	ИначеЕсли Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Молоко Тогда
		ДополнителныеРеквизитМолоко.ГОСТЫИТУ.Очистить();
		ДополнителныеРеквизитМолоко.ДополнительныеСрокиГодности.Очистить();
		ДополнителныеРеквизитМолоко.Аллергены.Очистить();
		ДополнителныеРеквизитМолоко.ЭнергетическаяЦенность.Очистить();
		ДополнителныеРеквизитМолоко.НомерРегламента005=ложь;
		ДополнителныеРеквизитМолоко.НомерРегламента021=ложь;
		ДополнителныеРеквизитМолоко.НомерРегламента022=ложь;
		ДополнителныеРеквизитМолоко.НомерРегламента024=ложь;
		ДополнителныеРеквизитМолоко.НомерРегламента027=ложь;
		ДополнителныеРеквизитМолоко.НомерРегламента029=ложь;
		ДополнителныеРеквизитМолоко.НомерРегламента033=ложь;
		ДопРеквизитСюдаЗаписывать=ДополнителныеРеквизитМолоко;
	ИначеЕсли Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Шины Тогда
		ДополнительныеРеквизитыШины.ДопМодельАртикулы.Очистить();
		//ДополнителныеРеквизитМолоко.ДополнительныеСрокиГодности.Очистить();
		//ДополнителныеРеквизитМолоко.Аллергены.Очистить();
		//ДополнителныеРеквизитМолоко.ЭнергетическаяЦенность.Очистить();
		ДополнительныеРеквизитыШины.НомерРегламента005=ложь;
		ДополнительныеРеквизитыШины.НомерРегламента018=ложь;
		ДополнительныеРеквизитыШины.НомерРегламента031=ложь;
		Объект.МодельПроизводителяАртикул="";
		//ДополнителныеРеквизитМолоко.НомерРегламента024=ложь;
		//ДополнителныеРеквизитМолоко.НомерРегламента027=ложь;
		//ДополнителныеРеквизитМолоко.НомерРегламента029=ложь;
		//ДополнителныеРеквизитМолоко.НомерРегламента033=ложь;
		ДопРеквизитСюдаЗаписывать=ДополнительныеРеквизитыШины;
		
	ИначеЕсли  Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Фото Тогда
		
		ДопРеквизитСюдаЗаписывать=ДополнительныеРеквизитФото;
		ДопРеквизитСюдаЗаписывать.НомерРегламента004=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента037=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента005=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента012=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента020=ложь;
		ДопРеквизитСюдаЗаписывать.ДопМодельАртикулы.Очистить();
		
		
	ИначеЕсли Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Парфюм Тогда
		
		ДопРеквизитСюдаЗаписывать=ДополнительныйРеквизитПарфюм;
		ДопРеквизитСюдаЗаписывать.НомерРегламента009=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента005=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента029=ложь;
		ДопРеквизитСюдаЗаписывать.ДополнительныеСрокиГодности.Очистить();;
		ДопРеквизитСюдаЗаписывать.ГОСТЫИТУ.Очистить();
	ИначеЕсли Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Велосипеды Тогда
		
		ДопРеквизитСюдаЗаписывать=ДополнительныйРеквизитВелосипед;
		ДопРеквизитСюдаЗаписывать.НомерРегламента005=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента007=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента012=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента018=ложь;
		ДопРеквизитСюдаЗаписывать.ДопМодельАртикулы.Очистить();;
		ДопРеквизитСюдаЗаписывать.ГОСТЫИТУ.Очистить();
	ИначеЕсли Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Обувь Тогда
		
		ДопРеквизитСюдаЗаписывать=ДополнительныйРеквизитОбувь;
		ДопРеквизитСюдаЗаписывать.РазмерВИныхСистемахИзмерения.Очистить();
		ДопРеквизитСюдаЗаписывать.МатериалВерха.Очистить();
		ДопРеквизитСюдаЗаписывать.МатериалПодкладки.Очистить();
		ДопРеквизитСюдаЗаписывать.МатериалСтельки.Очистить();
		ДопРеквизитСюдаЗаписывать.МатериалНизаПодошвы.Очистить();
		ДопРеквизитСюдаЗаписывать.ДопМодельАртикулы.Очистить();
		ДопРеквизитСюдаЗаписывать.ГОСТЫИТУ.Очистить();
		ДопРеквизитСюдаЗаписывать.СведенияОСвидетельствахОГосРегистрации.Очистить();
		
		ДопРеквизитСюдаЗаписывать.НомерРегламента017=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента007=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента019=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента005=ложь;
		ДопРеквизитСюдаЗаписывать.БезРегламента=ложь;
		ДопРеквизитСюдаЗаписывать.ФЗ123=ложь;
		
//		ДопРеквизитСюдаЗаписывать.ТипМатериалов.Очистить();
		ДопРеквизитСюдаЗаписывать.ГОСТЫИТУ.Очистить();
		ДопРеквизитСюдаЗаписывать.ДопМодельАртикулы.Очистить();;
//		ДопРеквизитСюдаЗаписывать.РазмерВИныхСистемахИзмерения.Очистить();
	ИначеЕсли Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Одежда Тогда
		
		ДопРеквизитСюдаЗаписывать=ДополнительныеРеквизитОдежда;
		ДопРеквизитСюдаЗаписывать.НомерРегламента017=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента007=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента019=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента005=ложь;
		ДопРеквизитСюдаЗаписывать.БезРегламента=ложь;
		ДопРеквизитСюдаЗаписывать.ТипМатериалов.Очистить();
		ДопРеквизитСюдаЗаписывать.ГОСТЫИТУ.Очистить();
		ДопРеквизитСюдаЗаписывать.ДопМодельАртикулы.Очистить();;
		ДопРеквизитСюдаЗаписывать.РазмерВИныхСистемахИзмерения.Очистить();
	ИначеЕсли Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Белье Тогда
		
		ДопРеквизитСюдаЗаписывать=ДополнительныйРеквизитБелье;
		ДопРеквизитСюдаЗаписывать.НомерРегламента017=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента007=ложь;
		ДопРеквизитСюдаЗаписывать.НомерРегламента005=ложь;
		ДопРеквизитСюдаЗаписывать.БезРегламента=ложь;
		ДопРеквизитСюдаЗаписывать.ТипМатериалов.Очистить();
		ДопРеквизитСюдаЗаписывать.ГОСТЫИТУ.Очистить();
		ДопРеквизитСюдаЗаписывать.ДопМодельАртикулы.Очистить();;
		
	Иначе
		
		ДопРеквизитСюдаЗаписывать=Неопределено;
	КонецЕсли;
	
	Объект.Рисунки.Очистить();
	
	images=Неопределено;
	Если NNN.Свойство("images",images) Тогда
		
		Для Каждого Стр_1 Из NNN.images Цикл
			Добавить=Объект.Рисунки.Добавить();
			Добавить.ТипРисунка=Справочники.ВидыРисунков_ХамелеонЦРПТ.НайтиПоКоду(Стр_1.type);
			Добавить.gtin=Стр_1.gtin;
			Добавить.АдресРисункаURL=Стр_1.url;
		Конеццикла;
		
	КонецЕсли;
	
			Попытка
				Объект.СтатусКарточки=ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ."+NNN.status);
				;
				
			исключение
			КонецПопытки;
			
			
			
			Объект.ТипУпаковки=Неопределено;
	Сет=Неопределено;
	Если NNN.Свойство("isSet",Сет) тогда
		Если Сет=Истина Тогда
			Объект.ТипУпаковки=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.НайтиПоНаименованию("SET");
			Если Не ЗначениеЗаполнено(Объект.ТипУпаковки) Тогда
				
				СпрТип=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.СоздатьЭлемент();
				СпрТип.Наименование="SET";
				СпрТип.Записать();
				Объект.ТипУпаковки=СпРТип.Ссылка;
				
			Конецесли;
			
			
			Изчегоссостит=Неопределено;
			Если NNN.Свойство("setGtins",Изчегоссостит) Тогда
				
				Объект.СоставНабора.Очистить();
				Для Каждого Стр_1  Из Изчегоссостит Цикл
				    Добав=Объект.СоставНабора.Добавить();
					Добав.Продукция=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.СоздатьНайтиGTIN_Cnhjrf(Стр_1.gtin);
					Добав.КоличествоВНаборе=Стр_1.quantity;
					
					
				Конеццикла;
				
			Конецесли;
			
		Конецесли;
		
	Конецесли;
	
	ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки.Очистить();
	Сет=Неопределено;
	Если NNN.Свойство("isKit",Сет) тогда
		Если Сет=Истина Тогда
			Объект.ТипУпаковки=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.НайтиПоНаименованию("BUNDLE");
			Если Не ЗначениеЗаполнено(Объект.ТипУпаковки) Тогда
				
				СпрТип=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.СоздатьЭлемент();
				СпрТип.Наименование="BUNDLE";
				СпрТип.Записать();
				Объект.ТипУпаковки=СпРТип.Ссылка;
				
			Конецесли;
		Конецесли;
		
	Конецесли;
	
	Объект.ТехническаяКарточка=Ложь;
	
	Сет=Неопределено;
	Если NNN.Свойство("isRemainder",Сет) тогда
		Если Сет=Истина Тогда
			Объект.ТехническаяКарточка=Истина;
		Конецесли;
		
	Конецесли;
	

	identifier=Неопределено;
	
	
	
	
	Если NNN.Свойство("identifier",identifier) И ТипЗнч(identifier) =Тип("Массив") И
		
identifier.Количество()>0 Тогда	





					Для Каждого Стр_2 Из NNN.identifier Цикл
								Если Стр_2.Gtin=Формат(Объект.GTIN,"ЧГ=") тогда

		ДополнительныйРеквизитОбщиеНК.ВесБрутто=Стр_2.weight;
		ДополнительныйРеквизитОбщиеНК.Высота=Стр_2.height;
		ДополнительныйРеквизитОбщиеНК.Глубина=Стр_2.length;
		ДополнительныйРеквизитОбщиеНК.РасчетныйОбъем=Стр_2.capacity;
		ДополнительныйРеквизитОбщиеНК.Ширина=Стр_2.width;
		
Для Каждого Стр_1 Из Стр_2.vghList Цикл
	
		
		Если Стр_1.name="packageType" Тогда
			
			ДополнительныйРеквизитОбщиеНК.ТипУпаковки=Неопределено;
			Если ЗначениеЗаполнено(Стр_1.value) Тогда
				ДополнительныйРеквизитОбщиеНК.ТипУпаковки=Справочники.ТипУпаковки_Молоко_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_1.value);
				
			Конецесли;
			
		ИначеЕсли Стр_1.name="packageMaterial" Тогда
			
			ДополнительныйРеквизитОбщиеНК.МатериалУпаковки=Неопределено;
			Если ЗначениеЗаполнено(Стр_1.value) Тогда
				ДополнительныйРеквизитОбщиеНК.МатериалУпаковки=Справочники.МатериалУпаковки_Молоко_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_1.value);
			Конецесли;
		КонецЕсли;
		
	Конеццикла;
Иначе
	
	Стр_уп=ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки.Добавить();
	
	Если Стр_2.level="inner-pack" Тогда
		Стр_уп.УровеньУпаковки=Перечисления.УровниУпаковок_ХамелеонЦРПТ.ГрупповаяПотребительскаяУпаковка
	ИначеЕсли стр_2.level="box" Тогда
		Стр_уп.УровеньУпаковки=Перечисления.УровниУпаковок_ХамелеонЦРПТ.ТранспортнаяУпаковка
		
	Конецесли;
	Стр_уп.КодТовараУпаковки=Стр_2.gtin;
	Стр_уп.КодТовараВложенияВУпаковку=Стр_2.gtinInner;
	
	Стр_уп.НаименованиеУпаковкиТовара=Стр_2.name;
	Стр_уп.КоличествоВложенийВУпаковку=Стр_2.multiplier;
	Стр_уп.ВесБрутто=Стр_2.weight;
		Стр_уп.Высота=Стр_2.height;
		Стр_уп.Глубина=Стр_2.length;
		Стр_уп.РасчетныйОбъем=Стр_2.capacity;
		Стр_уп.Ширина=Стр_2.width;
		
Для Каждого Стр_1 Из Стр_2.vghList Цикл
	
		
		Если Стр_1.name="packageType" Тогда
			
			Стр_уп.ТипУпаковки=Неопределено;
			Если ЗначениеЗаполнено(Стр_1.value) Тогда
				Стр_уп.ТипУпаковки=Справочники.ТипУпаковки_Молоко_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_1.value);
				
			Конецесли;
			
		ИначеЕсли Стр_1.name="packageMaterial" Тогда
			
			Стр_уп.МатериалУпаковки=Неопределено;
			Если ЗначениеЗаполнено(Стр_1.value) Тогда
				Стр_уп.МатериалУпаковки=Справочники.МатериалУпаковки_Молоко_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_1.value);
			Конецесли;
		КонецЕсли;
		
	Конеццикла;
	
	
	
	
	
	
	
	
	Если 	Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Табак 
	ИЛИ Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак
	Тогда

	Если Стр_2.level="inner-pack"	Тогда
		Если ЗначениеЗАполнено(Стр_2.multiplier) тогда
			Объект.КоличествоВБлоке=Стр_2.multiplier;
		Конецесли;
			Объект.GTINУпаковки=Стр_2.gtin;
		ИначеЕсли Стр_2.level="box" Тогда
			Объект.GTINКороба=Стр_2.gtin;
			Если ЗначениеЗаполненО(Стр_2.multiplier) тогда
				Объект.КоличествоВГруппе=Стр_2.multiplier
			КонецеслИ;
			
		КонецЕсли;
	
	КонецЕсли;
	
	
	
	
	
	
Конецесли;
	Конеццикла;
КонецЕсли;

	

	   
	Для Каждого Стр_1 Из NNN.attrGroup Цикл
						Если Стр_1.name="Наименование товара и идентификация" Тогда
							Для Каждого Стр_2 Из Стр_1.attributes Цикл
								Если Стр_2.name="Полное наименование товара" Тогда
									Объект.НаименованиеТовара=Стр_2.value;
									//Если Не ЗначениеЗаполнено(Объект.Наименование) тогда
										Объект.Наименование=Объект.НаименованиеТовара;
									//КонецЕсли;
								ИначеЕсли Стр_2.name="Заявленный объем" Тогда
									ЗаявленныйОбъем(Стр_2);
								ИначеЕсли Стр_2.name="Базовая единица измерения" Тогда
									Если ЗначениеЗаполнено(Стр_2.value) И Стр_2.value="КГ" Тогда
										ДопРеквизитСюдаЗаписывать.ТоварВесовой=Истина;
									Иначе
										ДопРеквизитСюдаЗаписывать.ТоварВесовой=Ложь;
										
										
									КонецЕсли;
								
								ИначеЕсли Стр_2.name="Заявленный вес" Тогда
											ДопРеквизитСюдаЗаписывать.КоличествоВПотребительскойУпаковке=Стр_2.value;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											
											ДопРеквизитСюдаЗаписывать.ПотребительскаяУпаковка=Справочники.ПотребительскаяУпаковка_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ПотребительскаяУпаковка) Тогда
												СпрПр=Справочники.ПотребительскаяУпаковка_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.ПотребительскаяУпаковка=СпрПр.Ссылка;
											Конецесли;

										КонецЕсли;
								ИначеЕсли Стр_2.name="Количество единиц употребления в потребительской упаковке" Тогда
											ДопРеквизитСюдаЗаписывать.КоличествоВПотребительскойУпаковке=Стр_2.value;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											
											ДопРеквизитСюдаЗаписывать.ПотребительскаяУпаковка=Справочники.ПотребительскаяУпаковка_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ПотребительскаяУпаковка) Тогда
												СпрПр=Справочники.ПотребительскаяУпаковка_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.ПотребительскаяУпаковка=СпрПр.Ссылка;
											Конецесли;

										КонецЕсли;
																	
								КонецЕсли;
							Конеццикла;
							
							
						ИначеЕсли Стр_1.name="Происхождение и бренды" Тогда
							
							Для Каждого Стр_2 Из Стр_1.attributes Цикл
								Если Стр_2.name="Страна производства" Тогда
									
									Если Не СтранаБыла Тогда
										Объект.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоКоду("643");
										Если ЗначениеЗаполнено(Стр_2.value) тогда
											Объект.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",Стр_2.value);
											СтранаБыла=Истина;
										КонецЕсли;
									Иначе
										Если ЗначениеЗаполнено(Стр_2.value) тогда
											Добав=ДополнительныйРеквизитОбщиеНК.ДополнительныеСтраныПроизводств.Добавить();
											Добав.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",Стр_2.value);
										КонецЕсли;
									КонецЕслИ;
								ИначеЕсли Стр_2.name="Товарный знак" Тогда
									Объект.БрендТорговаяМарка=Стр_2.valuetitle;
								ИначеЕсли Стр_2.name="Суббренд" Тогда
									ДополнительныйРеквизитОбщиеНК.Суббренд=Стр_2.value;
								ИначеЕсли Стр_2.name="СТМ" Тогда
										ДопРеквизитСюдаЗаписывать.СТМ=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.СТМ=Справочники.СодержитГМО_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.СТМ) тогда
												СпрГ=Справочники.СодержитГМО_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.СТМ=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Модель / артикул производителя" Тогда
									Если ЗначениеЗаполнено(Стр_2.valueType) Тогда
										ТипМоделиАртикула=Справочники.ТипМодельАртикул_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
										Если Не ЗначениеЗаполнено(ТипМоделиАртикула) тогда
											СпрГ=Справочники.ТипМодельАртикул_ХамелеонЦРПТ.СоздатьЭлемент();
											СпрГ.Наименование=Стр_2.valueType;
											СпрГ.Записать();
											ТипМоделиАртикула=СпрГ.Ссылка;
										Конецесли;
										
										
										
										Если ТипМоделиАртикула.Наименование="Артикул" Тогда
											Объект.МодельПроизводителяАртикул=СокрЛП(СтрЗаменить(Стр_2.value,"Артикул",""));
										Конецесли;
										//Иначе
											
											Добав=ДопРеквизитСюдаЗаписывать.ДопМодельАртикулы.Добавить();
											Добав.ТипМодельАртикул=ТипМоделиАртикула;
											Добав.МодельАртикул=Стр_2.value;
											
											
										//КонецЕсли;
									КонецЕсли;
										
								КонецЕсли;
							Конеццикла;
							
							
							
							
						ИначеЕсли Стр_1.name="Потребительские свойства" Тогда
							
							
							Для Каждого Стр_2 Из Стр_1.attributes Цикл
								
								Если Стр_2.name="Размер полноты обуви" Тогда
									//Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДопРеквизитСюдаЗаписывать.РазмерПолнотыОбувиСистема=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											ДопРеквизитСюдаЗаписывать.РазмерПолнотыОбувиСистема=Справочники.СистемаРазмерПолнотыОбуви_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ШиринаЕдиницаИзмерения) Тогда
												СпрПр=Справочники.СистемаРазмерПолнотыОбуви_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.РазмерПолнотыОбувиСистема=СпрПр.Ссылка;
											Конецесли;
										КонецЕсли;
										ДопРеквизитСюдаЗаписывать.РазмерПолнотыОбуви=Стр_2.value;

								
								
								ИначеЕсли Стр_2.name="Длина стельки, см" тогда
									
									Если ЗначениеЗаполнено(Стр_2.value) тогда
										
										ДопРеквизитСюдаЗаписывать.ДлинаСтелькисм=Стр_2.value;
									Конецесли;
								ИначеЕсли Стр_2.name="Наличие каблука" тогда
									
										ДопРеквизитСюдаЗаписывать.НаличиеКаблука=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.НаличиеКаблука=Справочники.СодержитГМО_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.РазмерВМетрическойСистемемм) тогда
												СпрГ=Справочники.СодержитГМО_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.НаличиеКаблука=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
						ИначеЕсли Стр_2.name="Высота каблука" тогда
									
										ДопРеквизитСюдаЗаписывать.ВысотаКаблука=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ВысотаКаблука=Справочники.ВысотаКаблука_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ВысотаКаблука) тогда
												СпрГ=Справочники.ВысотаКаблука_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ВысотаКаблука=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
						ИначеЕсли Стр_2.name="Водонепроницаемая/Водостойкая" тогда
									
										ДопРеквизитСюдаЗаписывать.ВодонепроницаемаяВодостойкая=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ВодонепроницаемаяВодостойкая=Справочники.ВодонепроницаемаяВодостойкая_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ВодонепроницаемаяВодостойкая) тогда
												СпрГ=Справочники.ВодонепроницаемаяВодостойкая_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ВодонепроницаемаяВодостойкая=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
						ИначеЕсли Стр_2.name="Имеет ли гладкую подошву" тогда
									
										ДопРеквизитСюдаЗаписывать.ИмеетЛиГладкуюПодошву=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ИмеетЛиГладкуюПодошву=Справочники.СодержитГМО_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ИмеетЛиГладкуюПодошву) тогда
												СпрГ=Справочники.СодержитГМО_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ИмеетЛиГладкуюПодошву=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
						ИначеЕсли Стр_2.name="Тип частично закрытого верха" тогда
									
										ДопРеквизитСюдаЗаписывать.ТипЧастичноЗакрытогоВерха=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипЧастичноЗакрытогоВерха=Справочники.ТипЧастичноЗакрытогоВерха_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипЧастичноЗакрытогоВерха) тогда
												СпрГ=Справочники.ТипЧастичноЗакрытогоВерха_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипЧастичноЗакрытогоВерха=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
						ИначеЕсли Стр_2.name="Тип застежки" тогда
									
										ДопРеквизитСюдаЗаписывать.ТипЗастежки=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипЗастежки=Справочники.ТипЗастежки_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипЗастежки) тогда
												СпрГ=Справочники.ТипЗастежки_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипЗастежки=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
						ИначеЕсли Стр_2.name="Цвет фурнитуры" тогда
									
										ДопРеквизитСюдаЗаписывать.ЦветФурнитуры=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ЦветФурнитуры=Справочники.Цвет_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ЦветФурнитуры) тогда
												СпрГ=Справочники.Цвет_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ЦветФурнитуры=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
ИначеЕсли Стр_2.name="Размер в метрической системе, мм" тогда
									
										ДопРеквизитСюдаЗаписывать.РазмерВМетрическойСистемемм=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.РазмерВМетрическойСистемемм=Справочники.РазмерыВМетрическойСистемемм_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.РазмерВМетрическойСистемемм) тогда
												СпрГ=Справочники.РазмерыВМетрическойСистемемм_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.РазмерВМетрическойСистемемм=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;

								ИначеЕсли Стр_2.name="Размер в штихмассовой системе" тогда
										Объект.Размер=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											Объект.Размер=Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value,истина);
											Если Не ЗначениеЗаполнено(Объект.Размер) тогда
												СпрГ=Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												Объект.Размер=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Вид обуви" тогда
									
										Объект.ВидОбуви=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											Объект.ВидОбуви=Справочники.ВидОбуви_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(Объект.ВидОбуви) тогда
												СпрГ=Справочники.ВидОбуви_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												Объект.ВидОбуви=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Тип текстиля" тогда
									
										ДопРеквизитСюдаЗаписывать.ВидМатериала=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ВидМатериала=Справочники.ВидМатериала_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ВидМатериала) тогда
												СпрГ=Справочники.ВидМатериала_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ВидМатериала=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Декоративные элементы" тогда
									
										ДопРеквизитСюдаЗаписывать.ДекоративныеЭлементы=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ДекоративныеЭлементы=Справочники.ДекоративныеЭлементы_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ДекоративныеЭлементы) тогда
												СпрГ=Справочники.ДекоративныеЭлементы_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ДекоративныеЭлементы=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
										
								ИначеЕсли Стр_2.name="Дизайн" тогда
									
										ДопРеквизитСюдаЗаписывать.Дизайн=Стр_2.value;
								ИначеЕсли Стр_2.name="Размер одежды" тогда
									
									    ДопРеквизитСюдаЗаписывать.РазмерИзделияГОСТДругое=Стр_2.value;
										ДопРеквизитСюдаЗаписывать.РазмерИзделияГОСТ=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.valueType) Тогда
											ДопРеквизитСюдаЗаписывать.РазмерИзделияГОСТ=Справочники.РазмерИзделияГОСТ_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.РазмерИзделияГОСТ) тогда
												СпрГ=Справочники.РазмерИзделияГОСТ_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.valueType;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.РазмерИзделияГОСТ=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Дополнительные характеристики изделия (описание)" тогда
									
										ДопРеквизитСюдаЗаписывать.ДополнительныеХарактеристики=Стр_2.value;
								ИначеЕсли Стр_2.name="Рост" тогда
									
										ДопРеквизитСюдаЗаписывать.Рост=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.Рост=Справочники.Рост_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.Рост) тогда
												СпрГ=Справочники.Рост_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.Рост=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								иначеЕсли Стр_2.name="Размер в иных системах измерения" тогда
										Добав_1=ДопРеквизитСюдаЗаписывать.РазмерВИныхСистемахИзмерения.Добавить();
									    Добав_1.Размер=Стр_2.value;
										Если ЗначениеЗаполнено(Стр_2.valueType) Тогда
											Добав_1.Страна=Справочники.СтраныДляИныхРазмеровОдежды_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(Добав_1.Страна) тогда
												СпрГ=Справочники.СтраныДляИныхРазмеровОдежды_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.valueType;
												СпрГ.Записать();
												Добав_1.Страна=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Целевой пол" тогда
									
										ДопРеквизитСюдаЗаписывать.ЦелевойПол=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ЦелевойПол=Справочники.ЦелевойПол_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ЦелевойПол) тогда
												СпрГ=Справочники.ЦелевойПол_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ЦелевойПол=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Класс велосипеда" тогда
									
										ДопРеквизитСюдаЗаписывать.КлассВелосипеда=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.КлассВелосипеда=Справочники.КлассВелосипеда_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.КлассВелосипеда) тогда
												СпрГ=Справочники.КлассВелосипеда_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.КлассВелосипеда=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
										
								ИначеЕсли Стр_2.name="Год производства" тогда
									
										ДопРеквизитСюдаЗаписывать.ГодПроизводства=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ГодПроизводства=Справочники.ГодПроизводства_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ГодПроизводства) тогда
												СпрГ=Справочники.ГодПроизводства_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ГодПроизводства=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Размер рамы" тогда
									
										ДопРеквизитСюдаЗаписывать.ЕдиницаИзмеренияРазмераРамы=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.valueType) Тогда
											ДопРеквизитСюдаЗаписывать.ЕдиницаИзмеренияРазмераРамы=Справочники.ЕдиницаИзмеренияРазмераРамы_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ЕдиницаИзмеренияРазмераРамы) тогда
												СпрГ=Справочники.ЕдиницаИзмеренияРазмераРамы_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.valueType;//Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ЕдиницаИзмеренияРазмераРамы=СпрГ.Ссылка;
											Конецесли;
											
											

											ДопРеквизитСюдаЗаписывать.РазмерРамы=Неопределено;
											Если ЗначениеЗаполнено(Стр_2.value) Тогда
												ДопРеквизитСюдаЗаписывать.РазмерРамы=Справочники.РазмерРамы_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
												Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.РазмерРамы) тогда
													СпрГ=Справочники.РазмерРамы_ХамелеонЦРПТ.СоздатьЭлемент();
													СпрГ.Наименование=Стр_2.value;
													СпрГ.Записать();
													ДопРеквизитСюдаЗаписывать.РазмерРамы=СпрГ.Ссылка;
												Конецесли;
												
												

											Конецесли;											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Материал рамы" тогда
									
										ДопРеквизитСюдаЗаписывать.МатериалРамы=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.МатериалРамы=Справочники.МатериалРамы_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.МатериалРамы) тогда
												СпрГ=Справочники.МатериалРамы_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.МатериалРамы=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Тип тормозной системы" тогда
									
										ДопРеквизитСюдаЗаписывать.ТипТормознойСистемы=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипТормознойСистемы=Справочники.ТипТормознойСистемы_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипТормознойСистемы) тогда
												СпрГ=Справочники.ТипТормознойСистемы_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипТормознойСистемы=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Тип конструкции рамы" тогда
									
										ДопРеквизитСюдаЗаписывать.ТипКонструкцииРамы=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипКонструкцииРамы=Справочники.ТипыКонструкцииРамы_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипКонструкцииРамы) тогда
												СпрГ=Справочники.ТипыКонструкцииРамы_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипКонструкцииРамы=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Тип передней вилки" тогда
									
										ДопРеквизитСюдаЗаписывать.ТипПереднейВилки=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипПереднейВилки=Справочники.ТипПереднейВилки_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипПереднейВилки) тогда
												СпрГ=Справочники.ТипПереднейВилки_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипПереднейВилки=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Ширина профиля шины (камеры), дюйм" тогда
									
										ДопРеквизитСюдаЗаписывать.ШиринаПрофиляШиныКамерыДюйм=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ШиринаПрофиляШиныКамерыДюйм=Стр_2.value;
											//Справочники.ШиринаПрофиля_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											//Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ШиринаПрофиляШины) тогда
											//	СпрГ=Справочники.ШиринаПрофиля_ХамелеонЦРПТ.СоздатьЭлемент();
											//	СпрГ.Наименование=Стр_2.value;
											//	СпрГ.Записать();
											//	ДопРеквизитСюдаЗаписывать.ШиринаПрофиляШины=СпрГ.Ссылка;
											//Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Номинальный посадочный диаметр обода, дюйм" тогда
									
										ДопРеквизитСюдаЗаписывать.ПосадочныйДиамтерОбода=Стр_2.value;
								ИначеЕсли Стр_2.name="Номинальный посадочный диаметр обода, мм" тогда
									
										ДопРеквизитСюдаЗаписывать.НоминальныйПосадочныйДиаметрОбодаВмм=Стр_2.value;
								ИначеЕсли Стр_2.name="Количество колес" тогда
									
										ДопРеквизитСюдаЗаписывать.КоличествоКолес=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.КоличествоКолес=Справочники.КоличествоКолес_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.КоличествоКолес) тогда
												СпрГ=Справочники.КоличествоКолес_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.КоличествоКолес=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Тип колесных дисков" тогда
									
										ДопРеквизитСюдаЗаписывать.ТипКолесныхДисков=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипКолесныхДисков=Справочники.ТипыКолесныхДисков_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипКолесныхДисков) тогда
												СпрГ=Справочники.ТипыКолесныхДисков_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипКолесныхДисков=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Колесная база, мм" тогда
									
										ДопРеквизитСюдаЗаписывать.КолеснаяБаза=Стр_2.value;
								ИначеЕсли Стр_2.name="Дорожный просвет, мм" тогда
										ДопРеквизитСюдаЗаписывать.ДорожныйПросвет=Стр_2.value;
								ИначеЕсли Стр_2.name="Тип подвески" тогда
										ДопРеквизитСюдаЗаписывать.ТипПодвески=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипПодвески=Справочники.ТипПодвески_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипПодвески) тогда
												СпрГ=Справочники.ТипПодвески_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипПодвески=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Количество скоростей" тогда
										ДопРеквизитСюдаЗаписывать.КоличествоСкоростей=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.КоличествоСкоростей=Справочники.КоличествоСкоростей_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.КоличествоСкоростей) тогда
												СпрГ=Справочники.КоличествоСкоростей_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.КоличествоСкоростей=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
									
								ИначеЕсли Стр_2.name="Материал подкрылков" тогда
										ДопРеквизитСюдаЗаписывать.МатериалПодкрылок=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.МатериалПодкрылок=Справочники.МатериалПодкрылков_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.МатериалПодкрылок) тогда
												СпрГ=Справочники.МатериалПодкрылков_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.МатериалПодкрылок=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Расположение фар" тогда
										ДопРеквизитСюдаЗаписывать.РасположениеФар=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.РасположениеФар=Справочники.РасположениеФар_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.РасположениеФар) тогда
												СпрГ=Справочники.РасположениеФар_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.РасположениеФар=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Наличие кофра" тогда
										ДопРеквизитСюдаЗаписывать.НаличиеКофра=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.НаличиеКофра=Справочники.НалииеКофры_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.НаличиеКофра) тогда
												СпрГ=Справочники.НалииеКофры_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.НаличиеКофра=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Максимальная нагрузка, кг" тогда
										ДопРеквизитСюдаЗаписывать.МаксимальнаяНагрузка=Стр_2.value;
									
								ИначеЕсли Стр_2.name="Тип парфюмерии" тогда
										ДопРеквизитСюдаЗаписывать.ТипПарфюмерии=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипПарфюмерии=Справочники.ТипПарфюмерии_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипПарфюмерии) тогда
												СпрГ=Справочники.ТипПарфюмерии_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипПарфюмерии=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
									
								ИначеЕсли Стр_2.name="Возраст потребителя" тогда
										ДопРеквизитСюдаЗаписывать.ВозрастПотребителя=Неопределено;
																  
										Если Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Белье ТОгда
											Если ЗначениеЗаполнено(Стр_2.value) Тогда
												ДопРеквизитСюдаЗаписывать.ВозрастПотребителя=Справочники.ВозрастПотребителя_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
												Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ВозрастПотребителя) тогда
													СпрГ=Справочники.ВозрастПотребителя_ХамелеонЦРПТ.СоздатьЭлемент();
													СпрГ.Наименование=Стр_2.value;
													СпрГ.Записать();
													ДопРеквизитСюдаЗаписывать.ВозрастПотребителя=СпрГ.Ссылка;
												Конецесли;
												
											КонецЕсли;
										ИначеЕсли Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Одежда ТОгда
											Если ЗначениеЗаполнено(Стр_2.value) Тогда
												ДопРеквизитСюдаЗаписывать.ВозрастПотребителя=Справочники.ВозвратПотребителя_Одежда_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
												Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ВозрастПотребителя) тогда
													СпрГ=Справочники.ВозвратПотребителя_Одежда_ХамелеонЦРПТ.СоздатьЭлемент();
													СпрГ.Наименование=Стр_2.value;
													СпрГ.Записать();
													ДопРеквизитСюдаЗаписывать.ВозрастПотребителя=СпрГ.Ссылка;
												Конецесли;
												
											КонецЕсли;
										ИначеЕсли Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Велосипеды ТОгда
											Если ЗначениеЗаполнено(Стр_2.value) Тогда
												ДопРеквизитСюдаЗаписывать.ВозрастПотребителя=Справочники.Возраст_Велосипеды_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
												Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ВозрастПотребителя) тогда
													СпрГ=Справочники.Возраст_Велосипеды_ХамелеонЦРПТ.СоздатьЭлемент();
													СпрГ.Наименование=Стр_2.value;
													СпрГ.Записать();
													ДопРеквизитСюдаЗаписывать.ВозрастПотребителя=СпрГ.Ссылка;
												Конецесли;
												
											КонецЕсли;
										Иначе	
											Если ЗначениеЗаполнено(Стр_2.value) Тогда
												ДопРеквизитСюдаЗаписывать.ВозрастПотребителя=Справочники.ВозрастПотребителя_Парфюм_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
												Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ВозрастПотребителя) тогда
													СпрГ=Справочники.ВозрастПотребителя_Парфюм_ХамелеонЦРПТ.СоздатьЭлемент();
													СпрГ.Наименование=Стр_2.value;
													СпрГ.Записать();
													ДопРеквизитСюдаЗаписывать.ВозрастПотребителя=СпрГ.Ссылка;
												Конецесли;
												
											КонецЕсли;
										КонецЕсли;
									
								ИначеЕсли Стр_2.name="Пол целевого потребителя" тогда
										ДопРеквизитСюдаЗаписывать.ПолЦелевогоПотребителя=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ПолЦелевогоПотребителя=Справочники.ПолЦелевогоПотребителя_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ПолЦелевогоПотребителя) тогда
												СпрГ=Справочники.ПолЦелевогоПотребителя_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ПолЦелевогоПотребителя=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
										
									ИначеЕсли Стр_2.name="Форма / состояние / формат" тогда
											ДопРеквизитСюдаЗаписывать.ФормаСостояниеФормат=Неопределено;
											Если ЗначениеЗаполнено(Стр_2.value) Тогда
												ДопРеквизитСюдаЗаписывать.ФормаСостояниеФормат=Справочники.ФормаСостояниеФормат_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
												Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ФормаСостояниеФормат) тогда
													СпрГ=Справочники.ФормаСостояниеФормат_ХамелеонЦРПТ.СоздатьЭлемент();
													СпрГ.Наименование=Стр_2.value;
													СпрГ.Записать();
													ДопРеквизитСюдаЗаписывать.ФормаСостояниеФормат=СпрГ.Ссылка;
												Конецесли;
												
											КонецЕсли;
										
								ИначеЕсли Стр_2.name="Тип дозатора" тогда
										ДопРеквизитСюдаЗаписывать.ТипДозатора=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипДозатора=Справочники.ТипДозатора_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипДозатора) тогда
												СпрГ=Справочники.ТипДозатора_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипДозатора=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
										
								ИначеЕсли Стр_2.name="Селектив" тогда
										ДопРеквизитСюдаЗаписывать.Селектив=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.Селектив=Справочники.СодержитГМО_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.Селектив) тогда
												СпрГ=Справочники.СодержитГМО_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.Селектив=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
										
								ИначеЕсли Стр_2.name="Тип аромата" тогда
										ДопРеквизитСюдаЗаписывать.ТипАромата=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипАромата=Справочники.ТипАромата_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипАромата) тогда
												СпрГ=Справочники.ТипАромата_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипАромата=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
										
								ИначеЕсли Стр_2.name="Входящие в аромат ноты" Тогда
									ДопРеквизитСюдаЗаписывать.ВходящиеВАроматНоты=Стр_2.value
								ИначеЕсли Стр_2.name="Вид товара" тогда
									
									Если Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Белье Тогда
										ДопРеквизитСюдаЗаписывать.ВидИзделия=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ВидИзделия=Справочники.ВидИзделия_Белье_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ВидИзделия) тогда
												СпрГ=Справочники.ВидИзделия_Белье_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ВидИзделия=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
									ИначеЕсли Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Одежда Тогда
										ДопРеквизитСюдаЗаписывать.ВидИзделия=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ВидИзделия=Справочники.ВидИзделия_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ВидИзделия) тогда
												СпрГ=Справочники.ВидИзделия_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.УстановитьНовыйКод("ДР_");
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ВидИзделия=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
									ИначеЕсли Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Велосипеды Тогда
										ДопРеквизитСюдаЗаписывать.ТипВелосипеда=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипВелосипеда=Справочники.ТипВелосипеда_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипВелосипеда) тогда
												СпрГ=Справочники.ТипВелосипеда_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипВелосипеда=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
									Иначе
										ДопРеквизитСюдаЗаписывать.ТипИзделия=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипИзделия=Справочники.ТипИзделия_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипИзделия) тогда
												СпрГ=Справочники.ТипИзделия_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипИзделия=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
									КонецЕсли;
								ИначеЕсли Стр_2.name="Материал изделия" Тогда
									ДопРеквизитСюдаЗаписывать.МатериалИзделия=Стр_2.value
								ИначеЕсли Стр_2.name="Цвет" тогда
									Если ОБъект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Обувь Тогда
										Объект.Цвет=Стр_2.value
									ИначеЕсли Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Велосипеды 
										ИЛИ Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Одежда 
										ИЛИ Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Белье 
										Тогда
										ДопРеквизитСюдаЗаписывать.Цвет=Стр_2.value;
									Иначе
										ДопРеквизитСюдаЗаписывать.Цвет=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.Цвет=Справочники.Цвет_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.Цвет) тогда
												СпрГ=Справочники.Цвет_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.Цвет=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
									КонецЕсли;
								ИначеЕсли Стр_2.name="Целевое использование/применение" тогда
								
										ДопРеквизитСюдаЗаписывать.ЦелевоеИспользование=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ЦелевоеИспользование=Справочники.ЦелевоеИспользование_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ЦелевоеИспользование) тогда
												СпрГ=Справочники.ЦелевоеИспользование_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ЦелевоеИспользование=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
									
								ИначеЕсли Стр_2.name="Ширина профиля шины (камеры), мм/дюйм" Тогда
										
										ДопРеквизитСюдаЗаписывать.ШиринаПрофиляШины=Стр_2.value;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											
											ДопРеквизитСюдаЗаписывать.ЕдиницаИзмерения=Справочники.ЕдиницаИзмерения_Шины_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ЕдиницаИзмерения) Тогда
												СпрПр=Справочники.ЕдиницаИзмерения_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.ЕдиницаИзмерения=СпрПр.Ссылка;
											Конецесли;

										КонецЕсли;
										
								ИначеЕсли Стр_2.name="Ширина профиля шины (камеры), дюйм" Тогда

									
										ДопРеквизитСюдаЗаписывать.ШиринаПрофиляШиныКамерыДюйм=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ШиринаПрофиляШиныКамерыДюйм=Справочники.ШиринааПрофиляШиныКамерыДюймы_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ШиринаПрофиляШиныКамерыДюйм) тогда
												СпрГ=Справочники.ШиринааПрофиляШиныКамерыДюймы_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ШиринаПрофиляШиныКамерыДюйм=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
									
								ИначеЕсли Стр_2.name="Номинальное отношение высоты профиля шины к его ширине, %" Тогда
									
									
										ДопРеквизитСюдаЗаписывать.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине=Справочники.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине_Шины_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине) тогда
												СпрГ=Справочники.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Тип конструкции каркаса шины" Тогда
										ДопРеквизитСюдаЗаписывать.ТипКонструкцииКаркасаШины=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипКонструкцииКаркасаШины=Справочники.ТипКонструкцииКаркасаШины_Шины_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипКонструкцииКаркасаШины) тогда
												СпрГ=Справочники.ТипКонструкцииКаркасаШины_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипКонструкцииКаркасаШины=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								//ИначеЕсли Стр_2.name="Номинальный посадочный диаметр обода, дюйм" Тогда
								//	ДопРеквизитСюдаЗаписывать.НоминальныйПосадочныйДиаметрОбода=Стр_2.value
								//ИначеЕсли Стр_2.name="Номинальный посадочный диаметр обода, мм" Тогда
								//	ДопРеквизитСюдаЗаписывать.НоминальныйПосадочныйДиаметрОбодаВМм=Стр_2.value
									
								ИначеЕсли Стр_2.name="Индекс нагрузки на шину" Тогда
										ДопРеквизитСюдаЗаписывать.ИндексНагрузкиНаШину=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ИндексНагрузкиНаШину=Справочники.ИндексНагрузкиНаШину_Шины_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ИндексНагрузкиНаШину) тогда
												СпрГ=Справочники.ИндексНагрузкиНаШину_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ИндексНагрузкиНаШину=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
									
								ИначеЕсли Стр_2.name="Категория скорости" Тогда
										ДопРеквизитСюдаЗаписывать.КатегорияСкорости=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.КатегорияСкорости=Справочники.КатегорияСкорости_Шины_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.КатегорияСкорости) тогда
												СпрГ=Справочники.КатегорияСкорости_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.КатегорияСкорости=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
									
								ИначеЕсли Стр_2.name="Сезонность" Тогда
										ДопРеквизитСюдаЗаписывать.Сезонность=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.Сезонность=Справочники.Сезонность_Шины_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.Сезонность) тогда
												СпрГ=Справочники.Сезонность_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.Сезонность=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
									
								ИначеЕсли Стр_2.name="Тип шины по способу герметизации" Тогда
										ДопРеквизитСюдаЗаписывать.ТипШиныПоСпособуГерметизации=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипШиныПоСпособуГерметизации=Справочники.ТипШиныПоСпособуГерметизации_Шины_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипШиныПоСпособуГерметизации) тогда
												СпрГ=Справочники.ТипШиныПоСпособуГерметизации_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипШиныПоСпособуГерметизации=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
										
						ИначеЕсли Стр_2.name="Наружный диаметр" Тогда
										
										ДопРеквизитСюдаЗаписывать.НаружныйДиаметр=Стр_2.value;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											
											ДопРеквизитСюдаЗаписывать.ЕдиинцаНаружногоДиаметра=Справочники.ЕдиницаИзмерения_Шины_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ЕдиинцаНаружногоДиаметра) Тогда
												СпрПр=Справочники.ЕдиницаИзмерения_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.ЕдиинцаНаружногоДиаметра=СпрПр.Ссылка;
											Конецесли;

										КонецЕсли;
										
								ИначеЕсли Стр_2.name="Топливная экономичность" Тогда
										ДопРеквизитСюдаЗаписывать.ТопливнаяЭкономичность=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТопливнаяЭкономичность=Справочники.ТопливнаяЭкономичность_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТопливнаяЭкономичность) тогда
												СпрГ=Справочники.ТопливнаяЭкономичность_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТопливнаяЭкономичность=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
										
								ИначеЕсли Стр_2.name="Индекс сцепления с мокрой дорогой" Тогда
										ДопРеквизитСюдаЗаписывать.ИндексСцепленияСМокройДорогой=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ИндексСцепленияСМокройДорогой=Справочники.ИндексСцепленияСМокройДорогой_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ИндексСцепленияСМокройДорогой) тогда
												СпрГ=Справочники.ИндексСцепленияСМокройДорогой_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ИндексСцепленияСМокройДорогой=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
										
								ИначеЕсли Стр_2.name="Уровень шума, в децибелах (dB)" Тогда
									   ДопРеквизитСюдаЗаписывать.УровеньШумаВДецибелах=Стр_2.value
								ИначеЕсли Стр_2.name="Рисунок протектора" Тогда
										ДопРеквизитСюдаЗаписывать.РисунокПротектроа=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.РисунокПротектроа=Справочники.РисунокПротектора_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.РисунокПротектроа) тогда
												СпрГ=Справочники.РисунокПротектора_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.РисунокПротектроа=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Технология RunFlat" Тогда
										ДопРеквизитСюдаЗаписывать.ТехнологияRunFlat=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТехнологияRunFlat=Справочники.ПродукцияДляДетскогоПитания_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТехнологияRunFlat) тогда
												СпрГ=Справочники.ПродукцияДляДетскогоПитания_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТехнологияRunFlat=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
										

								ИначеЕсли Стр_2.name="Усиленная шина (XL, Extra Load)" Тогда
										ДопРеквизитСюдаЗаписывать.УсиленнаяШина=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.УсиленнаяШина=Справочники.УсиленнаяШина_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.УсиленнаяШина) тогда
												СпрГ=Справочники.УсиленнаяШина_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.УсиленнаяШина=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
										

																		

								ИначеЕсли Стр_2.name="Шины с цельнометаллическим кордом" Тогда
										ДопРеквизитСюдаЗаписывать.ШинаСЦельнометаллическимКордом=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ШинаСЦельнометаллическимКордом=Справочники.ПродукцияДляДетскогоПитания_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ШинаСЦельнометаллическимКордом) тогда
												СпрГ=Справочники.ПродукцияДляДетскогоПитания_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ШинаСЦельнометаллическимКордом=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
										

																		

								ИначеЕсли Стр_2.name="Дополнительные характеристики изделия (описание)" Тогда
									   ДопРеквизитСюдаЗаписывать.ДополнительныеХарактеристики=Стр_2.value
										

										
										
								ИначеЕсли Стр_2.name="Тип продукта" Тогда
									
									Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДополнительныеРеквизитВода.ТипПродукта=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) тогда
											ДополнительныеРеквизитВода.ТипПродукта=Справочники.ТипПродукта_Вода_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДополнительныеРеквизитВода.ТипПродукта) Тогда
												СпрПр=Справочники.ТипПродукта_Вода_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.value;
												СпрПр.Записать();
												ДополнительныеРеквизитВода.ТипПродукта=СпрПр.Ссылка;
											Конецесли;
										КонецЕсли;
									ИначеЕсли Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.Молоко Тогда
										ДополнителныеРеквизитМолоко.ТипПродукта=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) тогда
											ДополнителныеРеквизитМолоко.ТипПродукта=Справочники.ТипПродукта_Молоко_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ТипПродукта) Тогда
												СпрПр=Справочники.ТипПродукта_Вода_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.value;
												СпрПр.Записать();
												ДополнителныеРеквизитМолоко.ТипПродукта=СпрПр.Ссылка;
											Конецесли;
										КонецЕсли;
									КонецЕсли;
								ИначеЕсли Стр_2.name="Метод газирования" Тогда
									Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДополнительныеРеквизитВода.МетодГазирования=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) тогда
											ДополнительныеРеквизитВода.МетодГазирования=Справочники.МетодГазирования_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДополнительныеРеквизитВода.МетодГазирования) Тогда
												СпрПр=Справочники.МетодГазирования_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.value;
												СпрПр.Записать();
												ДополнительныеРеквизитВода.МетодГазирования=СпрПр.Ссылка;
											Конецесли;
										КонецЕсли;
									КонецЕсли;
								ИначеЕсли Стр_2.name="Общая минерализация" Тогда
									Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДополнительныеРеквизитВода.ОбщаяМинерализация=Стр_2.value;
										ДополнительныеРеквизитВода.ЕдиницаИзмеренияМинерализации=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											ДополнительныеРеквизитВода.ЕдиницаИзмеренияМинерализации=Справочники.ЕдиницаИзмеренияМинерализации_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДополнительныеРеквизитВода.ЕдиницаИзмеренияМинерализации) Тогда
												СпрПр=Справочники.ЕдиницаИзмеренияМинерализации_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДополнительныеРеквизитВода.ЕдиницаИзмеренияМинерализации=СпрПр.Ссылка;
											Конецесли;
										КонецЕсли;
										
									КонецЕсли;
								ИначеЕсли Стр_2.name="Продукция для детского питания" Тогда
									//Если Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДопРеквизитСюдаЗаписывать.ПродукцияДляДетскогоПитания=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ПродукцияДляДетскогоПитания=Справочники.ПродукцияДляДетскогоПитания_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ПродукцияДляДетскогоПитания) тогда
												СпрГ=Справочники.ПродукцияДляДетскогоПитания_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ПродукцияДляДетскогоПитания=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
									//КонецЕсли;
								ИначеЕсли Стр_2.name="Содержит ГМО" Тогда
										ДопРеквизитСюдаЗаписывать.СодержитГМО=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.СодержитГМО=Справочники.СодержитГМО_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.СодержитГМО) тогда
												СпрГ=Справочники.СодержитГМО_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.СодержитГМО=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
									//КонецЕсли;
								ИначеЕсли Стр_2.name="Пищевые добавки / ароматизаторы" Тогда
									ДопРеквизитСюдаЗаписывать.ПищевыеДобавкиАроматизаторы=Стр_2.value;
								
								ИначеЕсли Стр_2.name="Вкус" Тогда
									ДопРеквизитСюдаЗаписывать.Вкус=Стр_2.value;
								ИначеЕсли Стр_2.name="Заменитель молочного жира" Тогда
									
										ДопРеквизитСюдаЗаписывать.ЗаменительМолочногоЖира=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ЗаменительМолочногоЖира=Справочники.СодержитГМО_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ЗаменительМолочногоЖира) тогда
												СпрГ=Справочники.СодержитГМО_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ЗаменительМолочногоЖира=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Происхождение сырья" Тогда
									
										ДопРеквизитСюдаЗаписывать.ПроисхождениеСырья=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ПроисхождениеСырья=Справочники.ПроисхождениеСырья_Молоко_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ПроисхождениеСырья) тогда
												СпрГ=Справочники.ПроисхождениеСырья_Молоко_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ПроисхождениеСырья=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Жирность, %" Тогда
									
										ДопРеквизитСюдаЗаписывать.Жирность=Стр_2.value;
								
								ИначеЕсли Стр_2.name="Тип обработки молока" Тогда
									
										ДопРеквизитСюдаЗаписывать.ТипОбработкиМолока=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипОбработкиМолока=Справочники.ТипОбработкиМолока_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипОбработкиМолока) тогда
												СпрГ=Справочники.ТипОбработкиМолока_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипОбработкиМолока=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Целевой возраст" Тогда
									
										ДопРеквизитСюдаЗаписывать.ЦелевойВозраст=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ЦелевойВозраст=Справочники.ЦелевойВозраст_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ЦелевойВозраст) тогда
												СпрГ=Справочники.ЦелевойВозраст_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ЦелевойВозраст=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Тип хранения" Тогда
									
										ДопРеквизитСюдаЗаписывать.ТипХранения=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипХранения=Справочники.ТипХранения_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипХранения) тогда
												СпрГ=Справочники.ТипХранения_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипХранения=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Органический продукт" Тогда
									
										ДопРеквизитСюдаЗаписывать.ОрганическийПродукт=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ОрганическийПродукт=Справочники.СодержитГМО_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ОрганическийПродукт) тогда
												СпрГ=Справочники.СодержитГМО_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ОрганическийПродукт=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Содержит пальмовое масло" Тогда
									
										ДопРеквизитСюдаЗаписывать.СодержитПальмовоеМасло=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.СодержитПальмовоеМасло=Справочники.СодержитГМО_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.СодержитПальмовоеМасло) тогда
												СпрГ=Справочники.СодержитГМО_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.СодержитПальмовоеМасло=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
									ИначеЕсли Стр_2.name="Витаминизация" Тогда
									
										ДопРеквизитСюдаЗаписывать.Витаминизация=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.Витаминизация=Справочники.ПродукцияДляДетскогоПитания_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.Витаминизация) тогда
												СпрГ=Справочники.ПродукцияДляДетскогоПитания_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.Витаминизация=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
									ИначеЕсли Стр_2.name="Аллергены" Тогда
											Добав_1=ДопРеквизитСюдаЗаписывать.Аллергены.Добавить();
												Добав_1.Аллерген=Неопределено;
												Если ЗначениеЗаполнено(Стр_2.value) тогда
													Добав_1.Аллерген=Справочники.Аллергены_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
													Если Не ЗначениеЗаполнено(Добав_1.Аллерген) Тогда
														СпрПр=Справочники.Аллергены_ХамелеонЦРПТ.СоздатьЭлемент();
														СпрПр.Наименование=Стр_2.value;
														СпрПр.Записать();
														Добав_1.Аллерген=СпрПр.Ссылка;
													Конецесли;
												КонецЕсли;
												
										
								КонецЕсли;
							Конеццикла;
							
						ИначеЕсли Стр_1.name="Пищевая и энергетическая ценности" Тогда
							
							Для Каждого Стр_2 Из Стр_1.attributes Цикл
								Если Стр_2.name="Белки" Тогда
										ДопРеквизитСюдаЗаписывать.Белки=Стр_2.value;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											
											ДопРеквизитСюдаЗаписывать.БелкиЕдиницаИзмерения=Справочники.ЕдиницыИзмеренияПищевойЦенности_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.БелкиЕдиницаИзмерения) Тогда
												СпрПр=Справочники.ЕдиницыИзмеренияПищевойЦенности_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.БелкиЕдиницаИзмерения=СпрПр.Ссылка;
											Конецесли;

										КонецЕсли;
								ИначеЕсли Стр_2.name="Жиры" Тогда
										ДопРеквизитСюдаЗаписывать.Жиры=Стр_2.value;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											
											ДопРеквизитСюдаЗаписывать.ЖирыЕдиницаИзмерения=Справочники.ЕдиницыИзмеренияПищевойЦенности_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ЖирыЕдиницаИзмерения) Тогда
												СпрПр=Справочники.ЕдиницыИзмеренияПищевойЦенности_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.ЖирыЕдиницаИзмерения=СпрПр.Ссылка;
											Конецесли;

										КонецЕсли;
								ИначеЕсли Стр_2.name="Углеводы" Тогда
										ДопРеквизитСюдаЗаписывать.Углеводы=Стр_2.value;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											
											ДопРеквизитСюдаЗаписывать.УглеводыЕдиницаИзмерения=Справочники.ЕдиницыИзмеренияПищевойЦенности_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.УглеводыЕдиницаИзмерения) Тогда
												СпрПр=Справочники.ЕдиницыИзмеренияПищевойЦенности_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.УглеводыЕдиницаИзмерения=СпрПр.Ссылка;
											Конецесли;

										КонецЕсли;
									ИначеЕсли Стр_2.name="Энергетическая ценность" Тогда
												Добав_1=ДопРеквизитСюдаЗаписывать.ЭнергетическаяЦенность.Добавить();
												Добав_1.ЕдиницаИзмерения=Неопределено;
												Если ЗначениеЗаполнено(Стр_2.valueType) тогда
													Добав_1.ЕдиницаИзмерения=Справочники.ЕдиницыИзмеренияЭнергетическойЦенности_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
													Если Не ЗначениеЗаполнено(Добав_1.ЕдиницаИзмерения) Тогда
														СпрПр=Справочники.ЕдиницыИзмеренияЭнергетическойЦенности_ХамелеонЦРПТ.СоздатьЭлемент();
														СпрПр.Наименование=Стр_2.valueType;
														СпрПр.Записать();
														Добав_1.ЕдиницаИзмерения=СпрПр.Ссылка;
													Конецесли;
												КонецЕсли;
												Добав_1.ЭнергетическаяЦенность=Стр_2.value

										
																		КонецЕсли;
							Конеццикла;
							

							
						ИначеЕсли Стр_1.name="Состав" Тогда
							
							
							

							Для Каждого Стр_2 Из Стр_1.attributes Цикл
								Если Стр_2.name="Состав" Тогда
									
									Если Найти(Строка(Объект.ТипУпаковки),"SET")>0 Тогда
										Объект.СоставДляНабора=Стр_2.value
									//Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
									Иначе
										ДопРеквизитСюдаЗаписывать.Состав=Стр_2.value;
									Конецесли;	
								ИначеЕсли Стр_2.name="Комплектация" Тогда
										Если Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Парфюм 
											ИЛИ Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Одежда
											Или Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Белье
											Тогда
											ДопРеквизитСюдаЗаписывать.Комплектация=Стр_2.value;
										Иначе
											ДопРеквизитСюдаЗаписывать.Состав=Стр_2.value;
										КонецЕсли;
									
								иначеЕсли Стр_2.name="Тип материала, %" тогда
										Добав_1=ДопРеквизитСюдаЗаписывать.ТипМатериалов.Добавить();
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
										    Добав_1.Материал=Справочники.Материал_Одежда_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);;
											Если Не ЗначениеЗаполнено(Добав_1.Материал) тогда
												СпрГ=Справочники.Материал_Одежда_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												Добав_1.Материал=СпрГ.Ссылка;
											Конецесли;
											
											
										КонецЕсли;
										Если ЗначениеЗаполнено(Стр_2.valueType) Тогда
											Добав_1.Процент=Справочники.Процент_Одежда_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(Добав_1.Процент) тогда
												СпрГ=Справочники.Процент_Одежда_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.valueType;
												СпрГ.Записать();
												Добав_1.Процент=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;
								ИначеЕсли Стр_2.name="Тип материала" Тогда
									
									//Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДопРеквизитСюдаЗаписывать.ТипМатериала=Стр_2.value;
								КонецЕсли;
							Конеццикла;
							
						ИначеЕсли Стр_1.name="Характеристики товара в состоянии использования" Тогда
							Для Каждого Стр_2 Из Стр_1.attributes Цикл
								Если Стр_2.name="Размер изделия" Тогда
									ДопРеквизитСюдаЗаписывать.РазмерИзделия=Стр_2.value;
								ИначеЕсли Стр_2.name="Конструктивная масса, кг" Тогда
									ДопРеквизитСюдаЗаписывать.КонструктивнаяМасса=Стр_2.value;
								ИначеЕсли Стр_2.name="Длина изделия" Тогда
										ДопРеквизитСюдаЗаписывать.ДлинаЕдиницаИзмерения=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											ДопРеквизитСюдаЗаписывать.ДлинаЕдиницаИзмерения=Справочники.ЕдиницаИзмерения_Парфюм_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ДлинаЕдиницаИзмерения) Тогда
												СпрПр=Справочники.ЕдиницаИзмерения_Парфюм_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.ДлинаЕдиницаИзмерения=СпрПр.Ссылка;
											Конецесли;
										КонецЕсли;
										ДопРеквизитСюдаЗаписывать.Длина=Стр_2.value;
									
								ИначеЕсли Стр_2.name="Ширина изделия" Тогда
									//Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДопРеквизитСюдаЗаписывать.ШиринаЕдиницаИзмерения=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											ДопРеквизитСюдаЗаписывать.ШиринаЕдиницаИзмерения=Справочники.ЕдиницаИзмерения_Парфюм_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ШиринаЕдиницаИзмерения) Тогда
												СпрПр=Справочники.ЕдиницаИзмерения_Парфюм_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.ШиринаЕдиницаИзмерения=СпрПр.Ссылка;
											Конецесли;
										КонецЕсли;
										ДопРеквизитСюдаЗаписывать.Ширина=Стр_2.value;
										
								ИначеЕсли Стр_2.name="Высота изделия" Тогда
									//Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДопРеквизитСюдаЗаписывать.ВысотаЕдиницаИзмерения=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											ДопРеквизитСюдаЗаписывать.ВысотаЕдиницаИзмерения=Справочники.ЕдиницаИзмерения_Парфюм_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ВысотаЕдиницаИзмерения) Тогда
												СпрПр=Справочники.ЕдиницаИзмерения_Парфюм_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.ВысотаЕдиницаИзмерения=СпрПр.Ссылка;
											Конецесли;
										КонецЕсли;
										ДопРеквизитСюдаЗаписывать.Высота=Стр_2.value;      
							ИначеЕсли Стр_2.name="Длина сложенного изделия" Тогда
										ДопРеквизитСюдаЗаписывать.ДлинаСложенногоИзделияЕдиницаИзмерения=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											ДопРеквизитСюдаЗаписывать.ДлинаСложенногоИзделияЕдиницаИзмерения=Справочники.ЕдиницаИзмерения_Парфюм_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ДлинаСложенногоИзделияЕдиницаИзмерения) Тогда
												СпрПр=Справочники.ЕдиницаИзмерения_Парфюм_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.ДлинаСложенногоИзделияЕдиницаИзмерения=СпрПр.Ссылка;
											Конецесли;
										КонецЕсли;
										ДопРеквизитСюдаЗаписывать.ДлинаСложенногоИзделия=Стр_2.value;
									
								ИначеЕсли Стр_2.name="Ширина сложенного изделия" Тогда
									//Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДопРеквизитСюдаЗаписывать.ШиринаСложенногоИзделияЕдиницаИзмерения=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											ДопРеквизитСюдаЗаписывать.ШиринаСложенногоИзделияЕдиницаИзмерения=Справочники.ЕдиницаИзмерения_Парфюм_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ШиринаСложенногоИзделияЕдиницаИзмерения) Тогда
												СпрПр=Справочники.ЕдиницаИзмерения_Парфюм_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.ШиринаСложенногоИзделияЕдиницаИзмерения=СпрПр.Ссылка;
											Конецесли;
										КонецЕсли;
										ДопРеквизитСюдаЗаписывать.ШиринаСложенногоИзделия=Стр_2.value;
										
								ИначеЕсли Стр_2.name="Высота сложенного изделия" Тогда
									//Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДопРеквизитСюдаЗаписывать.ВысотаСложенногоИзделияЕдиницыИзмерения=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											ДопРеквизитСюдаЗаписывать.ВысотаСложенногоИзделияЕдиницыИзмерения=Справочники.ЕдиницаИзмерения_Парфюм_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ВысотаСложенногоИзделияЕдиницыИзмерения) Тогда
												СпрПр=Справочники.ЕдиницаИзмерения_Парфюм_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.ВысотаСложенногоИзделияЕдиницыИзмерения=СпрПр.Ссылка;
											Конецесли;
										КонецЕсли;
										ДопРеквизитСюдаЗаписывать.ВысотаСложенногоИзделния=Стр_2.value;
										
								ИначеЕсли Стр_2.name="Глубина изделия" Тогда
									//Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДопРеквизитСюдаЗаписывать.ГлубинаЕдиницаИзмерения=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											ДопРеквизитСюдаЗаписывать.ГлубинаЕдиницаИзмерения=Справочники.ЕдиницаИзмерения_Парфюм_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ГлубинаЕдиницаИзмерения) Тогда
												СпрПр=Справочники.ЕдиницаИзмерения_Парфюм_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.ГлубинаЕдиницаИзмерения=СпрПр.Ссылка;
											Конецесли;
										КонецЕсли;
										ДопРеквизитСюдаЗаписывать.Глубина=Стр_2.value;
									
									ИначеЕсли Стр_2.name="Тип упаковки использования" Тогда
									
										ДопРеквизитСюдаЗаписывать.ТипУпаковкиИспользования=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ТипУпаковкиИспользования=Справочники.ТипУпаковкиИспользования_Парфюм_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипУпаковкиИспользования) тогда
												СпрГ=Справочники.ТипУпаковкиИспользования_Парфюм_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ТипУпаковкиИспользования=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;

									ИначеЕсли Стр_2.name="Материал упаковки использования" Тогда
									
										ДопРеквизитСюдаЗаписывать.МатериалУпаковки=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.МатериалУпаковки=Справочники.МатериалУпаковки_Молоко_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.МатериалУпаковки) тогда
												СпрГ=Справочники.МатериалУпаковки_Молоко_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.МатериалУпаковки=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;


								КонецЕсли;
							Конеццикла;
							
						ИначеЕсли Стр_1.name="Эксплуатация и условия хранения" Тогда
							
							
							Для Каждого Стр_2 Из Стр_1.attributes Цикл
								Если Стр_2.name="Срок службы" Тогда
									
									//Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДопРеквизитСюдаЗаписывать.ТипСрокаСлужбы=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											ДопРеквизитСюдаЗаписывать.ТипСрокаСлужбы=Справочники.ТипСрока_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипСрокаСлужбы) Тогда
												СпрПр=Справочники.ТипСрока_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.ТипСрокаСлужбы=СпрПр.Ссылка;
											Конецесли;
										КонецЕсли;
										ДопРеквизитСюдаЗаписывать.СрокСлужбы=Стр_2.value;
							ИначеЕсли Стр_2.name="Гарантийный срок, от производителя" Тогда
									
									//Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДопРеквизитСюдаЗаписывать.ТипГарантийногоСрока=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											ДопРеквизитСюдаЗаписывать.ТипГарантийногоСрока=Справочники.ТипСрока_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипГарантийногоСрока) Тогда
												СпрПр=Справочники.ТипСрока_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.ТипГарантийногоСрока=СпрПр.Ссылка;
											Конецесли;
										КонецЕсли;
										ДопРеквизитСюдаЗаписывать.ГарантийныйСрокОтПроизводителя=Стр_2.value;
										
							ИначеЕсли Стр_2.name="Срок годности" Тогда
									
									//Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДопРеквизитСюдаЗаписывать.ТипСрокаГодности=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											ДопРеквизитСюдаЗаписывать.ТипСрокаГодности=Справочники.ТипыСроковГодности_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипСрокаГодности) Тогда
												СпрПр=Справочники.ТипыСроковГодности_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.ТипСрокаГодности=СпрПр.Ссылка;
											Конецесли;
										КонецЕсли;
										ДопРеквизитСюдаЗаписывать.СрокГодности=Стр_2.value;
								ИначеЕсли Стр_2.name="Срок хранения" Тогда
									
									//Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДопРеквизитСюдаЗаписывать.ТипСрокаХранения=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.valueType) тогда
											ДопРеквизитСюдаЗаписывать.ТипСрокаХранения=Справочники.ТипыСроковГодности_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ТипСрокаХранения) Тогда
												СпрПр=Справочники.ТипыСроковГодности_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрПр.Наименование=Стр_2.valueType;
												СпрПр.Записать();
												ДопРеквизитСюдаЗаписывать.ТипСрокаХранения=СпрПр.Ссылка;
											Конецесли;
										КонецЕсли;
										ДопРеквизитСюдаЗаписывать.СрокХранения=Стр_2.value;

									//КонецЕсли;
							ИначеЕсли Стр_2.name="Рекомендации по использованию" Тогда
									//Если Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДопРеквизитСюдаЗаписывать.РекомендацияПоИспользованию=Стр_2.value;
									//КонецЕсли;
								ИначеЕсли Стр_2.name="Дополнительный срок годности" Тогда
									Если ЗначениеЗаполнено(Стр_2.valueType) Тогда
										//Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
												
											Добав_1=ДопРеквизитСюдаЗаписывать.ДополнительныеСрокиГодности.Добавить();
												Добав_1.ТипДополнительногоСрокаГодности=Неопределено;
												Если ЗначениеЗаполнено(Стр_2.valueType) тогда
													Добав_1.ТипДополнительногоСрокаГодности=Справочники.ТипыДополнительныхСроковГодности_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
													Если Не ЗначениеЗаполнено(Добав_1.ТипДополнительногоСрокаГодности) Тогда
														СпрПр=Справочники.ТипыДополнительныхСроковГодности_ХамелеонЦРПТ.СоздатьЭлемент();
														СпрПр.Наименование=Стр_2.valueType;
														СпрПр.Записать();
														Добав_1.ТипДополнительногоСрокаГодности=СпрПр.Ссылка;
													Конецесли;
												КонецЕсли;
												Добав_1.СрокГодности=Стр_2.value
										//КонецЕсли;
									КонецЕсли;
								ИначеЕсли Стр_2.name="Альтернативный срок годности" Тогда
									Если ЗначениеЗаполнено(Стр_2.valueType) Тогда
										//Если Объект.Тип=перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
												
											Добав_1=ДопРеквизитСюдаЗаписывать.ДополнительныеСрокиГодности.Добавить();
												Добав_1.ТипДополнительногоСрокаГодности=Неопределено;
												Если ЗначениеЗаполнено(Стр_2.valueType) тогда
													Добав_1.ТипДополнительногоСрокаГодности=Справочники.ТипыДополнительныхСроковГодности_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
													Если Не ЗначениеЗаполнено(Добав_1.ТипДополнительногоСрокаГодности) Тогда
														СпрПр=Справочники.ТипыДополнительныхСроковГодности_ХамелеонЦРПТ.СоздатьЭлемент();
														СпрПр.Наименование=Стр_2.valueType;
														СпрПр.Записать();
														Добав_1.ТипДополнительногоСрокаГодности=СпрПр.Ссылка;
													Конецесли;
												КонецЕсли;
												Добав_1.СрокГодности=Стр_2.value
										//КонецЕсли;
									КонецЕсли;
								ИначеЕсли Стр_2.name="Мин. температура, С" Тогда
										ДополнительныйРеквизитОбщиеНК.МинимальнаяТемпература=Стр_2.value;
								ИначеЕсли Стр_2.name="Макс. температура, С" Тогда
										ДополнительныйРеквизитОбщиеНК.МаксимальнаяТемпература=Стр_2.value;
								ИначеЕсли Стр_2.name="Мин. относительная влажность, %" Тогда
										ДополнительныйРеквизитОбщиеНК.МинимальнаяОтносительнаяВлажность=Стр_2.value;
								ИначеЕсли Стр_2.name="Макс. относительная влажность, %" Тогда
										ДополнительныйРеквизитОбщиеНК.МаксимальнаяОтносительнаяВлажность=Стр_2.value;
								ИначеЕсли Стр_2.name="Особые условия хранения" Тогда
									//Если Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДопРеквизитСюдаЗаписывать.ОсобыеУсловияХранения=Стр_2.value;
									//КонецЕсли;
									
								ИначеЕсли Стр_2.name="Рекомендации по употреблению" Тогда
									//Если Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода Тогда
										ДопРеквизитСюдаЗаписывать.РекомендацияПоУпотреблению=Стр_2.value;
									//КонецЕсли;
									
								КонецЕсли;
							Конеццикла;
							
							
						ИначеЕсли Стр_1.name="Рекомендации производителя" Тогда
							Для Каждого Стр_2 Из Стр_1.attributes Цикл
									Если Стр_2.name="Меры предосторожности" Тогда
									
										ДопРеквизитСюдаЗаписывать.МерыПредосторожности=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.МерыПредосторожности=Справочники.МерыПредосторожности_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.МерыПредосторожности) тогда
												СпрГ=Справочники.МерыПредосторожности_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.МерыПредосторожности=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;

									КонецЕсли
							Конеццикла;
							
						ИначеЕсли Стр_1.name="Нормативно-сопроводительная документация" Тогда
							
							
							Для Каждого Стр_2 Из Стр_1.attributes Цикл
								Если Стр_2.name="Код ТНВЭД" Тогда
									Если ЗначениеЗАполнено(Стр_2.value) тогда
										Объект.КодТНВЭД=Обработки._Запуск_ХамелеонЦРПТ.КодТВЭДПоКОду(Стр_2.value);
									Конецесли;
								ИначеЕсли Стр_2.name="Группа ТНВЭД" Тогда
									Объект.КодТНВЭДКороткий=Стр_2.value;
								ИначеЕсли Стр_2.name="Код ОКПД2" Тогда
									
									

									Если ЗначениеЗаполнено(Стр_2.value) тогда
										ДополнительныйРеквизитОбщиеНК.ОКПД2=Справочники.ОКПД2_ХамелеонЦРПТ.НайтиПоКоду(Стр_2.value);
										Если Не ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.ОКПД2) Тогда
											СпрПр=Справочники.ОКПД2_ХамелеонЦРПТ.СоздатьЭлемент();
											СпрПр.Код=         Стр_2.value;
											СпрПр.Наименование=Стр_2.valueTitle;
											СпрПр.Записать();
											ДополнительныйРеквизитОбщиеНК.ОКПД2=СпрПр.Ссылка;
										Конецесли;
									КонецЕсли;
						
									//Объект.КодТНВЭДКороткий=Стр_2.value;
								ИначеЕсли Стр_2.name="BRICK GPC" Тогда
									ДопРеквизитСюдаЗаписывать.BRICKGPC=Стр_2.value;
								ИначеЕсли Стр_2.name="ГОСТ / ТУ / СТО" Тогда
									Если ЗначениеЗаполнено(Стр_2.valueType) Тогда
										
											Добав_1=ДопРеквизитСюдаЗаписывать.ГОСТЫИТУ.Добавить();
												Добав_1.ТипГОСТТУ=Неопределено;
												Если ЗначениеЗаполнено(Стр_2.valueType) тогда
													Добав_1.ТипГОСТТУ=Справочники.ТипГОСТТУ_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
													Если Не ЗначениеЗаполнено(Добав_1.ТипГОСТТУ) Тогда
														СпрПр=Справочники.ТипГОСТТУ_ХамелеонЦРПТ.СоздатьЭлемент();
														СпрПр.Наименование=Стр_2.valueType;
														СпрПр.Записать();
														Добав_1.ТипГОСТТУ_ХамелеонЦРПТ=СпрПр.Ссылка;
													Конецесли;
												КонецЕсли;
												Добав_1.ГОСТТУ=Стр_2.value

									КонецЕсли;
									
								ИначеЕсли Стр_2.name="Номер Регламента/стандарта" Тогда
									Если ЗначениеЗаполнено(Стр_2.value) Тогда
										
										Если Найти(Стр_2.value,"ТР ТС 021/2011")>0 Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента021=Истина;
										ИначеЕсли Найти(ВРЕГ(Стр_2.value),"НЕ РАСПРОСТРАНЯЕТСЯ")>0 Тогда
											ДопРеквизитСюдаЗаписывать.БезРегламента=Истина;
											
										ИначеЕсли Найти(Стр_2.value,"ТР ТС 018/2011")>0  Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента018=Истина;
										ИначеЕсли Найти(Стр_2.value,"ТР ТС 017/2011")>0 Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента017=Истина;
										ИначеЕсли Найти(Стр_2.value,"ТР ТС 019/2011")>0 Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента019=Истина;
											
										ИначеЕсли Найти(Стр_2.value,"ТР ТС 031/2012")>0 Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента031=Истина;
											
										ИначеЕсли Найти(Стр_2.value,"ТР ТС 027/2012")>0 Тогда 
											ДопРеквизитСюдаЗаписывать.НомерРегламента027=Истина;
											
										ИначеЕсли Найти(Стр_2.value,"ТР ТС 005/2011")>0 Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента005=Истина;
										ИначеЕсли Найти(Стр_2.value,"ТР ТС 029/2012")>0 Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента029=Истина;
											
										ИначеЕсли Найти(Стр_2.value,"ТР ТС 009/2011")>0 Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента009=Истина;
											
											
										ИначеЕсли Найти(Стр_2.value,"ТР ТС 033/2013")>0 Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента033=Истина;
										ИначеЕсли Найти(Стр_2.value,"ТР ТС 022/2011")>0 Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента022=Истина;
										ИначеЕсли Найти(Стр_2.value,"ТР ТС 024/2011")>0 Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента024=Истина;
											
										ИначеЕсли Найти(Стр_2.value,"ТР ТС 004/2011")>0 Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента004=Истина;
										ИначеЕсли Найти(Стр_2.value,"ТР ЕАЭС 037/2016")>0 Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента037=Истина;
										ИначеЕсли Найти(Стр_2.value,"ТР ТС 012/2011")>0 Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента012=Истина;
										ИначеЕсли Найти(Стр_2.value,"ТР ТС 020/2011")>0 Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента020=Истина;
											
										ИначеЕсли Найти(Стр_2.value,"ТР ТС 007/2011")>0 Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента007=Истина;
											
										ИначеЕсли Найти(Стр_2.value,"ТР ТС 010/2011")>0 Тогда
											ДопРеквизитСюдаЗаписывать.НомерРегламента010=Истина;
										ИначеЕсли Найти(Стр_2.value,"ФЗ от 22.07.2008 N 123-ФЗ")>0 Тогда
											ДопРеквизитСюдаЗаписывать.ФЗ123=Истина;
											
											
										КонецЕсли;

									КонецЕсли;
									
									
								КонецЕсли;
							Конеццикла;
						ИначеЕсли Стр_1.name="Сведения о свидетельствах о гос. регистрации" Тогда
							Для Каждого Стр_2 Из Стр_1.attributes Цикл
								Если Стр_2.name="Номер экспертного заключения (ЭЗ)" Тогда
									Добав_1=ДопРеквизитСюдаЗаписывать.СведенияОСвидетельствахОГосРегистрации.Добавить();
									Добав_1.НомерЭкспертногоЗаключенияЭЗ=Стр_2.value;
								КонецЕсли;
							КонецЦикла;                            	
							
						ИначеЕсли Стр_1.name="Данные для ФГИС ВетИС" Тогда
							
								ДопРеквизитСюдаЗаписывать.ПредприятияПроизводители.Очистить();
								ДопРеквизитСюдаЗаписывать.МассоваяДоляБелка.Очистить();
								ДопРеквизитСюдаЗаписывать.МассоваяДоляЖира.Очистить();
								
													
							Для Каждого Стр_2 Из Стр_1.attributes Цикл
								Если Стр_2.name="Подлежит ветеринарному контролю (надзору)" Тогда
									Если Стр_2.Value="ДА" Тогда
										ДопРеквизитСюдаЗаписывать.ПодлежитВетеринарномуКонтролю=Истина;
									Иначе
										ДопРеквизитСюдаЗаписывать.ПодлежитВетеринарномуКонтролю=Ложь;
										
									Конецесли;
								ИначеЕсли Стр_2.name="Тип продукции" Тогда
									ДопРеквизитСюдаЗаписывать.ТипПродукции=Неопределено;
									Если ЗначениеЗАполненО(Стр_2.value) тогда
										ДопРеквизитСюдаЗаписывать.ТипПродукции=Справочники.ТипПродукции_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
										Если Не ЗначениеЗаполненО(ДопРеквизитСюдаЗаписывать.ТипПродукции) Тогда
											СпрПр=Справочники.ТипПродукции_ХамелеонЦРПТ.СоздатьЭлемент();
											СпрПр.Наименование=Стр_2.value;
											СпрПр.Записать();
											ДопРеквизитСюдаЗаписывать.ТипПродукции=СпрПр.Ссылка;

										КонецеслИ;
									Конецесли;
								ИначеЕсли Стр_2.name="Продукция" Тогда
									ДопРеквизитСюдаЗаписывать.Продукция=Неопределено;
									Если Значениезаполнено(Стр_2.value) тогда
										ДопРеквизитСюдаЗаписывать.Продукция=Справочники.ПродукцияМолоко_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
										Если Не ЗначениеЗаполненО(ДопРеквизитСюдаЗаписывать.Продукция) Тогда
											СпрПр=Справочники.ПродукцияМолоко_ХамелеонЦРПТ.СоздатьЭлемент();
											СпрПр.Наименование=Стр_2.value;
											СпрПр.Записать();
											ДопРеквизитСюдаЗаписывать.Продукция=СпрПр.Ссылка;

										КонецеслИ;
									Конецесли;
								ИначеЕсли Стр_2.name="Вид продукции" Тогда
									ДопРеквизитСюдаЗаписывать.ВидПродукции=Неопределено;
									Если ЗначениеЗаполнено(Стр_2.value) тогда
										ДопРеквизитСюдаЗаписывать.ВидПродукции=Справочники.ВидПродукции_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
										Если Не ЗначениеЗаполненО(ДопРеквизитСюдаЗаписывать.ВидПродукции) Тогда
											СпрПр=Справочники.ВидПродукции_ХамелеонЦРПТ.СоздатьЭлемент();
											СпрПр.Наименование=Стр_2.value;
											СпрПр.Записать();
											ДопРеквизитСюдаЗаписывать.ВидПродукции=СпрПр.Ссылка;

										КонецеслИ;
									Конецесли;
								ИначеЕсли Стр_2.name="Категория продукции" Тогда
									ДопРеквизитСюдаЗаписывать.КатегорияПродукции=Неопределено;
									Если ЗначениеЗаполнено(Стр_2.value) тогда
										ДопРеквизитСюдаЗаписывать.КатегорияПродукции=Справочники.КатегорияПродукции_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
										Если Не ЗначениеЗаполненО(ДопРеквизитСюдаЗаписывать.КатегорияПродукции) Тогда
											СпрПр=Справочники.КатегорияПродукции_ХамелеонЦРПТ.СоздатьЭлемент();
											СпрПр.Наименование=Стр_2.value;
											СпрПр.Записать();
											ДопРеквизитСюдаЗаписывать.КатегорияПродукции=СпрПр.Ссылка;

										КонецеслИ;
									Конецесли;
								ИначеЕсли Стр_2.name="ГОСТ" Тогда
									ДопРеквизитСюдаЗаписывать.ТипГОСТ=Неопределено;
									Если ЗначениеЗаполнено(Стр_2.valueType) Тогда
										ДопРеквизитСюдаЗаписывать.ТипГОСТ=Справочники.ТипГОСТМолоко_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
										Если Не ЗначениеЗаполненО(ДопРеквизитСюдаЗаписывать.ТипГОСТ) Тогда
											СпрПр=Справочники.ТипГОСТМолоко_ХамелеонЦРПТ.СоздатьЭлемент();
											СпрПр.Наименование=Стр_2.value;
											СпрПр.Записать();
											ДопРеквизитСюдаЗаписывать.ТипГОСТ=СпрПр.Ссылка;

										КонецеслИ;
									Конецесли;
									ДопРеквизитСюдаЗаписывать.ГОСТ=Стр_2.value
																	
								ИначеЕсли Стр_2.name="ХС-производитель" Тогда
									ДопРеквизитСюдаЗаписывать.ХСПроизводитель=Неопределено;
									Если ЗначениеЗаполнено(Стр_2.value) Тогда
										ДопРеквизитСюдаЗаписывать.ХСПроизводитель=Справочники.ХозяйствующиеСубьектыМолоко_ХамелеонЦРПТ.НайтиПоКоду(Стр_2.value);
										Если Не ЗначениеЗаполненО(ДопРеквизитСюдаЗаписывать.ХСПроизводитель) Тогда
											СпрПр=Справочники.ХозяйствующиеСубьектыМолоко_ХамелеонЦРПТ.СоздатьЭлемент();
											СпрПр.Код=Стр_2.value;
											СпрПр.Наименование=Стр_2.valueTitle;
											СпрПр.Записать();
											ДопРеквизитСюдаЗаписывать.ХСПроизводитель=СпрПр.Ссылка;

										КонецеслИ;
									Конецесли;
									
								ИначеЕсли Стр_2.name="Предприятие-производитель" Тогда
									ХСПроизводитель=Неопределено;
									Если ЗначениеЗаполнено(Стр_2.value) Тогда
										ХСПроизводитель=Справочники.ПредприятиеПроизводительМолоко_ХамелеонЦРПТ.НайтиПоКоду(Стр_2.value);
										Если Не ЗначениеЗаполненО(ХСПроизводитель) Тогда
											СпрПр=Справочники.ПредприятиеПроизводительМолоко_ХамелеонЦРПТ.СоздатьЭлемент();
											СпрПр.Код=Стр_2.value;
											СпрПр.Наименование=Стр_2.valueTitle;
											СпрПр.Записать();
											ХСПроизводитель=СпрПр.Ссылка;

										КонецеслИ;
									Конецесли;
									Если ЗначениеЗаполнено(ХСПроизводитель) тогда
										Добав=ДопРеквизитСюдаЗаписывать.ПредприятияПроизводители.Добавить();
										Добав.ПредприятиеПроизводитель=ХСПроизводитель;
									Конецесли;
									
								ИначеЕсли Стр_2.name="Массовая доля белка, %" Тогда
									ХСПроизводитель=Неопределено;
									Если ЗначениеЗаполнено(Стр_2.valueType) Тогда
										ХСПроизводитель=Справочники.ОтДоТочноеЗначение_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType,Истина);
										Если Не ЗначениеЗаполненО(ХСПроизводитель) Тогда
											СпрПр=Справочники.ОтДоТочноеЗначение_ХамелеонЦРПТ.СоздатьЭлемент();
											СпрПр.Наименование=Стр_2.valueType;
											СпрПр.Записать();
											ХСПроизводитель=СпрПр.Ссылка;

										КонецеслИ;
									Конецесли;
									Если ЗначениеЗаполнено(ХСПроизводитель) 
										Или ЗначениеЗаполнено(Стр_2.value)
										тогда
										Добав=ДопРеквизитСюдаЗаписывать.МассоваяДоляБелка.Добавить();
										Добав.Вид=ХСПроизводитель;
										Добав.МассоваяДоляБелка=Стр_2.value
									Конецесли;
									
								ИначеЕсли Стр_2.name="Массовая доля жира, %" Тогда
									ХСПроизводитель=Неопределено;
									Если ЗначениеЗаполнено(Стр_2.valueType) Тогда
										ХСПроизводитель=Справочники.ОтДоТочноеЗначение_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType,Истина);
										Если Не ЗначениеЗаполненО(ХСПроизводитель) Тогда
											СпрПр=Справочники.ОтДоТочноеЗначение_ХамелеонЦРПТ.СоздатьЭлемент();
											СпрПр.Наименование=Стр_2.valueType;
											СпрПр.Записать();
											ХСПроизводитель=СпрПр.Ссылка;

										КонецеслИ;
									Конецесли;
									Если ЗначениеЗаполнено(ХСПроизводитель) 
										Или ЗначениеЗаполнено(Стр_2.value)
										тогда
										Добав=ДопРеквизитСюдаЗаписывать.МассоваяДоляЖира.Добавить();
										Добав.Вид=ХСПроизводитель;
										Добав.МассоваяДоляЖира=Стр_2.value
									Конецесли;
									
								КонецЕсли;
							КонецЦикла;
							
						ИначеЕсли Стр_1.name="ФГИС ВетИС" Тогда
							ДопРеквизитСюдаЗаписывать.ИдентификаторыТовараВФГИСМеркурий.Очистить();

							Для Каждого Стр_2 Из Стр_1.attributes Цикл
								Если Стр_2.name="Идентификатор товара в ФГИС ВетИС (GUID ProductItem)" Тогда
									Если ЗначениеЗаполнено(Стр_2.value) Тогда
										Добав=ДопРеквизитСюдаЗаписывать.ИдентификаторыТовараВФГИСМеркурий.Добавить();
										Добав.ИдентификаторТовараВФГИСМеркурий=Стр_2.value;
									Конецесли;
									//ДопРеквизитСюдаЗаписывать.ИдентификаторТовараВФГИСМеркурий=Стр_2.value;
								КонецЕсли;
							КонецЦикла;
							
						ИначеЕсли Стр_1.name="Идентификация Участников Оборота Товаров" Тогда
							
							
							Для Каждого Стр_2 Из Стр_1.attributes Цикл
								Если Стр_2.name="Производитель" Тогда
									ДополнительныйРеквизитОбщиеНК.Производитель=Стр_2.value;
								ИначеЕсли Стр_2.name="Импортер" Тогда
									ДополнительныйРеквизитОбщиеНК.Импортер=Стр_2.value;
								ИначеЕсли Стр_2.name="Изготовитель / Производственная площадка" Тогда
									Если ЗначениеЗаполнено(Стр_2.valuetype) Тогда
										Добав=ДополнительныйРеквизитОбщиеНК.Изготовители.Добавить();
										Добав.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",Стр_2.valuetype);
										Добав.Изготовитель=Стр_2.value;
									КонецЕсли;
									//ДополнительныйРеквизитОбщиеНК.Импортер=Стр_2.value;
								КонецЕсли;
							Конеццикла;
							
							
							
							
							
						ИначеЕсли Стр_1.name="Маркетинговая информация" Тогда
							
							Для Каждого Стр_2 Из Стр_1.attributes Цикл
								Если Стр_2.name="Маркетинговое описание" Тогда
									ДополнительныйРеквизитОбщиеНК.МаркетинговоеОписание=Стр_2.value;
								ИначеЕсли Стр_2.name="Уникальные характеристики товара" Тогда
									ДополнительныйРеквизитОбщиеНК.УникальныеХарактеристикиТовара=Стр_2.value;
								КонецЕсли;
							Конеццикла;
							
							
							
							
						ИначеЕсли Стр_1.name="Дополнительная информация" Тогда
							Для Каждого Стр_2 Из Стр_1.attributes Цикл
								Если Стр_2.name="Код товара в учетной системе поставщика" Тогда
									Объект.КодВУчетнойСистеме=Стр_2.value;
								ИначеЕсли Стр_2.name="Наименование товара в учетной системе поставщика" Тогда
									ДополнительныйРеквизитОбщиеНК.НаименованиеТовараВУчетнойСистемеПоставщика=Стр_2.value;
								ИначеЕсли Стр_2.name="Ставка НДС" Тогда
									ДополнительныйРеквизитОбщиеНК.СтавкаНДС=Неопределено;
									ДополнительныйРеквизитОбщиеНК.СтавкаНДС=Справочники.СтавкиНДС_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
									
									Если Не ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.СтавкаНДС) Тогда
										СпрПр=Справочники.СтавкиНДС_ХамелеонЦРПТ.СоздатьЭлемент();
										СпрПр.Наименование=Стр_2.value;
										СпрПр.Записать();
										ДополнительныйРеквизитОбщиеНК.СтавкаНДС=СпрПр.Ссылка;
									Конецесли;
								ИначеЕсли Стр_2.name="Заявление о жирности продукта" Тогда
										ДопРеквизитСюдаЗаписывать.ЗаявленияОЖирностиМолока=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ЗаявленияОЖирностиМолока=Справочники.ЗаявленияОЖирностиМолока_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ЗаявленияОЖирностиМолока) тогда
												СпрГ=Справочники.ЗаявленияОЖирностиМолока_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ЗаявленияОЖирностиМолока=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;

								ИначеЕсли Стр_2.name="Обогащающие компоненты" Тогда
										ДопРеквизитСюдаЗаписывать.ОбогащающиеКомпоненты=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ОбогащающиеКомпоненты=Справочники.ОбогащающиеКомпоненты_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ОбогащающиеКомпоненты) тогда
												СпрГ=Справочники.ОбогащающиеКомпоненты_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ОбогащающиеКомпоненты=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;

								ИначеЕсли Стр_2.name="Социально значимый товар" Тогда
										ДопРеквизитСюдаЗаписывать.СоциальноЗначимыйТовар=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.СоциальноЗначимыйТовар=Справочники.СодержитГМО_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.СоциальноЗначимыйТовар) тогда
												СпрГ=Справочники.СодержитГМО_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.СоциальноЗначимыйТовар=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;

								ИначеЕсли Стр_2.name="Формат продажи" Тогда
										ДопРеквизитСюдаЗаписывать.ФорматПродажи=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ФорматПродажи=Справочники.ФорматПродажи_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ФорматПродажи) тогда
												СпрГ=Справочники.ФорматПродажи_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ФорматПродажи=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;

									
								ИначеЕсли Стр_2.name="Формат продажи" Тогда
										ДопРеквизитСюдаЗаписывать.СпособВводаТовараВОборот=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.СпособВводаТовараВОборот=Справочники.СпособВводаТовараВОборот_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.СпособВводаТовараВОборот) тогда
												СпрГ=Справочники.СпособВводаТовараВОборот_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.СпособВводаТовараВОборот=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;

									
								ИначеЕсли Стр_2.name="Заявление о пригодности для диетического питания" Тогда
										ДопРеквизитСюдаЗаписывать.СоциальноЗначимыйТовар=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ЗаявлениеОПригодностиДляДиетическогоПитания=Справочники.СодержитГМО_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ЗаявлениеОПригодностиДляДиетическогоПитания) тогда
												СпрГ=Справочники.СодержитГМО_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ЗаявлениеОПригодностиДляДиетическогоПитания=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;

								ИначеЕсли Стр_2.name="Особенности питания" Тогда
										ДопРеквизитСюдаЗаписывать.ОсобенностиПитания=Неопределено;
										Если ЗначениеЗаполнено(Стр_2.value) Тогда
											ДопРеквизитСюдаЗаписывать.ОсобенностиПитания=Справочники.Особенности_Питания_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.value);
											Если Не ЗначениеЗаполнено(ДопРеквизитСюдаЗаписывать.ОсобенностиПитания) тогда
												СпрГ=Справочники.Особенности_Питания_ХамелеонЦРПТ.СоздатьЭлемент();
												СпрГ.Наименование=Стр_2.value;
												СпрГ.Записать();
												ДопРеквизитСюдаЗаписывать.ОсобенностиПитания=СпрГ.Ссылка;
											Конецесли;
											
										КонецЕсли;

								ИначеЕсли Стр_2.name="Описание товара" Тогда
									ДопРеквизитСюдаЗаписывать.ОписаниеТовара=Стр_2.value;
								ИначеЕсли Стр_2.name="Наименование товара на этикетке" Тогда
									ДопРеквизитСюдаЗаписывать.НаименованиеТовараНаЭтикетке=Стр_2.value;
									
									
								КонецЕсли;
							Конеццикла;
							
						КонецЕсли;
						
						
	Конеццикла;
					
					
КонецПроцедуры

Функция ЗаявленныйОбъем(Стр_2)
	
	Если Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Парфюм 
		Тогда
		
		ДополнительныйРеквизитПарфюм.Объем=Стр_2.value;
		ДополнительныйРеквизитПарфюм.ЕдиницаИзмеренияОбъема=Неопределено;
		Если ЗначениеЗаполнено(Стр_2.valueType) Тогда
			ДополнительныйРеквизитПарфюм.ЕдиницаИзмеренияОбъема=Справочники.ЕдиницыИзмерения_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
			Если ЗначениеЗаполнено(Стр_2.valueType) И Не ЗначениеЗаполнено(ДополнительныеРеквизитВода.ЕдиницаОбъема)  тогда
				СпрЕд=Справочники.ЕдиницаИзмерения_Вода_ХамелеонЦРПТ.СоздатьЭлемент();
				СпрЕд.Наименование=Стр_2.valueType;
				СпрЕд.Записать();
				ДополнительныеРеквизитВода.ЕдиницаОбъема=СпрЕд.Ссылка;
				
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода 
		Тогда
		
		ДополнительныеРеквизитВода.ЗаявленныйОбъемВесНетто=Стр_2.value;
		ДополнительныеРеквизитВода.ЕдиницаОбъема=Неопределено;
		Если ЗначениеЗаполнено(Стр_2.valueType) Тогда
			ДополнительныеРеквизитВода.ЕдиницаОбъема=Справочники.ЕдиницаИзмерения_Вода_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
			Если ЗначениеЗаполнено(Стр_2.valueType) И Не ЗначениеЗаполнено(ДополнительныеРеквизитВода.ЕдиницаОбъема)  тогда
				СпрЕд=Справочники.ЕдиницаИзмерения_Вода_ХамелеонЦРПТ.СоздатьЭлемент();
				СпрЕд.Наименование=Стр_2.valueType;
				СпрЕд.Записать();
				ДополнительныеРеквизитВода.ЕдиницаОбъема=СпрЕд.Ссылка;
				
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Объект.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Молоко 
		Тогда
		
		ДополнителныеРеквизитМолоко.ЗаявленныйОбъемВесНетто=Стр_2.value;
		ДополнителныеРеквизитМолоко.ЕдиницаОбъема=Неопределено;
		Если ЗначениеЗаполнено(Стр_2.valueType) Тогда
			ДополнителныеРеквизитМолоко.ЕдиницаОбъема=Справочники.ЕдиницаИзмеренияМолока_ХамелеонЦРПТ.НайтиПоНаименованию(Стр_2.valueType);
			Если ЗначениеЗаполнено(Стр_2.valueType) И Не ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ЕдиницаОбъема)  тогда
				СпрЕд=Справочники.ЕдиницаИзмеренияМолока_ХамелеонЦРПТ.СоздатьЭлемент();
				СпрЕд.Наименование=Стр_2.valueType;
				СпрЕд.Записать();
				ДополнителныеРеквизитМолоко.ЕдиницаОбъема=СпрЕд.Ссылка;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции


&НаКлиенте
Функция ПодключилисьОк(Thumbprint_1,CSRFДляНК,Срегистра,КукиДляНК,HTTPСервисЗапрос,СерийныйНомер)
	
	Возврат ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ПодключилисьОк(Thumbprint_1,CSRFДляНК,Срегистра,КукиДляНК,HTTPСервисЗапрос,СерийныйНомер)	
КонецФункции

Функция ИщемПоГТИН_Архив()
			Джсон=Новый ЗаписьJson;
		Джсон.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет,,,ЭкранированиеСимволовJSON.СимволыВнеASCII));
		Джсон.ЗаписатьНачалоОбъекта();
		Джсон.ЗаписатьИмяСвойства("pageSize");
		Джсон.ЗаписатьЗначение(10);
		Джсон.ЗаписатьИмяСвойства("pageNumber");
		Джсон.ЗаписатьЗначение(1);
		Джсон.ЗаписатьИмяСвойства("sort");
		Джсон.ЗаписатьНачалоОбъекта();
		
		Джсон.ЗаписатьИмяСвойства("field");
		Джсон.ЗаписатьЗначение("created");
		Джсон.ЗаписатьИмяСвойства("direction");
		Джсон.ЗаписатьЗначение("DESC");
		Джсон.ЗаписатьКонецОбъекта();;
		Джсон.ЗаписатьИмяСвойства("filter");
		Джсон.ЗаписатьНачалоОбъекта();
		
		Джсон.ЗаписатьИмяСвойства("gtin");
		//Джсон.ЗаписатьНачалоОбъекта();
		Джсон.ЗаписатьНачалоМассива();
		
		
		Джсон.ЗаписатьЗначение(Формат(Объект.GTIN,"ЧГ="));
		
		Джсон.ЗаписатьКонецМассива();
		
		Джсон.ЗаписатьИмяСвойства("status");
		Джсон.ЗаписатьЗначение("archive");
		
		//Джсон.ЗаписатьКонецОбъекта();;
		
		
		Джсон.ЗаписатьКонецОбъекта();;
		Джсон.ЗаписатьКонецОбъекта();;
		Тело=Джсон.Закрыть();
		
Возврат тело
Конецфункции


&НаКлиенте
Функция ВАрхивеНашли(Куки,Thumbprint_1,crsfToken,HTTPСервисЗапрос,Срегистра)
	
	Тело=ИщемПоГТИН_Архив();
				
				
				
				HTTPЗапрос=Новый HTTPЗапрос("rest/goods/list");
				
		HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
								
						
			//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			//HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
			HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
			
			HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
			HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
			HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
	//		HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			
			HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
			//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
			HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
			HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
			HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
		
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		
				#Если ВебКлиент Тогда
						HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);	
				#Иначе
						HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);	
				#КонецЕсли
				Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
				NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
				data=Неопределено;
				Если Ответ.КодСостояния<>200 ИЛИ NNN=Неопределено 
					ИЛИ НЕ  NNN.Свойство("data",data)
					Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
						Сообщить("Не удалось обновить карточку из НК (КТМ)");
						Возврат Ложь;
					
				КонецЕсли;

				
		Если NNN.data.количество()=0 Тогда
					////ИЩЕМ В АРХИВЕ!!!
					
						Возврат Ложь
			Иначе	
					
				Если NNN.data[0].goods<>Неопределено Тогда
					id=                    NNN.data[0].goods.goodId;
					
					HTTPЗапрос=Новый HTTPЗапрос("rest/goods/"+Формат(id,"ЧГ="));
					
					HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
					HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
					HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
					HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
						
					HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
					//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
					Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
					
					NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
					ОбновитьтипПродукции(NNN);
					
					Если не ЗначениеЗаполнено(Объект.Тип) тогда
						Сообщить("Не удалось определить тип продкукции");
						Возврат Ложь;
					КонецЕсли;
					
					ОбновляемВсеДанныеНаСервере(NNN);
				Иначе
					id=                    NNN.data[0].draft.id;
					
					HTTPЗапрос=Новый HTTPЗапрос("rest/draft/"+Формат(id,"ЧГ="));
					
					HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
					HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
					HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
					HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
						
					HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
					//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
					Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
					
					NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
					ОбновитьтипПродукции(NNN);
					
					Если не ЗначениеЗаполнено(Объект.Тип) тогда
						Сообщить("Не удалось определить тип продкукции");
						Возврат Ложь;
					КонецЕсли;
					
					ОбновляемВсеДанныеНаСервере(NNN);
				
				
					
				КонецЕсли;
					
				//Конецесли;
				
				
										
					
				Возврат Истина;	
				КонецЕсли;
				
	
	Возврат ложь;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьКарточкуИзНК(Команда,УжеОтправили=ложь) Экспорт
	// Вставить содержимое обработчика.
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если НЕ Форм.Открыта() Тогда
		Форм.Открыть(); 
	КонецЕсли;
	
		Thumbprint_1=ПолучитьИзПользователя(Форм.Пользователь);
	Если Не ЗначениеЗаполнено(объект.GTIN) тогда
		Возврат;
	КонецЕслИ;	
	
	
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
	
	
	
	crsfToken="";
	Срегистра="";
	Куки="";
		СерийныйНомер="";
	Если ПодключилисьОк(Thumbprint_1,crsfToken,Срегистра,Куки,HTTPСервисЗапрос,СерийныйНомер) Тогда
	   
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		

					
			Тело=ИщемПоГТИН();
				
				
				
				HTTPЗапрос=Новый HTTPЗапрос("rest/goods/list");
				
		HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
								
						
			//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			//HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
			HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
			
			HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
			HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
			HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
	//		HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			
			HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
			//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
			HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
			HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
			HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
		
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		
				#Если ВебКлиент Тогда
						HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);	
				#Иначе
						HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);	
				#КонецЕсли
				Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
				NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
				data=Неопределено;
				Если Ответ.КодСостояния<>200 ИЛИ NNN=Неопределено 
					ИЛИ НЕ  NNN.Свойство("data",data)
					Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
					Если УжеОтправили<>Истина Тогда
						ОбновитьКарточкуИзНК(Команда,Истина);
						Возврат;
					Иначе
						Сообщить("Не удалось обновить карточку из НК (КТМ)");
						Возврат;
					КонецЕсли;
					
				КонецЕсли;
				
					
				Если NNN.data.количество()=0 Тогда
					////ИЩЕМ В АРХИВЕ!!!
					
					Если ВАрхивеНашли(Куки,Thumbprint_1,crsfToken,HTTPСервисЗапрос,Срегистра)=Ложь Тогда
						Сообщить("Продукцию с gtin "+Формат(Объект.GTIN,"ЧГ=")+" не нашли в каталоге маркированных товаров");
						Возврат
					КонецЕсли;
				Иначе	
				//ИначеЕсли NNN.data[0].goods<>Неопределено Тогда
					
					
				//	Попытка
				//		Объект.СтатусКарточки=ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ."+NNN.data[0].goods.status)
				//		;ОбновитьтипПродукции(NNN);
				//	исключение
				//	КонецПопытки;
							
					
				//	ПоказатьПредупреждение(,"Продукцию с gtin "+Формат(Объект.GTIN,"ЧГ=")+" уже нельзя менять. Для редактировании карточки необходимо обращаться в ЦРПТ");
				//	Этаформа.Записать();
				//	Возврат
					
				//Иначе
							Если NNN.data[0].draft=Неопределено Тогда
		id=                    NNN.data[0].goods.goodId;
					
					HTTPЗапрос=Новый HTTPЗапрос("rest/goods/"+Формат(id,"ЧГ="));
					
					HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
					HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
					HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
					HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
						
					HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
					//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
					Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
					
					NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
					ОбновитьтипПродукции(NNN);
					
					Если не ЗначениеЗаполнено(Объект.Тип) тогда
						Сообщить("Не удалось определить тип продкукции");
						Возврат;
					КонецЕсли;
					
					ОбновляемВсеДанныеНаСервере(NNN);
					
				Иначе
					id=                    NNN.data[0].draft.id;
					
					HTTPЗапрос=Новый HTTPЗапрос("rest/draft/"+Формат(id,"ЧГ="));
					
					HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
					HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
					HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
					HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
						
					HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
					//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
					Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
					
					NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
					ОбновитьтипПродукции(NNN);
					
					Если не ЗначениеЗаполнено(Объект.Тип) тогда
						Сообщить("Не удалось определить тип продкукции");
						Возврат;
					КонецЕсли;
					
					ОбновляемВсеДанныеНаСервере(NNN);
				
					
					
				КонецЕсли;
					
				//Конецесли;
				
				
										
					
					
				КонецЕсли;
				//	Попытка
				//		Объект.СтатусКарточки=ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ."+NNN.data[0].draft.status)
				//		;ОбновитьтипПродукции(NNN);
				//	исключение
				//	КонецПопытки;
						
			
			КонецЕсли;
			ЭтаФорма.Записать();
КонецПроцедуры
Функция ИзСтруктурыВДжсон(NNN)
						Джсон=Новый ЗаписьJSON;
						Джсон.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет,,,ЭкранированиеСимволовJSON.СимволыВнеASCII));
						ЗаписатьJSON(Джсон,NNN);
						
						Тело=Джсон.Закрыть();
						Возврат тело
конецфункции
Функция ИщемПоГТИН()
			Джсон=Новый ЗаписьJson;
		Джсон.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет,,,ЭкранированиеСимволовJSON.СимволыВнеASCII));
		Джсон.ЗаписатьНачалоОбъекта();
		Джсон.ЗаписатьИмяСвойства("pageSize");
		Джсон.ЗаписатьЗначение(10);
		Джсон.ЗаписатьИмяСвойства("pageNumber");
		Джсон.ЗаписатьЗначение(1);
		Джсон.ЗаписатьИмяСвойства("sort");
		Джсон.ЗаписатьНачалоОбъекта();
		
		Джсон.ЗаписатьИмяСвойства("field");
		Джсон.ЗаписатьЗначение("created");
		Джсон.ЗаписатьИмяСвойства("direction");
		Джсон.ЗаписатьЗначение("DESC");
		
		Джсон.ЗаписатьКонецОбъекта();;
		
		Джсон.ЗаписатьИмяСвойства("fields");
		Джсон.ЗаписатьНачалоМассива();
		
		Джсон.ЗаписатьЗначение("photo");
		
		Джсон.ЗаписатьЗначение("created");
		Джсон.ЗаписатьЗначение("gtin");
		Джсон.ЗаписатьЗначение("name");
		Джсон.ЗаписатьЗначение("category");
		Джсон.ЗаписатьЗначение("packages");
		Джсон.ЗаписатьЗначение("brand");
		Джсон.ЗаписатьЗначение("status");
		
		Джсон.ЗаписатьКонецМассива();
		
		
		Джсон.ЗаписатьИмяСвойства("filter");
		Джсон.ЗаписатьНачалоОбъекта();
		
		Джсон.ЗаписатьИмяСвойства("gtin");
		//Джсон.ЗаписатьНачалоОбъекта();
		Джсон.ЗаписатьНачалоМассива();
		
		
		Джсон.ЗаписатьЗначение(Формат(Объект.GTIN,"ЧГ="));
		
		Джсон.ЗаписатьКонецМассива();
		
		//Джсон.ЗаписатьКонецОбъекта();;
		
		
		Джсон.ЗаписатьКонецОбъекта();;
		Джсон.ЗаписатьКонецОбъекта();;
		Тело=Джсон.Закрыть();
		
Возврат тело
Конецфункции
Функция СоздатьТоварВКТМ(ИДБренда,КодТНВЭД,GTIN)
			
			
			Джсон=Новый ЗаписьJson;
			//Джсон.УстановитьСтроку();
			Джсон.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет,,,ЭкранированиеСимволовJSON.СимволыВнеASCII));
			
			Джсон.ЗаписатьНачалоОбъекта();
			Джсон.ЗаписатьИмяСвойства("gtin");
			Джсон.ЗаписатьЗначение(GTIN);
			
						Джсон.ЗаписатьИмяСвойства("tnvedId");
			Джсон.ЗаписатьЗначение(КодТНВЭД);
			Джсон.ЗаписатьИмяСвойства("fullName");
			Джсон.ЗаписатьЗначение(Объект.НаименованиеТовара);
			
			
			
			Джсон.ЗаписатьИмяСвойства("brand");
			Джсон.ЗаписатьЗначение(ИДБренда);
			
			Если ЗначениеЗаполнено(Объект.ТипУпаковки) Тогда
				
				
				Если Найти(ВРег(Объект.ТипУпаковки.Наименование),"BUNDLE")>0 Тогда
					
					Джсон.ЗаписатьИмяСвойства("isKit");
					Джсон.ЗаписатьЗначение(true);
					
					
				Иначе
					Джсон.ЗаписатьИмяСвойства("isKit");
					Джсон.ЗаписатьЗначение(false);
					
					
				Конецесли;
				
				Если Найти(ВРег(Объект.ТипУпаковки.Наименование),"SET")>0 Тогда
					
					Джсон.ЗаписатьИмяСвойства("isSet");
					Джсон.ЗаписатьЗначение(true);
					
					
				Иначе
					Джсон.ЗаписатьИмяСвойства("isSet");
					Джсон.ЗаписатьЗначение(false);
					
					
				Конецесли;
				
				
				
				
			КонецеслИ;
			
			
			Джсон.ЗаписатьКонецОбъекта();;
			Тело=Джсон.Закрыть();
		
	Возврат тело	
КонецФункции

&НаСервереБезКонтекста
Функция ДляГенерацииГТИН(УровеньУпаковки=Неопределено,GTIN="")
				Джсон=Новый ЗаписьJson;
			Джсон.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет,,,ЭкранированиеСимволовJSON.СимволыВнеASCII));
			Джсон.ЗаписатьНачалоОбъекта();
			
			Джсон.ЗаписатьИмяСвойства("packageLevel");
			
			Если УровеньУпаковки=Перечисления.УровниУпаковок_ХамелеонЦРПТ.ГрупповаяПотребительскаяУпаковка Тогда
				Джсон.ЗаписатьЗначение("inner-pack");
			ИначеЕсли УровеньУпаковки=Перечисления.УровниУпаковок_ХамелеонЦРПТ.ТранспортнаяУпаковка Тогда
				Джсон.ЗаписатьЗначение("box");
			Иначе
				Джсон.ЗаписатьЗначение("trade-unit");
			Конецесли;
			
			Если ЗначениеЗаполнено(GTIN) Тогда
				Джсон.ЗаписатьИмяСвойства("gtin");
				
				Джсон.ЗаписатьЗначение(GTIN);
				
			Конецесли;
			Джсон.ЗаписатьКонецОбъекта();;
			
			
			Тело=Джсон.Закрыть();
Возврат тело
КонецФункции

Функция НаходимБренд()
			
				Джсон=Новый ЗаписьJson;
				Джсон.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет,,,ЭкранированиеСимволовJSON.СимволыВнеASCII));
				Джсон.ЗаписатьНачалоОбъекта();
				
				Джсон.ЗаписатьИмяСвойства("text");
				Джсон.ЗаписатьЗначение(Объект.БрендТорговаяМарка);
				
				Джсон.ЗаписатьКонецОбъекта();;
				Тело=Джсон.Закрыть();
				
				Возврат тело
Конецфункции

Функция ПолучитьТекстНаСервере(GTIN,КодТНВ)
				Джсон=Новый ЗаписьJson;
				Джсон.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет,,,ЭкранированиеСимволовJSON.СимволыВнеASCII));
				
				Джсон.ЗаписатьНачалоМассива();
				Джсон.ЗаписатьНачалоОбъекта();
				Джсон.ЗаписатьИмяСвойства("gtin");
				Джсон.ЗаписатьЗначение(GTIN);
				
										
				
				
				Джсон.ЗаписатьИмяСвойства("tnved");
				Джсон.ЗаписатьЗначение(КодТНВ);
				Джсон.ЗаписатьИмяСвойства("brand");
				Джсон.ЗаписатьЗначение(Объект.БрендТорговаяМарка);
				Джсон.ЗаписатьИмяСвойства("good_name");
				Джсон.ЗаписатьЗначение(Объект.НаименованиеТовара);
				
				Джсон.ЗаписатьИмяСвойства("identified_by");
				Джсон.ЗаписатьНачалоМассива();
				Джсон.ЗаписатьНачалоОбъекта();
				
				
				Джсон.ЗаписатьИмяСвойства("value");
				Джсон.ЗаписатьЗначение(GTIN);
				
				Джсон.ЗаписатьИмяСвойства("type");
				Джсон.ЗаписатьЗначение("gtin");
				
				Джсон.ЗаписатьИмяСвойства("multiplier");
				Джсон.ЗаписатьЗначение("1");
				
				Джсон.ЗаписатьИмяСвойства("level");
				Джсон.ЗаписатьЗначение("trade-unit");
				
				
				Джсон.ЗаписатьКонецОбъекта();
				Джсон.ЗаписатьКонецМассива();
				
				
				Джсон.ЗаписатьКонецОбъекта();;
				Джсон.ЗаписатьКонецМассива();;
				
				Тело=Джсон.Закрыть();
Возврат Тело
Конецфункции

Функция ПолучитьТекстНаСервере_Товар()
				Джсон=Новый ЗаписьJson;
				Джсон.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет,,,ЭкранированиеСимволовJSON.СимволыВнеASCII));
				
				Джсон.ЗаписатьНачалоМассива();
				Джсон.ЗаписатьНачалоОбъекта();
				
				//Джсон.ЗаписатьИмяСвойства("@id");
				//Джсон.ЗаписатьЗначение(xmlString(Объект.feed_id));
				
				Джсон.ЗаписатьИмяСвойства("gtin");
				Джсон.ЗаписатьЗначение(xmlString(Объект.GTIN));
				
										
				Джсон.ЗаписатьИмяСвойства("good_name");
				Джсон.ЗаписатьЗначение(Объект.НаименованиеТовара);
				
				Джсон.ЗаписатьИмяСвойства("identified_by");
				Джсон.ЗаписатьНачалоМассива();
				Джсон.ЗаписатьНачалоОбъекта();
				
				
				Джсон.ЗаписатьИмяСвойства("value");
				Джсон.ЗаписатьЗначение(xmlString(Объект.GTIN));
				
				Джсон.ЗаписатьИмяСвойства("type");
				Джсон.ЗаписатьЗначение("sku");
				
				Джсон.ЗаписатьИмяСвойства("multiplier");
				Джсон.ЗаписатьЗначение("1");
				
				Джсон.ЗаписатьИмяСвойства("level");
				Джсон.ЗаписатьЗначение("trade-unit");
				
				Джсон.ЗаписатьИмяСвойства("party_id");
				Джсон.ЗаписатьЗначение("1");
				
				Джсон.ЗаписатьКонецОбъекта();
				Джсон.ЗаписатьКонецМассива();
				
				
				Джсон.ЗаписатьКонецОбъекта();;
				Джсон.ЗаписатьКонецМассива();;
				
				Тело=Джсон.Закрыть();
Возврат Тело
Конецфункции


Функция ДополнитьСтроку_ИНН(ИНН,число,Чем)
	Обработки._Запуск_ХамелеонЦРПТ.ДополнитьСтроку_11(ИНН,число,Чем)
Конецфункции


&НаСервереБезКонтекста
Функция дополнитьСтроку(Ср)
	ВОзврат Обработки._Запуск_ХамелеонЦРПТ.ДополнитьСтроку_11(xmlString(Ср),14,"0");
	
Конецфункции
&НаСервереБезКонтекста
Функция ПолучитьИзПользователя(ТекущийПользователь)
	Возврат Обработки._Запуск_ХамелеонЦРПТ.ПолучитьИзПользователя(ТекущийПользователь);
КонецФункции

&НаСервереБезКонтекста
Процедура ОчиститьТокенСрегистра(ТТ)
	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаписатьТокенВРегистр(ТТ,"")
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПродукцияюПоGTIN(Команда,УжеОтправили=Ложь) Экспорт
	// Вставить содержимое обработчика.
	ЭтаФорма.Записать();
	Обр=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если Обр.Организации.Количество()=0 Тогда
		Обр.ПодключитьсяКЦРПТ(Команда,Ложь);
	КонецЕсли;
	Если Обр.Организации.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Thumbprint_1=ПолучитьИзПользователя(Обр.Пользователь);	
	
	СРегистра=Thumbprint_1.ТокенПоОтпечатку;
	Если Не ЗначениеЗаполнено(СРегистра) тогда
		Попытка
			СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);	
		исключение
			СРегистра=Неопределено;
		КонецПопытки;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СРегистра) Тогда
		ПоказатьПредупреждение(,"Не удалось получить токен по организации");
		Возврат;
	Конецесли;
	
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
	HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
	HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
			
//			ИНН=ВернутьИНН(Обр.Организации[0].Организация );
	HTTPЗапрос=Новый HTTPЗапрос("api/v3/product/search?gtin="+дополнитьСтроку(Объект.GTIN));
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	
	Если Ответ.КодСостояния=200 Тогда
		//ЗагружаемШаблоныНасервере(Текст1,Обр.Пользователь);
		ЗагружаемГТИН(Текст1,Thumbprint_1);
		
		
	ИначеЕсли Ответ.КодСостояния=401 
		ИЛИ Ответ.КодСостояния=502  
		Тогда
			Если УжеОтправили=Истина Тогда
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
			Иначе
				ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
				ОбновитьПродукцияюПоGTIN(Команда,Истина);
				Возврат;
		КонецЕсли
	КонецЕсли;
	ЭтаФорма.Прочитать();
	
КонецПроцедуры


Процедура ЗагружаемГТИН(Текст,Thumbprint_1)
			ЧтениеJSON = Новый ЧтениеJSON;
			ЧтениеJSON.УстановитьСтроку(Текст);
			Попытка
				NNN=ПрочитатьJSON(ЧтениеJSON);
				Если NNN.total=0 Тогда
					сообщить("По данному GTIN не нашли продукцию");
				КонецЕсли;
				Для Каждого Стр Из NNN.results Цикл
					Если Объект.GTIN<>Число(Стр.gtin) Тогда
						Продолжить;
					КонецЕсли;
					
					
					ОбщийМодуль_НаСервере_ХамелеонЦРПТ.СоздатьПродукцию(Стр,Thumbprint_1);
					
				Конеццикла;
				
			Исключение
				Сообщить(ОписаниеОшибки());
				Возврат
			КонецПопытки;
		ЭтаФорма.Прочитать();
	
		КонецПроцедуры

&НаКлиенте
Процедура СсылкаНажатие(Элемент)
	ЗапуститьПриложение("http://gepir.gs1ru.org/GEPIR40/index.jsp?p=gtin&lng=ru");			
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ОбновитьДопРеквизит();
	
	// Вставить содержимое обработчика.
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СопоставлениеСправочниковДокументов_ХамелеонЦРПТ.Справочник_Документ КАК Ссылка
		|ИЗ
		|	РегистрСведений.СопоставлениеСправочниковДокументов_ХамелеонЦРПТ КАК СопоставлениеСправочниковДокументов_ХамелеонЦРПТ
		|ГДЕ
		|	СопоставлениеСправочниковДокументов_ХамелеонЦРПТ.СправочникДокумент_Меркурия = &СправочникДокумент_Меркурия";
	
	Запрос.УстановитьПараметр("СправочникДокумент_Меркурия", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Элементы.ФормаСопоставление.Заголовок="НЕТ СОПОСТАВЛЕНИЯ";
	Первый=Истина;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Если Первый Тогда
			Элементы.ФормаСопоставление.Заголовок=Строка(ВыборкаДетальныеЗаписи.Ссылка);
			Первый=Ложь;
		Иначе
			Элементы.ФормаСопоставление.Заголовок=Элементы.ФормаСопоставление.Заголовок+Строка(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЕсли;
	КонецЦикла;
//	Элементы.Наименование.АвтоОтметкаНезаполненного=Не Объект.Остатки;

	ВидимостьПоОстаткам();
	
	ЗаполнитьСправочникВнешний("Справочник.Продукция_ХамелеонЦРПТ","",Элементы.ГруппаКнопокВнешняя,"Подключаемый_ВыполнитьКомандуВнешняя_ЗаказМарокОсновная");
	
	//Если Объект.СтранаПроизводства.Код<>"643" Тогда
		//Элементы.СтранаПроизводстваОстатки.Т="Ввезен в РФ"
	//КонецЕсли;
	
	//++ МВ:Овчинников 30.09.2020 •1
	ДобавитьРеквизитыНаФорму();
	//-- МВ:Овчинников 

КонецПроцедуры


&НаКлиенте
Процедура ОткрытьВнешниеОбработки(Команда)
	// Вставить содержимое обработчика.
		// Вставить содержимое обработчика.
		ОткрытьФорму("Справочник.ВнешниеОбработки_ХамелеонЦРПТ.Форма.ФормаСписка",
		Новый структура("Тип",
			"Справочник.Продукция_ХамелеонЦРПТ"));

КонецПроцедуры

Функция ВернутьИмяФайла(Команда)
//	Если РегистрыСведений.НастройкиПрограммыЦРПТ.Получить().ЗагружатьВнешниеОбработкиИзХранилища Тогда
		Возврат Справочники.ВнешниеОбработки_ХамелеонЦРПТ.НайтиПоКоду(Сред(Команда,8)).Хранилище.Получить();
//	Иначе
//		СпрВн=Справочники.ВнешниеОбработки_ХамелеонЦРПТ.НайтиПоКоду(Сред(Команда,8));
//	Конецесли;
	
//	Возврат СпрВн.ИмяВнешнейОБработки
	//НаимСправочника=Метаданные.НайтиПоТипу(ТипЗнч(Объект.Ссылка)).ПолноеИмя();
	//Спр=Справочники.ВнешниеОбработки_ХамелеонЦРПТ.НайтиПоНаименованию(НаимСправочника,Истина);
	//Если Спр<>Справочники.ВнешниеОбработки_ХамелеонЦРПТ.ПустаяСсылка() Тогда
	//	Возврат Спр.ИмяВнешнейОБработки;
	//Конецесли;
	
КонецФункции

Функция ПолучитьИмяВнешней(ИмяФайла)
    АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ИмяФайла);
    ИмяОбр = ВнешниеОбработки.Подключить(АдресВоВременномХранилище,,Ложь);
    Возврат ИмяОбр;
КонецФункции



Процедура   ЗаполнитьСправочникВнешний(ИмяСпрД,Доп,ГруппаКнопокВнешняя,ИмяДейстия)
			//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВнешниеОбработки_ХамелеонЦРПТ.ИмяВнешнейОБработки,
		|	ВнешниеОбработки_ХамелеонЦРПТ.НаименованиеКнопки,
		|	ВнешниеОбработки_ХамелеонЦРПТ.Код
		|ИЗ
		|	Справочник.ВнешниеОбработки_ХамелеонЦРПТ КАК ВнешниеОбработки_ХамелеонЦРПТ
		|ГДЕ
		|	ВнешниеОбработки_ХамелеонЦРПТ.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", ИмяСпрД); //"Документ.ВетеринарныеСправки_ХамелеонЦРПТ");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		ИмяКоманды="Команда"+ВыборкаДетальныеЗаписи.Код;
		Попытка
		КомандаФормы = Команды.Добавить(ИмяКоманды);
		КомандаФормы.Действие = ИмяДейстия;
		КомандаФормы.Заголовок = ВыборкаДетальныеЗаписи.ИмяВнешнейОБработки;
		КомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
		КомандаФормы.Отображение = ОтображениеКнопки.Текст;
		
		//ОписаниеКомандыПечати.ИмяКомандыНаФорме = ИмяКоманды;
		
		НовыйЭлемент = Элементы.Добавить("ГруппаКнопокВнешняя"+Доп+ ИмяКоманды, Тип("КнопкаФормы"), ГруппаКнопокВнешняя);
		НовыйЭлемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		НовыйЭлемент.Заголовок=ВыборкаДетальныеЗаписи.НаименованиеКнопки;
		НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	Исключение
		КонецПопытки;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуВнешняя_ЗаказМарокОсновная(Команда)
	
//	// Вставить содержимое обработчика.	// Вставить содержимое обработчика.
		Ссылка=Объект.Ссылка;
		Попытка
			ВернДв=ВернутьИмяФайла(Команда.Имя);
			Если Тип("ДвоичныеДанные")=ТипЗнч(ВернДв) Тогда
				ДвоичныеДанные=ВернДв;
			Иначе
				ДвоичныеДанные=Новый ДвоичныеДанные(ВернДв);
			Конецесли;
			ОбработкаИмя=ПолучитьИмяВнешней(Двоичныеданные);
			ОткрытьФорму("ВнешняяОбработка."+ОбработкаИмя+".Форма",Новый Структура("Ссылка",Ссылка),ЭтаФорма);
		Исключение
			Попытка
#Если ТолстыйКлиентОбычноеПриложение  Тогда
		ВернДв=ВернутьИмяФайла(Команда.Имя);
		Если Тип("ДвоичныеДанные")=ТипЗнч(ВернДв) Тогда
			//ДвоичныеДанные=ВернДв;
			ДвоичныеДанные=ПолучитьИмяВременногоФайла();
			ВернДв.Записать(ДвоичныеДанные);
			
		Иначе
			ДвоичныеДанные=ВернДв;
		Конецесли;
				ВернутьВн(ДвоичныеДанные);
				Если Тип("ДвоичныеДанные")=ТипЗнч(ВернДв) Тогда
					УдалитьФайлы(ДвоичныеДанные);
				КонецЕсли;
#Иначе
				
			ПоказатьПредупреждение(,"Не удалось выполнить внешнюю обработку");
#КонецЕсли
			Исключение
				ПоказатьПредупреждение(,"Не удалось выполнить внешнюю обработку");
			КонецПопытки;
		КонецПопытки;
	//КонецЕсли;
КонецПроцедуры


#Если ТолстыйКлиентОбычноеПриложение  Тогда
&НаКлиенте
Процедура ВернутьВн(ДвоичныеДанные)
	//ИмяВременФ=ПолучитьИмяВременногоФайла();
	//ДвоичныеДанные.Записать(ИмяВременФ);
	ВнешняяОбработка=ВнешниеОбработки.Создать(ДвоичныеДанные);
	Фоорма=ВнешняяОбработка.ПолучитьФорму(,ЭтаФорма);
	Попытка
		Фоорма.УФ=ЭтаФорма;
	Исключение
	КонецПопытки;
	Фоорма.Открыть();
Конецпроцедуры      	
#КонецЕсли



Процедура ВидимостьПоОстаткам()
	Элементы.Основная.Видимость=Не Объект.Остатки;
	Элементы.ОстаткиГруппа.Видимость=Объект.Остатки;
	
	ТолькоПросмотр_1=ЗначениеЗаполнено(Объект.СтатусКарточки);
		
	Элементы.GTIN.ТолькоПросмотр=ТолькоПросмотр_1;
	Элементы.БрендТорговаяМарка.ТолькоПросмотр=ТолькоПросмотр_1;
	
	
КонецПроцедуры


Функция СправочникиНайтиПоМеркурию(Стр)
	Возврат Обработки._Запуск_ХамелеонЦРПТ.ВернутьМного1СПоМеркурию(Стр); 
КонецФункции


&НаКлиенте
Процедура Сопоставление(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	ТаблицаЗнач=Новый Массив;
	//ТаблицаЗнач.Колонки.Добавить("Справочник1С");
	//ТаблицаЗнач.Колонки.Добавить("СправочникМеркурия");
	ТипСпр=Неопределено;
	Стр=Объект.Ссылка;
	
	
		Массив1с=СправочникиНайтиПоМеркурию(Стр);
		Если Массив1с.Количество()=0 ТОгда
			ТаблицаЗнач.Добавить(Новый Структура("Справочник1С,СправочникМеркурия",Неопределено,Стр));
			
		Иначе
			Для Каждого Стр_Спр Из Массив1с Цикл
				ТипСпр=Стр_Спр;
				ТаблицаЗнач.Добавить(Новый Структура("Справочник1С,СправочникМеркурия",Стр_Спр,Стр));
			КонецЦикла;
		КонецЕсли;
			//ДД=ТаблицаЗнач.Добавить();
		
		//ДД.Справочник1С=Контрагент;
		//ДД.СправочникМеркурия=Стр;
	//Конеццикла;
	Если ТаблицаЗнач.Количество()>0 Тогда
		
		ОткрытьФорму("Обработка.РасширенноеСопоставлениеПоПродукции_ХамелеонЦРПТ.Форма.ФормаСопоставления",
		Новый Структура("Тип1,Тип2,Вид1,Вид2,ТаблицаСопоставления,ТекущийПользователь",
		ТипЗнч(ТипСпр),ТипЗнч(Объект.Ссылка),"СправочникСсылка","СправочникСсылка",ТаблицаЗнач));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПриИзменении(Элемент)
ВидимостьПоОстаткам()	
	// Вставить содержимое обработчика.
//		Элементы.Наименование.АвтоОтметкаНезаполненного=Не Объект.Остатки;
//		ОбновитьИнтерфейс();
	//ПриСервере();
		
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// Вставить содержимое обработчика.
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ТНВЭДДляОстаткаПриИзменении(Отказ);	
	
	Обр=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	
	ОбновитьПоТипу();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПоТипу()
	Элементы.ДополнительныеРеквизиты_Шины.Видимость=Ложь;
	Элементы.ДополнительныеРеквизитыМолоко.Видимость=Ложь;
	Элементы.ДополнительныеРеквизитыПарфюмерия.Видимость=Ложь;
	Элементы.ДополнительныеРеквизитыВелосипеды.Видимость=Ложь;
	Элементы.ДополнительныеРеквизитыВода.Видимость=Ложь;
	Элементы.ДополнительныеРеквизитыОдежда.Видимость=Ложь;
	Элементы.ДополнительныеРеквизитыФото.Видимость=Ложь;
	Элементы.ДополнительныеРеквизитыБелье.Видимость=Ложь;
	Элементы.ДополнительныеРеквизитыРамы.Видимость=Ложь;
	Элементы.ДопРеквизитОбувь.Видимость=Ложь;	
	Элементы.ГруппаХарактеристикСигарет.Видимость=ЛОжь;
	Элементы.ГруппаХарактеристикОбуви.Видимость=Ложь;
	Элементы.АльтернативныйТабак.Видимость=Ложь;
	Элементы.Набор.Видимость=Ложь;
	
	
	
	Если Найти(Врег(Строка(Объект.ТипУпаковки)),"SET")>0 Тогда
	     Элементы.Набор.Видимость=Истина;
	ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак") Тогда
		
		Элементы.ГруппаХарактеристикСигарет.Видимость=истина;
		Элементы.АльтернативныйТабак.Видимость=Истина;
		ОбновитьДопРеквизит();
	ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Фото") Тогда
		
		Элементы.ДополнительныеРеквизитыФото.Видимость=Истина;
		ОбновитьДопРеквизит();
	ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Белье") Тогда
		
		Элементы.ДополнительныеРеквизитыБелье.Видимость=Истина;
		ОбновитьДопРеквизит();
	ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Рамы") Тогда
		
		Элементы.ДополнительныеРеквизитыРамы.Видимость=Истина;
		ОбновитьДопРеквизит();
	ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Одежда") Тогда
		
		Элементы.ДополнительныеРеквизитыОдежда.Видимость=Истина;
		ОбновитьДопРеквизит();
	ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода") Тогда
		
		Элементы.ДополнительныеРеквизитыВода.Видимость=Истина;
		ОбновитьДопРеквизит();
	ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Велосипеды") Тогда
		Элементы.ДополнительныеРеквизиты_Шины.Видимость=ЛОжь;
		Элементы.ГруппаХарактеристикСигарет.Видимость=ЛОжь;
		Элементы.ГруппаХарактеристикОбуви.Видимость=Ложь;
		Элементы.ДополнительныеРеквизитыВелосипеды.Видимость=Истина;
		ОбновитьДопРеквизит();
	ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Шины") Тогда
		Элементы.ДополнительныеРеквизиты_Шины.Видимость=Истина;
		Элементы.ГруппаХарактеристикСигарет.Видимость=ЛОжь;
		Элементы.ГруппаХарактеристикОбуви.Видимость=Ложь;
		ОбновитьДопРеквизит();
	ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Молоко") Тогда
		Элементы.ГруппаХарактеристикСигарет.Видимость=ЛОжь;
		Элементы.ГруппаХарактеристикОбуви.Видимость=Ложь;
		Элементы.ДополнительныеРеквизитыМолоко.Видимость=Истина;
		
		ОбновитьДопРеквизит();
	ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Парфюм") Тогда
		Элементы.ГруппаХарактеристикСигарет.Видимость=ЛОжь;
		Элементы.ГруппаХарактеристикОбуви.Видимость=Ложь;
		Элементы.ДополнительныеРеквизитыМолоко.Видимость=Ложь;
		Элементы.ДополнительныеРеквизитыПарфюмерия.Видимость=Истина;
		
		ОбновитьДопРеквизит();
	ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Табак") 
		ИЛИ
		Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак")  Тогда
		//Элементы.ГруппаХарактеристикСигарет.Видимость=истина;
		Элементы.ГруппаХарактеристикСигарет.Видимость=истина;
		Элементы.АльтернативныйТабак.Видимость=Истина;
		ОбновитьДопРеквизит();
	Иначе
		
		Элементы.ДопРеквизитОбувь.Видимость=Истина;	

		Элементы.ГруппаХарактеристикСигарет.Видимость=истина;
		Элементы.ГруппаХарактеристикОбуви.Видимость=Истина;
		ОбновитьДопРеквизит();
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОбновитьДопРеквизит()
	ЗаполнитьЗначенияСвойств(ДополнительныйРеквизитАльтернативныйТабак,Объект.ДополнительныйРеквизитАльтернативныйТабак,,"ГОСТЫИТУ,СведенияОСвидетельствахОГосРегистрации");
	ДополнительныйРеквизитАльтернативныйТабак.ГОСТЫИТУ.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитАльтернативныйТабак.ГОСТЫИТУ Цикл
		Добав=ДополнительныйРеквизитАльтернативныйТабак.ГОСТЫИТУ.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;

	ДополнительныйРеквизитАльтернативныйТабак.СведенияОСвидетельствахОГосРегистрации.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитАльтернативныйТабак.СведенияОСвидетельствахОГосРегистрации Цикл
		Добав=ДополнительныйРеквизитАльтернативныйТабак.СведенияОСвидетельствахОГосРегистрации.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	
	ЗаполнитьЗначенияСвойств(ДополнительныеРеквизитыШины,Объект.ДополнительныйРеквизитШины,,"ДопМодельАртикулы");
	ДополнительныеРеквизитыШины.ДопМодельАртикулы.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитШины.ДопМодельАртикулы Цикл
		Добав=ДополнительныеРеквизитыШины.ДопМодельАртикулы.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;

	
	
	ЗаполнитьЗначенияСвойств(ДополнителныеРеквизитМолоко,Объект.ДополнительныйРеквизитМолоко,,
	"Аллергены,ЭнергетическаяЦенность,ДополнительныеСрокиГодности,ГОСТЫИТУ,ПредприятияПроизводители,МассоваяДоляБелка,МассоваяДоляЖира,ИдентификаторыТовараВФГИСМеркурий");
	
	
	ДополнителныеРеквизитМолоко.ПредприятияПроизводители.Очистить();
	ДополнителныеРеквизитМолоко.МассоваяДоляБелка.Очистить();
	ДополнителныеРеквизитМолоко.МассоваяДоляЖира.Очистить();
	ДополнителныеРеквизитМолоко.ИдентификаторыТовараВФГИСМеркурий.Очистить();
	
	ДополнителныеРеквизитМолоко.Аллергены.Очистить();
	ДополнителныеРеквизитМолоко.ДополнительныеСрокиГодности.Очистить();
	ДополнителныеРеквизитМолоко.ЭнергетическаяЦенность.Очистить();
	
	ДополнителныеРеквизитМолоко.ГОСТЫИТУ.Очистить();
	
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитМолоко.ПредприятияПроизводители Цикл
		Добав=ДополнителныеРеквизитМолоко.ПредприятияПроизводители.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитМолоко.МассоваяДоляБелка Цикл
		Добав=ДополнителныеРеквизитМолоко.МассоваяДоляБелка.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитМолоко.МассоваяДоляЖира Цикл
		Добав=ДополнителныеРеквизитМолоко.МассоваяДоляЖира.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитМолоко.ИдентификаторыТовараВФГИСМеркурий Цикл
		Добав=ДополнителныеРеквизитМолоко.ИдентификаторыТовараВФГИСМеркурий.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитМолоко.Аллергены Цикл
		Добав=ДополнителныеРеквизитМолоко.Аллергены.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитМолоко.ДополнительныеСрокиГодности Цикл
		Добав=ДополнителныеРеквизитМолоко.ДополнительныеСрокиГодности.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитМолоко.ЭнергетическаяЦенность Цикл
		Добав=ДополнителныеРеквизитМолоко.ЭнергетическаяЦенность.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитМолоко.ГОСТЫИТУ Цикл
		Добав=ДополнителныеРеквизитМолоко.ГОСТЫИТУ.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	
	ЗаполнитьЗначенияСвойств(ДополнительныйРеквизитПарфюм,Объект.ДополнительныйРеквизитПарфюм,,"ДополнительныеСрокиГодности,ГОСТЫИТУ");
	
	ДополнительныйРеквизитПарфюм.ДополнительныеСрокиГодности.Очистить();
	Для Каждого Стр_1 ИЗ Объект.ДополнительныйРеквизитПарфюм.ДополнительныеСрокиГодности Цикл
		
		Добав=ДополнительныйРеквизитПарфюм.ДополнительныеСрокиГодности.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
		
	Конеццикла;
	
	ДополнительныйРеквизитПарфюм.ГОСТЫИТУ.Очистить();
	Для Каждого Стр_1 ИЗ Объект.ДополнительныйРеквизитПарфюм.ГОСТЫИТУ Цикл
		
		Добав=ДополнительныйРеквизитПарфюм.ГОСТЫИТУ.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
		
	Конеццикла;
	
	
	ЗаполнитьЗначенияСвойств(ДополнительныйРеквизитВелосипед,Объект.ДополнительныйРеквизитВелосипед,,"ГОСТЫИТУ,ДопМодельАртикулы");
	
	ДополнительныйРеквизитВелосипед.ДопМодельАртикулы.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитВелосипед.ДопМодельАртикулы Цикл
		Добав=ДополнительныйРеквизитВелосипед.ДопМодельАртикулы.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	
	ДополнительныйРеквизитВелосипед.ГОСТЫИТУ.Очистить();
	Для Каждого Стр_1 ИЗ Объект.ДополнительныйРеквизитВелосипед.ГОСТЫИТУ Цикл
		
		Добав=ДополнительныйРеквизитВелосипед.ГОСТЫИТУ.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
		
	Конеццикла;
	
	
	ЗаполнитьЗначенияСвойств(ДополнительныеРеквизитВода,Объект.ДополнительныеРеквизитВода,,"ДополнительныеСрокиГодности,ГОСТЫИТУ");
	
	ДополнительныеРеквизитВода.ДополнительныеСрокиГодности.Очистить();
	Для Каждого Стр_1 ИЗ Объект.ДополнительныеРеквизитВода.ДополнительныеСрокиГодности Цикл
		
		Добав=ДополнительныеРеквизитВода.ДополнительныеСрокиГодности.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
		
	Конеццикла;
	
	ДополнительныеРеквизитВода.ГОСТЫИТУ.Очистить();
	Для Каждого Стр_1 ИЗ Объект.ДополнительныеРеквизитВода.ГОСТЫИТУ Цикл
		
		Добав=ДополнительныеРеквизитВода.ГОСТЫИТУ.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
		
	Конеццикла;
	
	ЗаполнитьЗначенияСвойств(ДополнительныйРеквизитБелье,Объект.ДополнительныйРеквизитБелье,,"ДопМодельАртикулы,ТипМатериалов,ГОСТЫИТУ");
	
	ДополнительныйРеквизитБелье.ДопМодельАртикулы.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитБелье.ДопМодельАртикулы Цикл
		Добав=ДополнительныйРеквизитБелье.ДопМодельАртикулы.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	
	ДополнительныйРеквизитБелье.ГОСТЫИТУ.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитБелье.ГОСТЫИТУ Цикл
		Добав=ДополнительныйРеквизитБелье.ТипМатериалов.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	ДополнительныйРеквизитБелье.ТипМатериалов.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитБелье.ТипМатериалов Цикл
		Добав=ДополнительныйРеквизитБелье.ТипМатериалов.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	ЗаполнитьЗначенияСвойств(ДополнительныйРеквизитОбувь,Объект.ДополнительныйРеквизитОбувь,,"РазмерВИныхСистемахИзмерения,МатериалВерха,МатериалПодкладки,МатериалСтельки,МатериалНизаПодошвы,ГОСТЫИТУ,ДопМодельАртикулы,СведенияОСвидетельствахОГосРегистрации");
	
	ДополнительныйРеквизитОбувь.МатериалНизаПодошвы.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитОбувь.МатериалНизаПодошвы Цикл
		Добав=ДополнительныйРеквизитОбувь.МатериалНизаПодошвы.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	ДополнительныйРеквизитОбувь.СведенияОСвидетельствахОГосРегистрации.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитОбувь.СведенияОСвидетельствахОГосРегистрации Цикл
		Добав=ДополнительныйРеквизитОбувь.СведенияОСвидетельствахОГосРегистрации.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	
	ДополнительныйРеквизитОбувь.ДопМодельАртикулы.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитОбувь.ДопМодельАртикулы Цикл
		Добав=ДополнительныйРеквизитОбувь.ДопМодельАртикулы.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	ДополнительныйРеквизитОбувь.ГОСТЫИТУ.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитОбувь.ГОСТЫИТУ Цикл
		Добав=ДополнительныйРеквизитОбувь.ГОСТЫИТУ.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	
	ДополнительныйРеквизитОбувь.МатериалСтельки.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитОбувь.МатериалСтельки Цикл
		Добав=ДополнительныйРеквизитОбувь.МатериалСтельки.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	
	ДополнительныйРеквизитОбувь.МатериалПодкладки.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитОбувь.МатериалПодкладки Цикл
		Добав=ДополнительныйРеквизитОбувь.МатериалПодкладки.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	
	ДополнительныйРеквизитОбувь.МатериалВерха.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитОбувь.МатериалВерха Цикл
		Добав=ДополнительныйРеквизитОбувь.МатериалВерха.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	
	ДополнительныйРеквизитОбувь.РазмерВИныхСистемахИзмерения.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитОбувь.РазмерВИныхСистемахИзмерения Цикл
		Добав=ДополнительныйРеквизитОбувь.РазмерВИныхСистемахИзмерения.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	
	ЗаполнитьЗначенияСвойств(ДополнительныйРеквизитРамы,Объект.ДополнительныйРеквизитРамы);
	
	ЗаполнитьЗначенияСвойств(ДополнительныеРеквизитОдежда,Объект.ДополнительныеРеквизитОдежда,,"ДопМодельАртикулы,РазмерВИныхСистемахИзмерения,ТипМатериалов,ГОСТЫИТУ");
	ДополнительныеРеквизитОдежда.ТипМатериалов.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныеРеквизитОдежда.ТипМатериалов Цикл
		Добав=ДополнительныеРеквизитОдежда.ТипМатериалов.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	ДополнительныеРеквизитОдежда.ГОСТЫИТУ.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныеРеквизитОдежда.ГОСТЫИТУ Цикл
		Добав=ДополнительныеРеквизитОдежда.ГОСТЫИТУ.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	
	
	ДополнительныеРеквизитОдежда.ДопМодельАртикулы.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныеРеквизитОдежда.ДопМодельАртикулы Цикл
		Добав=ДополнительныеРеквизитОдежда.ДопМодельАртикулы.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;
	ДополнительныеРеквизитОдежда.РазмерВИныхСистемахИзмерения.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныеРеквизитОдежда.РазмерВИныхСистемахИзмерения Цикл
		Добав=ДополнительныеРеквизитОдежда.РазмерВИныхСистемахИзмерения.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;

	
	ЗаполнитьЗначенияСвойств(ДополнительныеРеквизитФото,Объект.ДополнительныеРеквизитФото,,"ДопМодельАртикулы");
	
	ДополнительныеРеквизитФото.ДопМодельАртикулы.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныеРеквизитФото.ДопМодельАртикулы Цикл
		Добав=ДополнительныеРеквизитФото.ДопМодельАртикулы.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
	Конеццикла;

	
	ЗаполнитьЗначенияСвойств(ДополнительныйРеквизитОбщиеНК,Объект.ДополнительныйРеквизитОбщиеНК,,"ДополнительныеСтраныПроизводств,Изготовители,ДополнительныеУпаковки");
	
	ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки Цикл
		Добав=ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
		
	Конеццикла;

	
	ДополнительныйРеквизитОбщиеНК.ДополнительныеСтраныПроизводств.Очистить();
	ДополнительныйРеквизитОбщиеНК.Изготовители.Очистить();
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитОбщиеНК.ДополнительныеСтраныПроизводств Цикл
		Добав=ДополнительныйРеквизитОбщиеНК.ДополнительныеСтраныПроизводств.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
		
	Конеццикла;
	
	Для Каждого Стр_1 Из Объект.ДополнительныйРеквизитОбщиеНК.Изготовители Цикл
		Добав=ДополнительныйРеквизитОбщиеНК.Изготовители.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
		
	Конеццикла;
	
	
КонецПроцедуры
&НаКлиенте
Процедура ОстаткиОстаткиПриИзменении(Элемент)
	// Вставить содержимое обработчика.
ВидимостьПоОстаткам()	
КонецПроцедуры

&НаКлиенте
Процедура ТНВЭДДляОстаткаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	
	Элементы.АТПТабак.Видимость=Ложь;
	Элементы.ТипОстатокэлемент.Видимость=Истина;
	
	Если Объект.ТНВЭДДляОстатка="2402" ИЛИ Объект.ТНВЭДДляОстатка="2403" Тогда
		Элементы.ТипОстатокэлемент.Видимость=Ложь;
		Элементы.Пол.Видимость=Ложь;
		Элементы.ВозрастнаяКатегория.Видимость=Ложь;
		
		Элементы.БрендТорговаяМаркаОдежда.Видимость=Ложь;
		Элементы.СтранаПроизводстваОстатки.Видимость=Ложь ;
		Элементы.МодельШиныОстатки.Видимость=Ложь;
		Элементы.Пол.Видимость=Ложь;
		Элементы.АТПТабак.Видимость=Истина;
		
		Если Объект.ТНВЭДДляОстатка="2403" Тогда
			Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак");
			Элементы.ТипТабак.ТолькоПросмотр=Истина;
		Иначе
			Элементы.ТипТабак.ТолькоПросмотр=Ложь;
			
		КонецЕсли;
		
	Иначе
		
		Элементы.Пол.Видимость=Объект.ТНВЭДДляОстатка<>"63";
		Элементы.ВозрастнаяКатегория.Видимость=Объект.ТНВЭДДляОстатка="63";
		
		Элементы.БрендТорговаяМаркаОдежда.Видимость=ЗначениеЗаполнено(Объект.ТНВЭДДляОстатка) И Объект.ТНВЭДДляОстатка<>"64";
		Элементы.СтранаПроизводстваОстатки.Видимость=Объект.ТНВЭДДляОстатка<>"40"  ;
		Элементы.МодельШиныОстатки.Видимость=Объект.ТНВЭДДляОстатка="40";
		Элементы.Пол.Видимость=Объект.ТНВЭДДляОстатка<>"40"  ;
	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегестрироватьВЦРПТ(Команда)
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(Объект.guid) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.Записать();
	Форм=ПолучитьФорму("Справочник.Продукция_ХамелеонЦРПТ.Форма.ФормаСписка");
	Тип="Обувь";
	Если Не ЗначениеЗаполнено(Объект.ТНВЭДДляОстатка) ИЛИ Объект.ТНВЭДДляОстатка="64" Тогда
		Тип="Обувь";
	ИначеЕсли Объект.ТНВЭДДляОстатка="63" Тогда
		Тип="Белье";
	Иначеесли Объект.ТНВЭДДляОстатка="40" Тогда
		Тип="Шины"
	ИначеЕсли Объект.ТНВЭДДляОстатка="2403" Тогда
		Тип="АТП";
	ИначеЕсли Объект.ТНВЭДДляОстатка="2402" Тогда
		Если Не ЗначениеЗАполнено(Объект.Тип) 
			
			тогда
			Сообщить("Необходимо указать тип продукции!!");
			Возврат;
		КонецЕсли;
		Если Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Табак") Тогда
			
			Тип="Табак";
			
		ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак") Тогда
			Тип="АТП";
		Иначе
			Сообщить("Не правильный тип продукции (должен быть либо альтернативный табак ИЛИ табак");
			Возврат;
			
		КонецЕсли;
		
		
	Иначе
		Тип="Одежда"
	КонецЕсли;
	Форм.СозданиеОстатковПоПродукциям(Тип,Ложь,Объект.Ссылка);
	Попытка
		ЭтаФорма.ВладелецФормы.Активизировать()
	Исключение
	КонецПопытки;
	
	ПодключитьОбработчикОжидания("аа",2,Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура аа() Экспорт
	ЭтаФорма.Прочитать();
	Попытка
		ЭтаФорма.ВладелецФормы.Активизировать()
	Исключение
	КонецПопытки;
	ЭтаФорма.Активизировать();
КонецПроцедуры

&НаСервере
Функция HELPНаСервере()
	// Вставить содержимое обработчика.
	ОблМ=Справочники.Продукция_ХамелеонЦРПТ.ПолучитьМакет("HELPТаблица");
	//ОблМ=ОблМ_1.Вывести(
	Табл=Новый ТабличныйДокумент;
	Табл.Вывести(ОблМ);
	Возврат Табл
КонецФункции

&НаКлиенте
Процедура HELP(Команда)
	Текст=HELPНаСервере();
	Текст.Показать();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПродукциюПоКМ(Команда,УжеОтправили=Ложь) Экспорт
	// Вставить содержимое обработчика.
	ПолучитьВсеКМПоПродукции=ПолучитьВсеКМПоПродукции();
	
	Обр=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	
	Thumbprint_1=ПолучитьИзПользователя(Обр.Пользователь);	
	
	СРегистра=Thumbprint_1.ТокенПоОтпечатку;
	Если Не ЗначениеЗаполнено(СРегистра) тогда
		Попытка
			СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);	
		исключение
			СРегистра=Неопределено;
		КонецПопытки;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СРегистра) Тогда
		ПоказатьПредупреждение(,"Не удалось получить токен по организации");
		Возврат;
	Конецесли;
	
	
	Для Каждого Стр_11 Из    ПолучитьВсеКМПоПродукции Цикл
		
		
	Если Ложь Тогда
	Иначе
		
		
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
	HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
	HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
			
			
			//ИНН=ВернутьИНН(Обр.Организации[0].Организация );
			
			что=Thumbprint_1.что;
				
		HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/marked_products/info?cis="+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(Стр_11)+"&pg="+что);;
			
	//HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/marked_products/"+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(Стр_11));;
	//HTTPЗапрос=Новый HTTPЗапрос("api/v3/product/search?gtin="+ДополнитьСтроку(Стр_11)+"&limit=100&offset=0");;
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	числоЗагрузили=0;
	
	Тотал=0;
	Если Ответ.КодСостояния=200 Тогда
		//ЗагружаемШаблоныНасервере(Текст1,Обр.Пользователь);
		
		
		ГТИН="";
		ГТИН_1="";
			ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗагружаемГТИН_ПоМарке(Текст1,"",Тотал,числоЗагрузили,Thumbprint_1,ГТИН,ГТИН_1);
			
			Если ГТИН_1=Объект.GTIN Тогда
			
				Прервать;
			КонецЕсли;
	ИначеЕсли Ответ.КодСостояния=401 
		ИЛИ Ответ.КодСостояния=502  
		Тогда
			Если УжеОтправили=Истина Тогда
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
			Иначе
				ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
				ОбновитьПродукциюПоКМ(Команда,Истина);
				Возврат;
			КонецЕсли
	КонецЕсли;
КонецЕсли;
//КонецЦикла;                       
//	Сообщить("Загружено "+Строка(1));		
		
		
Конеццикла;
ЭтаФорма.Прочитать();
	
КонецПроцедуры

Функция ПолучитьВсеКМПоПродукции()
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТ.СерийныйНомер   КАК CIS
		|ИЗ
		|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ КАК ОстаткиКМЭмитированые_ХамелеонЦРПТ
		|ГДЕ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТ.Продукция = &Продукция
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОстаткиКМ_в_Обороте_ХамелеонЦРПТ.СерийныйНомер
		|ИЗ
		|	РегистрНакопления.ОстаткиКМ_в_Обороте_ХамелеонЦРПТ КАК ОстаткиКМ_в_Обороте_ХамелеонЦРПТ
		|ГДЕ
		|	ОстаткиКМ_в_Обороте_ХамелеонЦРПТ.Продукция = &Продукция
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Приемка_ХамелеонЦРПТСерийныеНомера.cis
		|ИЗ
		|	Документ.Приемка_ХамелеонЦРПТ.СерийныеНомера КАК Приемка_ХамелеонЦРПТСерийныеНомера
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Приемка_ХамелеонЦРПТ.Товары КАК Приемка_ХамелеонЦРПТТовары
		|		ПО Приемка_ХамелеонЦРПТСерийныеНомера.НомерСтрокиСвязи = Приемка_ХамелеонЦРПТТовары.НомерСтрокиСвязи
		|			И (Приемка_ХамелеонЦРПТТовары.GTIN = &Продукция)";
	
	Запрос.УстановитьПараметр("Продукция", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МассивКМ=Новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Если МассивКМ.Найти(ВыборкаДетальныеЗаписи.CIS)=Неопределено Тогда
			МассивКМ.Добавить(ВыборкаДетальныеЗаписи.CIS);
		КонецЕсли;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	Возврат МассивКМ
	
КонецФункции

&НаКлиенте
Процедура ТипПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ОбновитьПоТипу();	
	
КонецПроцедуры

&НаКлиенте
Процедура МодельШиныПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ЭтаФорма.Модифицированность=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	// Вставить содержимое обработчика.
	ЗапишемДопРеквизиты();
КонецПроцедуры

Процедура ЗапишемДопРеквизиты()
	
	Если ЗначениеЗАполненО(Объект.ДополнительныйРеквизитАльтернативныйТабак) Тогда
		ДопРе=Объект.ДополнительныйРеквизитАльтернативныйТабак.ПолучитьОбъект();
	Иначе
		ДопРе=Справочники.ДополнительныеРеквизиты_АльтернативныйТабак_ХамелеонЦРПТ.СоздатьЭлемент();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДопРе,ДополнительныйРеквизитАльтернативныйТабак,,"Код");
	
	ДопРе.ГОСТЫИТУ.Очистить();
	Для Каждого Стр ИЗ ДополнительныйРеквизитАльтернативныйТабак.ГОСТЫИТУ Цикл
		
		Добав=ДопРе.ГОСТЫИТУ.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;

	
	ДопРе.СведенияОСвидетельствахОГосРегистрации.Очистить();
	Для Каждого Стр ИЗ ДополнительныйРеквизитАльтернативныйТабак.СведенияОСвидетельствахОГосРегистрации Цикл
		
		Добав=ДопРе.СведенияОСвидетельствахОГосРегистрации.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;

	
	
	Если ЗначениеЗАполненО(Объект.ДополнительныйРеквизитШины) Тогда
		ДопРе=Объект.ДополнительныйРеквизитШины.ПолучитьОбъект();
	Иначе
		ДопРе=Справочники.ДополнительныеРеквизиты_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДопРе,ДополнительныеРеквизитыШины,,"Код");
	
	ДопРе.ДопМодельАртикулы.Очистить();
	Для Каждого Стр ИЗ ДополнительныеРеквизитыШины.ДопМодельАртикулы Цикл
		
		Добав=ДопРе.ДопМодельАртикулы.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;

	
	
	
	ДопРе.Записать();
	Объект.ДополнительныйРеквизитШины=ДопРе.Ссылка;
	
	
	Если ЗначениеЗАполненО(Объект.ДополнительныйРеквизитМолоко) Тогда
		ДопРе=Объект.ДополнительныйРеквизитМолоко.ПолучитьОбъект();
	Иначе
		ДопРе=Справочники.ДополнительныеРеквизиты_Молоко_ХамелеонЦРПТ.СоздатьЭлемент();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДопРе,ДополнителныеРеквизитМолоко,,"Код");
	
	ДопРе.ПредприятияПроизводители.Очистить();
	Для Каждого Стр ИЗ ДополнителныеРеквизитМолоко.ПредприятияПроизводители Цикл
		
		Добав=ДопРе.ПредприятияПроизводители.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	
	ДопРе.МассоваяДоляБелка.Очистить();
	Для Каждого Стр ИЗ ДополнителныеРеквизитМолоко.МассоваяДоляБелка Цикл
		
		Добав=ДопРе.МассоваяДоляБелка.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	ДопРе.МассоваяДоляЖира.Очистить();
	Для Каждого Стр ИЗ ДополнителныеРеквизитМолоко.МассоваяДоляЖира Цикл
		
		Добав=ДопРе.МассоваяДоляЖира.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	ДопРе.ИдентификаторыТовараВФГИСМеркурий.Очистить();
	Для Каждого Стр ИЗ ДополнителныеРеквизитМолоко.ИдентификаторыТовараВФГИСМеркурий Цикл
		
		Добав=ДопРе.ИдентификаторыТовараВФГИСМеркурий.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	ДопРе.Аллергены.Очистить();
	Для Каждого Стр ИЗ ДополнителныеРеквизитМолоко.Аллергены Цикл
		
		Добав=ДопРе.Аллергены.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	ДопРе.ГОСТЫИТУ.Очистить();
	Для Каждого Стр ИЗ ДополнителныеРеквизитМолоко.ГОСТЫИТУ Цикл
		
		Добав=ДопРе.ГОСТЫИТУ.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	
	ДопРе.ЭнергетическаяЦенность.Очистить();
	Для Каждого Стр ИЗ ДополнителныеРеквизитМолоко.ЭнергетическаяЦенность Цикл
		
		Добав=ДопРе.ЭнергетическаяЦенность.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	
	
	ДопРе.ДополнительныеСрокиГодности.Очистить();
	Для Каждого Стр ИЗ ДополнителныеРеквизитМолоко.ДополнительныеСрокиГодности Цикл
		
		Добав=ДопРе.ДополнительныеСрокиГодности.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	
	ДопРе.Записать();
	Объект.ДополнительныйРеквизитМолоко=ДопРе.Ссылка;
	
	
	Если ЗначениеЗАполненО(Объект.ДополнительныйРеквизитОбщиеНК) Тогда
		ДопРе=Объект.ДополнительныйРеквизитОбщиеНК.ПолучитьОбъект();
	Иначе
		ДопРе=Справочники.ДополинтельныеРеквизиты_ДругиеНК_ХамелеонЦРПТ.СоздатьЭлемент();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДопРе,ДополнительныйРеквизитОбщиеНК,,"Код");
	
	ДопРе.ДополнительныеСтраныПроизводств.Очистить();
	ДопРе.Изготовители.Очистить();
	ДопРе.ДополнительныеУпаковки.Очистить();
	
	Для Каждого Стр_1 Из ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки Цикл
		Добав=ДопРе.ДополнительныеУпаковки.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
		
		
	Конеццикла;

	
	Для Каждого Стр_1 Из ДополнительныйРеквизитОбщиеНК.ДополнительныеСтраныПроизводств Цикл
		Добав=ДопРе.ДополнительныеСтраныПроизводств.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
		
		
	Конеццикла;
	
	Для Каждого Стр_1 Из ДополнительныйРеквизитОбщиеНК.Изготовители Цикл
		Добав=ДопРе.Изготовители.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр_1);
		
		
	Конеццикла;
	
	
	ДопРе.Записать();
	Объект.ДополнительныйРеквизитОбщиеНК=ДопРе.Ссылка;
	
	
	
	Если ЗначениеЗАполненО(Объект.ДополнительныйРеквизитПарфюм) Тогда
		ДопРе=Объект.ДополнительныйРеквизитПарфюм.ПолучитьОбъект();
	Иначе
		ДопРе=Справочники.ДополнительныеРеквизиты_Парфюмерия_ХамелеонЦРПТ.СоздатьЭлемент();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДопРе,ДополнительныйРеквизитПарфюм,,"Код");
	
	
	ДопРе.ГОСТЫИТУ.Очистить();
	Для Каждого Стр ИЗ ДополнительныйРеквизитПарфюм.ГОСТЫИТУ Цикл
		
		Добав=ДопРе.ГОСТЫИТУ.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	ДопРе.ДополнительныеСрокиГодности.Очистить();
	Для Каждого Стр ИЗ ДополнительныйРеквизитПарфюм.ДополнительныеСрокиГодности Цикл
		
		Добав=ДопРе.ДополнительныеСрокиГодности.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	
	ДопРе.Записать();
	Объект.ДополнительныйРеквизитПарфюм=ДопРе.Ссылка;
	
	Если ЗначениеЗАполненО(Объект.ДополнительныйРеквизитБелье) Тогда
		ДопРе=Объект.ДополнительныйРеквизитБелье.ПолучитьОбъект();
	Иначе
		ДопРе=Справочники.ДополнительныеРеквизиты_Белье_ХамелеонЦРПТ.СоздатьЭлемент();
	КонецЕсли;
	
	
	ЗаполнитьЗначенияСвойств(ДопРе,ДополнительныйРеквизитБелье,,"Код");
	
	ДопРе.ГОСТЫИТУ.Очистить();
	Для Каждого Стр ИЗ ДополнительныйРеквизитБелье.ГОСТЫИТУ Цикл
		
		Добав=ДопРе.ГОСТЫИТУ.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	
	ДопРе.ДопМодельАртикулы.Очистить();
	Для Каждого Стр ИЗ ДополнительныйРеквизитБелье.ДопМодельАртикулы Цикл
		
		Добав=ДопРе.ДопМодельАртикулы.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	
	
	ДопРе.ТипМатериалов.Очистить();
	Для Каждого Стр ИЗ ДополнительныйРеквизитБелье.ТипМатериалов Цикл
		
		Добав=ДопРе.ТипМатериалов.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	
	
	
	
	ДопРе.Записать();
	Объект.ДополнительныйРеквизитБелье=ДопРе.Ссылка;
	
	
	Если ЗначениеЗАполненО(Объект.ДополнительныйРеквизитРамы) Тогда
		ДопРе=Объект.ДополнительныйРеквизитРамы.ПолучитьОбъект();
	Иначе
		ДопРе=Справочники.ДополнительныеРеквизиты_Рамы_ХамелеонЦРПТ.СоздатьЭлемент();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДопРе,ДополнительныйРеквизитРамы,,"Код");
	
	ДопРе.Записать();
	Объект.ДополнительныйРеквизитРамы=ДопРе.Ссылка;
	
	
	
	
	
	
	Если ЗначениеЗАполненО(Объект.ДополнительныеРеквизитФото) Тогда
		ДопРе=Объект.ДополнительныеРеквизитФото.ПолучитьОбъект();
	Иначе
		ДопРе=Справочники.ДополинительныеРеквизиты_Фото_ХамелеонЦРПТ.СоздатьЭлемент();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДопРе,ДополнительныеРеквизитФото,,"Код");
	
	ДопРе.ДопМодельАртикулы.Очистить();
	Для Каждого Стр ИЗ ДополнительныеРеквизитФото.ДопМодельАртикулы Цикл
		
		Добав=ДопРе.ДопМодельАртикулы.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;

	
	
	ДопРе.Записать();
	Объект.ДополнительныеРеквизитФото=ДопРе.Ссылка;
	
	
	Если ЗначениеЗАполненО(Объект.ДополнительныйРеквизитОбувь) Тогда
		ДопРе=Объект.ДополнительныйРеквизитОбувь.ПолучитьОбъект();
	Иначе
		ДопРе=Справочники.ДополнительныеРеквизиты_ОБУВЬ_ХамелеонЦРПТ.СоздатьЭлемент();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДопРе,ДополнительныйРеквизитОбувь,,"Код");
	
	ДопРе.Записать();
	Объект.ДополнительныйРеквизитОбувь=ДопРе.Ссылка;
	
	
	
	Если ЗначениеЗАполненО(Объект.ДополнительныйРеквизитОбувь) Тогда
		ДопРе=Объект.ДополнительныйРеквизитОбувь.ПолучитьОбъект();
	Иначе
		ДопРе=Справочники.ДополнительныеРеквизиты_ОБУВЬ_ХамелеонЦРПТ.СоздатьЭлемент();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДопРе,ДополнительныйРеквизитОбувь,,"Код");
	
	ДопРе.Записать();
	Объект.ДополнительныйРеквизитОбувь=ДопРе.Ссылка;
	
	
	
	
	
	Если ЗначениеЗАполненО(Объект.ДополнительныеРеквизитОдежда) Тогда
		ДопРе=Объект.ДополнительныеРеквизитОдежда.ПолучитьОбъект();
	Иначе
		ДопРе=Справочники.ДополнительныеРеквизиты_ПредметыОдежды_ХамелеонЦРПТ.СоздатьЭлемент();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДопРе,ДополнительныеРеквизитОдежда,,"Код");
	
	
	ДопРе.ГОСТЫИТУ.Очистить();
	Для Каждого Стр ИЗ ДополнительныеРеквизитОдежда.ГОСТЫИТУ Цикл
		
		Добав=ДопРе.ГОСТЫИТУ.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	
	ДопРе.ДопМодельАртикулы.Очистить();
	Для Каждого Стр ИЗ ДополнительныеРеквизитОдежда.ДопМодельАртикулы Цикл
		
		Добав=ДопРе.ДопМодельАртикулы.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	
	
	ДопРе.ТипМатериалов.Очистить();
	Для Каждого Стр ИЗ ДополнительныеРеквизитОдежда.ТипМатериалов Цикл
		
		Добав=ДопРе.ТипМатериалов.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	
	
	ДопРе.РазмерВИныхСистемахИзмерения.Очистить();
	Для Каждого Стр ИЗ ДополнительныеРеквизитОдежда.РазмерВИныхСистемахИзмерения Цикл
		
		Добав=ДопРе.РазмерВИныхСистемахИзмерения.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	
	
	
	ДопРе.Записать();
	Объект.ДополнительныеРеквизитОдежда=ДопРе.Ссылка;
	
	
	
	Если ЗначениеЗАполненО(Объект.ДополнительныйРеквизитВелосипед) Тогда
		ДопРе=Объект.ДополнительныйРеквизитВелосипед.ПолучитьОбъект();
	Иначе
		ДопРе=Справочники.ДополнительныеРеквизиты_Велосипеды_ХамелеонЦРПТ.СоздатьЭлемент();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДопРе,ДополнительныйРеквизитВелосипед,,"Код");
	
	ДопРе.Записать();
	Объект.ДополнительныйРеквизитВелосипед=ДопРе.Ссылка;
	
	
	Если ЗначениеЗАполненО(Объект.ДополнительныеРеквизитВода) Тогда
		ДопРе=Объект.ДополнительныеРеквизитВода.ПолучитьОбъект();
	Иначе
		ДопРе=Справочники.ДополнительныеРеквизит_ПитьеваяВода_ХамелеонЦРПТ.СоздатьЭлемент();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДопРе,ДополнительныеРеквизитВода,,"Код");
	
	
	ДопРе.ДополнительныеСрокиГодности.Очистить();
	Для Каждого Стр ИЗ ДополнительныеРеквизитВода.ДополнительныеСрокиГодности Цикл
		
		Добав=ДопРе.ДополнительныеСрокиГодности.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	ДопРе.ГОСТЫИТУ.Очистить();
	Для Каждого Стр ИЗ ДополнительныеРеквизитВода.ГОСТЫИТУ Цикл
		
		Добав=ДопРе.ГОСТЫИТУ.Добавить();
		ЗаполнитьЗначенияСвойств(Добав,Стр);
		
	Конеццикла;
	
	ДопРе.Записать();
	Объект.ДополнительныеРеквизитВода=ДопРе.Ссылка;
	
КонецПроцедуры

Функция странаПроизводства()
	Возврат Объект.СтранаПроизводства.Альфа2
Конецфункции

Функция КодПоТ()
	Возврат Объект.КодТНВЭД.Код
КонецФункции

&НаСервереБезКонтекста
Функция ВернутьКод(Т)
	Возврат Т.Код
КонецФункции

&НаКлиенте
Процедура ЗарегистрироватьВКаталогеТоваров(Команда,УжеОтправили=Ложь) Экспорт
	// Вставить содержимое обработчика.
	ЭтаФорма.Записать();
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если НЕ Форм.Открыта() Тогда
		Форм.Открыть(); 
	КонецЕсли;
	
	//ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗарегистрироватьВКаталогеТоваров(Форм.Пользователь,Объект.Ссылка);
	//Возврат;
	
	Thumbprint_1=ПолучитьИзПользователя(Форм.Пользователь);
	
	
	Если Ложь и  ЗначениезАполнено(Thumbprint_1.КлючAPIККМТ) Тогда
		
		
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайтAPI,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайтAPI,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		HTTPЗапрос=Новый HTTPЗапрос("v3/attributes?apikey="+Thumbprint_1.КлючAPIККМТ);
	Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
			Если Ответ.КодСостояния<>200 Тогда
				ПоказатьПредупреждение(,"Не смогли получить GTIN с каталога маркированных товаров "+Ответ.ПолучитьТелоКакСтроку());
				Сообщить(Ответ.ПолучитьТелоКакСтроку());
				Возврат;
			КонецЕсли;
			
			NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON_Соответствие(Ответ.ПолучитьТелоКакСтроку());
				
		
		
		Если Не ЗначениеЗаполнено(объект.GTIN) тогда
			
			HTTPЗапрос=Новый HTTPЗапрос("v3/generate-gtins?apikey="+Thumbprint_1.КлючAPIККМТ+"&quantity=1");
			
			//HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
						
			
			//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
			Если Ответ.КодСостояния<>200 Тогда
				ПоказатьПредупреждение(,"Не смогли получить GTIN с каталога маркированных товаров "+Ответ.ПолучитьТелоКакСтроку());
				Сообщить(Ответ.ПолучитьТелоКакСтроку());
				Возврат;
			КонецЕсли;
			
			NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON_Соответствие(Ответ.ПолучитьТелоКакСтроку());
			GTIN=NNN["result"]["drafts"][0]["gtin"];
			
			Если Не ЗначениеЗаполнено(GTIN) Тогда
				
				ПоказатьПредупреждение(,"Не удалось получить GTIN");
				Возврат;
			
			Конецесли;
				КодТНВЭД=Объект.КодТНВЭДКороткий;
				Если ЗначениеЗаполнено(Объект.КодТНВЭД) тогда
					КодТНВЭД=КодПоТ();
				КонецЕсли;
				
				
				КодТНВ=Сред(КодТНВЭД,1,4);
				
			
			
				 Если Не ЗначениеЗаполнено(КодТНВ) Тогда
					
					ПоказатЬПредупреждение(,"Не правильный код ТНВЭД, его нет в каталоге маркированных товаров");
					
					Возврат;
				КонецЕсли;
			
				 Если Не ЗначениеЗаполнено(Объект.НаименованиеТовара) Тогда
					
					ПоказатЬПредупреждение(,"Не заполненое полное наименование товар");
					
					Возврат;
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(Объект.БрендТорговаяМарка) Тогда
					
					ПоказатЬПредупреждение(,"Не указан бренд товара");
					
					Возврат;
					
				КонецЕсли;
				
				
				тело=ПолучитьТекстНаСервере(GTIN,КодТНВ);
				
				
				HTTPЗапрос=Новый HTTPЗапрос("v3/feed?apikey="+Thumbprint_1.КлючAPIККМТ);
				HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
			
			HTTPЗапрос.Заголовки.Вставить("Content-type","application/json;charset=UTF-8");
			#Если ВебКлиент Тогда
					HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);	
			#Иначе
					HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);	
			#КонецЕсли
							
				
				Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
				Если Ответ.КодСостояния<>200 Тогда
					ПоказатьПредупреждение(,"Не смогли получить GTIN с каталога маркированных товаров "+Ответ.ПолучитьТелоКакСтроку());
					Сообщить(Ответ.ПолучитьТелоКакСтроку());
					Возврат;
				КонецЕсли;
				
			NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON_Соответствие(Ответ.ПолучитьТелоКакСтроку());
			
			
			Объект.GTIN=GTIN;
			Объект.feed_id=NNN["result"]["feed_id"];
			
			
		КонецЕсли;
		ЭтаФорма.Записать();
		
		Если ЗначениеЗаполнено(Объект.feed_id) Тогда
			
				HTTPЗапрос=Новый HTTPЗапрос("v3/feed-status?apikey="+Thumbprint_1.КлючAPIККМТ+"&feed_id="+Формат(Объект.feed_id,"ЧГ="));
				//HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
			
			HTTPЗапрос.Заголовки.Вставить("Content-type","application/json;charset=UTF-8");
							
				
				Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
				
				
				Если Ответ.КодСостояния<>200 Тогда
					ПоказатьПредупреждение(,"Не удалось получить статус фида "+Строка(Объект.feed_id));
					Возврат;
				Иначе
				NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON_Соответствие(Ответ.ПолучитьТелоКакСтроку());
					 	Статус=NNN["result"]["status"];
						Если Статус="Rejected" Тогда
							
							ПоказатьПредупреждение(,"Не удалось создать карточку товара ");
							
							Для Каждого Стр_2 Из NNN["result"]["result"]["0"] Цикл
								
								Сообщить(Стр_2);
								
							Конеццикла;
							
							Возврат;
						КонецЕсли;

				КонецЕсли;
				
			
			
							тело=ПолучитьТекстНаСервере_Товар();
				
				
				HTTPЗапрос=Новый HTTPЗапрос("v3/feed?apikey="+Thumbprint_1.КлючAPIККМТ);
				HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
			
			HTTPЗапрос.Заголовки.Вставить("Content-type","application/json;charset=UTF-8");
			#Если ВебКлиент Тогда
					HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);	
			#Иначе
					HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);	
			#КонецЕсли
							
				
				Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
				Если Ответ.КодСостояния<>200 Тогда
					ПоказатьПредупреждение(,"Не смогли получить GTIN с каталога маркированных товаров "+Ответ.ПолучитьТелоКакСтроку());
					Сообщить(Ответ.ПолучитьТелоКакСтроку());
					Возврат;
				КонецЕсли;
				
			NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON_Соответствие(Ответ.ПолучитьТелоКакСтроку());


		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если НЕ Форм.Открыта() Тогда
		Форм.Открыть(); 
	КонецЕсли;
	
		Thumbprint_1=ПолучитьИзПользователя(Форм.Пользователь);
//	Если Не ЗначениеЗаполнено(объект.GTIN) тогда
//		Возврат;
//	КонецЕслИ;	
	
	
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
	
	
	
	crsfToken="";
	Срегистра="";
	Куки="";
	
		Если Не ЗначениеЗаполнено(объект.GTIN) тогда
			
			////СНАЧАЛА РЕГИСТРИРУЕМ
			
			КодТНВЭД=Объект.КодТНВЭДКороткий;
			Если ЗначениеЗаполнено(Объект.КодТНВЭД) тогда
				КодТНВЭД=КодПоТ();
			КонецЕсли;
			Если Не ЗначениеЗаполненО(КодТНВЭД) Тогда
				ПоказатЬПредупреждение(,"В карточке товара не заполнен ТНВЭД");
				Возврат;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Объект.НаименованиеТовара) Тогда
				ПоказатЬПредупреждение(,"В карточке товара не заполнено полное наименование");
				Возврат;
				
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Объект.БрендТорговаяМарка) Тогда
				ПоказатЬПредупреждение(,"В карточке товара не заполнен бренд!!");
				Возврат;
				
			КонецЕсли;
			////РЕГЕСТРИРУЕМ!!!
			
	КонецЕсли;	
		СерийныйНомер="";
Если ПодключилисьОк(Thumbprint_1,crsfToken,Срегистра,Куки,HTTPСервисЗапрос,СерийныйНомер) Тогда
		
		Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		

		Если Не ЗначениеЗаполнено(объект.GTIN) тогда
			
			HTTPЗапрос=Новый HTTPЗапрос("rest/dictionaries/tm");
			HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
				
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			
			
			NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
			
			Если Ответ.КодСостояния<>200 ИЛИ NNN=Неопределено 
				Тогда
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
				Если УжеОтправили<>Истина Тогда
					ЗарегистрироватьВКаталогеТоваров(Команда,Истина);
					Возврат;
				Иначе
					Сообщить("Не смогли добавить торговую марку "+Ответ.ПолучитьТелоКакСтроку());
					Сообщить(Ответ.ПолучитьТелоКакСтроку());
					Возврат;
					КонецЕсли;
				
			
			КонецЕсли;
			
			/////////////////////////////////////////////////////////////////////////////
			
			///////////////
			ТаблицаБрендов.Очистить();
			Для Каждого СТР_1 Из NNN Цикл
				Добав=ТаблицаБрендов.Добавить();
				Добав.ИД=СТР_1.id;
				Добав.Бренд=ВРЕГ(СТР_1.text);
				
			Конеццикла;
			НСтр=ТаблицаБрендов.НайтиСтроки(Новый Структура("Бренд",ВРЕГ(Объект.БрендТорговаяМарка)));
			Если НСтр.Количество()=0 Тогда
				///ДОБАВЛЯЕМ НОВЫЙ БРЕНД
				
				Тело=НаходимБренд();
			
				HTTPЗапрос=Новый HTTPЗапрос("rest/dictionaries/tm/add");
				
				HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
							
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
									
				//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				//HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
				HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
				HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
				HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
				HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
				
				HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
				HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
		//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
		//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
				HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
					HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
				//	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
				
				HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
				//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
				HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
				HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
				HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
				
				
				
				

						
				
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
				Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
					NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
					
				Попытка
					
				
					ИДБренда=NNN.id;
					
				Исключение
					
					ИДБренда="";
				КонецПопытки;
					
				Если Ответ.КодСостояния<>200 ИЛИ NNN=Неопределено 
					ИЛИ ИДБренда=""
					Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
					Если УжеОтправили<>Истина Тогда
						ЗарегистрироватьВКаталогеТоваров(Команда,Истина);
						Возврат;
					Иначе
						Сообщить("Не смогли добавить торговую марку "+Ответ.ПолучитьТелоКакСтроку());
						Сообщить(Ответ.ПолучитьТелоКакСтроку());
						Возврат;
						КонецЕсли;
					
				
				КонецЕсли;
				
				

				
				
				//ПоказатьПредупреждение(,"Не нашли бренд "+Объект.БрендТорговаяМарка+" в ЦРПТ");
				//Возврат;
			Иначе
				ИДБренда=НСтр[0].Ид;
			
			КонецЕсли;
			
			
			Тело=ДляГенерацииГТИН();
			

			
			HTTPЗапрос=Новый HTTPЗапрос("rest/gtin/generate");
			
			HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
								
						
			//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			//HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
			HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
			
			HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
			HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
			HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			
			HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
			//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
			HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
			HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
			HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
		
			HTTPЗапрос.Заголовки.Вставить("certSerial", СерийныйНомер);
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		

				
					
			
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
//			HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
			Если Ответ.КодСостояния<>200 Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
					Если УжеОтправили<>Истина Тогда
						ЗарегистрироватьВКаталогеТоваров(Команда,Истина);
						Возврат;
					Иначе
						
						NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
						
						Попытка
							Сообщить("Не смогли получить GTIN с каталога маркированных товаров ");
							Для Каждого Стр Из NNN.errors Цикл
								Сообщить(Стр);	
							Конеццикла; 
							
						Исключение
						
							Сообщить("Не смогли получить GTIN с каталога маркированных товаров "+Ответ.ПолучитьТелоКакСтроку());
						КонецПопытки;
							//Сообщить(Ответ.ПолучитьТелоКакСтроку());
						Возврат;
					КонецЕсли;
				Возврат;
			КонецЕсли;
			
			NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
			
			GTIN=NNN.gtin;
			
			HTTPЗапрос=Новый HTTPЗапрос("rest/categories/active?classifier=tnved&isKit=0&isTech=0");
		
			HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
					
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			
			
			
			NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
		
			Для Каждого Стр_1 Из NNN Цикл
				Добав=таблицаКодов.Добавить();
				Добав.Код=Стр_1.id;
				Добав.ТНВЭД=Стр_1.path;
				Добав.ЧетыреСимволаТНВЭД=Сред(Стр_1.path,1,4);
				//Добав.Код=
				
			Конеццикла;
			
			
			
			КодТНВ=Сред(КодТНВЭД,1,4);
			
			СтрН=таблицаКодов.НайтиСтроки(Новый Структура("ЧетыреСимволаТНВЭД",КодТНВ));
			Если СтрН.Количество()=0 Тогда
				
				Сообщить("Не правильный код ТНВЭД, его нет в каталоге маркированных товаров");
				
				Возврат;
			КонецЕсли;
									
			
			
		

			Тело=СоздатьТоварВКТМ(ИдБренда,СтрН[0].Код,GTIN);
			
			
			
			
			
			HTTPЗапрос=Новый HTTPЗапрос("rest/drafts");
			
			HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
						
					HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
				
			//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			//HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
			HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
			
			HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
			HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
			HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
			//	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			
			HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
			//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
			HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
			HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
			HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
		
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
			
			
				
			
			
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
			//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
			
			Попытка
				
				NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
			
				Объект.id=NNN.id;
				Объект.GTIN=GTIN;
				//ЭтаФорма.Записать();
				
			Исключение
				
				Сообщить("Не удалсоь отправить в каталог маркированных товаров элемент справочника "+Ответ.ПолучитьТелоКакСтроку());
				Сообщить(Ответ.ПолучитьТелоКакСтроку());
				Возврат;
				
			КонецПопытки;
			
			
			
			//Возврат;
			
			
		КонецЕсли;
//ЭтаФорма.Записать();
//		Возврат;

		ЗапишемВСеВКарточкуЦРПТ(Куки,HTTPСервисЗапрос,crsfToken,Срегистра,УжеОтправили,Thumbprint_1)
Конецесли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьГТИНБезНулей(Продукция)
	Возврат xmlString(Продукция.GTIN)
Конецфункции

&НаКлиенте
Процедура ЗапишемВСеВКарточкуЦРПТ(Куки,HTTPСервисЗапрос,crsfToken,Срегистра,УжеОтправили,Thumbprint_1,Любую=Ложь)
		Если Не ЗначениеЗаполнено(объект.GTIN) Тогда
			Сообщить("В карточке товара не заполнен gtin");
			Возврат;
		КонецЕсли;
		
		Тело=ИщемПоГТИН();
		
		
		HTTPЗапрос=Новый HTTPЗапрос("rest/goods/list");
		HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		
		HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
		Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
		
		Если Ответ.КодСостояния<>200 Тогда
			ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
			Если УжеОтправили<>Истина Тогда
				ЗарегистрироватьВКаталогеТоваров("",Истина);
				Возврат;
			Иначе
				Возврат;
			КонецЕсли;
			
		
		КонецЕсли;
		
		
		NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
		
		Если NNN.data.количество()=0 Тогда
			Сообщить("Продукцию с gtin "+Формат(Объект.GTIN,"ЧГ=")+" не нашли в каталоге маркированных товаров");
			Возврат
		ИначеЕсли NNN.data[0].goods<>Неопределено
			И Любую<>Истина Тогда
			
			Сообщить("Продукцию с gtin "+Формат(Объект.GTIN,"ЧГ=")+" уже нельзя менять. Для редактировании карточки необходимо обращаться в ЦРПТ");
			Возврат
			
		ИначеЕсли NNN.data[0].draft=Неопределено Тогда
			
			///ПЫТАЕМСЯ СОЗДАТЬ ЧЕРНОВИК
						HTTPЗапрос=Новый HTTPЗапрос("rest/goods/draft/"+Формат(NNN.data[0].goods.id,"ЧГ="));
						
						HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
										HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
					HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
							
							HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
										
										
						//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				//		HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
						HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
						HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
						HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
						HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
						
						HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
						HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
				//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
				//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
						HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(0,"ЧГ="));
			//	TTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
						//	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
						
						HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
						//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
						HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
						HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
						HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
						
						Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
						NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());

						Если Ответ.КодСостояния=200 Тогда
									Тело=ИщемПоГТИН();
											
											
											HTTPЗапрос=Новый HTTPЗапрос("rest/goods/list");
											HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
													HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
										HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
												
												HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
											
											HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
											HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
											Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
											
											Если Ответ.КодСостояния<>200 Тогда
												ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
												Если УжеОтправили<>Истина Тогда
													ЗарегистрироватьВКаталогеТоваров("",Истина);
													Возврат;
												Иначе
													Возврат;
												КонецЕсли;
												
											
											КонецЕсли;
											
											
											NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
												
											Если NNN.data.количество()=0 ИЛИ NNN.data[0].draft=Неопределено Тогда											
												Сообщить("Не удалось создать черновик для "+Формат(Объект.GTIN,"ЧГ=")
												);
												Возврат	
							                Конецесли
							
						Иначе
							Если NNN<>Неопределено тогда
								Ошибки="Не удалось создать черновик для "+Формат(Объект.GTIN,"ЧГ=")+". Ошибки: ";
								errors=Неопределено;
								Если NNN.Свойство("errors",errors) И ТипЗнч(errors)=Тип("Массив") Тогда
									
									Для Каждого Стр_укк Из errors Цикл
										Ошибки=Ошибки+Символы.ПС+ Стр_укк;
									Конеццикла;
									
								Конецесли;
								Сообщить(Ошибки);
							Иначе
								Сообщить("Не удалось создать черновик для "+Формат(Объект.GTIN,"ЧГ=")
								);
							Конецесли;
							Возврат;
						Конецесли;
							
			

			
			//id=                    NNN.data[0].draft.id
			
		Иначе
		
			id=                    NNN.data[0].draft.id
			
		Конецесли;
		
		///Возврат;
		
		
		
				//												
										
						HTTPЗапрос=Новый HTTPЗапрос("rest/draft/"+Формат(id,"ЧГ="));
						
						HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
						HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
						
						HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
						//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
						Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
						
						NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
						
						
						
						Если Объект.Рисунки.Количество()>0 Тогда
							images=Неопределено;
							Если NNN.Свойство("images",images) Тогда
								NNN.images.Очистить();
							Иначе
								images=Новый Массив;
								NNN.Вставить("images",images);
							КонецЕсли;
							
							Для Каждого Стр_1 Из Объект.Рисунки Цикл
								
								СтруктураИзображения=Новый Структура;
								Если ЗначениеЗаполнено(Стр_1.gtin) Тогда
									СтруктураИзображения.Вставить("gtin",Стр_1.gtin);
								Иначе
									СтруктураИзображения.Вставить("gtin",Формат(Объект.GTIN,"ЧГ="));
									
								КонецЕсли;
								СтруктураИзображения.Вставить("type",ВернутьКод(Стр_1.ТипРисунка));
								СтруктураИзображения.Вставить("url",Стр_1.АдресРисункаURL);
								NNN.images.Добавить(СтруктураИзображения);
							Конеццикла;
							
						КонецЕсли;
						
						
							МассивsetGtins=Новый Массив;
							
							setGtins=Неопределено;
							Если NNN.Свойство("setGtins",setGtins) Тогда
								ДопСроковЕть=Ложь;
							    Сч=0;
								Пока Сч<NNN.setGtins.Количество() Цикл
									Стр_а=NNN.setGtins[Сч];
										//Если ДопСроковЕть Тогда
											NNN.setGtins.Удалить(Сч);
											Сч=сч-1;
											//УдалитьСрокДоп.Добавить(Стр_а);
										//Иначе
										//	ДопСроковЕть=Истина;
										//КонецЕсли;
									Сч=Сч+1;
								Конеццикла;			
								
								 //Если NNN.setGtins.Количество()>0 Тогда

								
								Перваяыла=Истина;
								//стр_а=NNN.setGtins[0];
								Для Каждого Стр_22 Из Объект.СоставНабора Цикл
									
									ГТИН=ВернутьГТИНБезНулей(Стр_22.Продукция);
					
										//Если Не Перваяыла Тогда
										//					Стр_а.value=ГТИН;
										//					Стр_а.valueType=Формат(Стр_22.КоличествоВНаборе,"ЧГ=");
										//					Перваяыла=истина
										//				Иначе
														
															Стр_Н=Новый Структура("gtin,quantity");
															//Для Каждого Стр_Стр Из Стр_а Цикл
															//	Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
																
															//Конеццикла;
															Стр_Н.gtin	=ГТИН;
															Стр_Н.quantity=Формат(Стр_22.КоличествоВНаборе,"ЧГ=");
															// Стр_1.attributes.Вставить();
															 МассивsetGtins.Добавить(Стр_Н);
															
															
															 
															 
															 
															
													//Конецесли;
													
												Конеццикла;
												
												Для Каждого Стр_Ст ИЗ МассивsetGtins    Цикл
										NNN.setGtins.Добавить(Стр_Ст);

									Конеццикла;

									//Конеццикла;
							       //  Конецесли;
						      Конецесли;
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						Для Каждого Стр_1 Из NNN.attrGroup Цикл
							Если Стр_1.name="Потребительские свойства" Тогда
								ДопСроковЕть=Ложь;
								ДопРазмеры=Ложь;
								           Сч=0;
									Пока Сч<Стр_1.attributes.Количество() Цикл
									//Для Каждого Стр_а Из Стр_1.attributes Цикл
										Стр_а=Стр_1.attributes[Сч];
										Если  Стр_а.name="Аллергены" Тогда
											Если ДопСроковЕть Тогда
												Стр_1.attributes.Удалить(Сч);
												Сч=сч-1;
												//УдалитьСрокДоп.Добавить(Стр_а);
											Иначе
												ДопСроковЕть=Истина;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Размер в иных системах измерения" Тогда
											Если ДопРазмеры Тогда
												Стр_1.attributes.Удалить(Сч);
												Сч=сч-1;
												//УдалитьСрокДоп.Добавить(Стр_а);
											Иначе
												ДопРазмеры=Истина;
											КонецЕсли;
										Конецесли;
										Сч=Сч+1;
									Конеццикла;			
								ИначеЕсли Стр_1.name="Пищевая и энергетическая ценности" Тогда
									ДопСроковЕть=Ложь;
								           Сч=0;
									Пока Сч<Стр_1.attributes.Количество() Цикл
									//Для Каждого Стр_а Из Стр_1.attributes Цикл
										Стр_а=Стр_1.attributes[Сч];
										Если  Стр_а.name="Энергетическая ценность" Тогда
											Если ДопСроковЕть Тогда
												Стр_1.attributes.Удалить(Сч);
												Сч=сч-1;
												//УдалитьСрокДоп.Добавить(Стр_а);
											Иначе
												ДопСроковЕть=Истина;
											КонецЕсли;
										Конецесли;
										Сч=Сч+1;
									Конеццикла;			
								
								
							ИначеЕсли Стр_1.name="Эксплуатация и условия хранения" Тогда
								ДопСроковЕть=Ложь;
								           Сч=0;
									Пока Сч<Стр_1.attributes.Количество() Цикл
									//Для Каждого Стр_а Из Стр_1.attributes Цикл
										Стр_а=Стр_1.attributes[Сч];
										Если  Стр_а.name="Дополнительный срок годности" Тогда
											Если ДопСроковЕть Тогда
												Стр_1.attributes.Удалить(Сч);
												Сч=сч-1;
												//УдалитьСрокДоп.Добавить(Стр_а);
											Иначе
												ДопСроковЕть=Истина;
											КонецЕсли;
											
										ИначеЕсли Стр_а.name="Альтернативный срок годности" Тогда
											Если ДопСроковЕть Тогда
												Стр_1.attributes.Удалить(Сч);
												Сч=сч-1;
												//УдалитьСрокДоп.Добавить(Стр_а);
											Иначе
												ДопСроковЕть=Истина;
											КонецЕсли;
											
											
											
										Конецесли;
										Сч=Сч+1;
									Конеццикла;			
						ИначеЕсли Стр_1.name="Нормативно-сопроводительная документация" Тогда
								НомерРегламентЕсть=Ложь;
								ГостТУ=Ложь;
								           Сч=0;
									Пока Сч<Стр_1.attributes.Количество() Цикл
									//Для Каждого Стр_а Из Стр_1.attributes Цикл
										Стр_а=Стр_1.attributes[Сч];
										Если  Стр_а.name="Код ОКПД2" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.ОКПД2) Тогда
												
												ВернутьСтруктуройКодИНОКПД=ВернутьСтруктуройКодИНОКПД(ДополнительныйРеквизитОбщиеНК.ОКПД2);
												Стр_а.value=ВернутьСтруктуройКодИНОКПД.Код;
												Стр_а.valueTitle=ВернутьСтруктуройКодИНОКПД.Наименование;
												
												
											Конецесли;
											
											
										ИначеЕсли  Стр_а.name="Номер Регламента/стандарта" Тогда
											Если НомерРегламентЕсть Тогда
												Стр_1.attributes.Удалить(Сч);
												Сч=сч-1;
												//УдалитьСрокДоп.Добавить(Стр_а);
											Иначе
												Стр_а.value=Неопределено;
												НомерРегламентЕсть=Истина;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="ГОСТ / ТУ / СТО" Тогда
											Если ГостТУ Тогда
												Стр_1.attributes.Удалить(Сч);
												Сч=сч-1;
												//УдалитьСрокДоп.Добавить(Стр_а);
											Иначе
												ГостТУ=Истина;
											КонецЕсли;
										ИначеЕсли Стр_а.name="Код ТНВЭД" Тогда
											КодТНВЭД=ВернутьКод(Объект.КодТНВЭД);
											
											Если ЗначениеЗаполнено(КодТНВЭД)
												И СтрДлина(СокрЛП(КодТНВЭД))=10 
												Тогда
												Стр_а.value=Строка(СокрЛП(КодТНВЭД));
												Стр_а.valueTitle=Строка(СокрЛП(КодТНВЭД));
												Стр_а.valueType=Неопределено
											КонецЕсли;
											

										Конецесли;
										Сч=Сч+1;
									Конеццикла;			
							
							 								
						ИначеЕсли Стр_1.name="Происхождение и бренды" Тогда
							
							Для Каждого Стр_2 Из Стр_1.attributes Цикл
									ДопСроковЕть=Ложь;
									ДопАртикулы=Ложь;
								УдалитьСрокДоп=Новый Массив;
								           Сч=0;
									Пока Сч<Стр_1.attributes.Количество() Цикл
									//Для Каждого Стр_а Из Стр_1.attributes Цикл
										Стр_а=Стр_1.attributes[Сч];
										Если  Стр_а.name="Страна производства" Тогда
											Если ДопСроковЕть Тогда
												Стр_1.attributes.Удалить(Сч);
												Сч=сч-1;
												//УдалитьСрокДоп.Добавить(Стр_а);
											Иначе
												ДопСроковЕть=Истина;
											КонецЕсли;
										ИначеЕсли Стр_а.name="Модель / артикул производителя" Тогда
											    		Если ДопАртикулы Тогда
															Стр_1.attributes.Удалить(Сч);
															Сч=сч-1;
															//УдалитьСрокДоп.Добавить(Стр_а);
														Иначе
															ДопАртикулы=Истина;
														КонецЕсли;
											
											
										Конецесли;
										Сч=Сч+1;
									Конеццикла;
								;
								//КонецЕсли;
							Конеццикла;
							

							
							ИначеЕсли Стр_1.name="Идентификация Участников Оборота Товаров" Тогда
							     	ДопСроковЕть=Ложь;
								УдалитьСрокДоп=Новый Массив;
								           Сч=0;
									Пока Сч<Стр_1.attributes.Количество() Цикл
									//Для Каждого Стр_а Из Стр_1.attributes Цикл
										Стр_а=Стр_1.attributes[Сч];
										Если  Стр_а.name="Изготовитель / Производственная площадка" Тогда
											Если ДопСроковЕть Тогда
												Стр_1.attributes.Удалить(Сч);
												Сч=сч-1;
												//УдалитьСрокДоп.Добавить(Стр_а);
											Иначе
												ДопСроковЕть=Истина;
											КонецЕсли;
										Конецесли;
										Сч=Сч+1;
									Конеццикла;
								;
								
								
								ИначеЕсли Стр_1.name="Состав" Тогда
							     	ДопСроковЕть=Ложь;
								УдалитьСрокДоп=Новый Массив;
								           Сч=0;
									Пока Сч<Стр_1.attributes.Количество() Цикл
									//Для Каждого Стр_а Из Стр_1.attributes Цикл
										Стр_а=Стр_1.attributes[Сч];
										Если  Стр_а.name="Тип материала, %" Тогда
											Если ДопСроковЕть Тогда
												Стр_1.attributes.Удалить(Сч);
												Сч=сч-1;
												//УдалитьСрокДоп.Добавить(Стр_а);
											Иначе
												ДопСроковЕть=Истина;
											КонецЕсли;
										Конецесли;
										Сч=Сч+1;
									Конеццикла;
								;
									
								ИначеЕсли Стр_1.name="Данные для ФГИС ВетИС" Тогда
									
								    ДопСроковЕть=Ложь;
									ДопСроковЕть1=Ложь;
									ДопСроковЕть2=Ложь;
									
								     Сч=0;
									Пока Сч<Стр_1.attributes.Количество() Цикл
									//Для Каждого Стр_а Из Стр_1.attributes Цикл
										Стр_а=Стр_1.attributes[Сч];
										Если  Стр_а.name="Предприятие-производитель" Тогда
											Если ДопСроковЕть Тогда
												Стр_1.attributes.Удалить(Сч);
												Сч=сч-1;
											Иначе
												ДопСроковЕть=Истина;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Массовая доля белка, %" Тогда
											Если ДопСроковЕть1 Тогда
												Стр_1.attributes.Удалить(Сч);
												Сч=сч-1;
											Иначе
												ДопСроковЕть1=Истина;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Массовая доля жира, %" Тогда
											Если ДопСроковЕть2 Тогда
												Стр_1.attributes.Удалить(Сч);
												Сч=сч-1;
											Иначе
												ДопСроковЕть2=Истина;
											КонецЕсли;
										Конецесли;
										Сч=Сч+1;
									Конеццикла;
								;

								ИначеЕсли Стр_1.name="ФГИС ВетИС" Тогда
									
								    ДопСроковЕть=Ложь;
									
								     Сч=0;
									Пока Сч<Стр_1.attributes.Количество() Цикл
									//Для Каждого Стр_а Из Стр_1.attributes Цикл
										Стр_а=Стр_1.attributes[Сч];
										Если  Стр_а.name="Идентификатор товара в ФГИС ВетИС (GUID ProductItem)" Тогда
											Если ДопСроковЕть Тогда
												Стр_1.attributes.Удалить(Сч);
												Сч=сч-1;
											Иначе
												ДопСроковЕть=Истина;
											КонецЕсли;
										Конецесли;
										Сч=Сч+1;
									Конеццикла;
								;

									
								КонецЕсли;
	
						Конеццикла;
						
						
						
						Запишемсюда_Потр=Неопределено;
						БылаУпаковка=Новый Массив;
						Для Каждого Стр_1 Из NNN.identifier Цикл
								Если Стр_1.Gtin=Формат(Объект.GTIN,"ЧГ=") тогда
									Запишемсюда_Потр=Стр_1;
									
									Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.ВесБрутто) Тогда
									
									Стр_1.weight=ДополнительныйРеквизитОбщиеНК.ВесБрутто;
								КонецЕсли;
								Если ЗначениеЗАполнено(ДополнительныйРеквизитОбщиеНК.Высота) Тогда
									Стр_1.height=ДополнительныйРеквизитОбщиеНК.Высота;
								КонецЕсли;
								Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.Глубина) Тогда
									Стр_1.length=ДополнительныйРеквизитОбщиеНК.Глубина
								
									;
								КонецЕсли;
								Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.РасчетныйОбъем) тогда
									Стр_1.capacity=ДополнительныйРеквизитОбщиеНК.РасчетныйОбъем;
								КонецЕсли;
								Если ЗначениезАполнено(ДополнительныйРеквизитОбщиеНК.Ширина) тогда
									Стр_1.width=ДополнительныйРеквизитОбщиеНК.Ширина;
								КонецЕсли;
									
								
								
									
									
									//////////////////////УПАК
									Для Каждого Стр_Уп Из Стр_1.vghList Цикл
										Если Стр_Уп.name="packageType" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.ТипУпаковки) Тогда
												Стр_Уп.value=Строка(ДополнительныйРеквизитОбщиеНК.ТипУпаковки);
											КонецЕсли;
										КонецЕсли;
										Если Стр_Уп.name="packageMaterial" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.МатериалУпаковки) Тогда
												Стр_Уп.value=Строка(ДополнительныйРеквизитОбщиеНК.МатериалУпаковки);
											КонецЕсли;
										КонецЕсли;
									Конеццикла;
									
									
								Иначе
									
									Если Стр_1.level="inner-pack" Тогда
										
										Нстр=ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки.НайтиСтроки(
										Новый Структура("УровеньУпаковки",ПредопределенноеЗначение("Перечисление.УровниУпаковок_ХамелеонЦРПТ.ГрупповаяПотребительскаяУпаковка")));
									Иначе
										Нстр=ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки.НайтиСтроки(
										Новый Структура("УровеньУпаковки",ПредопределенноеЗначение("Перечисление.УровниУпаковок_ХамелеонЦРПТ.ТранспортнаяУпаковка")));
										
									КонецЕсли;										
										Для Каждого Стр_123123 Из Нстр Цикл
											БылаУпаковка.Добавить(Стр_123123);
											
											
											
										Если Стр_123123.УровеньУпаковки=ПредопределенноеЗначение("Перечисление.УровниУпаковок_ХамелеонЦРПТ.ГрупповаяПотребительскаяУпаковка") тогда
										Стр_1.level="inner-pack";
									ИначеЕсли Стр_123123.УровеньУпаковки=ПредопределенноеЗначение("Перечисление.УровниУпаковок_ХамелеонЦРПТ.ТранспортнаяУпаковка") тогда
										Стр_1.level="box";
									Иначе
										Стр_1.level="";
									Конецесли;
									
										
									Если ЗначениеЗаполнено(Стр_123123.КоличествоВложенийВУпаковку) тогда
										Стр_1.multiplier=Стр_123123.КоличествоВложенийВУпаковку;
									Конецесли;
												
									Стр_1.gtin=Стр_123123.КодТовараУпаковки;
									Стр_1.gtinInner=Стр_123123.КодТовараВложенияВУпаковку;
									
									Стр_1.name=Стр_123123.НаименованиеУпаковкиТовара;
									//Стр_1.multiplier=Стр_123123.КоличествоВложенийВУпаковку;
									
									           Если ЗначениеЗАполнено(Стр_123123.ВесБрутто) Тогда
											Стр_1.weight=Стр_123123.ВесБрутто;
										Конецесли;
										Если ЗначениеЗаполнено(Стр_123123.Высота) тогда
												Стр_1.height=Стр_123123.Высота;
											Конецесли;
											Если ЗначениеЗАполнено(Стр_123123.Глубина) Тогда
												Стр_1.length=Стр_123123.Глубина
												
											;
										Конецесли;
										Если ЗначениеЗаполнено(Стр_123123.РасчетныйОбъем) Тогда
												Стр_1.capacity=Стр_123123.РасчетныйОбъем;		
											Конецесли;
											
												Стр_1.width=Стр_123123.Ширина;
												
												
												
												
												//////////////////////УПАК
												Для Каждого Стр_Уп Из Стр_1.vghList Цикл
													Если Стр_Уп.name="packageType" Тогда
														Если ЗначениеЗаполнено(Стр_123123.ТипУпаковки) Тогда
															Стр_Уп.value=Строка(Стр_123123.ТипУпаковки);
														Конецесли;
													КонецЕсли;
													Если Стр_Уп.name="packageMaterial" Тогда
														Если ЗначениеЗаполнено(Стр_123123.МатериалУпаковки) тогда
															Стр_Уп.value=Строка(Стр_123123.МатериалУпаковки);
														Конецесли;
													КонецЕсли;
												Конеццикла;

											
											
										Конеццикла;
										
									
									
								КонецЕсли;
								
								
								
							Конеццикла;
							
							Если ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки.Количество()>0 Тогда
								
								 
								 СЧ=ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки.Количество()-1;
								 Пока сч>=0 Цикл
									 Стр_123123=ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки[сч];
									 сч=сч-1;
									 Если БылаУпаковка.Найти(Стр_123123)<>Неопределено Тогда
										 Продолжить;
										Конецесли;
								//Для Каждого Стр_123123 Из  ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки Цикл
									Стр_Н=Новый Структура;
									Для Каждого Стр_Стр Из Запишемсюда_Потр Цикл
										Стр_Н.Вставить(Стр_Стр.Ключ,Неопределено);
										
										
										Если Стр_Стр.Ключ="vghList" тогда
											 МассивСтруктура=Новый Массив;
											 
											 
											 Для Каждого Стр_М_1 Из Стр_Стр.Значение Цикл
												 
												 Стр_М_Структура=Новый Структура;
												 
												 Для Каждого Стр_Стр_СтруктураМ Из Стр_М_1 Цикл
													 
													 Если Стр_Стр_СтруктураМ.Ключ="value" Тогда
													    Стр_М_Структура.Вставить(Стр_Стр_СтруктураМ.Ключ,"");
														Иначе
													    Стр_М_Структура.Вставить(Стр_Стр_СтруктураМ.Ключ,Стр_Стр_СтруктураМ.Значение);
										                Конецесли;
													 
												Конеццикла;
												МассивСтруктура.Добавить(Стр_М_Структура);
												
											Конеццикла;
											
											Стр_Н.vghList=МассивСтруктура;
										Конецесли;
										
										
									Конеццикла;
									Стр_Н.disableRequired=Ложь;
									Стр_Н.disabled=Ложь;
									Стр_Н.gtinType=1;
									Стр_Н.multiplier=0;
									Стр_Н.name="";
									Стр_Н.unitType=Запишемсюда_Потр.unitType;
									
									
									
									Если Стр_123123.УровеньУпаковки=ПредопределенноеЗначение("Перечисление.УровниУпаковок_ХамелеонЦРПТ.ГрупповаяПотребительскаяУпаковка") тогда
										Стр_Н.level="inner-pack";
									ИначеЕсли Стр_123123.УровеньУпаковки=ПредопределенноеЗначение("Перечисление.УровниУпаковок_ХамелеонЦРПТ.ТранспортнаяУпаковка") тогда
										Стр_Н.level="box";
									Иначе
										Стр_Н.level="";
									Конецесли;
									Стр_Н.gtin=Стр_123123.КодТовараУпаковки;
									Стр_Н.gtinInner=Стр_123123.КодТовараВложенияВУпаковку;
									
									Стр_Н.name=Стр_123123.НаименованиеУпаковкиТовара;
									
									Если ЗначениеЗаполнено(Стр_123123.КоличествоВложенийВУпаковку) тогда
										Стр_Н.multiplier=Стр_123123.КоличествоВложенийВУпаковку;
									Конецесли;
									
									Если ЗначениеЗаполнено(Стр_123123.ВесБрутто) тогда
											Стр_Н.weight=Стр_123123.ВесБрутто;
										Конецесли;
										Если ЗначениеЗаполнено(Стр_123123.Высота) тогда
												Стр_Н.height=Стр_123123.Высота;
											Конецесли;
											Если ЗначениеЗАполнено(Стр_123123.Глубина) тогда
												Стр_Н.length=Стр_123123.Глубина
											
											;
										Конецесли;
										Если ЗначениеЗаполнено(Стр_123123.РасчетныйОбъем) тогда
												Стр_Н.capacity=Стр_123123.РасчетныйОбъем;		
											Конецесли;
											Если ЗначениеЗАполнено(Стр_123123.Ширина) тогда
												Стр_Н.width=Стр_123123.Ширина;
											Конецесли;
												
												
												
												
												//////////////////////УПАК
												Для Каждого Стр_Уп Из Стр_Н.vghList Цикл
													Если Стр_Уп.name="packageType" Тогда
														Если ЗначениеЗаполнено(Стр_123123.ТипУпаковки) тогда
															Стр_Уп.value=Строка(Стр_123123.ТипУпаковки);
														Конецесли;
													КонецЕсли;
													Если Стр_Уп.name="packageMaterial" Тогда
														Если ЗначениеЗаполнено(Стр_123123.МатериалУпаковки) тогда
															Стр_Уп.value=Строка(Стр_123123.МатериалУпаковки);
														Конецесли;
													КонецЕсли;
												Конеццикла;

												NNN.identifier.Добавить(Стр_Н);												
															
															
															//Стр_Н.value=Строка(Стр_.Материал);
															//Стр_Н.valueType=Формат(Стр_.Процент,"ЧГ=") ;
															// Стр_1.attributes.Вставить();
//															 МассивТиповМатериалов.Добавить(Стр_Н);

								    Конеццикла;
								
							Конецесли;
							
							
							
							
							////ПО КАЖДОМУ ТИПУ
							
							
					Если Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Белье") Тогда
								МассивАртикулов=Новый Массив;
								МассивАртикулов.Очистить();
								МассивРазмерВИных=Новый Массив;
								МассивТиповМатериалов=Новый Массив;
								МассивГОСТТУ=Новый Массив;	
							Для Каждого Стр_1 Из NNN.attrGroup Цикл
								
								
								Если Стр_1.name="Наименование товара и идентификация" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_а.name="Количество единиц употребления в потребительской упаковке" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ПотребительскаяУпаковка) Тогда
												Стр_а.value=Формат(ДополнительныйРеквизитБелье.КоличествоВПотребительскойУпаковке,"ЧГ=");
												Стр_а.valueType=Строка(ДополнительныйРеквизитБелье.ПотребительскаяУпаковка)
												
											КонецЕсли;
									 	//ИначеЕсли  Стр_а.name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
									Конеццикла;
								

								ИначеЕсли Стр_1.name="Происхождение и бренды" Тогда
									Перваяыла=ЛОжь;
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										
										Если  Стр_а.name="СТМ" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.СТМ) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитБелье.СТМ);
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Модель / артикул производителя" Тогда
											Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул)
												И ДополнительныйРеквизитБелье.ДопМодельАртикулы.Количество()=0 Тогда
												Если Не Перваяыла Тогда
														Стр_а.value=Объект.МодельПроизводителяАртикул;
														Стр_а.valueType=Строка("Артикул")     ;Перваяыла=истина
													Иначе
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
															Стр_Н.value=Объект.МодельПроизводителяАртикул;
														Стр_Н.valueType=Строка("Артикул") ;
														// Стр_1.attributes.Вставить();
														 МассивАртикулов.Добавить(Стр_Н);
														
														
	
														
												Конецесли;
											КонецЕсли;
											Для Каждого Стр_22 Из ДополнительныйРеквизитБелье.ДопМодельАртикулы Цикл
												
												Если Не Перваяыла Тогда
														Стр_а.value=Стр_22.МодельАртикул;
														Стр_а.valueType=Строка(Стр_22.ТипМодельАртикул)   ;Перваяыла=истина
													Иначе
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=Стр_22.МодельАртикул;
														Стр_Н.valueType=Строка(Стр_22.ТипМодельАртикул);
														// Стр_1.attributes.Вставить();
														 МассивАртикулов.Добавить(Стр_Н);
														
														
	
														
												Конецесли;
												
											Конеццикла;
											
										Конецесли;
									Конеццикла;
									
									
									Для Каждого Стр_Ст ИЗ МассивАртикулов    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;

									
									
								ИначеЕсли Стр_1.name="Потребительские свойства" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										
										
										Если  Стр_а.name="Вид товара" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ВидИзделия) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитБелье.ВидИзделия);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитБелье.ВидИзделия);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Цвет" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.Цвет) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитБелье.Цвет);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитБелье.Цвет);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Возраст потребителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ВозрастПотребителя) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитБелье.ВозрастПотребителя);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитБелье.ВозрастПотребителя);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Тип текстиля" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ВидМатериала) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитБелье.ВидМатериала);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитБелье.ВидМатериала);
												Стр_а.valueType=Неопределено
											КонецЕсли;
																		
										ИначеЕсли  Стр_а.name="Декоративные элементы" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ДекоративныеЭлементы) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитБелье.ДекоративныеЭлементы);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитБелье.ДекоративныеЭлементы);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Дизайн" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.Дизайн) Тогда
												Стр_а.value=ДополнительныйРеквизитБелье.Дизайн;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Дополнительные характеристики изделия (описание)" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ДополнительныеХарактеристики) Тогда
												Стр_а.value=ДополнительныйРеквизитБелье.ДополнительныеХарактеристики;
											КонецЕсли;
										Конецесли;
									Конеццикла;
									
									
										Для Каждого Стр_Ст ИЗ МассивРазмерВИных    Цикл
											Стр_1.attributes.Добавить(Стр_Ст);

										Конеццикла;
									
								ИначеЕсли Стр_1.name="Состав" Тогда
										
										
										
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Состав" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.Состав) Тогда
												Стр_а.value=ДополнительныйРеквизитБелье.Состав;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Комплектация" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.Комплектация) Тогда
												Стр_а.value=ДополнительныйРеквизитБелье.Комплектация;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Тип материала, %" Тогда
											
											Если ДополнительныйРеквизитБелье.ТипМатериалов.Количество()>0 Тогда
													
													Первая=ложь;
													Для Каждого Стр_ Из ДополнительныйРеквизитБелье.ТипМатериалов Цикл
														Если Не Первая Тогда
															Первая=Истина;
															Стр_а.value=Строка(Стр_.Материал);
															Стр_а.valueType=Формат(Стр_.Процент,"ЧГ=")
														Иначе
															
															Стр_Н=Новый Структура;
															Для Каждого Стр_Стр Из Стр_а Цикл
																Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
																
															Конеццикла;
																Стр_Н.value=Строка(Стр_.Материал);
															Стр_Н.valueType=Формат(Стр_.Процент,"ЧГ=") ;
															// Стр_1.attributes.Вставить();
															 МассивТиповМатериалов.Добавить(Стр_Н);
															
										
														 КонецЕсли;
													Конеццикла;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Тип материала" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ТипМатериала) Тогда
												Стр_а.value=ДополнительныйРеквизитБелье.ТипМатериала;
											КонецЕсли;
																																			
										Конецесли;
										Для Каждого Стр_Ст ИЗ МассивТиповМатериалов    Цикл
											Стр_1.attributes.Добавить(Стр_Ст);

										Конеццикла;

									Конеццикла;
								ИначеЕсли Стр_1.name="Характеристики товара в состоянии использования" Тогда
									
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Размер изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.РазмерИзделия) Тогда
												Стр_а.value=ДополнительныйРеквизитБелье.РазмерИзделия;
											КонецЕсли;
										КонецЕсли;
									КонецЦикла;
								ИначеЕсли Стр_1.name="Эксплуатация и условия хранения" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Срок службы" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ТипСрокаСлужбы) Тогда
												Стр_а.value=ДополнительныйРеквизитБелье.СрокСлужбы;
												Стр_а.valueType=Строка(ДополнительныйРеквизитБелье.ТипСрокаСлужбы)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Гарантийный срок, от производителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ТипГарантийногоСрока) Тогда
												Стр_а.value=ДополнительныйРеквизитБелье.ГарантийныйСрокОтПроизводителя;
												Стр_а.valueType=Строка(ДополнительныйРеквизитБелье.ТипГарантийногоСрока)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Особые условия хранения" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.ОсобыеУсловияХранения) Тогда
												Стр_а.value=ДополнительныйРеквизитБелье.ОсобыеУсловияХранения;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Рекомендации по использованию" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитБелье.РекомендацияПоИспользованию) Тогда
												Стр_а.value=ДополнительныйРеквизитБелье.РекомендацияПоИспользованию;
											КонецЕсли;
										КонецЕсли;
									Конеццикла;
									
									
								ИначеЕсли Стр_1.name="Нормативно-сопроводительная документация" Тогда
									МассивНормативово=Новый Массив;
									МассивНормативово.Очистить();
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Номер Регламента/стандарта" Тогда
											Первая=Ложь;
											
											Если ДополнительныйРеквизитБелье.НомерРегламента005=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
												     Первая=Истина;
														
													    Стр_а.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											Если ДополнительныйРеквизитБелье.НомерРегламента007=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 007/2011 ""О безопасности продукции, предназначенной для детей и подростков""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													     Первая=Истина;
													    Стр_а.value="ТР ТС 007/2011 ""О безопасности продукции, предназначенной для детей и подростков""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											Если ДополнительныйРеквизитБелье.НомерРегламента017=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 017/2011 ""О безопасности продукции легкой промышленности""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													      Первая=Истина;
													
													    Стр_а.value="ТР ТС 017/2011 ""О безопасности продукции легкой промышленности""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											 
											 Если ДополнительныйРеквизитБелье.БезРегламента=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="Действие технических регламентов не распространяется";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													      Первая=Истина;
													
													    Стр_а.value="Действие технических регламентов не распространяется";
														
												КонецЕсли;
												
											КонецЕсли;
										ИначеЕсли  Стр_а.name="ГОСТ / ТУ / СТО" Тогда
											
											Если ДополнительныйРеквизитБелье.ГОСТЫИТУ.Количество()>0 Тогда
												
												Первая=ложь;
												Для Каждого Стр_ Из ДополнительныйРеквизитБелье.ГОСТЫИТУ Цикл
													Если Не Первая Тогда
														Первая=Истина;
														Стр_а.value=Стр_.ГОСТТУ;
														Стр_а.valueType=Строка(Стр_.ТипГОСТТУ)
													Иначе
														
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=Стр_.ГОСТТУ;
														Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивГОСТТУ.Добавить(Стр_Н);
														
														
													 КонецЕсли;
													Конеццикла;
												КонецЕсли;
												
											КонецЕсли;

											
											
										//Конецесли;
									Конеццикла;
									
																		
									Для Каждого Стр_Ст ИЗ МассивГОСТТУ    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									
									

									Для Каждого Стр_Ст ИЗ МассивНормативово    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									
									
								КонецЕсли;
								
								
							Конеццикла;
							
						ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Одежда") Тогда
								МассивАртикулов=Новый Массив;
								МассивАртикулов.Очистить();
								МассивРазмерВИных=Новый Массив;
								МассивТиповМатериалов=Новый Массив;
								МассивГОСТТУ=Новый Массив;	
							Для Каждого Стр_1 Из NNN.attrGroup Цикл
								
								
								Если Стр_1.name="Наименование товара и идентификация" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_а.name="Количество единиц употребления в потребительской упаковке" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ПотребительскаяУпаковка) Тогда
												Стр_а.value=Формат(ДополнительныеРеквизитОдежда.КоличествоВПотребительскойУпаковке,"ЧГ=");
												Стр_а.valueType=Строка(ДополнительныеРеквизитОдежда.ПотребительскаяУпаковка)
												
											КонецЕсли;
									 	//ИначеЕсли  Стр_а.name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
									Конеццикла;
								

								ИначеЕсли Стр_1.name="Происхождение и бренды" Тогда
									Перваяыла=ЛОжь;
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										
										Если  Стр_а.name="СТМ" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.СТМ) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитОдежда.СТМ);
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Модель / артикул производителя" Тогда
	//										Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул) Тогда
	//											Если Не Перваяыла Тогда
	//													Стр_а.value=Объект.МодельПроизводителяАртикул;
	//													Стр_а.valueType=Строка("Артикул");Перваяыла=истина
	//												Иначе
	//												
	//													Стр_Н=Новый Структура;
	//													Для Каждого Стр_Стр Из Стр_а Цикл
	//														Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
	//														
	//													Конеццикла;
	//														Стр_Н.value=Объект.МодельПроизводителяАртикул;
	//													Стр_Н.valueType=Строка("Артикул") ;
	//													// Стр_1.attributes.Вставить();
	//													 МассивАртикулов.Добавить(Стр_Н);
	//													
	//													
	//
	//													
	//											Конецесли;
	//										КонецЕсли;
											Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул)
												И ДополнительныйРеквизитБелье.ДопМодельАртикулы.Количество()=0 Тогда
												Если Не Перваяыла Тогда
														Стр_а.value=Объект.МодельПроизводителяАртикул;
														Стр_а.valueType=Строка("Артикул")     ;Перваяыла=истина
													Иначе
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
															Стр_Н.value=Объект.МодельПроизводителяАртикул;
														Стр_Н.valueType=Строка("Артикул") ;
														// Стр_1.attributes.Вставить();
														 МассивАртикулов.Добавить(Стр_Н);
														
														
	
														
												Конецесли;
											КонецЕсли;
											Для Каждого Стр_22 Из ДополнительныеРеквизитОдежда.ДопМодельАртикулы Цикл
												
												Если Не Перваяыла Тогда
														Стр_а.value=Стр_22.МодельАртикул;
														Стр_а.valueType=Строка(Стр_22.ТипМодельАртикул)  ;Перваяыла=истина
													Иначе
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=Стр_22.МодельАртикул;
														Стр_Н.valueType=Строка(Стр_22.ТипМодельАртикул);
														// Стр_1.attributes.Вставить();
														 МассивАртикулов.Добавить(Стр_Н);
														
														
	
														
												Конецесли;
												
											Конеццикла;
											
										Конецесли;
									Конеццикла;
									
									
									Для Каждого Стр_Ст ИЗ МассивАртикулов    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;

									
									
								ИначеЕсли Стр_1.name="Потребительские свойства" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										
										
										Если  Стр_а.name="Вид товара" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ВидИзделия) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитОдежда.ВидИзделия);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитОдежда.ВидИзделия);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Цвет" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.Цвет) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитОдежда.Цвет);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитОдежда.Цвет);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Возраст потребителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ВозрастПотребителя) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитОдежда.ВозрастПотребителя);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитОдежда.ВозрастПотребителя);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Целевой пол" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ЦелевойПол) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитОдежда.ЦелевойПол);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитОдежда.ЦелевойПол);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Размер одежды" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.РазмерИзделияГОСТ) Тогда
												Стр_а.value=ДополнительныеРеквизитОдежда.РазмерИзделияГОСТДругое;
												Стр_а.valueType=Строка(ДополнительныеРеквизитОдежда.РазмерИзделияГОСТ)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Размер в иных системах измерения" Тогда
											
											Если ДополнительныеРеквизитОдежда.РазмерВИныхСистемахИзмерения.Количество()>0 Тогда
													
													Первая=ложь;
													Для Каждого Стр_ Из ДополнительныеРеквизитОдежда.РазмерВИныхСистемахИзмерения Цикл
														
														Если ЗначениеЗаполнено(Стр_.Страна) И ЗначениеЗАполнено(Стр_.Размер) Тогда
															
															Если Не Первая Тогда
																Первая=Истина;
																Стр_а.value=Стр_.Размер;
																Стр_а.valueType=Строка(Стр_.Страна)
															Иначе
																
																Стр_Н=Новый Структура;
																Для Каждого Стр_Стр Из Стр_а Цикл
																	Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
																	
																Конеццикла;
																	Стр_Н.value=Стр_.Размер;
																Стр_Н.valueType=Строка(Стр_.Страна) ;
																// Стр_1.attributes.Вставить();
																 МассивРазмерВИных.Добавить(Стр_Н);
																
											
															 КонецЕсли;
														КонецеслИ;
													Конеццикла;
											КонецЕсли;
																						
										ИначеЕсли  Стр_а.name="Рост" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.Рост) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитОдежда.Рост);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитОдежда.Рост);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Дополнительные характеристики изделия (описание)" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ДополнительныеХарактеристики) Тогда
												Стр_а.value=ДополнительныеРеквизитОдежда.ДополнительныеХарактеристики;
											КонецЕсли;
										Конецесли;
									Конеццикла;
									
									
										Для Каждого Стр_Ст ИЗ МассивРазмерВИных    Цикл
											Стр_1.attributes.Добавить(Стр_Ст);

										Конеццикла;
									
								ИначеЕсли Стр_1.name="Состав" Тогда
										
										
										
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Состав" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.Состав) Тогда
												Стр_а.value=ДополнительныеРеквизитОдежда.Состав;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Комплектация" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.Комплектация) Тогда
												Стр_а.value=ДополнительныеРеквизитОдежда.Комплектация;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Тип материала, %" Тогда
											
											Если ДополнительныеРеквизитОдежда.ТипМатериалов.Количество()>0 Тогда
													
													Первая=ложь;
													Для Каждого Стр_ Из ДополнительныеРеквизитОдежда.ТипМатериалов Цикл
														Если ЗначениеЗаполнено(Стр_.Процент) И ЗначениеЗАполнено(Стр_.Материал) Тогда
															
															
															Если Не Первая Тогда
																Первая=Истина;
																Стр_а.value=Стр_.Материал;
																Стр_а.valueType=Строка(Стр_.Процент)
															Иначе
																
																Стр_Н=Новый Структура;
																Для Каждого Стр_Стр Из Стр_а Цикл
																	Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
																	
																Конеццикла;
																	Стр_Н.value=Стр_.Материал;
																Стр_Н.valueType=Строка(Стр_.Процент) ;
																// Стр_1.attributes.Вставить();
																 МассивТиповМатериалов.Добавить(Стр_Н);
																
											
															 КонецЕсли;
														Конецесли;
													Конеццикла;
												КонецЕсли;
												
																					
										ИначеЕсли  Стр_а.name="Тип материала" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ТипМатериала) Тогда
												Стр_а.value=ДополнительныеРеквизитОдежда.ТипМатериала;
											КонецЕсли;
																																			
										Конецесли;
										Для Каждого Стр_Ст ИЗ МассивТиповМатериалов    Цикл
											Стр_1.attributes.Добавить(Стр_Ст);

										Конеццикла;

									Конеццикла;
									
									
								ИначеЕсли Стр_1.name="Эксплуатация и условия хранения" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Срок службы" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ТипСрокаСлужбы) Тогда
												Стр_а.value=ДополнительныеРеквизитОдежда.СрокСлужбы;
												Стр_а.valueType=Строка(ДополнительныеРеквизитОдежда.ТипСрокаСлужбы)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Гарантийный срок, от производителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ТипГарантийногоСрока) Тогда
												Стр_а.value=ДополнительныеРеквизитОдежда.ГарантийныйСрокОтПроизводителя;
												Стр_а.valueType=Строка(ДополнительныеРеквизитОдежда.ТипГарантийногоСрока)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Особые условия хранения" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.ОсобыеУсловияХранения) Тогда
												Стр_а.value=ДополнительныеРеквизитОдежда.ОсобыеУсловияХранения;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Рекомендации по использованию" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитОдежда.РекомендацияПоИспользованию) Тогда
												Стр_а.value=ДополнительныеРеквизитОдежда.РекомендацияПоИспользованию;
											КонецЕсли;
										КонецЕсли;
									Конеццикла;
									
									
								ИначеЕсли Стр_1.name="Нормативно-сопроводительная документация" Тогда
									МассивНормативово=Новый Массив;
									МассивНормативово.Очистить();
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Номер Регламента/стандарта" Тогда
											Первая=Ложь;
											
											Если ДополнительныеРеквизитОдежда.НомерРегламента005=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
												     Первая=Истина;
														
													    Стр_а.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											Если ДополнительныеРеквизитОдежда.НомерРегламента007=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 007/2011 ""О безопасности продукции, предназначенной для детей и подростков""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													     Первая=Истина;
													    Стр_а.value="ТР ТС 007/2011 ""О безопасности продукции, предназначенной для детей и подростков""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											Если ДополнительныеРеквизитОдежда.НомерРегламента017=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 017/2011 ""О безопасности продукции легкой промышленности""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													      Первая=Истина;
													
													    Стр_а.value="ТР ТС 017/2011 ""О безопасности продукции легкой промышленности""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											 
											
											Если ДополнительныеРеквизитОдежда.НомерРегламента019=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 019/2011 ""О безопасности средств индивидуальной защиты""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													                     
												Иначе
													      Первая=Истина;
													
													    Стр_а.value="ТР ТС 019/2011 ""О безопасности средств индивидуальной защиты""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											 
											Если ДополнительныеРеквизитОдежда.БезРегламента=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="Действие технических регламентов не распространяется";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													      Первая=Истина;
													
													    Стр_а.value="Действие технических регламентов не распространяется";
														
												КонецЕсли;
												
											КонецЕсли;
										ИначеЕсли  Стр_а.name="ГОСТ / ТУ / СТО" Тогда
											
											Если ДополнительныеРеквизитОдежда.ГОСТЫИТУ.Количество()>0 Тогда
												
												Первая=ложь;
												Для Каждого Стр_ Из ДополнительныеРеквизитОдежда.ГОСТЫИТУ Цикл
													Если Не Первая Тогда
														Первая=Истина;
														Стр_а.value=Стр_.ГОСТТУ;
														Стр_а.valueType=Строка(Стр_.ТипГОСТТУ)
													Иначе
														
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=Стр_.ГОСТТУ;
														Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивГОСТТУ.Добавить(Стр_Н);
														
														
													 КонецЕсли;
													Конеццикла;
												КонецЕсли;
												
											КонецЕсли;

											
											
										//Конецесли;
									Конеццикла;
									
																		
									Для Каждого Стр_Ст ИЗ МассивГОСТТУ    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									
									

									Для Каждого Стр_Ст ИЗ МассивНормативово    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									
									
								КонецЕсли;
								
								
							Конеццикла;
							
							
						ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Велосипеды") Тогда
							                   МассивНормативово=Новый Массив;
																	МассивВтавить_Упаковки=Новый Массив;

									МассивГОСТТУ=Новый Массив;	
							Для Каждого Стр_1 Из NNN.attrGroup Цикл
								
								Если Стр_1.name="Происхождение и бренды" Тогда
									МассивАртикулов=Новый Массив;
									МассивАртикулов.Очистить();
									Перваяыла=ЛОжь;
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										
										Если  Стр_а.name="СТМ" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.СТМ) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.СТМ);
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Модель / артикул производителя" Тогда
	//										Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул) Тогда
	//											Если Не Перваяыла Тогда
	//													Стр_а.value=Объект.МодельПроизводителяАртикул;
	//													Стр_а.valueType=Строка("Артикул")   ;Перваяыла=истина
	//												Иначе
	//												
	//													Стр_Н=Новый Структура;
	//													Для Каждого Стр_Стр Из Стр_а Цикл
	//														Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
	//														
	//													Конеццикла;
	//														Стр_Н.value=Объект.МодельПроизводителяАртикул;
	//													Стр_Н.valueType=Строка("Артикул") ;
	//													// Стр_1.attributes.Вставить();
	//													 МассивАртикулов.Добавить(Стр_Н);
	//													
	//													
	//
	//													
	//											Конецесли;
	//										КонецЕсли;
											Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул)
												И ДополнительныйРеквизитБелье.ДопМодельАртикулы.Количество()=0 Тогда
												Если Не Перваяыла Тогда
														Стр_а.value=Объект.МодельПроизводителяАртикул;
														Стр_а.valueType=Строка("Артикул")     ;Перваяыла=истина
													Иначе
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
															Стр_Н.value=Объект.МодельПроизводителяАртикул;
														Стр_Н.valueType=Строка("Артикул") ;
														// Стр_1.attributes.Вставить();
														 МассивАртикулов.Добавить(Стр_Н);
														
														
	
														
												Конецесли;
											КонецЕсли;
											Для Каждого Стр_22 Из ДополнительныйРеквизитВелосипед.ДопМодельАртикулы Цикл
												
												Если Не Перваяыла Тогда
														Стр_а.value=Стр_22.МодельАртикул;
														Стр_а.valueType=Строка(Стр_22.ТипМодельАртикул) ;Перваяыла=истина
													Иначе
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=Стр_22.МодельАртикул;
														Стр_Н.valueType=Строка(Стр_22.ТипМодельАртикул);
														// Стр_1.attributes.Вставить();
														 МассивАртикулов.Добавить(Стр_Н);
														
														
	
														
												Конецесли;
												
											Конеццикла;
											
										Конецесли;
									Конеццикла;
									
									
									Для Каждого Стр_Ст ИЗ МассивАртикулов    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;

									
									
								ИначеЕсли Стр_1.name="Потребительские свойства" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										
										
										Если  Стр_а.name="Вид товара" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ТипВелосипеда) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ТипВелосипеда);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ТипВелосипеда);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Класс велосипеда" Тогда
											Если Значениезаполнено(ДополнительныйРеквизитВелосипед.КлассВелосипеда) тогда
												
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.КлассВелосипеда);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.КлассВелосипеда);
												Стр_а.valueType=Неопределено
											Конецесли;

											
										ИначеЕсли  Стр_а.name="Цвет" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.Цвет) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.Цвет);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.Цвет);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Возраст потребителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ВозрастПотребителя) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ВозрастПотребителя);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ВозрастПотребителя);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Пол целевого потребителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ПолЦелевогоПотребителя) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ПолЦелевогоПотребителя);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ПолЦелевогоПотребителя);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Год производства" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ГодПроизводства) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ГодПроизводства);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ГодПроизводства);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Размер рамы" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ЕдиницаИзмеренияРазмераРамы) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.РазмерРамы);
												Стр_а.valueType=НРег(Строка(ДополнительныйРеквизитВелосипед.ЕдиницаИзмеренияРазмераРамы))
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Материал рамы" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.МатериалРамы) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.МатериалРамы);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.МатериалРамы);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Тип тормозной системы" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ТипТормознойСистемы) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ТипТормознойСистемы);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ТипТормознойСистемы);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Тип конструкции рамы" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ТипКонструкцииРамы) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ТипКонструкцииРамы);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ТипКонструкцииРамы);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Тип передней вилки" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ТипПереднейВилки) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ТипПереднейВилки);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ТипПереднейВилки);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Ширина профиля шины (камеры), дюйм" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ШиринаПрофиляШины) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ШиринаПрофиляШины);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ШиринаПрофиляШины);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Номинальный посадочный диаметр обода, дюйм" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ПосадочныйДиамтерОбода) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ПосадочныйДиамтерОбода);
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Номинальный посадочный диаметр обода, мм" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.НоминальныйПосадочныйДиаметрОбодаВмм) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.НоминальныйПосадочныйДиаметрОбодаВмм);
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Количество колес" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.КоличествоКолес) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.КоличествоКолес);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.КоличествоКолес);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Тип колесных дисков" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ТипКолесныхДисков) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ТипКолесныхДисков);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ТипКолесныхДисков);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Колесная база, мм" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.КолеснаяБаза) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.КолеснаяБаза);
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Дорожный просвет, мм" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ДорожныйПросвет) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ДорожныйПросвет);
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Тип подвески" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ТипПодвески) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.ТипПодвески);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.ТипПодвески);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Количество скоростей" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.КоличествоСкоростей) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.КоличествоСкоростей);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.КоличествоСкоростей);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Материал подкрылков" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.МатериалПодкрылок) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.МатериалПодкрылок);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.МатериалПодкрылок);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Расположение фар" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.РасположениеФар) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.РасположениеФар);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.РасположениеФар);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Наличие кофра" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.НаличиеКофра) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитВелосипед.НаличиеКофра);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитВелосипед.НаличиеКофра);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Максимальная нагрузка, кг" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.МаксимальнаяНагрузка) Тогда
												Стр_а.value=ДополнительныйРеквизитВелосипед.МаксимальнаяНагрузка;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Дополнительные характеристики изделия (описание)" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ДополнительныеХарактеристики) Тогда
												Стр_а.value=ДополнительныйРеквизитВелосипед.ДополнительныеХарактеристики;
											КонецЕсли;
										Конецесли;
									Конеццикла;
								
								ИначеЕсли Стр_1.name="Состав" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Комплектация" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.Состав) Тогда
												Стр_а.value=ДополнительныйРеквизитВелосипед.Состав;
											КонецЕсли;
											
										Конецесли;
									Конеццикла;
									
								ИначеЕсли Стр_1.name="Характеристики товара в состоянии использования" Тогда
									  Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_а.name="Конструктивная масса, кг" Тогда
											ДополнительныйРеквизитВелосипед.КонструктивнаяМасса=Стр_2.value;
										ИначеЕсли  Стр_а.name="Длина изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ДлинаЕдиницаИзмерения) Тогда
												Стр_а.value=ДополнительныйРеквизитВелосипед.Длина;
												Стр_а.valueType=Строка(ДополнительныйРеквизитВелосипед.ДлинаЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Ширина изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ШиринаЕдиницаИзмерения) Тогда
												Стр_а.value=ДополнительныйРеквизитВелосипед.Ширина;
												Стр_а.valueType=Строка(ДополнительныйРеквизитВелосипед.ШиринаЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Высота изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ВысотаЕдиницаИзмерения) Тогда
												Стр_а.value=ДополнительныйРеквизитВелосипед.Высота;
												Стр_а.valueType=Строка(ДополнительныйРеквизитВелосипед.ВысотаЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Длина сложенного изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ДлинаСложенногоИзделияЕдиницаИзмерения) Тогда
												Стр_а.value=ДополнительныйРеквизитВелосипед.ДлинаСложенногоИзделия;
												Стр_а.valueType=Строка(ДополнительныйРеквизитВелосипед.ДлинаСложенногоИзделияЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Ширина сложенного изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ШиринаСложенногоИзделияЕдиницаИзмерения) Тогда
												Стр_а.value=ДополнительныйРеквизитВелосипед.ШиринаСложенногоИзделия;
												Стр_а.valueType=Строка(ДополнительныйРеквизитВелосипед.ШиринаСложенногоИзделияЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Высота сложенного изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ВысотаСложенногоИзделияЕдиницыИзмерения) Тогда
												Стр_а.value=ДополнительныйРеквизитВелосипед.ВысотаСложенногоИзделния;
												Стр_а.valueType=Строка(ДополнительныйРеквизитВелосипед.ВысотаСложенногоИзделияЕдиницыИзмерения)
											КонецЕсли;
										Конецесли;
									Конеццикла
									
									
									
									
								ИначеЕсли Стр_1.name="Эксплуатация и условия хранения" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Срок службы" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ТипСрокаСлужбы) Тогда
												Стр_а.value=ДополнительныйРеквизитВелосипед.СрокСлужбы;
												Стр_а.valueType=Строка(ДополнительныйРеквизитВелосипед.ТипСрокаСлужбы)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Гарантийный срок, от производителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ТипГарантийногоСрока) Тогда
												Стр_а.value=ДополнительныйРеквизитВелосипед.ГарантийныйСрокОтПроизводителя;
												Стр_а.valueType=Строка(ДополнительныйРеквизитВелосипед.ТипГарантийногоСрока)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Особые условия хранения" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.ОсобыеУсловияХранения) Тогда
												Стр_а.value=ДополнительныйРеквизитВелосипед.ОсобыеУсловияХранения;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Рекомендации по использованию" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитВелосипед.РекомендацияПоИспользованию) Тогда
												Стр_а.value=ДополнительныйРеквизитВелосипед.РекомендацияПоИспользованию;
											КонецЕсли;
										КонецЕсли;
									Конеццикла;
									
									
								ИначеЕсли Стр_1.name="Нормативно-сопроводительная документация" Тогда
									МассивНормативово=Новый Массив;
									МассивНормативово.Очистить();
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Номер Регламента/стандарта" Тогда
											Первая=Ложь;
											
											Если ДополнительныйРеквизитВелосипед.НомерРегламента005=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
												     Первая=Истина;
														
													    Стр_а.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											Если ДополнительныйРеквизитВелосипед.НомерРегламента007=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 007/2011 ""О безопасности продукции, предназначенной для детей и подростков""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													     Первая=Истина;
													    Стр_а.value="ТР ТС 007/2011 ""О безопасности продукции, предназначенной для детей и подростков""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											Если ДополнительныйРеквизитВелосипед.НомерРегламента010=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 010/2011 ""О безопасности машин и оборудования""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													      Первая=Истина;
													
													    Стр_а.value="ТР ТС 010/2011 ""О безопасности машин и оборудования""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											 
											
											Если ДополнительныйРеквизитВелосипед.НомерРегламента012=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 012/2011 ""О безопасности оборудования для работы во взрывоопасных средах""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													                     
												Иначе
													      Первая=Истина;
													
													    Стр_а.value="ТР ТС 012/2011 ""О безопасности оборудования для работы во взрывоопасных средах""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											 
											Если ДополнительныйРеквизитВелосипед.НомерРегламента018=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 018/2011 ""О безопасности колесных транспортных средств""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													      Первая=Истина;
													
													    Стр_а.value="ТР ТС 018/2011 ""О безопасности колесных транспортных средств""";
														
												КонецЕсли;
												
												
											КонецЕсли;

											
											
										;
											КонецЕсли;
										//Конецесли;
									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивНормативово    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									
									
								КонецЕсли;
								
								
							Конеццикла;
						ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Фото") Тогда
							                   МассивНормативово=Новый Массив;
																	МассивВтавить_Упаковки=Новый Массив;

									МассивГОСТТУ=Новый Массив;	
							Для Каждого Стр_1 Из NNN.attrGroup Цикл
								
								Если Стр_1.name="Наименование товара и идентификация" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_а.name="Количество единиц употребления в потребительской упаковке" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитФото.ПотребительскаяУпаковка) Тогда
												Стр_а.value=Формат(ДополнительныеРеквизитФото.КоличествоВПотребительскойУпаковке,"ЧГ=");
												Стр_а.valueType=Строка(ДополнительныеРеквизитФото.ПотребительскаяУпаковка)
												
											КонецЕсли;
									 	//ИначеЕсли  Стр_а.name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
									Конеццикла;
								

									
								ИначеЕсли Стр_1.name="Происхождение и бренды" Тогда
									МассивАртикулов=Новый Массив;
									МассивАртикулов.Очистить();
									Перваяыла=ЛОжь;
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										
										Если  Стр_а.name="Модель / артикул производителя" Тогда
	//										Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул) Тогда
	//											Если Не Перваяыла Тогда
	//													Стр_а.value=Объект.МодельПроизводителяАртикул;
	//													Стр_а.valueType=Строка("Артикул")  ;Перваяыла=истина
	//												Иначе
	//												
	//													Стр_Н=Новый Структура;
	//													Для Каждого Стр_Стр Из Стр_а Цикл
	//														Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
	//														
	//													Конеццикла;
	//														Стр_Н.value=Объект.МодельПроизводителяАртикул;
	//													Стр_Н.valueType=Строка("Артикул") ;
	//													// Стр_1.attributes.Вставить();
	//													 МассивАртикулов.Добавить(Стр_Н);
	//													
	//													
	//
	//													
	//											Конецесли;
	//										КонецЕсли;
											Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул)
												И ДополнительныйРеквизитБелье.ДопМодельАртикулы.Количество()=0 Тогда
												Если Не Перваяыла Тогда
														Стр_а.value=Объект.МодельПроизводителяАртикул;
														Стр_а.valueType=Строка("Артикул")     ;Перваяыла=истина
													Иначе
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
															Стр_Н.value=Объект.МодельПроизводителяАртикул;
														Стр_Н.valueType=Строка("Артикул") ;
														// Стр_1.attributes.Вставить();
														 МассивАртикулов.Добавить(Стр_Н);
														
														
	
														
												Конецесли;
											КонецЕсли;
											Для Каждого Стр_22 Из ДополнительныеРеквизитФото.ДопМодельАртикулы Цикл
												
												Если Не Перваяыла Тогда
														Стр_а.value=Стр_22.МодельАртикул;
														Стр_а.valueType=Строка(Стр_22.ТипМодельАртикул)   ;Перваяыла=истина
													Иначе
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=Стр_22.МодельАртикул;
														Стр_Н.valueType=Строка(Стр_22.ТипМодельАртикул);
														// Стр_1.attributes.Вставить();
														 МассивАртикулов.Добавить(Стр_Н);
														
														
	
														
												Конецесли;
												
											Конеццикла;
											
										Конецесли;
									Конеццикла;
									
									
									Для Каждого Стр_Ст ИЗ МассивАртикулов    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;

									
									
								ИначеЕсли Стр_1.name="Потребительские свойства" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										
										
										Если  Стр_а.name="Вид товара" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитФото.ТипИзделия) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитФото.ТипИзделия);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитФото.ТипИзделия);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Материал изделия" Тогда
											Если Значениезаполнено(ДополнительныеРеквизитФото.МатериалИзделия) тогда
												
												Стр_а.value=Строка(ДополнительныеРеквизитФото.МатериалИзделия);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитФото.МатериалИзделия);
												Стр_а.valueType=Неопределено
											Конецесли;

											
										ИначеЕсли  Стр_а.name="Цвет" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитФото.Цвет) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитФото.Цвет);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитФото.Цвет);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										Конецесли;
									Конеццикла;
								
								ИначеЕсли Стр_1.name="Состав" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Комплектация" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитФото.Состав) Тогда
												Стр_а.value=ДополнительныеРеквизитФото.Состав;
											КонецЕсли;
											
										Конецесли;
									Конеццикла;
									
								ИначеЕсли Стр_1.name="Эксплуатация и условия хранения" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Срок службы" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитФото.ТипСрокаСлужбы) Тогда
												Стр_а.value=ДополнительныеРеквизитФото.СрокСлужбы;
												Стр_а.valueType=Строка(ДополнительныеРеквизитФото.ТипСрокаСлужбы)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Рекомендации по использованию" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитФото.РекомендацияПоИспользованию) Тогда
												Стр_а.value=ДополнительныеРеквизитФото.РекомендацияПоИспользованию;
											КонецЕсли;
										КонецЕсли;
									Конеццикла;
									
									
								ИначеЕсли Стр_1.name="Нормативно-сопроводительная документация" Тогда
									МассивНормативово=Новый Массив;
									МассивНормативово.Очистить();
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Номер Регламента/стандарта" Тогда
											Первая=Ложь;
											
											Если ДополнительныеРеквизитФото.НомерРегламента004=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ЕАЭС 037/2016 ""Об ограничении применения опасных веществ в изделиях электротехники и радиоэлектроники""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
												     Первая=Истина;
														
													    Стр_а.value="ТР ЕАЭС 037/2016 ""Об ограничении применения опасных веществ в изделиях электротехники и радиоэлектроники""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											Если ДополнительныеРеквизитФото.НомерРегламента005=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
												     Первая=Истина;
														
													    Стр_а.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											Если ДополнительныеРеквизитФото.НомерРегламента012=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 012/2011 ""О безопасности оборудования для работы во взрывоопасных средах""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													     Первая=Истина;
													    Стр_а.value="ТР ТС 012/2011 ""О безопасности оборудования для работы во взрывоопасных средах""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											Если ДополнительныеРеквизитФото.НомерРегламента020=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 020/2011 ""Электромагнитная совместимость технических средств""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													      Первая=Истина;
													
													    Стр_а.value="ТР ТС 020/2011 ""Электромагнитная совместимость технических средств""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											 
											
											Если ДополнительныеРеквизитФото.НомерРегламента037=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ЕАЭС 037/2016 ""Об ограничении применения опасных веществ в изделиях электротехники и радиоэлектроники""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													                     
												Иначе
													      Первая=Истина;
													
													    Стр_а.value="ТР ЕАЭС 037/2016 ""Об ограничении применения опасных веществ в изделиях электротехники и радиоэлектроники""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											 
										КонецЕсли;
										//Конецесли;
									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивНормативово    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									
									
								КонецЕсли;
								
								
							//	Если Стр_1.name="Состав" Тогда
							//		Стр_1.attributes[0].value="Мой состав";
							//	КонецЕсли;
								
							Конеццикла;
						
						
						ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Парфюм") Тогда
		                   	МассивНормативово=Новый Массив;
							МассивНормативово.Очистить();
							МассивГОСТТУ=Новый Массив;	
							МассивГОСТТУ.Очистить();
														
							Для Каждого Стр_1 Из NNN.attrGroup Цикл
								
								Если Стр_1.name="Наименование товара и идентификация" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_а.name="Заявленный объём / вес нетто" Тогда
											//Стр_а.value=объект
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.Объем)
												И Значениезаполнено(ДополнительныйРеквизитПарфюм.ЕдиницаИзмеренияОбъема) тогда
												
												Стр_а.value=формат(ДополнительныйРеквизитПарфюм.Объем,"ЧГ=ЧРД="".""");
												Стр_а.valueType=НРег(Строка(ДополнительныйРеквизитПарфюм.ЕдиницаИзмеренияОбъема))
											Конецесли;
											
										ИначеЕсли Стр_а.name="Количество единиц употребления в потребительской упаковке" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ПотребительскаяУпаковка) Тогда
												Стр_а.value=Формат(ДополнительныйРеквизитПарфюм.КоличествоВПотребительскойУпаковке,"ЧГ=");
												Стр_а.valueType=Строка(ДополнительныйРеквизитПарфюм.ПотребительскаяУпаковка)
												
											КонецЕсли;
									 	//ИначеЕсли  Стр_а.name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
									Конеццикла;
								
								ИначеЕсли Стр_1.name="Потребительские свойства" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Тип парфюмерии" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ТипПарфюмерии) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ТипПарфюмерии);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.ТипПарфюмерии);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Возраст потребителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ВозрастПотребителя) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ВозрастПотребителя);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.ВозрастПотребителя);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Пол целевого потребителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ПолЦелевогоПотребителя) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ПолЦелевогоПотребителя);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.ПолЦелевогоПотребителя);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Форма / состояние / формат" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ФормаСостояниеФормат) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ФормаСостояниеФормат);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.ФормаСостояниеФормат);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_а.name="Тип дозатора" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ТипДозатора) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ТипДозатора);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.ТипДозатора);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_а.name="Селектив" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.Селектив) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.Селектив);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.Селектив);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_а.name="Тип аромата" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ТипАромата) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ТипАромата);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.ТипАромата);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_а.name="Входящие в аромат ноты" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ВходящиеВАроматНоты) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ВходящиеВАроматНоты);;
											КонецЕсли;
											
										ИначеЕсли Стр_а.name="Дополнительные характеристики изделия (описание)" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ДополнительныеХарактеристики) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ДополнительныеХарактеристики);;
											КонецЕсли;
										Конецесли;
									Конеццикла;
									
									
								
								ИначеЕсли Стр_1.name="Эксплуатация и условия хранения" Тогда
									МассивВтавить_Упаковки=Новый Массив;
									МассивВтавить_Упаковки.Очистить();
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Срок годности" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ТипСрокаГодности) Тогда
												Стр_а.value=ДополнительныйРеквизитПарфюм.СрокГодности;
												Стр_а.valueType=Строка(ДополнительныйРеквизитПарфюм.ТипСрокаГодности)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Особые условия хранения" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ОсобыеУсловияХранения) Тогда
												Стр_а.value=ДополнительныйРеквизитПарфюм.ОсобыеУсловияХранения;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Рекомендации по использованию" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.РекомендацияПоИспользованию) Тогда
												Стр_а.value=ДополнительныйРеквизитПарфюм.РекомендацияПоИспользованию;
											КонецЕсли;
										
										ИначеЕсли  Стр_а.name="Альтернативный срок годности" Тогда
											
											Если ДополнительныйРеквизитПарфюм.ДополнительныеСрокиГодности.Количество()>0 Тогда
												
												Первая=ложь;
												Для Каждого Стр_ Из ДополнительныйРеквизитПарфюм.ДополнительныеСрокиГодности Цикл
													Если Не Первая Тогда
														Первая=Истина;
														Стр_а.value=Стр_.СрокГодности;
														Стр_а.valueType=Строка(Стр_.ТипДополнительногоСрокаГодности)
													Иначе
														
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
															Стр_Н.value=Стр_.СрокГодности;
														Стр_Н.valueType=Строка(Стр_.ТипДополнительногоСрокаГодности) ;
														// Стр_1.attributes.Вставить();
														 МассивВтавить_Упаковки.Добавить(Стр_Н);
														
														
													 КонецЕсли;
													Конеццикла;
												КонецЕсли;
										ИначеЕсли  Стр_а.name="Дополнительный срок годности" Тогда
											
											Если ДополнительныйРеквизитПарфюм.ДополнительныеСрокиГодности.Количество()>0 Тогда
												
												Первая=ложь;
												Для Каждого Стр_ Из ДополнительныйРеквизитПарфюм.ДополнительныеСрокиГодности Цикл
													Если Не Первая Тогда
														Первая=Истина;
														Стр_а.value=Стр_.СрокГодности;
														Стр_а.valueType=Строка(Стр_.ТипДополнительногоСрокаГодности)
													Иначе
														
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
															Стр_Н.value=Стр_.СрокГодности;
														Стр_Н.valueType=Строка(Стр_.ТипДополнительногоСрокаГодности) ;
														// Стр_1.attributes.Вставить();
														 МассивВтавить_Упаковки.Добавить(Стр_Н);
														
														
													 КонецЕсли;
													Конеццикла;
												КонецЕсли;
											КонецЕсли;
										//Конецесли;
									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивВтавить_Упаковки    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
								ИначеЕсли Стр_1.name="Рекомендации производителя" Тогда
									  Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_а.name="Меры предосторожности" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.МерыПредосторожности) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.МерыПредосторожности);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.МерыПредосторожности);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										КонецЕсли;
									Конеццикла;
								ИначеЕсли Стр_1.name="Характеристики товара в состоянии использования" Тогда
									  Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Ширина изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ШиринаЕдиницаИзмерения) Тогда
												Стр_а.value=ДополнительныйРеквизитПарфюм.Ширина;
												Стр_а.valueType=Строка(ДополнительныйРеквизитПарфюм.ШиринаЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Высота изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ВысотаЕдиницаИзмерения) Тогда
												Стр_а.value=ДополнительныйРеквизитПарфюм.Высота;
												Стр_а.valueType=Строка(ДополнительныйРеквизитПарфюм.ВысотаЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Глубина изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ГлубинаЕдиницаИзмерения) Тогда
												Стр_а.value=ДополнительныйРеквизитПарфюм.Глубина;
												Стр_а.valueType=Строка(ДополнительныйРеквизитПарфюм.ГлубинаЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли Стр_а.name="Тип упаковки использования" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.ТипУпаковкиИспользования) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.ТипУпаковкиИспользования);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.ТипУпаковкиИспользования);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_а.name="Материал упаковки использования" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.МатериалУпаковки) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитПарфюм.МатериалУпаковки);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитПарфюм.МатериалУпаковки);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										Конецесли;
									Конеццикла
									
									
								ИначеЕсли Стр_1.name="Нормативно-сопроводительная документация" Тогда
									МассивГОСТТУ=Новый Массив;
									МассивГОСТТУ.Очистить();
									МассивНормативово=Новый Массив;
									МассивНормативово.Очистить();;
									
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Номер Регламента/стандарта" Тогда
											Первая=Ложь;
											
											Если ДополнительныйРеквизитПарфюм.НомерРегламента005=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
												     Первая=Истина;
														
													    Стр_а.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											 
											Если ДополнительныйРеквизитПарфюм.НомерРегламента029=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 029/2012 ""Требования к безопасности пищевых добавок, ароматизаторов и технологических вспомогательных средств""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													       Первая=Истина;
													
													    Стр_а.value="ТР ТС 029/2012 ""Требования к безопасности пищевых добавок, ароматизаторов и технологических вспомогательных средств""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											

											Если ДополнительныйРеквизитПарфюм.НомерРегламента009=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=
														"ТР ТС 009/2011 ""О безопасности парфюмерно-косметической продукции""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													       Первая=Истина;
													
													    Стр_а.value=
														"ТР ТС 009/2011 ""О безопасности парфюмерно-косметической продукции""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											

																						
											
											
										ИначеЕсли  Стр_а.name="ГОСТ / ТУ / СТО" Тогда
											
											Если ДополнительныйРеквизитПарфюм.ГОСТЫИТУ.Количество()>0 Тогда
												
												Первая=ложь;
												Для Каждого Стр_ Из ДополнительныйРеквизитПарфюм.ГОСТЫИТУ Цикл
													Если Не Первая Тогда
														Первая=Истина;
														Стр_а.value=Стр_.ГОСТТУ;
														Стр_а.valueType=Строка(Стр_.ТипГОСТТУ)
													Иначе
														
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=Стр_.ГОСТТУ;
														Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивГОСТТУ.Добавить(Стр_Н);
														
														
													 КонецЕсли;
													Конеццикла;
												КонецЕсли;
											КонецЕсли;
										//Конецесли;
									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивНормативово    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивГОСТТУ    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									
									
									
									
								ИначеЕсли Стр_1.name="Состав" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Состав" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.Состав) Тогда
												Стр_а.value=ДополнительныйРеквизитПарфюм.Состав;
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Комплектация" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитПарфюм.Комплектация) Тогда
												Стр_а.value=ДополнительныйРеквизитПарфюм.Комплектация;
											КонецЕсли;
											
										Конецесли;
									Конеццикла;
										
																	
								КонецЕсли;
								
								
								
							//	Если Стр_1.name="Состав" Тогда
							//		Стр_1.attributes[0].value="Мой состав";
							//	КонецЕсли;
								
							Конеццикла;
							
							
						ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Шины") Тогда
							                   МассивНормативово=Новый Массив;
																	МассивВтавить_Упаковки=Новый Массив;

													МассивГОСТТУ=Новый Массив;	
							Для Каждого Стр_1 Из NNN.attrGroup Цикл
								
								Если Стр_1.name="Происхождение и бренды" Тогда
									МассивАртикулов=Новый Массив;
									МассивАртикулов.Очистить();
									Перваяыла=ЛОжь;
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Модель / артикул производителя" Тогда
	//										Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул) Тогда
	//											Если Не Перваяыла Тогда
	//													Стр_а.value=Объект.МодельПроизводителяАртикул;
	//													Стр_а.valueType=Строка("Артикул");Перваяыла=истина
	//												Иначе
	//												
	//													Стр_Н=Новый Структура;
	//													Для Каждого Стр_Стр Из Стр_а Цикл
	//														Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
	//														
	//													Конеццикла;
	//														Стр_Н.value=Объект.МодельПроизводителяАртикул;
	//													Стр_Н.valueType=Строка("Артикул") ;
	//													// Стр_1.attributes.Вставить();
	//													 МассивАртикулов.Добавить(Стр_Н);
	//													
	//													
	//
	//													
	//											Конецесли;
	//										КонецЕсли;
											Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул)
												И ДополнительныйРеквизитБелье.ДопМодельАртикулы.Количество()=0 Тогда
												Если Не Перваяыла Тогда
														Стр_а.value=Объект.МодельПроизводителяАртикул;
														Стр_а.valueType=Строка("Артикул")     ;Перваяыла=истина
													Иначе
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
															Стр_Н.value=Объект.МодельПроизводителяАртикул;
														Стр_Н.valueType=Строка("Артикул") ;
														// Стр_1.attributes.Вставить();
														 МассивАртикулов.Добавить(Стр_Н);
														
														
	
														
												Конецесли;
											КонецЕсли;
											Для Каждого Стр_22 Из ДополнительныеРеквизитыШины.ДопМодельАртикулы Цикл
												
												Если Не Перваяыла Тогда
														Стр_а.value=Стр_22.МодельАртикул;
														Стр_а.valueType=Строка(Стр_22.ТипМодельАртикул)  ;Перваяыла=истина
													Иначе
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=Стр_22.МодельАртикул;
														Стр_Н.valueType=Строка(Стр_22.ТипМодельАртикул);
														// Стр_1.attributes.Вставить();
														 МассивАртикулов.Добавить(Стр_Н);
														
														
	
														
												Конецесли;
												
											Конеццикла;
											
										Конецесли;
									Конеццикла;
									
									
									Для Каждого Стр_Ст ИЗ МассивАртикулов    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;

									
									
								ИначеЕсли Стр_1.name="Потребительские свойства" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Целевое использование/применение" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ЦелевоеИспользование) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитыШины.ЦелевоеИспользование);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ЦелевоеИспользование);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Ширина профиля шины (камеры), мм/дюйм" Тогда
											Если Значениезаполнено(ДополнительныеРеквизитыШины.ЕдиницаИзмерения) тогда
												
												Стр_а.value=ДополнительныеРеквизитыШины.ШиринаПрофиляШины;
												Стр_а.valueType=НРег(Строка(ДополнительныеРеквизитыШины.ЕдиницаИзмерения))
											Конецесли;

											
										ИначеЕсли  Стр_а.name="Ширина профиля шины (камеры), дюйм" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ШиринаПрофиляШиныКамерыДюйм) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитыШины.ШиринаПрофиляШиныКамерыДюйм);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ШиринаПрофиляШиныКамерыДюйм);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
											
										ИначеЕсли  Стр_а.name="Номинальное отношение высоты профиля шины к его ширине, %" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитыШины.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Тип конструкции каркаса шины" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ТипКонструкцииКаркасаШины) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитыШины.ТипКонструкцииКаркасаШины);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ТипКонструкцииКаркасаШины);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Номинальный посадочный диаметр обода, дюйм" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ПосадочныйДиамтерОбода) Тогда
												Стр_а.value=ДополнительныеРеквизитыШины.ПосадочныйДиамтерОбода;
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Номинальный посадочный диаметр обода, мм" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.НоминальныйПосадочныйДиаметрОбодаВМм) Тогда
												Стр_а.value=ДополнительныеРеквизитыШины.НоминальныйПосадочныйДиаметрОбодаВМм;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Индекс нагрузки на шину" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ИндексНагрузкиНаШину) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитыШины.ИндексНагрузкиНаШину);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ИндексНагрузкиНаШину);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Категория скорости" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.КатегорияСкорости) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитыШины.КатегорияСкорости);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.КатегорияСкорости);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Сезонность" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.Сезонность) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитыШины.Сезонность);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.Сезонность);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Тип шины по способу герметизации" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ТипШиныПоСпособуГерметизации) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитыШины.ТипШиныПоСпособуГерметизации);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ТипШиныПоСпособуГерметизации);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Наружный диаметр" Тогда
											Если Значениезаполнено(ДополнительныеРеквизитыШины.ЕдиинцаНаружногоДиаметра) тогда
												
												Стр_а.value=ДополнительныеРеквизитыШины.НаружныйДиаметр;
												Стр_а.valueType=НРег(Строка(ДополнительныеРеквизитыШины.ЕдиинцаНаружногоДиаметра))
											Конецесли;
										ИначеЕсли  Стр_а.name="Топливная экономичность" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ТопливнаяЭкономичность) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитыШины.ТопливнаяЭкономичность);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ТопливнаяЭкономичность);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Индекс сцепления с мокрой дорогой" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ИндексСцепленияСМокройДорогой) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитыШины.ИндексСцепленияСМокройДорогой);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ИндексСцепленияСМокройДорогой);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Уровень шума, в децибелах (dB)" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.УровеньШумаВДецибелах) Тогда
												Стр_а.value=ДополнительныеРеквизитыШины.УровеньШумаВДецибелах;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Рисунок протектора" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.РисунокПротектроа) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитыШины.РисунокПротектроа);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.РисунокПротектроа);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Технология RunFlat" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ТехнологияRunFlat) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитыШины.ТехнологияRunFlat);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ТехнологияRunFlat);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Усиленная шина (XL, Extra Load)" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.УсиленнаяШина) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитыШины.УсиленнаяШина);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.УсиленнаяШина);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Шины с цельнометаллическим кордом" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ШинаСЦельнометаллическимКордом) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитыШины.ШинаСЦельнометаллическимКордом);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитыШины.ШинаСЦельнометаллическимКордом);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Дополнительные характеристики изделия (описание)" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ДополнительныеХарактеристики) Тогда
												Стр_а.value=ДополнительныеРеквизитыШины.ДополнительныеХарактеристики;
											КонецЕсли;
										Конецесли;
									Конеццикла;
								
								ИначеЕсли Стр_1.name="Состав" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Комплектация" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.Состав) Тогда
												Стр_а.value=ДополнительныеРеквизитыШины.Состав;
											КонецЕсли;
											
										Конецесли;
									Конеццикла;
								ИначеЕсли Стр_1.name="Эксплуатация и условия хранения" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Срок службы" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ТипСрокаСлужбы) Тогда
												Стр_а.value=ДополнительныеРеквизитыШины.СрокСлужбы;
												Стр_а.valueType=Строка(ДополнительныеРеквизитыШины.ТипСрокаСлужбы)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Гарантийный срок, от производителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ТипГарантийногоСрока) Тогда
												Стр_а.value=ДополнительныеРеквизитыШины.ГарантийныйСрокОтПроизводителя;
												Стр_а.valueType=Строка(ДополнительныеРеквизитыШины.ТипГарантийногоСрока)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Особые условия хранения" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ОсобыеУсловияХранения) Тогда
												Стр_а.value=ДополнительныеРеквизитыШины.ОсобыеУсловияХранения;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Рекомендации по использованию" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.РекомендацияПоИспользованию) Тогда
												Стр_а.value=ДополнительныеРеквизитыШины.РекомендацияПоИспользованию;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Срок хранения" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитыШины.ТипСрокаХранения) Тогда
												Стр_а.value=ДополнительныеРеквизитыШины.СрокХранения;
												Стр_а.valueType=Строка(ДополнительныеРеквизитыШины.ТипСрокаХранения)
											КонецЕсли;
										КонецЕсли;
									Конеццикла;
									
									
								ИначеЕсли Стр_1.name="Нормативно-сопроводительная документация" Тогда
									МассивНормативово=Новый Массив;
									МассивНормативово.Очистить();
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Номер Регламента/стандарта" Тогда
											Первая=Ложь;
											
											Если ДополнительныеРеквизитыШины.НомерРегламента005=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
												     Первая=Истина;
														
													    Стр_а.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											Если ДополнительныеРеквизитыШины.НомерРегламента018=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 018/2011 ""О безопасности колесных транспортных средств""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													     Первая=Истина;
													    Стр_а.value="ТР ТС 018/2011 ""О безопасности колесных транспортных средств""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											Если ДополнительныеРеквизитыШины.НомерРегламента031=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 031/2012 ""О безопасности сельскохозяйственных и лесохозяйственных тракторов и прицепов к ним""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													      Первая=Истина;
													
													    Стр_а.value="ТР ТС 031/2012 ""О безопасности сельскохозяйственных и лесохозяйственных тракторов и прицепов к ним""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											 
											
											
											
										;
											КонецЕсли;
										//Конецесли;
									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивНормативово    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									
									
								КонецЕсли;
								
								
							//	Если Стр_1.name="Состав" Тогда
							//		Стр_1.attributes[0].value="Мой состав";
							//	КонецЕсли;
								
							Конеццикла;
						ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода") Тогда
							                   МассивНормативово=Новый Массив;
																	МассивВтавить_Упаковки=Новый Массив;

													МассивГОСТТУ=Новый Массив;	
							Для Каждого Стр_1 Из NNN.attrGroup Цикл
								
								Если Стр_1.name="Наименование товара и идентификация" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_а.name="Заявленный объем" Тогда
											//Стр_а.value=объект
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.ЗаявленныйОбъемВесНетто)
												И Значениезаполнено(ДополнительныеРеквизитВода.ЕдиницаОбъема) тогда
												
												Стр_а.value=формат(ДополнительныеРеквизитВода.ЗаявленныйОбъемВесНетто,"ЧГ=ЧРД="".""");
												Стр_а.valueType=НРег(Строка(ДополнительныеРеквизитВода.ЕдиницаОбъема))
											Конецесли;
											
										//ИначеЕсли  Стр_а.name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
									Конеццикла;
								ИначеЕсли Стр_1.name="Происхождение и бренды" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="СТМ" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.СТМ) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитВода.СТМ);
											КонецЕсли;
											
										Конецесли;
									Конеццикла;
								ИначеЕсли Стр_1.name="Потребительские свойства" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Общая минерализация" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.ОбщаяМинерализация)
												И Значениезаполнено(ДополнительныеРеквизитВода.ЕдиницаИзмеренияМинерализации) тогда
												
												Стр_а.value=формат(ДополнительныеРеквизитВода.ОбщаяМинерализация,"ЧГ=ЧРД="".""");
												Стр_а.valueType=НРег(Строка(ДополнительныеРеквизитВода.ЕдиницаИзмеренияМинерализации))
											Конецесли;
										иначеЕсли  Стр_а.name="Метод газирования" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.МетодГазирования) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитВода.МетодГазирования);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитВода.МетодГазирования);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Тип продукта" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.ТипПродукта) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитВода.ТипПродукта);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитВода.ТипПродукта);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Продукция для детского питания" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.ПродукцияДляДетскогоПитания) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитВода.ПродукцияДляДетскогоПитания);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитВода.ПродукцияДляДетскогоПитания);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
											
										ИначеЕсли  Стр_а.name="Содержит ГМО" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.СодержитГМО) Тогда
												Стр_а.value=Строка(ДополнительныеРеквизитВода.СодержитГМО);
												Стр_а.valueTitle=Строка(ДополнительныеРеквизитВода.СодержитГМО);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
											
										Конецесли;
									Конеццикла;
								
								ИначеЕсли Стр_1.name="Состав" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Состав" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.Состав) Тогда
												Стр_а.value=ДополнительныеРеквизитВода.Состав;
											КонецЕсли;
											
										Конецесли;
									Конеццикла;
								ИначеЕсли Стр_1.name="Эксплуатация и условия хранения" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Срок годности" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.ТипСрокаГодности) Тогда
												Стр_а.value=ДополнительныеРеквизитВода.СрокГодности;
												Стр_а.valueType=Строка(ДополнительныеРеквизитВода.ТипСрокаГодности)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Рекомендации по употреблению" Тогда
											Если ЗначениеЗаполнено(ДополнительныеРеквизитВода.РекомендацияПоУпотреблению) Тогда
												Стр_а.value=ДополнительныеРеквизитВода.РекомендацияПоУпотреблению;
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Альтернативный срок годности" Тогда
											
											Если ДополнительныеРеквизитВода.ДополнительныеСрокиГодности.Количество()>0 Тогда
												
												Первая=ложь;
												Для Каждого Стр_ Из ДополнительныеРеквизитВода.ДополнительныеСрокиГодности Цикл
													Если Не Первая Тогда
														Первая=Истина;
														Стр_а.value=Стр_.СрокГодности;
														Стр_а.valueType=Строка(Стр_.ТипДополнительногоСрокаГодности)
													Иначе
														
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
															Стр_Н.value=Стр_.СрокГодности;
														Стр_Н.valueType=Строка(Стр_.ТипДополнительногоСрокаГодности) ;
														// Стр_1.attributes.Вставить();
														 МассивВтавить_Упаковки.Добавить(Стр_Н);
														
														
													 КонецЕсли;
													Конеццикла;
												КонецЕсли;
												
											ИначеЕсли  Стр_а.name="Дополнительный срок годности" Тогда
											
											Если ДополнительныеРеквизитВода.ДополнительныеСрокиГодности.Количество()>0 Тогда
												
												Первая=ложь;
												Для Каждого Стр_ Из ДополнительныеРеквизитВода.ДополнительныеСрокиГодности Цикл
													Если Не Первая Тогда
														Первая=Истина;
														Стр_а.value=Стр_.СрокГодности;
														Стр_а.valueType=Строка(Стр_.ТипДополнительногоСрокаГодности)
													Иначе
														
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
															Стр_Н.value=Стр_.СрокГодности;
														Стр_Н.valueType=Строка(Стр_.ТипДополнительногоСрокаГодности) ;
														// Стр_1.attributes.Вставить();
														 МассивВтавить_Упаковки.Добавить(Стр_Н);
														
														
													 КонецЕсли;
													Конеццикла;
												КонецЕсли;
											КонецЕсли;
										//Конецесли;
									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивВтавить_Упаковки    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
								ИначеЕсли Стр_1.name="Нормативно-сопроводительная документация" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Номер Регламента/стандарта" Тогда
											Первая=Ложь;
											
											Если ДополнительныеРеквизитВода.НомерРегламента005=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
												     Первая=Истина;
														
													    Стр_а.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											Если ДополнительныеРеквизитВода.НомерРегламента021=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 021/2011 ""О безопасности пищевой продукции""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													     Первая=Истина;
													    Стр_а.value="ТР ТС 021/2011 ""О безопасности пищевой продукции""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											Если ДополнительныеРеквизитВода.НомерРегламента027=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 027/2012 ""О безопасности отдельных видов специализированной пищевой продукции, в том числе диетического лечебного и диетического профилактического питания""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													      Первая=Истина;
													
													    Стр_а.value="ТР ТС 027/2012 ""О безопасности отдельных видов специализированной пищевой продукции, в том числе диетического лечебного и диетического профилактического питания""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											

											Если ДополнительныеРеквизитВода.НомерРегламента029=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 029/2012 ""Требования к безопасности пищевых добавок, ароматизаторов и технологических вспомогательных средств""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													       Первая=Истина;
													
													    Стр_а.value="ТР ТС 029/2012 ""Требования к безопасности пищевых добавок, ароматизаторов и технологических вспомогательных средств""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											

											
											
											
										ИначеЕсли  Стр_а.name="ГОСТ / ТУ / СТО" Тогда
											
											Если ДополнительныеРеквизитВода.ГОСТЫИТУ.Количество()>0 Тогда
												
												Первая=ложь;
												Для Каждого Стр_ Из ДополнительныеРеквизитВода.ГОСТЫИТУ Цикл
													Если Не Первая Тогда
														Первая=Истина;
														Стр_а.value=Стр_.ГОСТТУ;
														Стр_а.valueType=Строка(Стр_.ТипГОСТТУ)
													Иначе
														
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=Стр_.ГОСТТУ;
														Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивГОСТТУ.Добавить(Стр_Н);
														
														
													 КонецЕсли;
													Конеццикла;
												КонецЕсли;
											КонецЕсли;
										//Конецесли;
									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивНормативово    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивГОСТТУ    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
								КонецЕсли;
								
								
							//	Если Стр_1.name="Состав" Тогда
							//		Стр_1.attributes[0].value="Мой состав";
							//	КонецЕсли;
								
							Конеццикла;
							
						ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Молоко") Тогда
		                   	МассивНормативово=Новый Массив;
							МассивНормативово.Очистить();
							МассивАллергены=Новый Массив;
							МассивАллергены.Очистить();
							МассивГОСТТУ=Новый Массив;	
		МассивГОСТТУ.Очистить();
														
							Для Каждого Стр_1 Из NNN.attrGroup Цикл
								
								Если Стр_1.name="Наименование товара и идентификация" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_а.name="Заявленный объём / вес нетто" Тогда
											//Стр_а.value=объект
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ЗаявленныйОбъемВесНетто)
												И Значениезаполнено(ДополнителныеРеквизитМолоко.ЕдиницаОбъема) тогда
												
												Стр_а.value=формат(ДополнителныеРеквизитМолоко.ЗаявленныйОбъемВесНетто,"ЧГ=ЧРД="".""");
												Стр_а.valueType=НРег(Строка(ДополнителныеРеквизитМолоко.ЕдиницаОбъема))
											Конецесли;
											
										ИначеЕсли Стр_а.name="Базовая единица измерения" Тогда
											Если ДополнителныеРеквизитМолоко.ТоварВесовой Тогда
												Стр_а.value="КГ";
											Иначе
												Стр_а.value="ШТ";
											КонецЕсли;
										ИначеЕсли Стр_а.name="Количество единиц употребления в потребительской упаковке" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка) Тогда
												Стр_а.value=Формат(ДополнителныеРеквизитМолоко.КоличествоВПотребительскойУпаковке,"ЧГ=");
												Стр_а.valueType=Строка(ДополнителныеРеквизитМолоко.ПотребительскаяУпаковка)
												
											КонецЕсли;
									 	//ИначеЕсли  Стр_а.name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
									Конеццикла;
								
								ИначеЕсли Стр_1.name="Происхождение и бренды" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="СТМ" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.СТМ) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.СТМ);
											КонецЕсли;
											
										Конецесли;
									Конеццикла;
																
								ИначеЕсли Стр_1.name="Потребительские свойства" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Тип продукта" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ТипПродукта) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ТипПродукта);
												Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ТипПродукта);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Происхождение сырья" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ПроисхождениеСырья) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ПроисхождениеСырья);
												Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ПроисхождениеСырья);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Жирность, %" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.Жирность) Тогда
												Стр_а.value=формат(ДополнителныеРеквизитМолоко.Жирность,"ЧГ=ЧРД="".""");;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Продукция для детского питания" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ПродукцияДляДетскогоПитания) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ПродукцияДляДетскогоПитания);
												Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ПродукцияДляДетскогоПитания);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Содержит ГМО" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.СодержитГМО) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.СодержитГМО);
												Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.СодержитГМО);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_а.name="Пищевые добавки / ароматизаторы" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ПищевыеДобавкиАроматизаторы) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ПищевыеДобавкиАроматизаторы);;
											КонецЕсли;
										ИначеЕсли Стр_а.name="Вкус" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.Вкус) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.Вкус);;
											КонецЕсли;
											
										ИначеЕсли Стр_а.name="Заменитель молочного жира" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ЗаменительМолочногоЖира) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ЗаменительМолочногоЖира);
												Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ЗаменительМолочногоЖира);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_а.name="Тип обработки молока" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ТипОбработкиМолока) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ТипОбработкиМолока);
												Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ТипОбработкиМолока);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_а.name="Целевой возраст" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ЦелевойВозраст) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ЦелевойВозраст);
												Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ЦелевойВозраст);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_а.name="Тип хранения" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ТипХранения) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ТипХранения);
												Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ТипХранения);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_а.name="Органический продукт" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ОрганическийПродукт) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ОрганическийПродукт);
												Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ОрганическийПродукт);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_а.name="Содержит пальмовое масло" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.СодержитПальмовоеМасло) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.СодержитПальмовоеМасло);
												Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.СодержитПальмовоеМасло);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли Стр_а.name="Витаминизация" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.Витаминизация) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.Витаминизация);
												Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.Витаминизация);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли Стр_а.name="Аллергены" Тогда
											
											 Если ДополнителныеРеквизитМолоко.Аллергены.Количество()>0 Тогда
												
												Первая=ложь;
												Для Каждого Стр_ Из ДополнителныеРеквизитМолоко.Аллергены Цикл
													Если Не Первая Тогда
														Первая=Истина;
														Стр_а.value=Строка(Стр_.Аллерген);
														Стр_а.valueTitle=Строка(Стр_.Аллерген);
														Стр_а.valueType=Неопределено
													Иначе
														
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=Строка(Стр_.Аллерген);
														Стр_Н.valueTitle=Строка(Стр_.Аллерген);
														Стр_Н.valueType=Неопределено;
														// Стр_1.attributes.Вставить();
														МассивАллергены.Добавить(Стр_Н);
														
														
													 КонецЕсли;
													Конеццикла;
												КонецЕсли;
											

											
										Конецесли;
									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивАллергены    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);
									Конеццикла;
									
								ИначеЕсли Стр_1.name="Пищевая и энергетическая ценности" Тогда
									
									МассивЭнергетиков=Новый Массив;
									МассивНормативово.Очистить();
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_а.name="Белки" Тогда
											Если ЗначениеЗАполнено(ДополнителныеРеквизитМолоко.БелкиЕдиницаИзмерения) тогда
												
												Стр_а.value=ДополнителныеРеквизитМолоко.Белки;
												Стр_а.valueType=Строка(ДополнителныеРеквизитМолоко.БелкиЕдиницаИзмерения)

											КонецЕсли;
											
										ИначеЕсли Стр_а.name="Жиры" Тогда
											Если ЗначениеЗАполнено(ДополнителныеРеквизитМолоко.ЖирыЕдиницаИзмерения) тогда
												
												Стр_а.value=ДополнителныеРеквизитМолоко.Жиры;
												Стр_а.valueType=Строка(ДополнителныеРеквизитМолоко.ЖирыЕдиницаИзмерения)

											КонецЕсли;
											
										ИначеЕсли Стр_а.name="Углеводы" Тогда
											Если ЗначениеЗАполнено(ДополнителныеРеквизитМолоко.УглеводыЕдиницаИзмерения) тогда
												
												Стр_а.value=ДополнителныеРеквизитМолоко.Углеводы;
												Стр_а.valueType=Строка(ДополнителныеРеквизитМолоко.УглеводыЕдиницаИзмерения)

											КонецЕсли;
											
										ИначеЕсли Стр_а.name="Энергетическая ценность" Тогда
											
											Если ДополнителныеРеквизитМолоко.ЭнергетическаяЦенность.Количество()>0 Тогда
												
												Первая=ложь;
												Для Каждого Стр_ Из ДополнителныеРеквизитМолоко.ЭнергетическаяЦенность Цикл
													Если Не Первая Тогда
														Первая=Истина;
														Стр_а.value=Строка(Стр_.ЭнергетическаяЦенность);
														Стр_а.valueType=Строка(Стр_.ЕдиницаИзмерения)
													Иначе
														
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=Строка(Стр_.ЭнергетическаяЦенность);
														Стр_Н.valueType=Строка(Стр_.ЕдиницаИзмерения);
														// Стр_1.attributes.Вставить();
														МассивЭнергетиков.Добавить(Стр_Н);
														
														
													 КонецЕсли;
													Конеццикла;
												КонецЕсли;
											

											

											
										КонецЕсли;
									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивЭнергетиков    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);
									Конеццикла;

								ИначеЕсли Стр_1.name="Эксплуатация и условия хранения" Тогда
									МассивВтавить_Упаковки=Новый Массив;
									МассивВтавить_Упаковки.Очистить();
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Срок годности" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ТипСрокаГодности) Тогда
												Стр_а.value=ДополнителныеРеквизитМолоко.СрокГодности;
												Стр_а.valueType=Строка(ДополнителныеРеквизитМолоко.ТипСрокаГодности)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Особые условия хранения" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ОсобыеУсловияХранения) Тогда
												Стр_а.value=ДополнителныеРеквизитМолоко.ОсобыеУсловияХранения;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Рекомендации по употреблению" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.РекомендацияПоУпотреблению) Тогда
												Стр_а.value=ДополнителныеРеквизитМолоко.РекомендацияПоУпотреблению;
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Альтернативный срок годности" Тогда
											
											Если ДополнителныеРеквизитМолоко.ДополнительныеСрокиГодности.Количество()>0 Тогда
												
												Первая=ложь;
												Для Каждого Стр_ Из ДополнителныеРеквизитМолоко.ДополнительныеСрокиГодности Цикл
													Если Не Первая Тогда
														Первая=Истина;
														Стр_а.value=Стр_.СрокГодности;
														Стр_а.valueType=Строка(Стр_.ТипДополнительногоСрокаГодности)
													Иначе
														
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
															Стр_Н.value=Стр_.СрокГодности;
														Стр_Н.valueType=Строка(Стр_.ТипДополнительногоСрокаГодности) ;
														// Стр_1.attributes.Вставить();
														 МассивВтавить_Упаковки.Добавить(Стр_Н);
														
														
													 КонецЕсли;
													Конеццикла;
												КонецЕсли;
												
											ИначеЕсли  Стр_а.name="Дополнительный срок годности" Тогда
											
											Если ДополнителныеРеквизитМолоко.ДополнительныеСрокиГодности.Количество()>0 Тогда
												
												Первая=ложь;
												Для Каждого Стр_ Из ДополнителныеРеквизитМолоко.ДополнительныеСрокиГодности Цикл
													Если Не Первая Тогда
														Первая=Истина;
														Стр_а.value=Стр_.СрокГодности;
														Стр_а.valueType=Строка(Стр_.ТипДополнительногоСрокаГодности)
													Иначе
														
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
															Стр_Н.value=Стр_.СрокГодности;
														Стр_Н.valueType=Строка(Стр_.ТипДополнительногоСрокаГодности) ;
														// Стр_1.attributes.Вставить();
														 МассивВтавить_Упаковки.Добавить(Стр_Н);
														
														
													 КонецЕсли;
													Конеццикла;
												КонецЕсли;
											КонецЕсли;
										//Конецесли;
									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивВтавить_Упаковки    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									
									
									
									
								ИначеЕсли Стр_1.name="Нормативно-сопроводительная документация" Тогда
									МассивГОСТТУ=Новый Массив;
									МассивГОСТТУ.Очистить();
									МассивНормативово=Новый Массив;
									МассивНормативово.Очистить();;
									
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Номер Регламента/стандарта" Тогда
											Первая=Ложь;
											
											Если ДополнителныеРеквизитМолоко.НомерРегламента005=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
												     Первая=Истина;
														
													    Стр_а.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											Если ДополнителныеРеквизитМолоко.НомерРегламента021=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 021/2011 ""О безопасности пищевой продукции""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													     Первая=Истина;
													    Стр_а.value="ТР ТС 021/2011 ""О безопасности пищевой продукции""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											Если ДополнителныеРеквизитМолоко.НомерРегламента027=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 027/2012 ""О безопасности отдельных видов специализированной пищевой продукции, в том числе диетического лечебного и диетического профилактического питания""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													      Первая=Истина;
													
													    Стр_а.value="ТР ТС 027/2012 ""О безопасности отдельных видов специализированной пищевой продукции, в том числе диетического лечебного и диетического профилактического питания""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											

											Если ДополнителныеРеквизитМолоко.НомерРегламента029=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 029/2012 ""Требования к безопасности пищевых добавок, ароматизаторов и технологических вспомогательных средств""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													       Первая=Истина;
													
													    Стр_а.value="ТР ТС 029/2012 ""Требования к безопасности пищевых добавок, ароматизаторов и технологических вспомогательных средств""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											

											Если ДополнителныеРеквизитМолоко.НомерРегламента033=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=
														"ТР ТС 033/2013 ""О безопасности молока и молочной продукции""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													       Первая=Истина;
													
													    Стр_а.value=
														"ТР ТС 033/2013 ""О безопасности молока и молочной продукции""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											

											Если ДополнителныеРеквизитМолоко.НомерРегламента022=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=
														"ТР ТС 022/2011 ""Пищевая продукция в части ее маркировки""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													       Первая=Истина;
													
													    Стр_а.value=
														"ТР ТС 022/2011 ""Пищевая продукция в части ее маркировки""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											Если ДополнителныеРеквизитМолоко.НомерРегламента024=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=
														"ТР ТС 024/2011 ""Технический регламент на масложировую продукцию""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													       Первая=Истина;
													
													    Стр_а.value=
														"ТР ТС 024/2011 ""Технический регламент на масложировую продукцию""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											
										ИначеЕсли  Стр_а.name="ГОСТ / ТУ / СТО" Тогда
											
											Если ДополнителныеРеквизитМолоко.ГОСТЫИТУ.Количество()>0 Тогда
												
												Первая=ложь;
												Для Каждого Стр_ Из ДополнителныеРеквизитМолоко.ГОСТЫИТУ Цикл
													Если Не Первая Тогда
														Первая=Истина;
														Стр_а.value=Стр_.ГОСТТУ;
														Стр_а.valueType=Строка(Стр_.ТипГОСТТУ)
													Иначе
														
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=Стр_.ГОСТТУ;
														Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивГОСТТУ.Добавить(Стр_Н);
														
														
													 КонецЕсли;
													Конеццикла;
												КонецЕсли;
											КонецЕсли;
										//Конецесли;
									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивНормативово    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивГОСТТУ    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									
									
									
									
									
									
									
									
									
									
									
									
								ИначеЕсли Стр_1.name="Состав" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Состав" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.Состав) Тогда
												Стр_а.value=ДополнителныеРеквизитМолоко.Состав;
											КонецЕсли;
											
										Конецесли;
									Конеццикла;
								ИначеЕсли Стр_1.name="Данные для ФГИС ВетИС" Тогда
									
									
									МассивПлощадок=Новый Массив;
									МассивБелка=Новый массив;
									МассивЖиров=Новый Массив;
									
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Подлежит ветеринарному контролю (надзору)" Тогда
											//Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ИдентификаторТовараВФГИСМеркурий) Тогда
											
											Если ДополнителныеРеквизитМолоко.ПодлежитВетеринарномуКонтролю ТОгда
												ЗапишемПодл="ДА"
											Иначе
												ЗапишемПодл="НЕТ"
												
											Конецесли;
											Стр_а.value=Строка(ЗапишемПодл);
											Стр_а.valueTitle=Строка(ЗапишемПодл);
											Стр_а.valueType=Неопределено ;
											
											
											
										ИначеЕсли Стр_а.name="Тип продукции" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ТипПродукции) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ТипПродукции);
											КонецЕсли;
										ИначеЕсли Стр_а.name="Продукция" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.Продукция) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.Продукция);
											КонецЕсли;
											
										ИначеЕсли Стр_а.name="Вид продукции" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ВидПродукции) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ВидПродукции);
											КонецЕсли;
										ИначеЕсли Стр_а.name="Категория продукции" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.КатегорияПродукции) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.КатегорияПродукции);
											КонецЕсли;
										ИначеЕсли Стр_а.name="ГОСТ" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ТипГОСТ) Тогда
												Стр_а.valueType=Строка(ДополнителныеРеквизитМолоко.ТипГОСТ)
											Конецесли;
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ГОСТ) Тогда
												Стр_а.value=ДополнителныеРеквизитМолоко.ГОСТ
											Конецесли;
										ИначеЕсли Стр_а.name="ХС-производитель" Тогда
											
											Если ЗначениеЗаполненО(ДополнителныеРеквизитМолоко.ХСПроизводитель) Тогда
												СтруктурК=ПолучитьИнфуПоХСИПл(ДополнителныеРеквизитМолоко.ХСПроизводитель);
												Стр_а.value=СтруктурК.ГУИД;
												Стр_а.valueTitle=СтруктурК.Наименование;
												
												
											Конецесли;
											
											
										ИначеЕсли Стр_а.name="Предприятие-производитель" Тогда
											ПерваяП=Ложь;
											Для Каждого Стр_222 Из ДополнителныеРеквизитМолоко.ПредприятияПроизводители Цикл
												Если Не ЗначениеЗАполнено(Стр_222.ПредприятиеПроизводитель) ТОгда
													Продолжить;
												Конецесли;
												СтруктурК=ПолучитьИнфуПоХСИПл(Стр_222.ПредприятиеПроизводитель);
												Если ПерваяП=Ложь Тогда
													Стр_а.value=СтруктурК.ГУИД;
													Стр_а.valueTitle=СтруктурК.Наименование;
													ПерваяП=Истина;
												 
												Иначе
													Стр_Н=Новый Структура;
													Для Каждого Стр_Стр Из Стр_а Цикл
														Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
													Конеццикла;
													Стр_Н.value=СтруктурК.ГУИД;
													Стр_Н.valueTitle=СтруктурК.Наименование;
													 МассивПлощадок.Добавить(Стр_Н);
													
													
												Конецесли;
											Конеццикла;
											
										ИначеЕсли Стр_а.name="Массовая доля белка, %" Тогда
											ПерваяП=Ложь;
											Для Каждого Стр_222 Из ДополнителныеРеквизитМолоко.МассоваяДоляБелка Цикл
												Если Не ЗначениеЗАполнено(Стр_222.Вид) 
													И Не ЗначениеЗАполнено(Стр_222.МассоваяДоляБелка)
													
													ТОгда
													Продолжить;
												Конецесли;

												
												Если ПерваяП=Ложь Тогда
													Стр_а.value=Формат(Стр_222.МассоваяДоляБелка,"ЧГ=");
													Стр_а.valueType=Строка(Стр_222.Вид);
													
													ПерваяП=Истина;
												Иначе
													Стр_Н=Новый Структура;
													Для Каждого Стр_Стр Из Стр_а Цикл
														Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
													Конеццикла;
													Стр_Н.value=Формат(Стр_222.МассоваяДоляБелка,"ЧГ=");
													Стр_Н.valueType=Строка(Стр_222.Вид);
													 МассивБелка.Добавить(Стр_Н);
													
													
												Конецесли;
											Конеццикла;
											
											
																				//	
										ИначеЕсли Стр_а.name="Массовая доля жира, %" Тогда
											
											ПерваяП=Ложь;
											Для Каждого Стр_222 Из ДополнителныеРеквизитМолоко.МассоваяДоляЖира Цикл
												Если Не ЗначениеЗАполнено(Стр_222.Вид) 
													И Не ЗначениеЗАполнено(Стр_222.МассоваяДоляЖира)
													
													ТОгда
													Продолжить;
												Конецесли;

												
												Если ПерваяП=Ложь Тогда
													Стр_а.value=Формат(Стр_222.МассоваяДоляЖира,"ЧГ=");
													Стр_а.valueType=Строка(Стр_222.Вид);
													
													ПерваяП=Истина;
												Иначе
													Стр_Н=Новый Структура;
													Для Каждого Стр_Стр Из Стр_а Цикл
														Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
													Конеццикла;
													Стр_Н.value=Формат(Стр_222.МассоваяДоляЖира,"ЧГ=");
													Стр_Н.valueType=Строка(Стр_222.Вид);
													 МассивЖиров.Добавить(Стр_Н);
													
													
												Конецесли;
											Конеццикла;
											
										Конецесли;
									Конеццикла;
										
									Для Каждого Стр_Ст ИЗ МассивПлощадок    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);
									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивБелка    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивЖиров    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									
												
									
								ИначеЕсли Стр_1.name="ФГИС ВетИС" Тогда
									
									МассивИДГУИДВ=Новый Массив;
									//ДополнителныеРеквизитМолоко.ИдентификаторыТовараВФГИСМеркурий.Очистить();
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Идентификатор товара в ФГИС ВетИС (GUID ProductItem)" Тогда
											
											ПерваяП=Ложь;
											Для Каждого Стр_222 Из ДополнителныеРеквизитМолоко.ИдентификаторыТовараВФГИСМеркурий Цикл
												Если Не ЗначениеЗАполнено(Стр_222.ИдентификаторТовараВФГИСМеркурий) 
													ТОгда
													Продолжить;
												Конецесли;

												
												Если ПерваяП=Ложь Тогда
													Стр_а.value=Стр_222.ИдентификаторТовараВФГИСМеркурий;
													//Стр_а.valueType=Строка(Стр_222.Вид);
													
													ПерваяП=Истина;
												Иначе
													Стр_Н=Новый Структура;
													Для Каждого Стр_Стр Из Стр_а Цикл
														Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
													Конеццикла;
													Стр_Н.value=Стр_222.ИдентификаторТовараВФГИСМеркурий;
													МассивИДГУИДВ.Добавить(Стр_Н);
													
													
												Конецесли;
											Конеццикла;

											//Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ИдентификаторТовараВФГИСМеркурий) Тогда
											//	Стр_а.value=ДополнителныеРеквизитМолоко.ИдентификаторТовараВФГИСМеркурий;
											//КонецЕсли;
											
										Конецесли;
									Конеццикла;
									
									Для Каждого Стр_Ст ИЗ МассивИДГУИДВ    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);
									Конеццикла;
									
										
								ИначеЕсли Стр_1.name="Дополнительная информация" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Заявление о жирности продукта" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ЗаявленияОЖирностиМолока) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ЗаявленияОЖирностиМолока);
												Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ЗаявленияОЖирностиМолока);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Обогащающие компоненты" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ОбогащающиеКомпоненты) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ОбогащающиеКомпоненты);
												Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ОбогащающиеКомпоненты);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Социально значимый товар" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.СоциальноЗначимыйТовар) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.СоциальноЗначимыйТовар);
												Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.СоциальноЗначимыйТовар);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Заявление о пригодности для диетического питания" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ЗаявлениеОПригодностиДляДиетическогоПитания) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ЗаявлениеОПригодностиДляДиетическогоПитания);
												Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ЗаявлениеОПригодностиДляДиетическогоПитания);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Особенности питания" Тогда
											Если ЗначениеЗаполнено(ДополнителныеРеквизитМолоко.ОсобенностиПитания) Тогда
												Стр_а.value=Строка(ДополнителныеРеквизитМолоко.ОсобенностиПитания);
												Стр_а.valueTitle=Строка(ДополнителныеРеквизитМолоко.ОсобенностиПитания);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										Конецесли;
									Конеццикла;
									
									
								КонецЕсли;
								
								
								
							//	Если Стр_1.name="Состав" Тогда
							//		Стр_1.attributes[0].value="Мой состав";
							//	КонецЕсли;
								
							Конеццикла;
							
							
						ИначеЕсли Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Обувь") Тогда
							   МассивТиповМатериалов=Новый Массив;
								МассивТиповМатериалов.Очистить();
								
								МассивАртикулов=Новый Массив;
								МассивАртикулов.Очистить();
							Для Каждого Стр_1 Из NNN.attrGroup Цикл
								
								Если Стр_1.name="Происхождение и бренды" Тогда        
										Перваяыла=ЛОжь;
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										
										Если  Стр_а.name="СТМ" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.СТМ) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитОбувь.СТМ);
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Модель / артикул производителя" Тогда
	//										Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул) Тогда
	//											Если Не Перваяыла Тогда
	//													Стр_а.value=Объект.МодельПроизводителяАртикул;
	//													Стр_а.valueType=Строка("Артикул")   ;Перваяыла=истина
	//												Иначе
	//												
	//													Стр_Н=Новый Структура;
	//													Для Каждого Стр_Стр Из Стр_а Цикл
	//														Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
	//														
	//													Конеццикла;
	//														Стр_Н.value=Объект.МодельПроизводителяАртикул;
	//													Стр_Н.valueType=Строка("Артикул") ;
	//													// Стр_1.attributes.Вставить();
	//													 МассивАртикулов.Добавить(Стр_Н);
	//													
	//													
	//
	//													
	//											Конецесли;
	//										КонецЕсли;
											Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул)
												И ДополнительныйРеквизитБелье.ДопМодельАртикулы.Количество()=0 Тогда
												Если Не Перваяыла Тогда
														Стр_а.value=Объект.МодельПроизводителяАртикул;
														Стр_а.valueType=Строка("Артикул")     ;Перваяыла=истина
													Иначе
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
															Стр_Н.value=Объект.МодельПроизводителяАртикул;
														Стр_Н.valueType=Строка("Артикул") ;
														// Стр_1.attributes.Вставить();
														 МассивАртикулов.Добавить(Стр_Н);
														
														
	
														
												Конецесли;
											КонецЕсли;
											Для Каждого Стр_22 Из ДополнительныйРеквизитОбувь.ДопМодельАртикулы Цикл
												
												Если Не Перваяыла Тогда
														Стр_а.value=Стр_22.МодельАртикул;
														Стр_а.valueType=Строка(Стр_22.ТипМодельАртикул) ;
														Перваяыла=истина;
													Иначе
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=Стр_22.МодельАртикул;
														Стр_Н.valueType=Строка(Стр_22.ТипМодельАртикул);
														// Стр_1.attributes.Вставить();
														 МассивАртикулов.Добавить(Стр_Н);
														
														
	
														
												Конецесли;
												
											Конеццикла;
											
										Конецесли;
									Конеццикла;
									
									
									Для Каждого Стр_Ст ИЗ МассивАртикулов    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
																
								ИначеЕсли Стр_1.name="Потребительские свойства" Тогда 
									МассивРазмерВИных=Новый Массив;
									МассивРазмерВИных.Очистить();
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Вид обуви" Тогда
											Если ЗначениеЗаполнено(Объект.ВидОбуви) Тогда
												Стр_а.value=Врег(Строка(Объект.ВидОбуви));
												Стр_а.valueTitle=Врег(Строка(Объект.ВидОбуви));
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Цвет" Тогда
											Если ЗначениеЗаполнено(Объект.Цвет) Тогда
												Стр_а.value=Врег(Строка(Объект.Цвет));
												Стр_а.valueTitle=Врег(Строка(Объект.Цвет));
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Целевой возраст" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ЦелевойВозраст) Тогда
												Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ЦелевойВозраст));
												Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ЦелевойВозраст));
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Пол целевого потребителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ПолЦелевогоПотребителя) Тогда
												Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ПолЦелевогоПотребителя));
												Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ПолЦелевогоПотребителя));
												Стр_а.valueType=Неопределено
												
											ИначеЕсли ЗначениеЗаполнено(Объект.Пол) Тогда
												Стр_а.value=Врег(Строка(Объект.Пол));
												Стр_а.valueTitle=Врег(Строка(Объект.Пол));
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Размер в штихмассовой системе" Тогда
											Если ЗначениеЗаполнено(Объект.Размер) Тогда
												Стр_а.value=Врег(Строка(Объект.Размер));
												Стр_а.valueTitle=Врег(Строка(Объект.Размер));
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Размер в метрической системе, мм" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.РазмерВМетрическойСистемемм) Тогда
												Стр_а.value=Врег(Строка(Объект.РазмерВМетрическойСистемемм));
												Стр_а.valueTitle=Врег(Строка(Объект.РазмерВМетрическойСистемемм));
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
											
										ИначеЕсли  Стр_а.name="Размер в иных системах измерения" Тогда
											
											Если ДополнительныйРеквизитОбувь.РазмерВИныхСистемахИзмерения.Количество()>0 Тогда
													
													Первая=ложь;
													Для Каждого Стр_ Из ДополнительныйРеквизитОбувь.РазмерВИныхСистемахИзмерения Цикл
														Если Не Первая Тогда
															Первая=Истина;
															Стр_а.value=Стр_.Размер;
															Стр_а.valueType=Строка(Стр_.Страна)
														Иначе
															
															Стр_Н=Новый Структура;
															Для Каждого Стр_Стр Из Стр_а Цикл
																Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
																
															Конеццикла;
																Стр_Н.value=Стр_.Размер;
															Стр_Н.valueType=Строка(Стр_.Страна) ;
															// Стр_1.attributes.Вставить();
															 МассивРазмерВИных.Добавить(Стр_Н);
															
										
														 КонецЕсли;
													Конеццикла;
											КонецЕсли;
																									
										ИначеЕсли  Стр_а.name="Длина стельки, см" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ДлинаСтелькисм) тогда
												Стр_а.value=ДополнительныйРеквизитОбувь.ДлинаСтелькисм;
											Конецесли;
											
																									
										ИначеЕсли  Стр_а.name="Размер полноты обуви" Тогда
											
											Если ЗначениеЗАполнено(ДополнительныйРеквизитОбувь.РазмерПолнотыОбувиСистема) Тогда
													Стр_а.value=ДополнительныйРеквизитОбувь.РазмерПолнотыОбуви;
													Стр_а.valueType=Строка(ДополнительныйРеквизитОбувь.РазмерПолнотыОбувиСистема)
											Конецесли;
										ИначеЕсли  Стр_а.name="Наличие каблука" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.НаличиеКаблука) Тогда
												Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.НаличиеКаблука));
												Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.НаличиеКаблука));
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Высота каблука" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ВысотаКаблука) Тогда
												Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ВысотаКаблука));
												Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ВысотаКаблука));
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Цвет фурнитуры" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ЦветФурнитуры) Тогда
												Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ЦветФурнитуры));
												Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ЦветФурнитуры));
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Цвет фурнитуры" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ЦветФурнитуры) Тогда
												Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ЦветФурнитуры));
												Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ЦветФурнитуры));
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Водонепроницаемая/Водостойкая" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ВодонепроницаемаяВодостойкая) Тогда
												Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ВодонепроницаемаяВодостойкая));
												Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ВодонепроницаемаяВодостойкая));
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Имеет ли гладкую подошву" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ИмеетЛиГладкуюПодошву) Тогда
												Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ИмеетЛиГладкуюПодошву));
												Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ИмеетЛиГладкуюПодошву));
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Тип частично закрытого верха" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ТипЧастичноЗакрытогоВерха) Тогда
												Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ТипЧастичноЗакрытогоВерха));
												Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ТипЧастичноЗакрытогоВерха));
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Тип застежки" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ТипЗастежки) Тогда
												Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.ТипЗастежки));
												Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.ТипЗастежки));
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Сезонность" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.Сезонность) Тогда
												Стр_а.value=Врег(Строка(ДополнительныйРеквизитОбувь.Сезонность));
												Стр_а.valueTitle=Врег(Строка(ДополнительныйРеквизитОбувь.Сезонность));
												Стр_а.valueType=Неопределено
											ИначеЕсли ЗначениеЗаполнено(Объект.Сезон) Тогда
												Стр_а.value=Врег(Строка(Объект.Сезон));
												Стр_а.valueTitle=Врег(Строка(Объект.Сезон));
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										Конецесли;
									Конеццикла;
										Для Каждого Стр_Ст ИЗ МассивРазмерВИных    Цикл
											Стр_1.attributes.Добавить(Стр_Ст);

										Конеццикла;

								ИначеЕсли Стр_1.name="Состав" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Материал верха" Тогда
											Если ЗначениеЗаполнено(Объект.МатериалВерха) Тогда
												Стр_а.value=Врег(Строка(Объект.МатериалВерха));
												Стр_а.valueTitle=Врег(Строка(Объект.МатериалВерха));
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Материал верха, %" Тогда
											
											Если ДополнительныйРеквизитОбувь.МатериалВерха.Количество()>0 Тогда
													
													Первая=ложь;
													Для Каждого Стр_ Из ДополнительныйРеквизитОбувь.МатериалВерха Цикл
														Если Не Первая Тогда
															Первая=Истина;
															Стр_а.value=Стр_.МатериалВверха;
															Стр_а.valueType=Строка(Стр_.Процент)
														Иначе
															
															Стр_Н=Новый Структура;
															Для Каждого Стр_Стр Из Стр_а Цикл
																Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
																
															Конеццикла;
																Стр_Н.value=Стр_.МатериалВверха;
															Стр_Н.valueType=Строка(Стр_.Процент) ;
															// Стр_1.attributes.Вставить();
															 МассивТиповМатериалов.Добавить(Стр_Н);
															
										
														 КонецЕсли;
													Конеццикла;
												КонецЕсли;	
										ИначеЕсли  Стр_а.name="Материал подкладки" Тогда
											Если ЗначениеЗаполнено(Объект.МатериалПодкладки) Тогда
												Стр_а.value=Врег(Строка(Объект.МатериалПодкладки));
												Стр_а.valueTitle=Врег(Строка(Объект.МатериалПодкладки));
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Материал подкладки, %" Тогда
											Если ДополнительныйРеквизитОбувь.МатериалПодкладки.Количество()>0 Тогда
													
													Первая=ложь;
													Для Каждого Стр_ Из ДополнительныйРеквизитОбувь.МатериалПодкладки Цикл
														Если Не Первая Тогда
															Первая=Истина;
															Стр_а.value=Стр_.МатериалПодкладки;
															Стр_а.valueType=Строка(Стр_.Процент)
														Иначе
															
															Стр_Н=Новый Структура;
															Для Каждого Стр_Стр Из Стр_а Цикл
																Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
																
															Конеццикла;
																Стр_Н.value=Стр_.МатериалПодкладки;
															Стр_Н.valueType=Строка(Стр_.Процент) ;
															// Стр_1.attributes.Вставить();
															 МассивТиповМатериалов.Добавить(Стр_Н);
															
										
														 КонецЕсли;
													Конеццикла;
												КонецЕсли;	
										ИначеЕсли  Стр_а.name="Материал стельки" Тогда
											Если ЗначениеЗаполнено(Объект.Стелька) Тогда
												Стр_а.value=Врег(Строка(Объект.Стелька));
												Стр_а.valueTitle=Врег(Строка(Объект.Стелька));
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Материал стельки, %" Тогда
											Если ДополнительныйРеквизитОбувь.МатериалСтельки.Количество()>0 Тогда
													
													Первая=ложь;
													Для Каждого Стр_ Из ДополнительныйРеквизитОбувь.МатериалСтельки Цикл
														Если Не Первая Тогда
															Первая=Истина;
															Стр_а.value=Стр_.МатериалСтельки;
															Стр_а.valueType=Строка(Стр_.Процент)
														Иначе
															
															Стр_Н=Новый Структура;
															Для Каждого Стр_Стр Из Стр_а Цикл
																Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
																
															Конеццикла;
																Стр_Н.value=Стр_.МатериалСтельки;
															Стр_Н.valueType=Строка(Стр_.Процент) ;
															// Стр_1.attributes.Вставить();
															 МассивТиповМатериалов.Добавить(Стр_Н);
															
										
														 КонецЕсли;
													Конеццикла;
												КонецЕсли;	
											
										ИначеЕсли  Стр_а.name="Материал низа / подошвы" Тогда
											Если ЗначениеЗаполнено(Объект.МатериалНиза) Тогда
												Стр_а.value=Врег(Строка(Объект.МатериалНиза));
												Стр_а.valueTitle=Врег(Строка(Объект.МатериалНиза));
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Материал низа / подошвы, %" Тогда
											Если ДополнительныйРеквизитОбувь.МатериалНизаПодошвы.Количество()>0 Тогда
													
													Первая=ложь;
													Для Каждого Стр_ Из ДополнительныйРеквизитОбувь.МатериалНизаПодошвы Цикл
														Если Не Первая Тогда
															Первая=Истина;
															Стр_а.value=Стр_.МатериалНизаПодошвы;
															Стр_а.valueType=Строка(Стр_.Процент)
														Иначе
															
															Стр_Н=Новый Структура;
															Для Каждого Стр_Стр Из Стр_а Цикл
																Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
																
															Конеццикла;
																Стр_Н.value=Стр_.МатериалНизаПодошвы;
															Стр_Н.valueType=Строка(Стр_.Процент) ;
															// Стр_1.attributes.Вставить();
															 МассивТиповМатериалов.Добавить(Стр_Н);
															
										
														 КонецЕсли;
													Конеццикла;
												КонецЕсли;	

											
											
										КонецЕсли;
									Конеццикла;
									
																	Для Каждого Стр_Ст ИЗ МассивТиповМатериалов    Цикл
											Стр_1.attributes.Добавить(Стр_Ст);

										Конеццикла;

										
										
								ИначеЕсли Стр_1.name="Характеристики товара в состоянии использования" Тогда
									  Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Ширина изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ШиринаЕдиницаИзмерения) Тогда
												Стр_а.value=ДополнительныйРеквизитОбувь.Ширина;
												Стр_а.valueType=Строка(ДополнительныйРеквизитОбувь.ШиринаЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Высота изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ВысотаЕдиницаИзмерения) Тогда
												Стр_а.value=ДополнительныйРеквизитОбувь.Высота;
												Стр_а.valueType=Строка(ДополнительныйРеквизитОбувь.ВысотаЕдиницаИзмерения)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Глубина изделия" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ГлубинаЕдиницаИзмерения) Тогда
												Стр_а.value=ДополнительныйРеквизитОбувь.Глубина;
												Стр_а.valueType=Строка(ДополнительныйРеквизитОбувь.Глубина)
											КонецЕсли;
										Конецесли;
									Конеццикла
									
							ИначеЕсли Стр_1.name="Эксплуатация и условия хранения" Тогда
							     	Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_а.name="Мин. температура, С" Тогда
											Если Значениезаполнено(ДополнительныйРеквизитОбщиеНК.МинимальнаяТемпература
										) Тогда
											Стр_а.value=ДополнительныйРеквизитОбщиеНК.МинимальнаяТемпература
											КонецЕсли;
										ИначеЕсли Стр_а.name="Макс. температура, С" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.МаксимальнаяТемпература) тогда
												Стр_а.value=ДополнительныйРеквизитОбщиеНК.МаксимальнаяТемпература
											КонецЕсли;
										ИначеЕсли Стр_а.name="Мин. относительная влажность, %" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.МинимальнаяОтносительнаяВлажность) тогда
												Стр_а.value=ДополнительныйРеквизитОбщиеНК.МинимальнаяОтносительнаяВлажность
											КонецЕсли;
										ИначеЕсли Стр_а.name="Макс. относительная влажность, %" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.МаксимальнаяОтносительнаяВлажность) тогда
												Стр_а.value=ДополнительныйРеквизитОбщиеНК.МаксимальнаяОтносительнаяВлажность
												
											КонецЕсли;
										//ИначеЕсли  Стр_а.name="Заявленный объём / вес нетто" Тогда
											
										ИначеЕсли  Стр_а.name="Срок службы" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ТипСрокаСлужбы) Тогда
												Стр_а.value=ДополнительныйРеквизитОбувь.СрокСлужбы;
												Стр_а.valueType=Строка(ДополнительныйРеквизитОбувь.ТипСрокаСлужбы)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Гарантийный срок, от производителя" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ТипГарантийногоСрока) Тогда
												Стр_а.value=ДополнительныйРеквизитОбувь.ГарантийныйСрокОтПроизводителя;
												Стр_а.valueType=Строка(ДополнительныйРеквизитОбувь.ТипГарантийногоСрока)
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Особые условия хранения" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ОсобыеУсловияХранения) Тогда
												Стр_а.value=ДополнительныйРеквизитОбувь.ОсобыеУсловияХранения;
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Рекомендации по использованию" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.РекомендацияПоИспользованию) Тогда
												Стр_а.value=ДополнительныйРеквизитОбувь.РекомендацияПоИспользованию;
											КонецЕсли;											
										Конецесли;
									Конеццикла;
						ИначеЕсли Стр_1.name="Нормативно-сопроводительная документация" Тогда
									МассивНормативово=Новый Массив;
									МассивГОСТТУ=Новый Массив;
									МассивГОСТТУ.Очистить();
									МассивНормативово.Очистить();
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="BRICK GPC" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.BRICKGPC) тогда
												Стр_а.value=ДополнительныйРеквизитОбувь.BRICKGPC
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Номер Регламента/стандарта" Тогда
											Первая=Ложь;
											
											Если ДополнительныйРеквизитОбувь.НомерРегламента005=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
												     Первая=Истина;
														
													    Стр_а.value="ТР ТС 005/2011 ""О безопасности упаковки""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											Если ДополнительныйРеквизитОбувь.НомерРегламента007=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 007/2011 ""О безопасности продукции, предназначенной для детей и подростков""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													     Первая=Истина;
													    Стр_а.value="ТР ТС 007/2011 ""О безопасности продукции, предназначенной для детей и подростков""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											Если ДополнительныйРеквизитОбувь.НомерРегламента017=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 017/2011 ""О безопасности продукции легкой промышленности""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													      Первая=Истина;
													
													    Стр_а.value="ТР ТС 017/2011 ""О безопасности продукции легкой промышленности""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											Если ДополнительныйРеквизитОбувь.НомерРегламента019=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ТР ТС 019/2011 ""О безопасности средств индивидуальной защиты""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													                     
												Иначе
													      Первая=Истина;
													
													    Стр_а.value="ТР ТС 019/2011 ""О безопасности средств индивидуальной защиты""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											Если ДополнительныйРеквизитОбувь.ФЗ123=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="ФЗ от 22.07.2008 N 123-ФЗ ""Технический регламент о требованиях пожарной безопасности""";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													                     
												Иначе
													      Первая=Истина;
													
														Стр_а.value="ФЗ от 22.07.2008 N 123-ФЗ ""Технический регламент о требованиях пожарной безопасности""";
													    //Стр_а.value="ТР ТС 019/2011 ""О безопасности средств индивидуальной защиты""";
														
												КонецЕсли;
												
												
											КонецЕсли;
											
											
											 Если ДополнительныйРеквизитОбувь.БезРегламента=Истина Тогда
												
												Если Первая Тогда
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value="Действие технических регламентов не распространяется";
														//Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивНормативово.Добавить(Стр_Н);
													
												Иначе
													      Первая=Истина;
													
													    Стр_а.value="Действие технических регламентов не распространяется";
														
												КонецЕсли;
												
											КонецЕсли;
										ИначеЕсли  Стр_а.name="ГОСТ / ТУ / СТО" Тогда
											
											Если ДополнительныйРеквизитОбувь.ГОСТЫИТУ.Количество()>0 Тогда
												
												Первая=ложь;
												Для Каждого Стр_ Из ДополнительныйРеквизитОбувь.ГОСТЫИТУ Цикл
													Если Не Первая Тогда
														Первая=Истина;
														Стр_а.value=Стр_.ГОСТТУ;
														Стр_а.valueType=Строка(Стр_.ТипГОСТТУ)
													Иначе
														
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=Стр_.ГОСТТУ;
														Стр_Н.valueType=Строка(Стр_.ТипГОСТТУ) ;
														// Стр_1.attributes.Вставить();
														 МассивГОСТТУ.Добавить(Стр_Н);
														
														
													 КонецЕсли;
													Конеццикла;
												КонецЕсли;
												
											КонецЕсли;

											
											
										//Конецесли;
									Конеццикла;
									
																		
									Для Каждого Стр_Ст ИЗ МассивГОСТТУ    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									
									

									Для Каждого Стр_Ст ИЗ МассивНормативово    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
									

								ИначеЕсли Стр_1.name="Сведения о свидетельствах о гос. регистрации" Тогда
									МассивНормативово=Новый Массив;
									МассивНормативово.Очистить();
																	

									
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										//Если  Стр_а.name="Материал верха" Тогда
										//	Если ЗначениеЗаполнено(Объект.МатериалВерха) Тогда
										//		Стр_а.value=Врег(Строка(Объект.МатериалВерха));
										//		Стр_а.valueTitle=Врег(Строка(Объект.МатериалВерха));
										//		Стр_а.valueType=Неопределено
										//	КонецЕсли;
										Если  Стр_а.name="Номер экспертного заключения (ЭЗ)" Тогда
Если ДополнительныйРеквизитОбувь.СведенияОСвидетельствахОГосРегистрации.Количество()>0 Тогда
													
													Первая=ложь;
													Для Каждого Стр_ Из ДополнительныйРеквизитОбувь.СведенияОСвидетельствахОГосРегистрации Цикл
														Если Не Первая Тогда
															Первая=Истина;
															Стр_а.value=Стр_.НомерЭкспертногоЗаключенияЭЗ;
														Иначе
															
															Стр_Н=Новый Структура;
															Для Каждого Стр_Стр Из Стр_а Цикл
																Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
																
															Конеццикла;
																Стр_Н.value=Стр_.НомерЭкспертногоЗаключенияЭЗ;
															 МассивНормативово.Добавить(Стр_Н);
															
										
														 КонецЕсли;
													 Конеццикла;
													 

													 
												КонецЕсли;	

											
																					КонецЕсли;
									Конеццикла;

									
								ИначеЕсли Стр_1.name="Происхождение и бренды" Тогда
									МассивАртикулов=Новый Массив;
									МассивАртикулов.Очистить();
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										//Если  Стр_а.name="Материал верха" Тогда
										//	Если ЗначениеЗаполнено(Объект.МатериалВерха) Тогда
										//		Стр_а.value=Врег(Строка(Объект.МатериалВерха));
										//		Стр_а.valueTitle=Врег(Строка(Объект.МатериалВерха));
										//		Стр_а.valueType=Неопределено
										//	КонецЕсли;
										Если  Стр_а.name="Модель / артикул производителя" Тогда
	//										Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул) Тогда
	//											Если Не Перваяыла Тогда
	//													Стр_а.value=Объект.МодельПроизводителяАртикул;
	//													Стр_а.valueType=Строка("Артикул")
	//													;Перваяыла=истина
	//												Иначе
	//												
	//													Стр_Н=Новый Структура;
	//													Для Каждого Стр_Стр Из Стр_а Цикл
	//														Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
	//														
	//													Конеццикла;
	//														Стр_Н.value=Объект.МодельПроизводителяАртикул;
	//													Стр_Н.valueType=Строка("Артикул") ;
	//													// Стр_1.attributes.Вставить();
	//													 МассивАртикулов.Добавить(Стр_Н);
	//													
	//													
	//
	//													
	//											Конецесли;
	//										КонецЕсли;
											Если ЗначениеЗаполнено(Объект.МодельПроизводителяАртикул)
												И ДополнительныйРеквизитБелье.ДопМодельАртикулы.Количество()=0 Тогда
												Если Не Перваяыла Тогда
														Стр_а.value=Объект.МодельПроизводителяАртикул;
														Стр_а.valueType=Строка("Артикул")     ;Перваяыла=истина
													Иначе
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
															Стр_Н.value=Объект.МодельПроизводителяАртикул;
														Стр_Н.valueType=Строка("Артикул") ;
														// Стр_1.attributes.Вставить();
														 МассивАртикулов.Добавить(Стр_Н);
														
														
	
														
												Конецесли;
											КонецЕсли;
											Для Каждого Стр_22 Из ДополнительныйРеквизитБелье.ДопМодельАртикулы Цикл
												
												Если Не Перваяыла Тогда
														Стр_а.value=Стр_22.МодельАртикул;
														Стр_а.valueType=Строка(Стр_22.ТипМодельАртикул)
														;Перваяыла=истина
													Иначе
													
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=Стр_22.МодельАртикул;
														Стр_Н.valueType=Строка(Стр_22.ТипМодельАртикул);
														// Стр_1.attributes.Вставить();
														 МассивАртикулов.Добавить(Стр_Н);
														
														
	
														
												Конецесли;
												
											Конеццикла;
											
										Конецесли;
									Конеццикла;
									
									
									Для Каждого Стр_Ст ИЗ МассивАртикулов    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;

									
					ИначеЕсли Стр_1.name="Дополнительная информация" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если  Стр_а.name="Описание товара" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ОписаниеТовара) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитОбувь.ОписаниеТовара);
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Наименование товара на этикетке" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.НаименованиеТовараНаЭтикетке) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитОбувь.НаименованиеТовараНаЭтикетке);
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Социально значимый товар" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.СоциальноЗначимыйТовар) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитОбувь.СоциальноЗначимыйТовар);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитОбувь.СоциальноЗначимыйТовар);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										ИначеЕсли  Стр_а.name="Формат продажи" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.ФорматПродажи) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитОбувь.ФорматПродажи);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитОбувь.ФорматПродажи);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										ИначеЕсли  Стр_а.name="Способ ввода товара в оборот" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбувь.СпособВводаТовараВОборот) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитОбувь.СпособВводаТовараВОборот);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитОбувь.СпособВводаТовараВОборот);
												Стр_а.valueType=Неопределено
											КонецЕсли;
										Конецесли;
									Конеццикла;
									
									
									
								КонецЕсли;
								
																
								
							//	Если Стр_1.name="Состав" Тогда
							//		Стр_1.attributes[0].value="Мой состав";
							//	КонецЕсли;
								
							Конеццикла;
							
							
						Конецесли;
						
						
						
						МассивСтранДобавить=Новый Массив;
						УжеБылаСтрана=ложь;
						
						
						
						Для Каждого Стр_1 Из NNN.attrGroup Цикл
							
							Если Стр_1.name="Дополнительная информация" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_а.name="Код товара в учетной системе поставщика" Тогда
											Если ЗначениеЗаполнено(объект.КодВУчетнойСистеме) Тогда
												Стр_а.value=объект.КодВУчетнойСистеме
											КонецЕсли;
										ИначеЕсли Стр_а.name="Наименование товара в учетной системе поставщика" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.НаименованиеТовараВУчетнойСистемеПоставщика) Тогда
												Стр_а.value=ДополнительныйРеквизитОбщиеНК.НаименованиеТовараВУчетнойСистемеПоставщика
											КонецЕсли;
											
										ИначеЕсли Стр_а.name="Ставка НДС" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.СтавкаНДС) Тогда
												Стр_а.value=Строка(ДополнительныйРеквизитОбщиеНК.СтавкаНДС);
												Стр_а.valueTitle=Строка(ДополнительныйРеквизитОбщиеНК.СтавкаНДС);
												Стр_а.valueType=Неопределено
											КонецЕсли;
											
										Конецесли;
									Конеццикла;
							ИначеЕсли Стр_1.name="Наименование товара и идентификация" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_а.name="Полное наименование товара" Тогда
											Стр_а.value=объект.НаименованиеТовара
											
										//ИначеЕсли  Стр_а.name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
									Конеццикла;
																
							ИначеЕсли Стр_1.name="Происхождение и бренды" Тогда
									Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_а.name="Страна производства" Тогда
												Альфа=странаПроизводства();
												Если ЗначениеЗаполнено(Альфа) Тогда
													Стр_а.value=Альфа;
													Стр_а.valueTitle="("+Альфа+") "+Строка(Объект.СтранаПроизводства);
													
													Для Каждого Стр_ДопСтр Из ДополнительныйРеквизитОбщиеНК.ДополнительныеСтраныПроизводств Цикл
																				Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Альфа=Альфа2(Стр_ДопСтр.СтранаПроизводства);
													Стр_Н.value=Альфа;
													Стр_Н.valueTitle="("+Альфа+") "+Строка(Стр_ДопСтр.СтранаПроизводства);
														// Стр_1.attributes.Вставить();
														 МассивСтранДобавить.Добавить(Стр_Н);
													Конеццикла;
												КонецЕсли;
										ИначеЕсли Стр_а.name="Суббренд" Тогда
		                                           Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.Суббренд) тогда
														Стр_а.value=ДополнительныйРеквизитОбщиеНК.Суббренд;
													КонецЕсли;
	
																								
										КонецЕсли;
									КонецЦикла;
												
																			//		Конецесли;
								//Конеццикла;
							
							
									Для Каждого Стр_Ст ИЗ МассивСтранДобавить    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
							
									
															
						ИначеЕсли Стр_1.name="Эксплуатация и условия хранения" Тогда
							     	Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_а.name="Мин. температура, С" Тогда
											Если Значениезаполнено(ДополнительныйРеквизитОбщиеНК.МинимальнаяТемпература
										) Тогда
											Стр_а.value=ДополнительныйРеквизитОбщиеНК.МинимальнаяТемпература
											КонецЕсли;
										ИначеЕсли Стр_а.name="Макс. температура, С" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.МаксимальнаяТемпература) тогда
												Стр_а.value=ДополнительныйРеквизитОбщиеНК.МаксимальнаяТемпература
											КонецЕсли;
										ИначеЕсли Стр_а.name="Мин. относительная влажность, %" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.МинимальнаяОтносительнаяВлажность) тогда
												Стр_а.value=ДополнительныйРеквизитОбщиеНК.МинимальнаяОтносительнаяВлажность
											КонецЕсли;
										ИначеЕсли Стр_а.name="Макс. относительная влажность, %" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.МаксимальнаяОтносительнаяВлажность) тогда
												Стр_а.value=ДополнительныйРеквизитОбщиеНК.МаксимальнаяОтносительнаяВлажность
												
											КонецЕсли;
										//ИначеЕсли  Стр_а.name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
									Конеццикла;
								
								ИначеЕсли Стр_1.name="Идентификация Участников Оборота Товаров" Тогда
									
									МассивДобавить=Новый Массив;
							     	Для Каждого Стр_а Из Стр_1.attributes Цикл
										Если Стр_а.name="Производитель" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.Производитель) тогда
												Стр_а.value=ДополнительныйРеквизитОбщиеНК.Производитель
											КонецЕсли;
										ИначеЕсли Стр_а.name="Импортер" Тогда
											Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.Импортер) тогда
												Стр_а.value=ДополнительныйРеквизитОбщиеНК.Импортер
											КонецЕсли;
										ИначеЕсли Стр_а.name="Изготовитель / Производственная площадка" Тогда
											
											  Если ДополнительныйРеквизитОбщиеНК.Изготовители.Количество()>0 Тогда
												
												Первая=ложь;
												Для Каждого Стр_ Из ДополнительныйРеквизитОбщиеНК.Изготовители Цикл
													Если Не Первая Тогда
														Первая=Истина;
														Стр_а.value=Стр_.Изготовитель;
														Стр_а.valueType=Альфа2(Стр_.СтранаПроизводства)
													Иначе
														
														Стр_Н=Новый Структура;
														Для Каждого Стр_Стр Из Стр_а Цикл
															Стр_Н.Вставить(Стр_Стр.Ключ,Стр_Стр.Значение);
															
														Конеццикла;
														Стр_Н.value=Стр_.Изготовитель;
														Стр_Н.valueType=Альфа2(Стр_.СтранаПроизводства);
														// Стр_1.attributes.Вставить();
														 МассивДобавить.Добавить(Стр_Н);
														
														
													 КонецЕсли;
													Конеццикла;
												КонецЕсли;

											
											//Стр_а.value=ДополнительныйРеквизитОбщиеНК.МинимальнаяОтносительнаяВлажность
											
										//ИначеЕсли  Стр_а.name="Заявленный объём / вес нетто" Тогда
											
											
										Конецесли;
									Конеццикла;
								
	                                   	Для Каждого Стр_Ст ИЗ МассивДобавить    Цикл
										Стр_1.attributes.Добавить(Стр_Ст);

									Конеццикла;
							
ИначеЕсли Стр_1.name="Маркетинговая информация" Тогда
					  	Для Каждого Стр_а Из Стр_1.attributes Цикл
							Если Стр_а.name="Маркетинговое описание" Тогда
								Если ЗначениеЗаполнено( ДополнительныйРеквизитОбщиеНК.МаркетинговоеОписание) Тогда
											Стр_а.value=ДополнительныйРеквизитОбщиеНК.МаркетинговоеОписание
										КонецЕсли;
									ИначеЕсли Стр_а.name="Уникальные характеристики товара" Тогда
										Если ЗначениеЗаполнено(ДополнительныйРеквизитОбщиеНК.УникальныеХарактеристикиТовара) тогда
											Стр_а.value=ДополнительныйРеквизитОбщиеНК.УникальныеХарактеристикиТовара
										КонецЕсли;
											
											
										Конецесли;
									Конеццикла;
									
								КонецЕсли;	
					Конеццикла;
								
								
							
														
						//КонецЕсли;
							
							
						//	Если Стр_1.name="Состав" Тогда
						//		Стр_1.attributes[0].value="Мой состав";
						//	КонецЕсли;
							
					///Конеццикла;
					
					
					Тело=ИзСтруктурыВДжсон(NNN);
						
								
						
						HTTPЗапрос=Новый HTTPЗапрос("rest/draft/"+Формат(id,"ЧГ="));
						
						HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
						HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
						
						
		//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
//		HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
		HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
		HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
		HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
		HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
		
		HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
		HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
		HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
		//	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
		
		HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
		//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
		HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
		HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
		HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
		
		
		
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
						//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
						Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("PUT",HTTPЗапрос);
					//	Возврат
			NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
			
			
			Попытка
				Объект.СтатусКарточки=ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ."+NNN.status);
				;ОбновитьтипПродукции(NNN);
				
				
			исключение
			КонецПопытки;
			
			ОбновитьПоТипу();
			ЭтаФорма.Записать();			
//	КонецЕсли;
		
	ВидимостьПоОстаткам();
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьтипПродукции(NNN) Экспорт
				Если NNN.categories[0].categoryName="Молочная продукция" Тогда
					Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Молоко");
				ИначеЕсли NNN.categories[0].categoryName="Воды питьевые и минеральные" Тогда
					Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода");
				ИначеЕсли NNN.categories[0].categoryName="Обувь" Тогда
					Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Обувь");
				ИначеЕсли NNN.categories[0].categoryName="Шины и покрышки" Тогда
					Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Шины");
				ИначеЕсли NNN.categories[0].categoryName="Фотокамеры и аксессуары" Тогда
					Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Фото");
				ИначеЕсли NNN.categories[0].categoryName="Инвалидные коляски" Тогда
					Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.КреслаКоляски");
				ИначеЕсли NNN.categories[0].categoryName="Велосипеды" Тогда
					Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Велосипеды");
				ИначеЕсли NNN.categories[0].categoryName="Одежда" Тогда
					Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Одежда");
				ИначеЕсли NNN.categories[0].categoryName="Белье постельное, столовое, туалетное и кухонное" Тогда
					Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Белье");
				ИначеЕсли NNN.categories[0].categoryName="Табак" Тогда
					Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Табак");
				ИначеЕсли NNN.categories[0].categoryName="Парфюмерия" Тогда
					Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Парфюм");
					
				ИначеЕсли NNN.categories[0].categoryName="Сигары, сигариллы, сигареты, папиросы" Тогда
					Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак");
				ИначеЕсли NNN.categories[0].categoryName="Без категории" Тогда
					Объект.Тип=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.ПустаяСсылка");
				
				КонецЕсли;
				
				ОбновитьПоТипу();
КонецПроцедуры
&НаКлиенте
Процедура ОтправитьНаМодерацию(Команда,УжеОтправили=Ложь) Экспорт
	// Вставить содержимое обработчика.
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если НЕ Форм.Открыта() Тогда
		Форм.Открыть(); 
	КонецЕсли;
	
	
		Thumbprint_1=ПолучитьИзПользователя(Форм.Пользователь);
	Если Не ЗначениеЗаполнено(объект.GTIN) тогда
		Возврат;
	КонецЕслИ;	
	
	
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
	
	
	
	crsfToken="";
	Срегистра="";
	Куки="";
	СерийныйНомер="";
	Если ПодключилисьОк(Thumbprint_1,crsfToken,Срегистра,Куки,HTTPСервисЗапрос,СерийныйНомер) Тогда
	
	
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
	
	
		Тело=ИщемПоГТИН();
		
		
		
		HTTPЗапрос=Новый HTTPЗапрос("rest/goods/list");
		HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
				
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		
				
		HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
		Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
		
		NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
		
		Если Ответ.КодСостояния<>200 
			ИЛИ NNN=Неопределено
			Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
					Если УжеОтправили<>Истина Тогда
						ОтправитьНаМодерацию(Команда,Истина);
						Возврат;
					Иначе
						Сообщить("Не удалось обновить карточку из НК (КТМ)");
						Возврат;
					КонецЕсли;
					
				КонецЕсли;
				
		
		
		
		
		Если NNN.data.количество()=0 Тогда
			Сообщить("Продукцию с gtin "+Формат(Объект.GTIN,"ЧГ=")+" не нашли в каталоге маркированных товаров");
			Возврат
		ИначеЕсли NNN.data[0].draft=Неопределено Тогда
			
			
			Попытка
				Объект.СтатусКарточки=ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ."+NNN.data[0].goods.status)
				;ОбновитьтипПродукции(NNN);
			исключение
			КонецПопытки;
					
			
			Сообщить("Продукцию с gtin "+Формат(Объект.GTIN,"ЧГ=")+" уже нельзя менять. Для редактировании карточки необходимо обращаться в ЦРПТ");
			Этаформа.Записать();
			Возврат
			
		Иначе
			id=                    NNN.data[0].draft.id
			
		Конецесли;
		
			Попытка
				Объект.СтатусКарточки=ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ."+NNN.data[0].draft.status)
				;ОбновитьтипПродукции(NNN);
			исключение
			КонецПопытки;
						
		
		
		///Возврат;
		
		
		
				//								
				HTTPЗапрос=Новый HTTPЗапрос("rest/draft/send/"+Формат(id,"ЧГ="));
						
						HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
						HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
						
							HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		

						
		//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
		HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
		HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
		HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
		HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
		HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
		
		HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
		HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
		HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
		//	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
		
		HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
		//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
		HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
		HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
		HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
		
		
		
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
						//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
 						Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
					//	Возврат
		//Если Ответ.КодСостояния			
		
		Если Ответ.КодСостояния<>200 ТОгда	
			NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
			Если NNN<>Неопределено тогда
				Ошибки="Не удалось отправить на модерацию карточку с GTIN "+Формат(Объект.GTIN,"ЧГ=")+". Ошибки: ";
				errors=Неопределено;
				Если NNN.Свойство("errors",errors) И ТипЗнч(errors)=Тип("Массив") Тогда
					
					Для Каждого Стр_укк Из errors Цикл
						Ошибки=Ошибки+Символы.ПС+ Стр_укк;
					Конеццикла;
					
				Конецесли;
				Сообщить(Ошибки);
			Иначе
				Сообщить("Не удалось отправить на модерацию карточку с GTIN "+Формат(Объект.GTIN,"ЧГ=")
				);
			Конецесли;
			
		Конецесли;
							
		Тело=ИщемПоГТИН();
		
		
		
		HTTPЗапрос=Новый HTTPЗапрос("rest/goods/list");
		HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
					HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		

		
		HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
		Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
		
		
		NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
		
		Если NNN.data.количество()=0 Тогда
			Возврат
		ИначеЕсли NNN.data[0].goods<>Неопределено Тогда
			
			Попытка
				Объект.СтатусКарточки=ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ."+NNN.data[0].goods.status)
				;ОбновитьтипПродукции(NNN);
			исключение
			КонецПопытки;
			Возврат
			
		Иначе
			id=                    NNN.data[0].draft.id
			
		Конецесли;
		
			Попытка
				Объект.СтатусКарточки=ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ."+NNN.data[0].draft.status)
				;ОбновитьтипПродукции(NNN);
			исключение
			КонецПопытки;
						
		
			
	КонецЕсли;
	
	     ЭтаФорма.Записать(); 
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьИОпубликовать(Команда,УжеОтправили=ложь) Экспорт
	// Вставить содержимое обработчика.
	
		Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если НЕ Форм.Открыта() Тогда
		Форм.Открыть(); 
	КонецЕсли;
	
	
		Thumbprint_1=ПолучитьИзПользователя(Форм.Пользователь);
	Если Не ЗначениеЗаполнено(объект.GTIN) тогда
		Возврат;
	КонецЕслИ;	
	
	
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
	
	
	
	crsfToken="";
	Срегистра="";
	Куки="";
	СерийныйНомер="";
	Если ПодключилисьОк(Thumbprint_1,crsfToken,Срегистра,Куки,HTTPСервисЗапрос,СерийныйНомер) Тогда
		
			
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		

				
		 
		Тело=ИщемПоГТИН();
		
		
		
		HTTPЗапрос=Новый HTTPЗапрос("rest/goods/list");
		HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
				
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		
				
		HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
		Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
		NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
		
		Если Ответ.КодСостояния<>200 
			ИЛИ NNN=Неопределено
			Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
					Если УжеОтправили<>Истина Тогда
						ПодписатьИОпубликовать(Команда,Истина);
						Возврат;
					Иначе
						Сообщить("Не удалось обновить карточку из НК (КТМ)");
						Возврат;
					КонецЕсли;
					
				КонецЕсли;
				
		
		
		
		Если NNN.data.количество()=0 Тогда
			Сообщить("Продукцию с gtin "+Формат(Объект.GTIN,"ЧГ=")+" не нашли в каталоге маркированных товаров");
			Возврат
		ИначеЕсли NNN.data[0].draft=Неопределено Тогда
			
			
			Попытка
				Объект.СтатусКарточки=ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ."+NNN.data[0].goods.status)
				;ОбновитьтипПродукции(NNN);
			исключение
			КонецПопытки;
					
			
			Сообщить("Продукцию с gtin "+Формат(Объект.GTIN,"ЧГ=")+" уже нельзя менять. Для редактировании карточки необходимо обращаться в ЦРПТ");
			Этаформа.Записать();
			Возврат
			
		Иначе
			id=                    NNN.data[0].draft.goodId
			
		Конецесли;
		
			Попытка
				Объект.СтатусКарточки=ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ."+NNN.data[0].draft.status)
				;ОбновитьтипПродукции(NNN);
				Этаформа.Записать();
			исключение
			КонецПопытки;
						
			Если Объект.СтатусКарточки<>ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ.notsigned") Тогда
				
				Сообщить("Карточка "+объект.Наименование+" находится в статусе отличной от <Ожидает подписания>. Статус карточки "+Строка(Объект.СтатусКарточки) );
				Возврат;
			КонецЕсли;
		
		///Возврат;
		
		          Тело="{""goodIds"":["+формат(id,"ЧГ=")+"],""isPublishAgreed"":true}";
		
				//								
				HTTPЗапрос=Новый HTTPЗапрос("rest/goods/base64-formats");
						
						HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
						HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
						
							HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		

						
		//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
	//	HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
		HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
		HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
		HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
		HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
		
		HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
		HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
		HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
		//	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
		
		HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
		//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
		HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
		HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
		HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
		
		
		
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
						//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
						Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
						
						
					NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
				xmlДляПодписи=NNN.data[0].base64XmlForSign;					
				Имя_вр_1="";
				ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ПодписатьФайл(Ложь,xmlДляПодписи,Thumbprint_1
				,Имя_вр_1,,Истина,,,Истина);
				//(xmlДляПодписи,Thumbprint_1.Thumbprint_1,Имя_вр_1);						
				Имя_вр_1=СтрЗаменить(Имя_вр_1,символы.ПС,"");				
				Имя_вр_1=СтрЗаменить(Имя_вр_1,символы.ВК,"");				
				
				
				
				Тело=ПодписанныйJSON(xmlДляПодписи,Имя_вр_1);
				
				//Тело="{""goodIds"":["+формат(id,"ЧГ=")+"],""isPublishAgreed"":true}";
				
				
				HTTPЗапрос=Новый HTTPЗапрос("rest/goods/publish/"+формат(id,"ЧГ="));
						
						HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
						HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
						
							HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		

		//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
	//	HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
		HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
		HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
		HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
		HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
		
		HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
		HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
		HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
		//	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
		
		HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
		//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
		HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
		HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
		HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
		
		
		
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
						//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
						Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
						
						
					NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
				
					
					
		Если Ответ.КодСостояния<>200 ТОгда	
			NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
			Если NNN<>Неопределено тогда
				Ошибки="Не удалось подписать и опубликовать карточку с GTIN "+Формат(Объект.GTIN,"ЧГ=")+". Ошибки: ";
				errors=Неопределено;
				Если NNN.Свойство("errors",errors) И ТипЗнч(errors)=Тип("Массив") Тогда
					
					Для Каждого Стр_укк Из errors Цикл
						Ошибки=Ошибки+Символы.ПС+ Стр_укк;
					Конеццикла;
					
				Конецесли;
				Сообщить(Ошибки);
			Иначе
				Сообщить("Не удалось подписать и опубликовать карточку с GTIN "+Формат(Объект.GTIN,"ЧГ=")
				);
			Конецесли;
			
		Конецесли;
					
					

					
					
					
Тело=ИщемПоГТИН();
		
		
		
		HTTPЗапрос=Новый HTTPЗапрос("rest/goods/list");
		HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
				
					HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		

		HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
		Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
		
		
		NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
		
		Если NNN.data.количество()=0 Тогда
			Возврат
		ИначеЕсли NNN.data[0].goods<>Неопределено Тогда
			
			Попытка
				Объект.СтатусКарточки=ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ."+NNN.data[0].goods.status)
				;ОбновитьтипПродукции(NNN);
			исключение
			КонецПопытки;
		//	Возврат
			
		Иначе
			id=                    NNN.data[0].draft.id
			
		Конецесли;
		
			Попытка
				Объект.СтатусКарточки=ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ."+NNN.data[0].draft.status)
				;ОбновитьтипПродукции(NNN);
			исключение
			КонецПопытки;
						
		
ЭтаФорма.Записать();
				
				
						
						
						
						Возврат;
						
						
						
		Тело=ИщемПоГТИН();
		
		
		
		HTTPЗапрос=Новый HTTPЗапрос("rest/goods/list");
		HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
				
					HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		

		HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
		Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
		
		
		NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
		
		Если NNN.data.количество()=0 Тогда
			Возврат
		ИначеЕсли NNN.data[0].goods<>Неопределено Тогда
			
			Попытка
				Объект.СтатусКарточки=ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ."+NNN.data[0].goods.status)
				;ОбновитьтипПродукции(NNN);
			исключение
			КонецПопытки;
			Возврат
			
		Иначе
			id=                    NNN.data[0].draft.id
			
		Конецесли;
		
			Попытка
				Объект.СтатусКарточки=ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ."+NNN.data[0].draft.status)
				;ОбновитьтипПродукции(NNN);
			исключение
			КонецПопытки;
						
		
			
	КонецЕсли;
	
	     ЭтаФорма.Записать(); 

КонецПроцедуры
	 
	 
Функция ПодписанныйJSON(xmlДляПодписи,Имя_вр_1)
	
	Джсон=Новый ЗаписьJSON;
	Джсон.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет,,,ЭкранированиеСимволовJSON.СимволыВнеASCII));
	Джсон.ЗаписатьНачалоОбъекта();;
	Джсон.ЗаписатьИмяСвойства("base64Xml");
	Джсон.ЗаписатьЗначение(xmlДляПодписи);
	Джсон.ЗаписатьИмяСвойства("signature");
	Джсон.ЗаписатьЗначение(Имя_вр_1);
	//Джсон.ЗаписатьИмяСвойства("isSigned");
	//Джсон.ЗаписатьЗначение(Истина);
	
	//Джсон.ЗаписатьИмяСвойства("isPublishAgreed");
	//Джсон.ЗаписатьЗначение(Истина);
	Джсон.ЗаписатьКонецОбъекта();
	
	Тело=Джсон.Закрыть();
	Возврат тело;

	
	Джсон=Новый ЗаписьJSON;
	Джсон.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет,,,ЭкранированиеСимволовJSON.СимволыВнеASCII));
	Джсон.ЗаписатьНачалоОбъекта();;
	Джсон.ЗаписатьИмяСвойства("xml");
	Джсон.ЗаписатьЗначение(Имя_вр_1);
	Джсон.ЗаписатьИмяСвойства("isSigned");
	Джсон.ЗаписатьЗначение(Истина);
	
	Джсон.ЗаписатьИмяСвойства("isPublishAgreed");
	Джсон.ЗаписатьЗначение(Истина);
	Джсон.ЗаписатьКонецОбъекта();
	
	Тело=Джсон.Закрыть();
	Возврат тело
	
	
Конецфункции


&НаКлиенте
Процедура Таблица2АдресРисункаURLНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Диалог=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.МножественныйВыбор=Ложь;
	Картинка=Новый Картинка;
	Диалог.Фильтр = 
	"Все картинки (*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf)|*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf|" 
	+ "Формат bmp (*.bmp;*.dib;*.rle)|*.bmp;*.dib;*.rle|"
	+ "Формат JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|"
	+ "Формат TIFF (*.tif)|*.tif|"
	+ "Формат GIF (*.gif)|*.gif|"
	+ "Формат PNG (*.png)|*.png|"
	+ "Формат icon (*.ico)|*.ico|"
	+ "Формат метафайл (*.wmf;*.emf)|*.wmf;*.emf|";// картинки 
	Диалог.Показать(Новый ОписаниеОповещения("ПослеВыбораФайлаКартинки",ЭтаФорма,Элементы.Рисунки_Таблица.ТекущиеДанные))
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФайлаКартинки(РР,ДДД) Экспорт
	Если РР<>Неопределено Тогда
		ИмяФайлаДляЗагрузи=РР[0];
		Файл=Новый Файл(ИмяФайлаДляЗагрузи);
		АдресХра=ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяФайлаДляЗагрузи));
		
		Boundary = СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", "");
		РазмеФайла=0;
		АдресФайла=ПолучитьДляОтправки(АдресХра,Boundary,Файл.Имя,Файл.Расширение,РазмеФайла);
		НачатьПолучениеКаталогаВременныхФайлов(Новый ОписаниеОповещения("ПослеПолученияКаталогаВр_ОтправитьФайл",ЭтаФорма,Новый Структура("Boundary,ВернемХр,РазмерФайла,ТекСтрока",Boundary,АдресФайла,РазмеФайла,ДДД)));
		
	КонецЕсли;
Конецпроцедуры

&НаКлиенте
Процедура ПослеПолученияКаталогаВр_ОтправитьФайл(Каталог,ДД)   Экспорт
			ВернемХр=ДД.ВернемХр;
			ИмяФайла = Строка(Новый УникальныйИдентификатор) + "K.txt";
			ИмяФайлаОтправки = Каталог + ИмяФайла;
			ДвоичнД=ПолучитьИзВременногоХранилища(ВернемХр);
			ДД.Вставить("ИмяФайлаОтправки",ИмяФайлаОтправки);
			ДвоичнД.НачатьЗапись(Новый ОписаниеОпоВещения("ПослеЗаписиВФайлДв",ЭтаФорма,ДД),ИмяФайлаОтправки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписиВФайлДв(ДД) Экспорт
	
	СохранитьРисунок(ДД)
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьРисунок(ДД,УжеОтправили=Ложь)
ИмяФайлаОтправки=ДД.ИмяФайлаОтправки;
Boundary=ДД.Boundary;
РазмерФайла=ДД.РазмерФайла;
	
	
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если НЕ Форм.Открыта() Тогда
		Форм.Открыть(); 
	КонецЕсли;
	
	
	Thumbprint_1=ПолучитьИзПользователя(Форм.Пользователь);
	Если Не ЗначениеЗаполнено(объект.GTIN) тогда
		Возврат;
	КонецЕслИ;	
	
	
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
	
	
	
	crsfToken="";
	Срегистра="";
	Куки="";
	СерийныйНомер="";
	Если ПодключилисьОк(Thumbprint_1,crsfToken,Срегистра,Куки,HTTPСервисЗапрос,СерийныйНомер) Тогда
	
		  
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		

		Тело=ИщемПоГТИН();
		
		
		
		HTTPЗапрос=Новый HTTPЗапрос("rest/goods/list");
		HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
				
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		
				
		HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
		Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
		
		NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
		
		Если Ответ.КодСостояния<>200 
			ИЛИ NNN=Неопределено
			Тогда
			
			Если УжеОтправили<>Истина Тогда
				
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
					СохранитьРисунок(ДД,Истина);
					Возврат;
				Иначе
					Сообщить("Не удалось сохранить рисунок");
						Возврат;
						
					КонецЕсли;
				КонецЕсли;
				
		
		
		
		
		Если NNN.data.количество()=0 Тогда
			ПоказатьПредупреждение(,"Продукцию с gtin "+Формат(Объект.GTIN,"ЧГ=")+" не нашли в каталоге маркированных товаров");
			Возврат
		ИначеЕсли NNN.data[0].goods<>Неопределено Тогда
			
			
			Попытка
				Объект.СтатусКарточки=ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ."+NNN.data[0].goods.status)
				;ОбновитьтипПродукции(NNN);
			исключение
			КонецПопытки;
					
			
			ПоказатьПредупреждение(,"Продукцию с gtin "+Формат(Объект.GTIN,"ЧГ=")+" уже нельзя менять. Для редактировании карточки необходимо обращаться в ЦРПТ");
			Этаформа.Записать();
			Возврат
			
		Иначе
			id=                    NNN.data[0].draft.id
			
		Конецесли;
		
			Попытка
				Объект.СтатусКарточки=ПредопределенноеЗначение("Перечисление.СтатусыКарточекВНК_ХамелеонЦРПТ."+NNN.data[0].draft.status)
				;ОбновитьтипПродукции(NNN);
			исключение
			КонецПопытки;
						
			
			
		
		///Возврат;
		
		
		
				//								
				HTTPЗапрос=Новый HTTPЗапрос("rest/draft/uploadphoto/"+Формат(id,"ЧГ="));
						
						HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
						HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
						
						
							HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		

						
		//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
		//HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
		HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
		HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
		HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
		HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
		
		HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
		HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
		HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(РазмерФайла,"ЧГ="));
			//HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
	   	HTTPЗапрос.Заголовки.Вставить("Content-Type", "multipart/form-data; boundary=" + Boundary);
		//	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
		
		HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
		//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
		HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
		HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
		HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
		
		
		
				HTTPЗапрос.УстановитьИмяФайлаТела(ИмяФайлаОтправки);
				Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
			NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
			Если Ответ.КодСостояния=200 Тогда
				//Errors="";
				//Если NNN.Свойство("errors",Errors) Тогда
				//	
				//	Для Каждого Стр_1 Из Errors Цикл
				//		Сообщить(Стр_1.error);
				//	Конеццикла;
				//	
				//Иначе
				//КонецЕсли;
				ИмяЗагружженногоРисунка=NNN.url[0];
				ДД.ТекСтрока.АдресРисункаURL=ИмяЗагружженногоРисунка
			Иначе
				Сообщить("Не удалось сохранить рисунок");	
			КонецЕсли;
			
	КонецЕсли;
						
						
			
	     ЭтаФорма.Записать(); 

КонецПроцедуры



Функция ПолучитьДляОтправки(АдресХра,Boundary,имяФ,Расширение,РазмерФайла)
	
	ИмяВр=ПолучитьИмяВременногоФайла();
	ДвоичнД=ПолучитьИзВременногоХранилища(АдресХра);
	ДвоичнД.Записать(ИмяВр);
	
				ИмяФайлаОтправкиНачало = ПолучитьИмяВременногоФайла("txt");
				
				
			    ФайлОтправкиНачало = Новый ЗаписьТекста(ИмяФайлаОтправкиНачало, КодировкаТекста.ANSI, Символы.ПС, Ложь);

				ФайлОтправкиНачало.ЗаписатьСтроку("--" + Boundary); 
				ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""files[]""; filename=""" +имяФ+ """"); 				
				
				ФайлОтправкиНачало.ЗаписатьСтроку("Content-Type: image/"+Расширение); 				
			    ФайлОтправкиНачало.ЗаписатьСтроку("");
			    ФайлОтправкиНачало.Закрыть();
				МассивФайловДляОбъединения = Новый Массив;
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиНачало);

			    МассивФайловДляОбъединения.Добавить(ИмяВр);
				
				//Каталог = КаталогВременныхФайлов();
				///ИмяФайла = Строка(Новый УникальныйИдентификатор) + "2.txt";
				//ИмяФайлаОтправкиКонец = Каталог + ИмяФайла;

			    ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
			    ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.ANSI, Символы.ПС, Ложь);

			    //Завершение раздела двоичных данных
			    //Завершение сообщения для сервера
				
				ФайлОтправкиКонец.ЗаписатьСтроку("");
			    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary + "--");
			    ФайлОтправкиКонец.Закрыть();
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец); // !!! 3 добавление в массив
				
				
				ИмяФайлаОтправки = ПолучитьИмяВременногоФайла("tmp");//КаталогВременныхФайлов() + "post.txt";
				
				
			    ОбъединитьФайлы(МассивФайловДляОбъединения, ИмяФайлаОтправки);
				
				ДвоичнД=Новый ДвоичныеДанные(ИмяФайлаОтправки);
				РазмерФайла=ДвоичнД.Размер();
				
				ВернутьАдресХр=ПоместитьВоВременноеХранилище(ДвоичнД,ЭтаФорма.УникальныйИдентификатор);
	            Возврат ВернутьАдресХр
	
			КонецФункции

&НаКлиенте
Процедура ЗарегистрироватьТехническуюКарточку(Команда,УжеОтправили=Ложь)
	
	ЭтаФорма.Записать();
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если НЕ Форм.Открыта() Тогда
		Форм.Открыть(); 
	КонецЕсли;
	
	
	Thumbprint_1=ПолучитьИзПользователя(Форм.Пользователь);
		
	
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
	
	
	
	crsfToken="";
	Срегистра="";
	Куки="";
	
		Если Не ЗначениеЗаполнено(объект.GTIN) тогда
			
			////СНАЧАЛА РЕГИСТРИРУЕМ
			
			КодТНВЭД=Объект.КодТНВЭДКороткий;
			Если ЗначениеЗаполнено(Объект.КодТНВЭД) тогда
				КодТНВЭД=КодПоТ();
			КонецЕсли;
			Если Не ЗначениеЗаполненО(КодТНВЭД) Тогда
				ПоказатЬПредупреждение(,"В карточке товара не заполнен ТНВЭД");
				Возврат;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Объект.НаименованиеТовара) Тогда
				ПоказатЬПредупреждение(,"В карточке товара не заполнено полное наименование");
				Возврат;
				
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Объект.БрендТорговаяМарка) Тогда
				ПоказатЬПредупреждение(,"В карточке товара не заполнен бренд!!");
				Возврат;
				
			КонецЕсли;
			////РЕГЕСТРИРУЕМ!!!
			
	КонецЕсли;	
	СерийныйНомер="";
	Если ПодключилисьОк(Thumbprint_1,crsfToken,Срегистра,Куки,HTTPСервисЗапрос,СерийныйНомер) Тогда
		
		Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		

		Если Не ЗначениеЗаполнено(объект.GTIN) тогда
			
			HTTPЗапрос=Новый HTTPЗапрос("rest/dictionaries/tm");
			HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
				
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			
			
			NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
			
			Если Ответ.КодСостояния<>200 ИЛИ NNN=Неопределено 
				Тогда
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
				Если УжеОтправили<>Истина Тогда
					ЗарегистрироватьВКаталогеТоваров(Команда,Истина);
					Возврат;
				Иначе
					ПоказатьПредупреждение(,"Не смогли добавить торговую марку "+Ответ.ПолучитьТелоКакСтроку());
					Сообщить(Ответ.ПолучитьТелоКакСтроку());
					Возврат;
					КонецЕсли;
				
			
			КонецЕсли;
			
			/////////////////////////////////////////////////////////////////////////////
			
			///////////////
			ТаблицаБрендов.Очистить();
			Для Каждого СТР_1 Из NNN Цикл
				Добав=ТаблицаБрендов.Добавить();
				Добав.ИД=СТР_1.id;
				Добав.Бренд=ВРЕГ(СТР_1.text);
				
			Конеццикла;
			НСтр=ТаблицаБрендов.НайтиСтроки(Новый Структура("Бренд",ВРЕГ(Объект.БрендТорговаяМарка)));
			Если НСтр.Количество()=0 Тогда
				///ДОБАВЛЯЕМ НОВЫЙ БРЕНД
				
				Тело=НаходимБренд();
			
				HTTPЗапрос=Новый HTTPЗапрос("rest/dictionaries/tm/add");
				
				HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
							
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
									
				//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				//HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
				HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
				HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
				HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
				HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
				
				HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
				HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
		//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
		//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
				HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
					HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
				//	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
				
				HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
				//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
				HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
				HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
				HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
				
				
				
				

						
				
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
				Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
					NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
					
				Попытка
					
				
					ИДБренда=NNN.id;
					
				Исключение
					
					ИДБренда="";
				КонецПопытки;
					
				Если Ответ.КодСостояния<>200 ИЛИ NNN=Неопределено 
					ИЛИ ИДБренда=""
					Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
					Если УжеОтправили<>Истина Тогда
						ЗарегистрироватьВКаталогеТоваров(Команда,Истина);
						Возврат;
					Иначе
						ПоказатьПредупреждение(,"Не смогли добавить торговую марку "+Ответ.ПолучитьТелоКакСтроку());
						Сообщить(Ответ.ПолучитьТелоКакСтроку());
						Возврат;
						КонецЕсли;
					
				
				КонецЕсли;
				
				

				
				
				//ПоказатьПредупреждение(,"Не нашли бренд "+Объект.БрендТорговаяМарка+" в ЦРПТ");
				//Возврат;
			Иначе
				ИДБренда=НСтр[0].Ид;
			
			КонецЕсли;
			
			
						
			HTTPЗапрос=Новый HTTPЗапрос("rest/categories/active?classifier=tnved&isKit=0&isTech=0");
		
			HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
					
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			
			
			
			NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
		
			Для Каждого Стр_1 Из NNN Цикл
				Добав=таблицаКодов.Добавить();
				Добав.Код=Стр_1.id;
				Добав.ТНВЭД=Стр_1.path;
				Добав.ЧетыреСимволаТНВЭД=Сред(Стр_1.path,1,4);
				//Добав.Код=
				
			Конеццикла;
			
			
			
			КодТНВ=Сред(КодТНВЭД,1,4);
			
			СтрН=таблицаКодов.НайтиСтроки(Новый Структура("ЧетыреСимволаТНВЭД",КодТНВ));
			Если СтрН.Количество()=0 Тогда
				
				ПоказатЬПредупреждение(,"Не правильный код ТНВЭД, его нет в каталоге маркированных товаров");
				
				Возврат;
			КонецЕсли;
									
			
			
		

			Тело=СоздатьТоварВКТМТехническая(ИдБренда,СтрН[0].Код);
			
			
			
			
			
			HTTPЗапрос=Новый HTTPЗапрос("rest/draft/generate-remainder");
			
			HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
						
					HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
				
			//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			//HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
			HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
			
			HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
			HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
			HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
			//	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			
			HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
			//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
			HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
			HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
			HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
		
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
			
			
				
			
			
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
			//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
			
			Попытка
				
				NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
			
				Объект.id=NNN.id;
				//Объект.GTIN=GTIN;
				//ЭтаФорма.Записать();
				
		HTTPЗапрос=Новый HTTPЗапрос("/rest/draft/"+Формат(Объект.id,"ЧГ="));
		HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		
		HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
					
				NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
				Объект.GTIN=		NNN.GTIN
				
			Исключение
				
				ПоказатьПредупреждение(,"Не удалсоь отправить в каталог маркированных товаров элемент справочника "+Ответ.ПолучитьТелоКакСтроку());
				Сообщить(Ответ.ПолучитьТелоКакСтроку());
				Возврат;
				
			КонецПопытки;
			
			
			
			//Возврат;
			
			
		КонецЕсли;
//ЭтаФорма.Записать();
//		Возврат;
		Если Не ЗначениеЗаполнено(объект.GTIN) Тогда
			ПоказатьПредупреждение(,"В карточке товара не заполнен gtin");
			Возврат;
		КонецЕсли;
		
		ЗапишемВСеВКарточкуЦРПТ(Куки,HTTPСервисЗапрос,crsfToken,Срегистра,УжеОтправили,Thumbprint_1);
		
		//ЗарегистрироватьВКаталогеТоваров(Команда);
		ВидимостьПоОстаткам();
	Конецесли;	
		
	
	
КонецПроцедуры
Функция СоздатьТоварВКТМТехническая(ИДБренда,КодТНВЭД)
			
			
			Джсон=Новый ЗаписьJson;
			//Джсон.УстановитьСтроку();
			Джсон.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет,,,ЭкранированиеСимволовJSON.СимволыВнеASCII));
			
			Джсон.ЗаписатьНачалоОбъекта();
			Джсон.ЗаписатьИмяСвойства("tnvedId");
			Джсон.ЗаписатьЗначение(КодТНВЭД);
			//Джсон.ЗаписатьИмяСвойства("okpd2Id");
			//Джсон.ЗаписатьЗначение(null);
			Джсон.ЗаписатьИмяСвойства("fullName");
			Джсон.ЗаписатьЗначение(Объект.НаименованиеТовара);
			Джсон.ЗаписатьИмяСвойства("brand");
			Джсон.ЗаписатьЗначение(ИДБренда);
			
			Джсон.ЗаписатьКонецОбъекта();;
			Тело=Джсон.Закрыть();
		
	Возврат тело	
КонецФункции

&НаКлиенте
Процедура ОбновитьКарточкиКоторыеВАрхиве(Команда)
	// Вставить содержимое обработчика.
	
КонецПроцедуры

&НаКлиенте
Процедура ЦветНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОткрытьФорму("Справочник.Цвет_ХамелеонЦРПТ.ФормаВыбора",,Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ЦветВелосипедаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ОткрытьФорму("Справочник.Цвет_ХамелеонЦРПТ.ФормаВыбора",,Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьСТекущимGTIN(Команда,УжеОтправили=Ложь)   Экспорт
	
	Если Не ЗначениеЗаполнено(Объект.GTIN) Тогда
		
		Сообщить("В карточке товара не заполнен GTIN");
		Возврат;
		
	Конецесли;
	
	
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если НЕ Форм.Открыта() Тогда
		Форм.Открыть(); 
	КонецЕсли;
	
	Thumbprint_1=ПолучитьИзПользователя(Форм.Пользователь);
	
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
	
	
	
	crsfToken="";
	Срегистра="";
	Куки="";
	
		//Если Не ЗначениеЗаполнено(объект.GTIN) тогда
			
			////СНАЧАЛА РЕГИСТРИРУЕМ
			
			КодТНВЭД=Объект.КодТНВЭДКороткий;
			Если ЗначениеЗаполнено(Объект.КодТНВЭД) тогда
				КодТНВЭД=КодПоТ();
			КонецЕсли;
			Если Не ЗначениеЗаполненО(КодТНВЭД) Тогда
				ПоказатЬПредупреждение(,"В карточке товара не заполнен ТНВЭД");
				Возврат;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Объект.НаименованиеТовара) Тогда
				ПоказатЬПредупреждение(,"В карточке товара не заполнено полное наименование");
				Возврат;
				
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Объект.БрендТорговаяМарка) Тогда
				ПоказатЬПредупреждение(,"В карточке товара не заполнен бренд!!");
				Возврат;
				
			КонецЕсли;
			////РЕГЕСТРИРУЕМ!!!
			
	//КонецЕсли;	
	СерийныйНомер="";
	Если ПодключилисьОк(Thumbprint_1,crsfToken,Срегистра,Куки,HTTPСервисЗапрос,СерийныйНомер) Тогда
		
		Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		

		
			////ТУТ valid
			
			Тело="{""gtin"":"""+Формат(Объект.GTIN,"ЧГ=")+""",""isKit"":false,""isSet"":false}";
			
			HTTPЗапрос=Новый HTTPЗапрос("rest/gtin/validate");
			HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
				
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
			Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
			
			
			NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
			
			Если Ответ.КодСостояния<>200 ИЛИ NNN=Неопределено Тогда
				Возврат;
			Конецесли;
			
			goodDraftId="";
			NNN.Свойство("goodDraftId",goodDraftId) ;
			
		Если Не ЗначениеЗАполнено(goodDraftId) тогда
		//	Черновик
		
		//Если Не ЗначениеЗаполнено(объект.GTIN) тогда
			
			HTTPЗапрос=Новый HTTPЗапрос("rest/dictionaries/tm");
			HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
				
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			
			
			NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
			
			Если Ответ.КодСостояния<>200 ИЛИ NNN=Неопределено 
				Тогда
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
				Если УжеОтправили<>Истина Тогда
					ЗарегистрироватьСТекущимGTIN(Команда,Истина);
					Возврат;
				Иначе
					ПоказатьПредупреждение(,"Не смогли добавить торговую марку "+Ответ.ПолучитьТелоКакСтроку());
					Сообщить(Ответ.ПолучитьТелоКакСтроку());
					Возврат;
					КонецЕсли;
				
			
			КонецЕсли;
			
			/////////////////////////////////////////////////////////////////////////////
			
			///////////////
			ТаблицаБрендов.Очистить();
			Для Каждого СТР_1 Из NNN Цикл
				Добав=ТаблицаБрендов.Добавить();
				Добав.ИД=СТР_1.id;
				Добав.Бренд=ВРЕГ(СТР_1.text);
				
			Конеццикла;
			НСтр=ТаблицаБрендов.НайтиСтроки(Новый Структура("Бренд",ВРЕГ(Объект.БрендТорговаяМарка)));
			Если НСтр.Количество()=0 Тогда
				///ДОБАВЛЯЕМ НОВЫЙ БРЕНД
				
				Тело=НаходимБренд();
			
				HTTPЗапрос=Новый HTTPЗапрос("rest/dictionaries/tm/add");
				
				HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
							
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
									
				//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				//HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
				HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
				HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
				HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
				HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
				
				HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
				HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
		//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
		//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
				HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
					HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
				//	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
				
				HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
				//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
				HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
				HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
				HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
				
				
				
				

						
				
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
				Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
					NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
					
				Попытка
					
				
					ИДБренда=NNN.id;
					
				Исключение
					
					ИДБренда="";
				КонецПопытки;
					
				Если Ответ.КодСостояния<>200 ИЛИ NNN=Неопределено 
					ИЛИ ИДБренда=""
					Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
					Если УжеОтправили<>Истина Тогда
						ЗарегистрироватьСТекущимGTIN(Команда,Истина);
						Возврат;
					Иначе
						ПоказатьПредупреждение(,"Не смогли добавить торговую марку "+Ответ.ПолучитьТелоКакСтроку());
						Сообщить(Ответ.ПолучитьТелоКакСтроку());
						Возврат;
						КонецЕсли;
					
				
				КонецЕсли;
				
				

				
				
				//ПоказатьПредупреждение(,"Не нашли бренд "+Объект.БрендТорговаяМарка+" в ЦРПТ");
				//Возврат;
			Иначе
				ИДБренда=НСтр[0].Ид;
			
			КонецЕсли;
			
			GTIN=Формат(Объект.GTIN,"ЧГ=");	
			
			HTTPЗапрос=Новый HTTPЗапрос("rest/categories/active?classifier=tnved&isKit=0&isTech=0");
		
			HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
					
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			
			
			
			NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
		
			Для Каждого Стр_1 Из NNN Цикл
				Добав=таблицаКодов.Добавить();
				Добав.Код=Стр_1.id;
				Добав.ТНВЭД=Стр_1.path;
				Добав.ЧетыреСимволаТНВЭД=Сред(Стр_1.path,1,4);
				//Добав.Код=
				
			Конеццикла;
			
			
			
			КодТНВ=Сред(КодТНВЭД,1,4);
			
			СтрН=таблицаКодов.НайтиСтроки(Новый Структура("ЧетыреСимволаТНВЭД",КодТНВ));
			Если СтрН.Количество()=0 Тогда
				
				Сообщить("Не правильный код ТНВЭД, его нет в каталоге маркированных товаров");
				
				Возврат;
			КонецЕсли;
									
			
			
		

			Тело=СоздатьТоварВКТМ(ИдБренда,СтрН[0].Код,GTIN);
			
			
			
			
			
			HTTPЗапрос=Новый HTTPЗапрос("rest/drafts");
			
			HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
						
					HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
				
			//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			//HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
			HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
			
			HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
			HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
			HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
			//	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			
			HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
			//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
			HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
			HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
			HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
		
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
			
			
				
			
			
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
			//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
			
			Попытка
				
				NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
			
				Объект.id=NNN.id;
				Объект.GTIN=GTIN;
				//ЭтаФорма.Записать();
				
			Исключение
				
				Сообщить("Не удалсоь отправить в каталог маркированных товаров элемент справочника "+Ответ.ПолучитьТелоКакСтроку());
				Сообщить(Ответ.ПолучитьТелоКакСтроку());
				Возврат;
				
			КонецПопытки;
			
		Конецесли;
			
			//Возврат;
			
			
		КонецЕсли;
//ЭтаФорма.Записать();
//		Возврат;

		ЗапишемВСеВКарточкуЦРПТ(Куки,HTTPСервисЗапрос,crsfToken,Срегистра,УжеОтправили,Thumbprint_1)
	
	

КонецПроцедуры

&НаКлиенте
Процедура ТипУпаковкиДляЗаказаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
ОбновитьПоТипу()
		
КонецПроцедуры

//++ МВ:Овчинников 30.09.2020  •1
Процедура ДобавитьРеквизитыНаФорму()
	// добавляем элемент формы "МВ_Интегратор"
	НовыйЭлемент = Элементы.Добавить("МВ_Интегратор", Тип("ПолеФормы"), Элементы.ПроизводительИмпортер);
	НовыйЭлемент.ШрифтЗаголовка				  = Новый Шрифт(, , Истина);
    НовыйЭлемент.ПутьКДанным                  = "Объект.МВ_Интегратор";
    НовыйЭлемент.Вид                          = ВидПоляФормы.ПолеВвода;
    
КонецПроцедуры //-- Овчинников


&НаКлиенте
Процедура РедактироватьЛюбуюКарточку(Команда,УжеОтправили=Ложь)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	ЭтаФорма.Записать();
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если НЕ Форм.Открыта() Тогда
		Форм.Открыть(); 
	КонецЕсли;
	
	
	Thumbprint_1=ПолучитьИзПользователя(Форм.Пользователь);
	
	
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
	
	
	
	crsfToken="";
	Срегистра="";
	Куки="";
	
		Если Не ЗначениеЗаполнено(объект.GTIN) тогда
			
			////СНАЧАЛА РЕГИСТРИРУЕМ
			
			КодТНВЭД=Объект.КодТНВЭДКороткий;
			Если ЗначениеЗаполнено(Объект.КодТНВЭД) тогда
				КодТНВЭД=КодПоТ();
			КонецЕсли;
			Если Не ЗначениеЗаполненО(КодТНВЭД) Тогда
				ПоказатЬПредупреждение(,"В карточке товара не заполнен ТНВЭД");
				Возврат;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Объект.НаименованиеТовара) Тогда
				ПоказатЬПредупреждение(,"В карточке товара не заполнено полное наименование");
				Возврат;
				
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Объект.БрендТорговаяМарка) Тогда
				ПоказатЬПредупреждение(,"В карточке товара не заполнен бренд!!");
				Возврат;
				
			КонецЕсли;
			////РЕГЕСТРИРУЕМ!!!
			
	КонецЕсли;	
		СерийныйНомер="";
Если ПодключилисьОк(Thumbprint_1,crsfToken,Срегистра,Куки,HTTPСервисЗапрос,СерийныйНомер) Тогда
		
		Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		

		Если Не ЗначениеЗаполнено(объект.GTIN) тогда
			
			HTTPЗапрос=Новый HTTPЗапрос("rest/dictionaries/tm");
			HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
				
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			
			
			NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
			
			Если Ответ.КодСостояния<>200 ИЛИ NNN=Неопределено 
				Тогда
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
				Если УжеОтправили<>Истина Тогда
					РедактироватьЛюбуюКарточку(Команда,Истина);
					Возврат;
				Иначе
					Сообщить("Не смогли добавить торговую марку "+Ответ.ПолучитьТелоКакСтроку());
					Сообщить(Ответ.ПолучитьТелоКакСтроку());
					Возврат;
					КонецЕсли;
				
			
			КонецЕсли;
			
			/////////////////////////////////////////////////////////////////////////////
			
			///////////////
			ТаблицаБрендов.Очистить();
			Для Каждого СТР_1 Из NNN Цикл
				Добав=ТаблицаБрендов.Добавить();
				Добав.ИД=СТР_1.id;
				Добав.Бренд=ВРЕГ(СТР_1.text);
				
			Конеццикла;
			НСтр=ТаблицаБрендов.НайтиСтроки(Новый Структура("Бренд",ВРЕГ(Объект.БрендТорговаяМарка)));
			Если НСтр.Количество()=0 Тогда
				///ДОБАВЛЯЕМ НОВЫЙ БРЕНД
				
				Тело=НаходимБренд();
			
				HTTPЗапрос=Новый HTTPЗапрос("rest/dictionaries/tm/add");
				
				HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
							
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
									
				//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
				//HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
				HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
				HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
				HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
				HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
				
				HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
				HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
		//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
		//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
				HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
					HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
				//	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
				
				HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
				//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
				HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
				HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
				HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
				
				
				
				

						
				
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
				Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
					NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
					
				Попытка
					
				
					ИДБренда=NNN.id;
					
				Исключение
					
					ИДБренда="";
				КонецПопытки;
					
				Если Ответ.КодСостояния<>200 ИЛИ NNN=Неопределено 
					ИЛИ ИДБренда=""
					Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
					Если УжеОтправили<>Истина Тогда
						РедактироватьЛюбуюКарточку(Команда,Истина);
						Возврат;
					Иначе
						Сообщить("Не смогли добавить торговую марку "+Ответ.ПолучитьТелоКакСтроку());
						Сообщить(Ответ.ПолучитьТелоКакСтроку());
						Возврат;
						КонецЕсли;
					
				
				КонецЕсли;
				
				

				
				
				//ПоказатьПредупреждение(,"Не нашли бренд "+Объект.БрендТорговаяМарка+" в ЦРПТ");
				//Возврат;
			Иначе
				ИДБренда=НСтр[0].Ид;
			
			КонецЕсли;
			
			
			Тело=ДляГенерацииГТИН();
			

			
			HTTPЗапрос=Новый HTTPЗапрос("rest/gtin/generate");
			
			HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
								
						
			//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			//HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
			HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
			
			HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
			HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
			HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			
			HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
			//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
			HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
			HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
			HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
		
			HTTPЗапрос.Заголовки.Вставить("certSerial", СерийныйНомер);
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		

				
					
			
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
//			HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
			Если Ответ.КодСостояния<>200 Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
					Если УжеОтправили<>Истина Тогда
						РедактироватьЛюбуюКарточку(Команда,Истина);
						Возврат;
					Иначе
						
						NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
						
						Попытка
							Сообщить("Не смогли получить GTIN с каталога маркированных товаров ");
							Для Каждого Стр Из NNN.errors Цикл
								Сообщить(Стр);	
							Конеццикла; 
							
						Исключение
						
							Сообщить("Не смогли получить GTIN с каталога маркированных товаров "+Ответ.ПолучитьТелоКакСтроку());
						КонецПопытки;
							//Сообщить(Ответ.ПолучитьТелоКакСтроку());
						Возврат;
					КонецЕсли;
				Возврат;
			КонецЕсли;
			
			NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
			
			GTIN=NNN.gtin;
			
			HTTPЗапрос=Новый HTTPЗапрос("rest/categories/active?classifier=tnved&isKit=0&isTech=0");
		
			HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
					
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			
			
			
			NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
		
			Для Каждого Стр_1 Из NNN Цикл
				Добав=таблицаКодов.Добавить();
				Добав.Код=Стр_1.id;
				Добав.ТНВЭД=Стр_1.path;
				Добав.ЧетыреСимволаТНВЭД=Сред(Стр_1.path,1,4);
				//Добав.Код=
				
			Конеццикла;
			
			
			
			КодТНВ=Сред(КодТНВЭД,1,4);
			
			СтрН=таблицаКодов.НайтиСтроки(Новый Структура("ЧетыреСимволаТНВЭД",КодТНВ));
			Если СтрН.Количество()=0 Тогда
				
				Сообщить("Не правильный код ТНВЭД, его нет в каталоге маркированных товаров");
				
				Возврат;
			КонецЕсли;
									
			
			
		

			Тело=СоздатьТоварВКТМ(ИдБренда,СтрН[0].Код,GTIN);
			
			
			
			
			
			HTTPЗапрос=Новый HTTPЗапрос("rest/drafts");
			
			HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
						
					HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
				
			//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			//HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
			HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
			
			HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
			HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
			HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
			//	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			
			HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
			//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
			HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
			HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
			HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
		
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
			
			
				
			
			
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
			//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
			
			Попытка
				
				NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
			
				Объект.id=NNN.id;
				Объект.GTIN=GTIN;
				//ЭтаФорма.Записать();
				
			Исключение
				
				Сообщить("Не удалсоь отправить в каталог маркированных товаров элемент справочника "+Ответ.ПолучитьТелоКакСтроку());
				Сообщить(Ответ.ПолучитьТелоКакСтроку());
				Возврат;
				
			КонецПопытки;
			
			
			
			//Возврат;
			
			
		КонецЕсли;
//ЭтаФорма.Записать();
//		Возврат;

		ЗапишемВСеВКарточкуЦРПТ(Куки,HTTPСервисЗапрос,crsfToken,Срегистра,УжеОтправили,Thumbprint_1,Истина)
Конецесли;
	
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьGTIN(Команда,УжеОтправили=Ложь)
	// Вставить содержимое обработчика.
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если НЕ Форм.Открыта() Тогда
		Форм.Открыть(); 
	КонецЕсли;
	
	//ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗарегистрироватьВКаталогеТоваров(Форм.Пользователь,Объект.Ссылка);
	//Возврат;
	
	Thumbprint_1=ПолучитьИзПользователя(Форм.Пользователь);
	
	 
	 	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
			Прокси=Новый ИнтернетПрокси;
			Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
			
		//	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		//	HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		Иначе
		///	HTTPСервисЗапрос=Новый HTTPСоединение("account.integrators.nk.crpt.tech",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//HTTPСервисЗапрос=Новый HTTPСоединение("xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.КаталогСайт,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
	
		
		СерийныйНомер="";
		Куки="";
		Срегистра="";
		crsfToken="";
	 Если ПодключилисьОк(Thumbprint_1,crsfToken,Срегистра,Куки,HTTPСервисЗапрос,СерийныйНомер) Тогда
	
	Для Каждого Стр_1 Из Элементы.ДополнительныеУпаковки.ВыделенныеСтроки Цикл
		Текд=ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки.НайтиПоИдентификатору(Стр_1);
	 
		Если ЗначениеЗаполнено(Текд.КодТовараУпаковки) Тогда
			Продолжить;
		Конецесли;

		
					Тело=ДляГенерацииГТИН(ТекД.УровеньУпаковки,Формат(Объект.GTIN,"ЧГ="));
			

			
			HTTPЗапрос=Новый HTTPЗапрос("rest/gtin/generate");
			
			HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
								
						
			//	5HTTPЗапрос.Заголовки.Вставить("Accept","application/json, text/plain, */*");
			//HTTPЗапрос.Заголовки.Вставить("Accept-Encoding","gzip, deflate, br");
			HTTPЗапрос.Заголовки.Вставить("Accept-Language","ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Headers", "Origin, X-Requested-With, Cont…cept, Credentials, Set-Cookie");
			HTTPЗапрос.Заголовки.Вставить("Access-Control-Allow-Methods", "*");
			
			HTTPЗапрос.Заголовки.Вставить("Cache-Control", "private, max-age=0, no-cache, no-store");
			HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Dest","empty");
	//		HTTPЗапрос.Заголовки.Вставить("Sec-Fetch-Mode", "cors");
			HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
			HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
			
			HTTPЗапрос.Заголовки.Вставить("Host", Thumbprint_1.КаталогСайт);
			//"xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
			HTTPЗапрос.Заголовки.Вставить("Origin", "https://"+Thumbprint_1.КаталогСайт);
			HTTPЗапрос.Заголовки.Вставить("Referer", "https://"+Thumbprint_1.КаталогСайт+"/product?type=unit");
			HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0");
		
			HTTPЗапрос.Заголовки.Вставить("certSerial", СерийныйНомер);
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+Срегистра);
			
			HTTPЗапрос.Заголовки.Вставить("X-Csrf-Token",crsfToken);
		

				
					
			
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
//			HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("POST",HTTPЗапрос);
			Если Ответ.КодСостояния<>200 Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
					Если УжеОтправили<>Истина Тогда
						СгенерироватьGTIN(Команда,Истина);
						Возврат;
					Иначе
						
						NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
						
						Попытка
							Сообщить("Не смогли получить GTIN с каталога маркированных товаров ");
							Для Каждого Стр Из NNN.errors Цикл
								Сообщить(Стр);	
							Конеццикла; 
							
						Исключение
						
							Сообщить("Не смогли получить GTIN с каталога маркированных товаров "+Ответ.ПолучитьТелоКакСтроку());
						КонецПопытки;
							//Сообщить(Ответ.ПолучитьТелоКакСтроку());
						Возврат;
					КонецЕсли;
				Возврат;
			КонецЕсли;
			
			NNN=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Ответ.ПолучитьТелоКакСтроку());
			
			ТекД.КодТовараУпаковки=NNN.gtin;

		
	Конеццикла;
		Конецесли;	
КонецПроцедуры

&НаКлиенте
Процедура Таблица7КодТовараВложенияВУпаковкуНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ТекД=Элементы.ДополнительныеУпаковки.ТекущиеДанные;
	ГТИН="";
	Если ТекД<>Неопределено Тогда
		ГТИН=ТекД.КодТовараУпаковки;
	Конецесли;
	СписокВ=Элементы.Таблица7КодТовараВложенияВУпаковку.СписокВыбора;
	СписокВ.Очистить();
	СписокВ.Добавить(Формат(Объект.GTIN,"ЧГ="),"Потребительская упаковка "+Формат(Объект.GTIN,"ЧГ="));
	Для Каждого Стр_1 Из ДополнительныйРеквизитОбщиеНК.ДополнительныеУпаковки Цикл
		Если гТИН<>Стр_1.КодТовараУпаковки И ЗначениеЗАполнено(Стр_1.КодТовараУпаковки) И ЗначениеЗаполнено(Стр_1.УровеньУпаковки) Тогда
			Если Стр_1.УровеньУпаковки=ПредопределенноеЗначение("Перечисление.УровниУпаковок_ХамелеонЦРПТ.ГрупповаяПотребительскаяУпаковка") тогда
				СписокВ.Добавить(Формат(Стр_1.КодТовараУпаковки,"ЧГ="),"Групповая потребительская упаковка "+Формат(Стр_1.КодТовараУпаковки,"ЧГ="));
			ИначеЕсли Стр_1.УровеньУпаковки=ПредопределенноеЗначение("Перечисление.УровниУпаковок_ХамелеонЦРПТ.ТранспортнаяУпаковка") тогда
				СписокВ.Добавить(Формат(Стр_1.КодТовараУпаковки,"ЧГ="),"Транспортрная упаковка "+Формат(Стр_1.КодТовараУпаковки,"ЧГ="));
			Конецесли;
			
			
		Конецесли;
	Конеццикла;
	
	
	
КонецПроцедуры
