	Этап="1. Регистрация установки экземпляра интеграционного решения";
	
	Если Константы.РежимРаботыХамелеонЦРПТ.Получить()=2 Тогда
		
		
		ТекПользователь=ХранилищеСистемныхНастроек.Загрузить("ТекущийПользователь_ХамелеонЦРПТ","ТекущийПользователь_ХамелеонЦРПТ");
		Thumbprint_1=Обработки._Запуск_ХамелеонЦРПТ.ПолучитьИзПользователя(ТекПользователь);
		
		///1. Регистрация участника
		
		ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Запуск,"");
		Сообщить(Этап+". Запуск");
		
		Успешно=Ложь;
		Ошибка="";
		//ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗарегистрироватьУчетнуюСистему(ТекПользователь,Успешно,Ошибка);
		
		Если Успешно Тогда
			Сообщить(Этап+". Успешно");
			ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Остановка,"Успешно");
		Иначе
			Сообщить(Этап+". Ошибка: "+Ошибка);
			ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Ошибка,Ошибка);
			
		Конецесли;
		
		
		Этап="2.1. Получение аутенификационного токена посредством методов единой аутентификации ГИС МТ";
		
		ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Запуск,"");
		Сообщить(Этап+". Запуск");
		
		Успешно=Ложь;
		Ошибка="";
		Токен=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПодключениеКСУЗ_ХамелеонЦРПТ(Thumbprint_1,,Успешно,Ошибка);
		
		Если Успешно Тогда
			Сообщить(Этап+". Успешно");
			ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Остановка,"Успешно");
		Иначе
			Сообщить(Этап+". Ошибка: "+Ошибка);
			ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Ошибка,Ошибка);
			
		Конецесли;
		
		Этап="3. Проверка доступности СЗУ";
		
		ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Запуск,"");
		Сообщить(Этап+". Запуск");
		
		Успешно=Ложь;
		Ошибка="";
		ОбщийМодуль_НаСервере_ХамелеонЦРПТ.PING(Thumbprint_1,Успешно,Ошибка);
		
		Если Успешно Тогда
			Сообщить(Этап+". Успешно");
			ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Остановка,"Успешно");
		Иначе
			Сообщить(Этап+". Ошибка: "+Ошибка);
			ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Ошибка,Ошибка);
			
		Конецесли;
		
		//Этап="4.1. Создание заказа для различных способов оплаты. 4.1.3. С оплатой по нанесению";
		//
		//ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Запуск,"");
		//Сообщить(Этап+". Запуск");
		//
		////Успешно=Ложь;
		////Ошибка="";
		//ОбщийМодуль_НаСервере_ХамелеонЦРПТ.СоздатьИОтправитьЗаказыНаКМВЦРПТ_ОплатаПоНанесению(ТекПользователь,10,500);
		//
		////Если Успешно Тогда
		//	Сообщить(Этап+". Отправлено");
		//	ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Остановка,"Заказы на КМ отправлены");
		////Иначе
		////	Сообщить(Этап+". Ошибка: "+Ошибка);
		////	ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Ошибка,Ошибка);
		////	
		////Конецесли;
		//
		
		Этап="4.1. Создание заказа КМ";
		
		
		ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Запуск,"");
		Сообщить(Этап+". Запуск");
		
		//Успешно=Ложь;
		//Ошибка="";
		ОбщийМодуль_НаСервере_ХамелеонЦРПТ.СоздатьИОтправитьЗаказыНаКМВЦРПТ_ОплатаПоНанесению(ТекПользователь,10,500);
		
		//Если Успешно Тогда
			Сообщить(Этап+". Отправлено");
			ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Остановка,"Заказы на КМ отправлены");
		//Иначе
		//	Сообщить(Этап+". Ошибка: "+Ошибка);
		
		Этап="5. Получение сведений о статусе массива КМ из заказа на эмиссию кодов маркировки";
		
		
		ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Запуск,"");
		Сообщить(Этап+". Запуск");
		
		//Успешно=Ложь;
		//Ошибка="";
		ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьСтатусыПоЗаказамНаКМ(ТекПользователь);
		
		//Если Успешно Тогда
			Сообщить(Этап+". Отправлено");
			ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Остановка,"Заказы на КМ отправлены");
		//Иначе
		//	Сообщить(Этап+". Ошибка: "+Ошибка);
		
		
		Этап="6. Получение эмитированных кодов маркировки. 6.1. Экспортируются только коды идентификации из ПОСС";
		
		ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Запуск,"");
		Сообщить(Этап+". Запуск");
		
		//Успешно=Ложь;
		//Ошибка="";
		ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьКМПоЗаказамНаКМ(ТекПользователь);
		
		//Если Успешно Тогда
			Сообщить(Этап+". Отправлено");
			ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Остановка,"Заказы на КМ отправлены");
		//Иначе
		//	Сообщить(Этап+". Ошибка: "+Ошибка);
		
		
	Иначе
		Сообщить(Этап+". Ошибка: "+"Регламент предназначен только для тестового контура.");
		ОбщийМодуль_ВЫПОЛНИТЬ_ВЫЗОВОМ_СЕРВЕРА_ХамелеонЦРПТ.ЗаписатьВЖурналРегламент(Этап,Перечисления.ТипЗапускаРегламентногоЗадания_ХамелеонЦРПТ.Ошибка,"Регламент предназначен только для тестового контура.");
		
	Конецесли;