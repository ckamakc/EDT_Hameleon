Функция ПолучитьИзПользователя() Экспорт
	Возврат Обработки._Запуск_ХамелеонЦРПТ.ПолучитьИзПользователя(Пользователь);
КонецФункции


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	Форм=ОткрытьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Пользователь=Форм.Пользователь;
	ЭтаФорма.Активизировать();
	Thumbprint_1=ПолучитьИзПользователя();	
	СРегистра="";
	Если Не ЗначениеЗаполнено(СРегистра) тогда
		Попытка
			СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена_ЛДМП(Thumbprint_1);	
		исключение
			СРегистра=Неопределено;
		КонецПопытки;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СРегистра) Тогда
		ПоказатьПредупреждение(,"Не удалось получить токен по организации");
		Возврат;
	Конецесли;
	
		АдресКАПИ=СтрЗаменить(Thumbprint_1.АдресКАПИ,"api.","");
		
			
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;   
			
				Куки="lk-auth-token="+Срегистра ;
				
				
	
	
	СколькоНаСтранице=100;
	Если Не ЗначениеЗаполнено(ИНН) Тогда
		Отказ=Истина;
	Иначе
		Смещение=0;
	//	Пока Истина Цикл
			
		
										Чтен=Новый  ЗаписьJSON;
										Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
										Чтен.ЗаписатьНачалоОбъекта();
										Чтен.ЗаписатьИмяСвойства("start_from");	
										Чтен.ЗаписатьЗначение(Смещение);
										Чтен.ЗаписатьИмяСвойства("count");
										Чтен.ЗаписатьЗначение(СколькоНаСтранице);
										Чтен.ЗаписатьИмяСвойства("filter");
										Чтен.ЗаписатьНачалоОбъекта();
										
										Чтен.ЗаписатьИмяСвойства("inn");
										Чтен.ЗаписатьЗначение(ИНН);
										
										Чтен.ЗаписатьИмяСвойства("reg_entity_type");
										Чтен.ЗаписатьЗначение("1");
										
													       Чтен.ЗаписатьКонецОбъекта();
										
										//Чтен.ЗаписатьЗначение("{}");
													       Чтен.ЗаписатьКонецОбъекта();
													
													Тело=Чтен.Закрыть();//"{""start_from"":0,""count"":20,""filter"":{}}";
										Тело=СтрЗаменить(Тело,Символы.ПС,"");
										Тело=СтрЗаменить(Тело,Символы.ВК,"");
										
						
						
								HTTPЗапрос=Новый HTTPЗапрос("api/v1/reestr_partners/filter");
								          HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
								
												//	Иначе
												//	HTTPЗапрос=Новый HTTPЗапрос("documents/"+Стр.document_id+"");
											/////			
													Куки="certSerial="+Thumbprint_1.Thumbprint_1+";lk-auth-token="+Срегистра ;
														
														HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
														
												//	КонецЕсли;
											HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
											HTTPЗапрос.Заголовки.Вставить("Authorization","token "+СРегистра);
											HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
											//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
											///Константин           
											//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
											Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
											Текст1=Ответ.ПолучитьТелоКакСтроку();
											//ЗаписатьКонтрагента(Текст1);
										NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON_Соответствие(Текст1);
										ТаблицаАдресов.Очистить();;
										Для Каждого Стр_1 Из NNN["filtered_records"] Цикл
											Для Каждого Стр_2 ИЗ Стр_1["branches"] Цикл
												Добав=ТаблицаАдресов.Добавить();
												Добав.ид=Стр_2["id"];
												Добав.Статус=Стр_2["status"];
												Добав.Адрес=Стр_2["address_resolved"]["address"];
												Добав.ИдентификаторФИАС_houseguid=Стр_2["address_fias"]["houseguid"];
												Добав.ИдентификаторФИАС_aoguid=Стр_2["address_fias"]["aoguid"];
												
												
											Конеццикла;
											
											
										Конеццикла;
										
										
	//	 Конеццикла;
	КонецЕслИ;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Параметры.Свойство("Контрагент",КОнтрагент);
	ИНН=Контрагент.ИНН;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаАдресовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ТекД=Элементы.ТаблицаАдресов.ТекущиеДанные;
	ЭтаФорма.Закрыть(Новый Структура("ИдентификаторФИАС_houseguid,Адрес,РегистрационныйНомер,ИдентификаторФИАС_aoguid",
	ТекД.ИдентификаторФИАС_houseguid,ТекД.Адрес,ТекД.Ид,текд.ИдентификаторФИАС_aoguid));
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьАдрес(Команда)
	// Вставить содержимое обработчика.
	ТаблицаАдресовВыбор("", "", "", "")
КонецПроцедуры
