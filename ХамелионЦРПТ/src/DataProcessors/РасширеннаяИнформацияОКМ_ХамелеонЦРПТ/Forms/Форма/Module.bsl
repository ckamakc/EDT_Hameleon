
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Параметры.Свойство("НомерКМ",НомерКМ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	
КонецПроцедуры

Функция ПолучитьИзПользователя(Пользователь)
	Возврат Обработки._Запуск_ХамелеонЦРПТ.ПолучитьИзПользователя(Пользователь)
Конецфункции

&НаСервереБезКонтекста
Функция ОрганИНН(Thumbprint_1)
	Возврат СтрЗаменить(Thumbprint_1.ТекущийПользователь.Организация.Наименование,"""","")+
	Thumbprint_1.ТекущийПользователь.Организация.ИНН
КонецФункции
&НаКлиенте
Процедура НомерКМПриИзменении(Элемент,УжеОтправили=Ложь) Экспорт
	// Вставить содержимое обработчика.
			Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
			Если НЕ Форм.Открыта() Тогда
				Форм.открыть();
				ЭтаФорма.Активизировать();
			КонецЕсли;
			
			Thumbprint_1=ПолучитьИзПользователя(Форм.Пользователь);
			
			
	Если СтрДлина(НомерКМ)<24 И  
				Thumbprint_1.НаименованиеСтенда="Фармацевтика"
				Тогда
			НомерКМ=СтрЗаменить(НомерКМ,Символ(29),"");
			НомерКМ=СтрЗаменить(НомерКМ,"|","");
			НомерКМ=Сред(НомерКМ,1,20);
			Если СтрДлина(НомерКМ)=19 Тогда
				НомерКМ=Сред(НомерКМ,1,18);
			КонецЕсли;
			
			
		КонецЕсли;
					
			
	Если Переключатель<>1  Тогда
	Если ЗначениеЗаполнено(НомерКМ) Тогда
		Если Thumbprint_1.НаименованиеСтенда<>"Табак"
			И Thumbprint_1.НаименованиеСтенда<>"Альтернативный табак"
			Тогда
			Если Thumbprint_1.НаименованиеСтенда="Фото" Тогда
				
					НомерКМ=Сред(НомерКМ,1,38);
				ИначеЕсли Thumbprint_1.НаименованиеСтенда="Молоко" Тогда
					
					Если СтрДлина(НомерКМ)<=30 Тогда
						НомерКМ=Сред(НомерКМ,1,24);
					Конецесли;
					
				Иначе
					НомерКМ=Сред(НомерКМ,1,31);
				Конецесли;	
					
			Иначе
					
				Если Сред(НомеркМ,1,3)="010"
					И Сред(НомерКМ,17,2)="21"
					Тогда
					НомерКМ="("+Сред(НомерКМ,1,2)+")"+Сред(НомерКМ,3,14)+"("+Сред(НомерКМ,17,2)+")"+Сред(НомерКМ,19);
					
				ИначеЕсли Сред(НомерКМ,1,2)<>"01" тогда
					НомерКМ=Сред(НомерКМ,1,21);
					
				КонецЕсли;
					
					
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		Если Переключатель=1 Тогда
			
				Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
					Прокси=Новый ИнтернетПрокси;
					Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
				
					HTTPСервисЗапрос=Новый HTTPСоединение("mobile.api.crpt.ru",,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				Иначе
					HTTPСервисЗапрос=Новый HTTPСоединение("mobile.api.crpt.ru",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				КонецЕсли;
			Если Thumbprint_1.НаименованиеСтенда="Табак"
				ИЛИ Thumbprint_1.НаименованиеСтенда="Альтернативный табак" Тогда
										Если Сред(НомерКМ,17,2)="21" 
											И Сред(НомерКМ,1,3 )="010"
											Тогда
											НомерКМ=Сред(НомерКМ,1,25);
										ИначеЕсли Сред(НомерКМ,1,2)<>"01"  Тогда
											НомерКМ=Сред(НомерКМ,1,21);
								
										КонецЕсли;
										
			КонецЕсли;
				
	НомерКМ=Стрзаменить(НомерКМ,Символ(29),символы.Таб+"<GS>");
	
				Тело=ЗаписатьСтрокуВОЫЩТ(НомерКМ);
	


					HTTPЗапрос=Новый HTTPЗапрос("mobile/check");
					HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
					ОрганИНН=ОрганИНН(Thumbprint_1);
	//HTTPЗапрос.Заголовки.Вставить("User-agent",ОрганИНН);
					//HTTPЗапрос.Заголовки.Вставить("Cookie",ОрганИНН);					
					HTTPЗапрос.Заголовки.Вставить("User-agent",ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(ОрганИНН));
					//"Mozilla/5.0 (Windows NT 10.0 Win64x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36");					
					//HTTPЗапрос.Заголовки.Вставить("org",ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(ОрганИНН));
					HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
					//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
					///Константин           
					//Тело="task=getItemByGTIN&lng=ru&keyValue="+ДополнитьСтроку(Формат(Стр_1.GTINНаименованиеТовара,"ЧГ="));
			//		HTTPЗапрос.УстановитьТелоИзСтроки();
					//Тело);
					Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
					Если Ответ.КодСостояния=200 Тогда
						Текст1=Ответ.ПолучитьТелоКакСтроку();
						ЗагружаемШаблоныНасервере(Текст1,Форм.Пользователь);
					Иначе
						
						ТаблицаПолей.ПолучитьЭлементы().Очистить();
							
						//КонецЕсли;
					КонецЕсли;
				ИначеЕсли Переключатель=2 Тогда
					ОпределитьКМПоНовому(Thumbprint_1,Форм,Элемент);
				
		ИначеЕсли Переключатель=3 Тогда	
					ОпределитьКМПоНовомуV4(Thumbprint_1,Форм,Элемент);
			
					
	Иначе
			Если Thumbprint_1.НаименованиеСтенда="Фармацевтика" Тогда
				
				Если СтрДлина(НомерКМ)=18 Тогда
				ОпределимАссинхронно(Форм.Пользователь,Thumbprint_1,НомерКМ);
				
			Иначе
					Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
						Прокси=Новый ИнтернетПрокси;
						Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
					
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
					Иначе
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
		
		

				СРегистра="";///Thumbprint_1.Thumbprint_1;
				Если Не ЗначениеЗаполнено(СРегистра) тогда
					Попытка
						СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена_ЛДМП(Thumbprint_1);	
					исключение
						СРегистра=Неопределено;
					КонецПопытки;
				КонецЕсли;
				Если СтрДлина(НомерКМ)=18 Тогда
					
					
						
								HTTPЗапрос=Новый HTTPЗапрос("api/v1/reestr/sscc/"+НомерКМ+"/full-hierarchy");
					
					
				Иначе
				
									Чтен=Новый  ЗаписьJSON;
										Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
										Чтен.ЗаписатьНачалоОбъекта();
										
										Чтен.ЗаписатьИмяСвойства("filter");
										
										Чтен.ЗаписатьНачалоОбъекта();
										
										Чтен.ЗаписатьИмяСвойства("sgtins");
										Чтен.ЗаписатьНачалоМассива();
										Чтен.ЗаписатьЗначение(НомерКМ);
										
										Чтен.ЗаписатьКонецМассива();
										
													       Чтен.ЗаписатьКонецОбъекта();
										
										//Чтен.ЗаписатьЗначение("{}");
													       Чтен.ЗаписатьКонецОбъекта();
													
													Тело=Чтен.Закрыть();//"{""start_from"":0,""count"":20,""filter"":{}}";
										Тело=СтрЗаменить(Тело,Символы.ПС,"");
										Тело=СтрЗаменить(Тело,Символы.ВК,"");
										
						
						
								HTTPЗапрос=Новый HTTPЗапрос("api/v1/reestr/sgtin/public/sgtins-by-list");
								          HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
										  
										 КонецЕсли;
												//	Иначе
												//	HTTPЗапрос=Новый HTTPЗапрос("documents/"+Стр.document_id+"");
											/////			
													Куки="certSerial="+Thumbprint_1.Thumbprint_1+";lk-auth-token="+Срегистра ;
														
														HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
														
												//	КонецЕсли;
											HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
											HTTPЗапрос.Заголовки.Вставить("Authorization","token "+СРегистра);
											HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
											//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
											///Константин           
											//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
											
		Если СтрДлина(НомерКМ)=18 Тогда
													Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
				                  		ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(31);
											Иначе
											Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
				                  		ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(5);
											КонецЕсли;
											Текст1=Ответ.ПолучитьТелоКакСтроку();
						ЗагружаемШаблоныНасервере(Текст1,Форм.Пользователь);
			КонецЕсли;
				
		Иначе
		//Thumbprint_1="";
			//ПолучитьИзПользователя();	
			
СтруктураНастроек=Неопределено;                                                    СерийныйНомер="";
							СРегистра=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьТокенСрегистра(Thumbprint_1.Thumbprint_1,СтруктураНастроек);
									СерийныйНомер=СтруктураНастроек.СерийныйНомер;
							
								Если Не ЗначениеЗаполнено(СРегистра)  Тогда
									СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
								Иначе
								   
										Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
											Прокси=Новый ИнтернетПрокси;
											Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
										
											HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
										Иначе
										
											HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
										КонецЕсли;
										
										HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/balance/all");
										HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
										HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
										//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
										///Константин           
										Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
										//Текст1=Ответ.ПолучитьТелоКакСтроку();
										Если Ответ.КодСостояния<>200 Тогда
											СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
										КонецЕсли;
						ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(5);
							
								КонецЕсли;
			Если Не ЗначениеЗаполнено(СРегистра) Тогда
				ПоказатьПредупреждение(,"Не удалось получить токен по организации");
				Возврат;
			Конецесли;
			
			Стр_11=НомерКМ;
			//Для Каждого Стр_11 Из Массив Цикл
				Если  Ложь Тогда
					//ОбработкаWEBНаСервере Тогда
				//Если НЕ ЗагрузитьНаСервере(Thumbprint_1,Обр.Организации[0].Организация,УжеОтправили,СРегистра) Тогда
				//	Если УжеОтправили=Истина Тогда
				//	Иначе
				//		ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
						//Загрузить(Команда,Истина)
				//	КонецЕсли;
			
				//КонецЕсли;
			Иначе
				
				
					Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
						Прокси=Новый ИнтернетПрокси;
						Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
					
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
					Иначе
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
		
		
		
			//HTTPСервисЗапрос=Новый HTTPСоединение("mobile.api.crpt.ru",,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			//
			//СформироватьФайлДляОтправки=НомерКМ;
			//Добав=base64Строка(ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьДвоичныеДанныеИзСтроки_Сервер(
			//СформироватьФайлДляОтправки,КодировкаТекста.UTF8,Ложь));
			//			Добав=СтрЗаменить(Добав,Символы.ПС,"\r\n");
			//		Добав=СтрЗаменить(Добав,Символы.ВК,"\r\n");
			//		Добав=СтрЗаменить(Добав,"\r\n","");

			//		
			//		Подписанный="";
			//ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ПодписатьФайл(Thumbprint_1.Внешняя,СформироватьФайлДляОтправки ,Thumbprint_1.Thumbprint_1,Подписанный,Истина);
			//
			//
			//			Подписанный=СтрЗаменить(Подписанный,Символы.ПС,"\r\n");
			//		Подписанный=СтрЗаменить(Подписанный,Символы.ВК,"");
			//		 Подписанный=СтрЗаменить(Подписанный,"\r\n","");
			//		
			//Тело="{
			//|""product_document"":"""+Добав+""",
			//|""document_format"": ""MANUAL"",";
			//Тело=Тело+"
			//|""signature"":"""+Подписанный+"""}";
			//
			//
			//
			////HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/marked_products/info?cis="+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(НомерКМ));;
			//HTTPЗапрос=Новый HTTPЗапрос("");;
			////HTTPЗапрос=Новый HTTPЗапрос("api/v3/product/search?gtin="+ДополнитьСтроку(Стр_11)+"&limit=100&offset=0");;
			//HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			//HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
			//HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
			////HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
			/////Константин           
			//Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			//Текст1=Ответ.ПолучитьТелоКакСтроку();
			//
			
			
			
			
					
					//ИНН=ВернутьИНН(Обр.Организации[0].Организация );
 			что=Thumbprint_1.что;
					
			HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/marked_products/info?cis="+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(НомерКМ)+"&pg="+что);;
			//HTTPЗапрос=Новый HTTPЗапрос("api/v3/product/search?gtin="+ДополнитьСтроку(Стр_11)+"&limit=100&offset=0");;
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
			//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
			///Константин           
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			Текст1=Ответ.ПолучитьТелоКакСтроку();
			
			числоЗагрузили=0;
			
			Тотал=0;
			Если Ответ.КодСостояния=200 Тогда
				ЗагружаемШаблоныНасервере(Текст1,Форм.Пользователь);
					
				//	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗагружаемГТИН_ПоМарке(Текст1,ИННПоставщика,Тотал,числоЗагрузили,Thumbprint_1);
					
			ИначеЕсли Ответ.КодСостояния=401 
				ИЛИ Ответ.КодСостояния=502  
				Тогда
				Если УжеОтправили=Истина Тогда
		ТаблицаПолей.ПолучитьЭлементы().Очистить();
					Добав=ТаблицаПолей.ПолучитьЭлементы().Добавить();
					Добав.ИмяПоля=Ответ.КодСостояния;
					Попытка
						Добав.Значение=Ответ.ПолучитьТелоКакСтроку();
					Исключение
					КонецПопытки;
						ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
					Иначе
						
СтруктураНастроек=Неопределено;                                                    СерийныйНомер="";
							СРегистра=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьТокенСрегистра(Thumbprint_1.Thumbprint_1,СтруктураНастроек);
									СерийныйНомер=СтруктураНастроек.СерийныйНомер;
							
								Если Не ЗначениеЗаполнено(СРегистра) ИЛИ Не ЗначениеЗаполнено(СерийныйНомер) Тогда
									СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
								Иначе
								   
										Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
											Прокси=Новый ИнтернетПрокси;
											Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
										
											HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
										Иначе
										
											HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
										КонецЕсли;
										
										HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/balance/all");
										HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
										HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
										//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
										///Константин           
										Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
										//Текст1=Ответ.ПолучитьТелоКакСтроку();
										Если Ответ.КодСостояния<>200 Тогда
											СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
										КонецЕсли;
											
								КонецЕсли;
						//ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
						НомерКМПриИзменении(Элемент,Истина)					
						//Загрузить(Команда,Истина)			
					КонецЕсли
				Иначе
					
					ОпределитьКМПоНовому(Thumbprint_1,Форм,Элемент);
					
				//Иначе
				//	ТаблицаПолей.ПолучитьЭлементы().Очистить();
				//	Добав=ТаблицаПолей.ПолучитьЭлементы().Добавить();
				//	Добав.ИмяПоля=Ответ.КодСостояния;
				//	Попытка
				//		Добав.Значение=Ответ.ПолучитьТелоКакСтроку();
				//	Исключение
				//	КонецПопытки;
					
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		КонецЕсли;
	//КонецЦикла;                       
		//Сообщить("Загружено "+Строка(1));		
	//КонецЕслИ;
		ПодключитьОбработчикОжидания("аа",0.1,истина);	
	ЭтаФорма.Активизировать();
КонецПроцедуры

Функция ВернутьSUB(Пользователь)
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Договора_ХамелеонЦРПТ.РегистрационныйНомер КАК ссылка
		|ИЗ
		|	Справочник.Договора_ХамелеонЦРПТ КАК Договора_ХамелеонЦРПТ
		|ГДЕ
		|	Договора_ХамелеонЦРПТ.Владелец = &Владелец
		|	И Договора_ХамелеонЦРПТ.РегистрационныйНомер <> """"";
	
	Запрос.УстановитьПараметр("Владелец", Пользователь.Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Возврат ВыборкаДетальныеЗаписи.Ссылка
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
КонецФункции


&НаКлиенте
Процедура ОпределимАссинхронно(Пользователь,Thumbprint_1,НомерКМ)
	
				СРегистра="";///Thumbprint_1.Thumbprint_1;
				Если Не ЗначениеЗаполнено(СРегистра) тогда
					Попытка
						СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена_ЛДМП(Thumbprint_1);	
					исключение
						СРегистра=Неопределено;
					КонецПопытки;
				КонецЕсли;
	
		subjectIdФармацевтика=ВернутьSUB(Пользователь);
		
	//	Объект.МаркиОприходовать.Очистить();
		 
			
			
			
			
			
			Страница=0;
			
			Чтение=Новый ЗаписьXML;
			Чтение.УстановитьСтроку("UTF-8");
			Чтение.ЗаписатьОбъявлениеXML();
			Чтение.ЗаписатьНачалоЭлемента("documents");
			Чтение.ЗаписатьАтрибут("version","1.36");
		 	
			Чтение.ЗаписатьНачалоЭлемента("query_hierarchy_info");
			Чтение.ЗаписатьАтрибут("action_id","220");
			
			Чтение.ЗаписатьНачалоЭлемента("subject_id");
			Чтение.ЗаписатьТекст(subjectIdФармацевтика);
			Чтение.ЗаписатьКонецЭлемента();
			
			Чтение.ЗаписатьНачалоЭлемента("sscc");
			Чтение.ЗаписатьТекст(НомерКМ);
			Чтение.ЗаписатьКонецЭлемента();
			
			Чтение.ЗаписатьКонецЭлемента();
			Чтение.ЗаписатьКонецЭлемента();
			СформироватьФайлДляОтправки=Чтение.Закрыть();
			
			
			
			
		Добав=base64Строка(ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьДвоичныеДанныеИзСтроки_Сервер(
		СформироватьФайлДляОтправки,КодировкаТекста.UTF8,Ложь));
					Добав=СтрЗаменить(Добав,Символы.ПС,"\r\n");
				Добав=СтрЗаменить(Добав,Символы.ВК,"\r\n");
				Добав=СтрЗаменить(Добав,"\r\n","");

				
				Подписанный="";
				ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ПодписатьФайл(Thumbprint_1.Внешняя,СформироватьФайлДляОтправки ,Thumbprint_1,Подписанный,Истина);
		
			Подписанный=СтрЗаменить(Подписанный,Символы.ПС,"\r\n");
		Подписанный=СтрЗаменить(Подписанный,Символы.ВК,"");
			Подписанный=СтрЗаменить(Подписанный,"\r\n","");
				
				 
	Чтен=Новый  ЗаписьJSON;
	Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
	Чтен.ЗаписатьНачалоОбъекта();
	Чтен.ЗаписатьИмяСвойства("document");
	Чтен.ЗаписатьЗначение(Добав);
	Чтен.ЗаписатьИмяСвойства("sign");
	Чтен.ЗаписатьЗначение(Подписанный);
	Чтен.ЗаписатьИмяСвойства("request_id");
	Чтен.ЗаписатьЗначение(ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ВернутьУНИКУМ());
	Чтен.ЗаписатьКонецОбъекта();
	Тело=Чтен.Закрыть();
	
				 
				 
		//Тело="{
		//|""doc_type"":""311"",
		//|""document"":"""+Добав+""",
		//|""sign"":"""+Подписанный+""",
		//|""request_id"":"""+ВернутьУНИКУМ()+"
		//|}";
			
				Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
					Прокси=Новый ИнтернетПрокси;
					Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
				
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				Иначе
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				КонецЕсли;
		
			HTTPЗапрос=Новый HTTPЗапрос("api/v1/documents/send");
		HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.Заголовки.Вставить("Authorization","token "+СРегистра);
		//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
		///Константин           
		HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
		Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
		Текст1=Ответ.ПолучитьТелоКакСтроку();
		ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(1);
		
		
		Если Ответ.КодСостояния=200 Тогда
			
			NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
			_Order_ID=NNN.document_id;
			
			
			Пока Истина Цикл
				ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(1);
				
				Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
					Прокси=Новый ИнтернетПрокси;
					Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
				
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				Иначе
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				КонецЕсли;
				Если Найти( Thumbprint_1.АдресКАПИ,"api")>0 Тогда
					HTTPЗапрос=Новый HTTPЗапрос("api/v1/documents/"+_Order_ID+"/ticket");
				Иначе
					HTTPЗапрос=Новый HTTPЗапрос("documents/"+_Order_ID+"/ticket");
					
				Куки="certSerial="+Thumbprint_1.Thumbprint_1+";lk-auth-token="+Срегистра ;
					
					HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
					
				КонецЕсли;
		HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.Заголовки.Вставить("Authorization","token "+СРегистра);
		//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
		///Константин           
		//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
		Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
		Текст1=Ответ.ПолучитьТелоКакСтроку();
			ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(1);
	
		
	//	 Попытка				
			 Если Ответ.КодСостояния=202 ИЛИ Ответ.КодСостояния=200 Тогда
				 
				 
				 
				 
				Если Найти( Thumbprint_1.АдресКАПИ,"api")>0 Тогда
				 
				 
					//ЧтениеJSON = Новый ЧтениеJSON;
					//ЧтениеJSON.УстановитьСтроку(Текст1);
					NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
					
					
					//Сайт="http://"+Thumbprint_1.АдресКАПИ;
					//Сайт_1=СтрЗаменить(NNN.link,Сайт,"");
					//Сайт="https://"+Thumbprint_1.АдресКАПИ;
					//Сайт_1=СтрЗаменить(Сайт_1,Сайт,"");
					//
					Сайт_1=NNN.link;
					Сайт_1=Сред(Сайт_1,Найти(Сайт_1,"//")+2);
					Сайт_1=Сред(Сайт_1,Найти(Сайт_1,"/")+1);
					
					
					
					
					
								HTTPЗапрос=Новый HTTPЗапрос(Сайт_1);
		HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.Заголовки.Вставить("Authorization","token "+СРегистра);
		//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
		///Константин           
		//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
		Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
		Текст1=Ответ.ПолучитьТелоКакСтроку();
		ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(1);
		
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Текст1) 
		ИЛИ Найти(Текст1,"Ошибка при выполнении операции: запись не найдена")>1
		тогда
						ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(1);
						 
						 Продолжить;
					 КонецЕсли;
					 
				ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(1);
				
				
				
				ИнформацияОКМФармацевтика(Текст1);
				
					 
					 Прервать;
					 
				ИначеЕсли Ответ.КодСостояния=401 ИЛИ Ответ.КодСостояния=502    Тогда
					    	Возврат;					
				ИначеЕсли Ответ.КодСостояния=301 Тогда
					Возврат;
					
				Иначе
					ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(1);
						Продолжить;
				КонецЕсли;
		
				ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(1);
				
				
				
				ИнформацияОКМФармацевтика(Текст1);
				
				
	              Прервать;
		
		
				
				
			Конеццикла;
						
		//Сообщить(Ответ.ПолучитьТелоКакСтроку());	
	КонецЕсли;
			
		
		
	
КонецПроцедуры

Процедура ПолучаемИнфуПоОБъектамXml(Документ,ДеревоД=Неопределено)
	Если ТипЗнч(Документ)=Тип("ОбъектXDTO") тогда
		
		Для Каждого Стр_Свойства Из Документ.Свойства() Цикл
			Если ДеревоД=Неопределено Тогда
				Добав=ТаблицаПолей.ПолучитьЭлементы().Добавить();
			Иначе
				Добав=ДеревоД.ПолучитьЭлементы().Добавить();
			КонецЕсли;
			Добав.ИмяПоля=Стр_Свойства.Имя;
			
			ЗначениеXML=Документ[Стр_Свойства.Имя];
			Попытка
				Добав.Значение=ЗначениеXML;
			Исключение
			КонецПопытки;
			ПолучаемИнфуПоОБъектамXml(ЗначениеXML,Добав);
			
		Конеццикла;
		
	ИначеЕсли типЗнч(Документ)=Тип("СписокXDTO") тогда
		
		Для Каждого Стр_1 Из Документ Цикл
			
			//
			//
			//Если ДеревоД=Неопределено Тогда
			//	Добав=ТаблицаПолей.ПолучитьЭлементы().Добавить();
			//Иначе
			//	Добав=ДеревоД.ПолучитьЭлементы().Добавить();
			//КонецЕсли;
			//Добав.ИмяПоля=Стр_Свойства.Имя;
			//
			//ЗначениеXML=Документ[Стр_Свойства.Имя];
			//Попытка
			//	Добав.Значение=ЗначениеXML;
			//Исключение
			//КонецПопытки;
			ПолучаемИнфуПоОБъектамXml(Стр_1,ДеревоД	);
			
			
		Конеццикла;
		
		
		
	КонецЕсли;
	
КонецПроцедуры

Функция ИнформацияОКМФармацевтика(Текст1) Экспорт
	    		ТаблицаПолей.ПолучитьЭлементы().Очистить();
	

					 	Чтен=Новый ЧтениеXML;
						 Чтен.УстановитьСтроку(Текст1);
						 
						 
						 
					ОтветСтруктура = ФабрикаXDTO.ПрочитатьXML(Чтен);
					Документ=ОтветСтруктура.hierarchy_info;
					
					ПолучаемИнфуПоОБъектамXml(Документ);
					
					
					//Если   Документ.Свойства().Получить("sscc_down")<>Неопределено Тогда
					//	
					//	Если ТипЗнч(Документ.sscc_down.tree)=Тип("ОбъектXDTO") Тогда
					//		Стр_20=Документ.sscc_down.tree;
					//		Если Стр_20.Свойства().Получить("sscc")<>Неопределено Тогда
					//			
					//			//Строк_1=Строк.ПолучитьЭлементы().Добавить();
					//			ключ=Стр_20.sscc;
					//			//Строк_1.НомерКМ=ключ;                         	
					//			
					//			МассивВернуть.Добавить(Новый Структура("НомерКМ,Продолжить",ключ,Истина));
					//			
					//			//РекурсияУпаковки_Лекарства(Строк_1,Thumbprint_1,СРегистра,Строк_1.НомерКМ,НеПолучать,subjectIdФармацевтика)								
					//		Иначе
					//			
					//			//Строк_1=Строк.ПолучитьЭлементы().Добавить();
					//			ключ=Стр_20.sgtin.info_sgtin.sgtin;
					//			//Строк_1.НомерКМ=ключ;                         	
					//			МассивВернуть.Добавить(Новый Структура("НомерКМ,Продолжить",ключ,Ложь));
					//			
					//			//Строк_1.Проудкция=
					//			//РекурсияУпаковки_Лекарства(Строк_1,Thumbprint_1,СРегистра,Строк_1.НомерКМ,НеПолучать)								
					//			
					//			
					//		КонецЕсли;
					//		
					//	Иначе
					//		Для Каждого Стр_20 Из Документ.sscc_down.tree Цикл
					//			Если Стр_20.Свойства().Получить("sscc")<>Неопределено Тогда
					//				
					//				//Строк_1=Строк.ПолучитьЭлементы().Добавить();
					//				ключ=Стр_20.sscc;
					//				МассивВернуть.Добавить(Новый Структура("НомерКМ,Продолжить",ключ,Истина));

					//				//Строк_1.НомерКМ=ключ;                         	
					//				//РекурсияУпаковки_Лекарства(Строк_1,Thumbprint_1,СРегистра,Строк_1.НомерКМ,НеПолучать,subjectIdФармацевтика)								
					//			Иначе
					//				
					//				//Строк_1=Строк.ПолучитьЭлементы().Добавить();
					//				ключ=Стр_20.sgtin.info_sgtin.sgtin;
					//				//Строк_1.НомерКМ=ключ;                         	
					//				МассивВернуть.Добавить(Новый Структура("НомерКМ,Продолжить",ключ,Ложь));
					//				
					//				//Строк_1.Проудкция=
					//				//РекурсияУпаковки_Лекарства(Строк_1,Thumbprint_1,СРегистра,Строк_1.НомерКМ,НеПолучать)								
					//				
					//				
					//			КонецЕсли;
					//			
					//			
					//		Конеццикла;
					//		
					//	КонецЕсли;
					//	
					//КонецЕсли;
//					Возврат МассивВернуть
					 
КонецФункции



&НаКлиенте
Процедура ОпределитьКМПоНовому(Thumbprint_1,Форм,Элемент)
	
				
			
			Если Thumbprint_1.НаименованиеСтенда="Фармацевтика" Тогда
				
					Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
						Прокси=Новый ИнтернетПрокси;
						Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
					
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
					Иначе
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
		
		

				СРегистра="";///Thumbprint_1.Thumbprint_1;
				Если Не ЗначениеЗаполнено(СРегистра) тогда
					Попытка
						СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена_ЛДМП(Thumbprint_1);	
					исключение
						СРегистра=Неопределено;
					КонецПопытки;
				КонецЕсли;
		Если СтрДлина(НомерКМ)=18 Тогда
							
					
						
								HTTPЗапрос=Новый HTTPЗапрос("api/v1/reestr/sscc/"+НомерКМ+"/full-hierarchy");
					
					
				Иначе
				
									Чтен=Новый  ЗаписьJSON;
										Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
										Чтен.ЗаписатьНачалоОбъекта();
										
										Чтен.ЗаписатьИмяСвойства("filter");
										
										Чтен.ЗаписатьНачалоОбъекта();
										
										Чтен.ЗаписатьИмяСвойства("sgtins");
										Чтен.ЗаписатьНачалоМассива();
										Чтен.ЗаписатьЗначение(НомерКМ);
										
										Чтен.ЗаписатьКонецМассива();
										
													       Чтен.ЗаписатьКонецОбъекта();
										
										//Чтен.ЗаписатьЗначение("{}");
													       Чтен.ЗаписатьКонецОбъекта();
													
													Тело=Чтен.Закрыть();//"{""start_from"":0,""count"":20,""filter"":{}}";
										Тело=СтрЗаменить(Тело,Символы.ПС,"");
										Тело=СтрЗаменить(Тело,Символы.ВК,"");
										
						
						
								HTTPЗапрос=Новый HTTPЗапрос("api/v1/reestr/sgtin/public/sgtins-by-list");
								          HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
								     КонецЕсли;
												//	Иначе
												//	HTTPЗапрос=Новый HTTPЗапрос("documents/"+Стр.document_id+"");
											/////			
													Куки="certSerial="+Thumbprint_1.Thumbprint_1+";lk-auth-token="+Срегистра ;
														
														HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
														
												//	КонецЕсли;
											HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
											HTTPЗапрос.Заголовки.Вставить("Authorization","token "+СРегистра);
											HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
											//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
											///Константин           
											//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
		Если СтрДлина(НомерКМ)=18 Тогда
											Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
													ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(31);

											Иначе
			Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
				ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(5);
	
		КонецЕсли;
											Текст1=Ответ.ПолучитьТелоКакСтроку();
						ЗагружаемШаблоныНасервере(Текст1,Форм.Пользователь);
				
				
		Иначе
		//Thumbprint_1="";
			//ПолучитьИзПользователя();	
			
СтруктураНастроек=Неопределено;                                                    СерийныйНомер="";
							СРегистра=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьТокенСрегистра(Thumbprint_1.Thumbprint_1,СтруктураНастроек);
									СерийныйНомер=СтруктураНастроек.СерийныйНомер;
							
								Если Не ЗначениеЗаполнено(СРегистра)  Тогда
									СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
								Иначе
								   
										Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
											Прокси=Новый ИнтернетПрокси;
											Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
										
											HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
										Иначе
										
											HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
										КонецЕсли;
										
										HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/balance/all");
										HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
										HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
										//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
										///Константин           
										Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
										//Текст1=Ответ.ПолучитьТелоКакСтроку();
										Если Ответ.КодСостояния<>200 Тогда
											СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
										КонецЕсли;
											
								КонецЕсли;
			Если Не ЗначениеЗаполнено(СРегистра) Тогда
				ПоказатьПредупреждение(,"Не удалось получить токен по организации");
				Возврат;
			Конецесли;
			
			Стр_11=НомерКМ;
			//Для Каждого Стр_11 Из Массив Цикл
				Если  Ложь Тогда
					//ОбработкаWEBНаСервере Тогда
				//Если НЕ ЗагрузитьНаСервере(Thumbprint_1,Обр.Организации[0].Организация,УжеОтправили,СРегистра) Тогда
				//	Если УжеОтправили=Истина Тогда
				//	Иначе
				//		ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
						//Загрузить(Команда,Истина)
				//	КонецЕсли;
			
				//КонецЕсли;
			Иначе
				
				
					Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
						Прокси=Новый ИнтернетПрокси;
						Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
					
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
					Иначе
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;          	
		
		
					МассивКМ=Новый Массив;
					МассивКМ.Очистить();
					МассивКМ.Добавить(НомерКМ);		 			
			что=Thumbprint_1.что;
			Если Thumbprint_1.НаименованиеСтенда="Табак"
				ИЛИ Thumbprint_1.НаименованиеСтенда="Альтернативный табак" Тогда
				HTTPЗапрос=Новый HTTPЗапрос("api/v3/true-api/cises/info");///?values="+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(НомерКМ));
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
				HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
				Тело=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьтелоПоcis_Табак(МассивКМ);
//				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			Иначе
				Тело=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьтелоПоcis(МассивКМ);
				HTTPЗапрос=Новый HTTPЗапрос("api/v4/facade/cis/cis_list?pg="+Что);
						
					//ИНН=ВернутьИНН(Обр.Организации[0].Организация );
					
 					
			//HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/marked_products/info?cis="+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(НомерКМ)+"&pg="+что);;
			//HTTPЗапрос=Новый HTTPЗапрос("api/v3/product/search?gtin="+ДополнитьСтроку(Стр_11)+"&limit=100&offset=0");;
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
			КонецЕсли;
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
			
			//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
			///Константин           
			Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
			Текст1=Ответ.ПолучитьТелоКакСтроку();
			
			числоЗагрузили=0;
			
			Тотал=0;
			Если Ответ.КодСостояния=200 Тогда
				ЗагружаемШаблоныНасервере(Текст1,Форм.Пользователь);
					
				//	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗагружаемГТИН_ПоМарке(Текст1,ИННПоставщика,Тотал,числоЗагрузили,Thumbprint_1);
					
			ИначеЕсли Ответ.КодСостояния=401 
				ИЛИ Ответ.КодСостояния=502  
				Тогда
		ТаблицаПолей.ПолучитьЭлементы().Очистить();
					Добав=ТаблицаПолей.ПолучитьЭлементы().Добавить();
					Добав.ИмяПоля=Ответ.КодСостояния;
					Попытка
						Добав.Значение=Ответ.ПолучитьТелоКакСтроку();
					Исключение
					КонецПопытки;
						ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
					//КонецЕсли
				Иначе
					ТаблицаПолей.ПолучитьЭлементы().Очистить();
					Добав=ТаблицаПолей.ПолучитьЭлементы().Добавить();
					Добав.ИмяПоля=Ответ.КодСостояния;
					Попытка
						Добав.Значение=Ответ.ПолучитьТелоКакСтроку();
					Исключение
					КонецПопытки;
					
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
			
Элементы.ТаблицаПодчинения.Видимость=ТаблицаПодчинения.Количество()<>0
			 
КонецПроцедуры



&НаКлиенте
Процедура ОпределитьКМПоНовомуV4(Thumbprint_1,Форм,Элемент)
	
				
			
			Если Thumbprint_1.НаименованиеСтенда="Фармацевтика" Тогда
				
					Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
						Прокси=Новый ИнтернетПрокси;
						Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
					
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
					Иначе
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
		
		

				СРегистра="";///Thumbprint_1.Thumbprint_1;
				Если Не ЗначениеЗаполнено(СРегистра) тогда
					Попытка
						СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена_ЛДМП(Thumbprint_1);	
					исключение
						СРегистра=Неопределено;
					КонецПопытки;
				КонецЕсли;
		Если СтрДлина(НомерКМ)=18 Тогда
					
					
						
								HTTPЗапрос=Новый HTTPЗапрос("api/v1/reestr/sscc/"+НомерКМ+"/full-hierarchy");
					
					
				Иначе
				
									Чтен=Новый  ЗаписьJSON;
										Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
										Чтен.ЗаписатьНачалоОбъекта();
										
										Чтен.ЗаписатьИмяСвойства("filter");
										
										Чтен.ЗаписатьНачалоОбъекта();
										
										Чтен.ЗаписатьИмяСвойства("sgtins");
										Чтен.ЗаписатьНачалоМассива();
										Чтен.ЗаписатьЗначение(НомерКМ);
										
										Чтен.ЗаписатьКонецМассива();
										
													       Чтен.ЗаписатьКонецОбъекта();
										
										//Чтен.ЗаписатьЗначение("{}");
													       Чтен.ЗаписатьКонецОбъекта();
													
													Тело=Чтен.Закрыть();//"{""start_from"":0,""count"":20,""filter"":{}}";
										Тело=СтрЗаменить(Тело,Символы.ПС,"");
										Тело=СтрЗаменить(Тело,Символы.ВК,"");
										
						
						
								HTTPЗапрос=Новый HTTPЗапрос("api/v1/reestr/sgtin/public/sgtins-by-list");
								          HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
								       КонецЕсли;
												//	Иначе
												//	HTTPЗапрос=Новый HTTPЗапрос("documents/"+Стр.document_id+"");
											/////			
													Куки="certSerial="+Thumbprint_1.Thumbprint_1+";lk-auth-token="+Срегистра ;
														
														HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
														
												//	КонецЕсли;
											HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
											HTTPЗапрос.Заголовки.Вставить("Authorization","token "+СРегистра);
											HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
											//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
											///Константин           
											//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
		Если СтрДлина(НомерКМ)=18 Тогда
											Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
													ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(31);

											Иначе
											
											Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
		ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(5);
										КонецЕсли;
											Текст1=Ответ.ПолучитьТелоКакСтроку();
						ЗагружаемШаблоныНасервере(Текст1,Форм.Пользователь);
				
				
		Иначе
		//Thumbprint_1="";
			//ПолучитьИзПользователя();	
			
СтруктураНастроек=Неопределено;                                                    СерийныйНомер="";
							СРегистра=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьТокенСрегистра(Thumbprint_1.Thumbprint_1,СтруктураНастроек);
									СерийныйНомер=СтруктураНастроек.СерийныйНомер;
							
								Если Не ЗначениеЗаполнено(СРегистра)  Тогда
									СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
								Иначе
								   
										Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
											Прокси=Новый ИнтернетПрокси;
											Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
										
											HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
										Иначе
										
											HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
										КонецЕсли;
										
										HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/balance/all");
										HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
										HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
										//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
										///Константин           
										Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
										//Текст1=Ответ.ПолучитьТелоКакСтроку();
										Если Ответ.КодСостояния<>200 Тогда
											СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
										КонецЕсли;
											
								КонецЕсли;
			Если Не ЗначениеЗаполнено(СРегистра) Тогда
				ПоказатьПредупреждение(,"Не удалось получить токен по организации");
				Возврат;
			Конецесли;
			
			Стр_11=НомерКМ;
			//Для Каждого Стр_11 Из Массив Цикл
				Если  Ложь Тогда
					//ОбработкаWEBНаСервере Тогда
				//Если НЕ ЗагрузитьНаСервере(Thumbprint_1,Обр.Организации[0].Организация,УжеОтправили,СРегистра) Тогда
				//	Если УжеОтправили=Истина Тогда
				//	Иначе
				//		ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
						//Загрузить(Команда,Истина)
				//	КонецЕсли;
			
				//КонецЕсли;
			Иначе
				
				
					Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
						Прокси=Новый ИнтернетПрокси;
						Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
					
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
					Иначе
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;          	
		
		
					МассивКМ=Новый Массив;
					МассивКМ.Очистить();
					МассивКМ.Добавить(НомерКМ);		 			
			что=Thumbprint_1.что;
			Если Thumbprint_1.НаименованиеСтенда="Табак"
				ИЛИ Thumbprint_1.НаименованиеСтенда="Альтернативный табак" Тогда
				HTTPЗапрос=Новый HTTPЗапрос("api/v3/true-api/cises/info");///?values="+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(НомерКМ));
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
				 HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
				Тело=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьтелоПоcis_Табак(МассивКМ);
//				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
			Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
			Текст1=Ответ.ПолучитьТелоКакСтроку();
			Иначе
				Тело=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьтелоПоcis(МассивКМ);
				//HTTPЗапрос=Новый HTTPЗапрос("api/v4/facade/cis/cis_list?pg="+Что);
						
					//ИНН=ВернутьИНН(Обр.Организации[0].Организация );
					
 					
			HTTPЗапрос=Новый HTTPЗапрос("api/v4/facade/identifytools/info?cis="+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(НомерКМ)+"&pg="+что);;
			//HTTPЗапрос=Новый HTTPЗапрос("api/v3/product/search?gtin="+ДополнитьСтроку(Стр_11)+"&limit=100&offset=0");;
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			Текст1=Ответ.ПолучитьТелоКакСтроку();
			КонецЕсли;
			
			//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
			///Константин           
			
			числоЗагрузили=0;
			
			Тотал=0;
			Если Ответ.КодСостояния=200 Тогда
				ЗагружаемШаблоныНасервере(Текст1,Форм.Пользователь);
					
				//	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗагружаемГТИН_ПоМарке(Текст1,ИННПоставщика,Тотал,числоЗагрузили,Thumbprint_1);
					
			ИначеЕсли Ответ.КодСостояния=401 
				ИЛИ Ответ.КодСостояния=502  
				Тогда
		ТаблицаПолей.ПолучитьЭлементы().Очистить();
					Добав=ТаблицаПолей.ПолучитьЭлементы().Добавить();
					Добав.ИмяПоля=Ответ.КодСостояния;
					Попытка
						Добав.Значение=Ответ.ПолучитьТелоКакСтроку();
					Исключение
					КонецПопытки;
						ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
					//КонецЕсли
				Иначе
					ТаблицаПолей.ПолучитьЭлементы().Очистить();
					Добав=ТаблицаПолей.ПолучитьЭлементы().Добавить();
					Добав.ИмяПоля=Ответ.КодСостояния;
					Попытка
						Добав.Значение=Ответ.ПолучитьТелоКакСтроку();
					Исключение
					КонецПопытки;
					
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
			
Элементы.ТаблицаПодчинения.Видимость=ТаблицаПодчинения.Количество()<>0
			 
КонецПроцедуры

&НаКлиенте
Процедура аа()
		ПоследнийКМ=НомерКМ;
		Номеркм="";

КонецПроцедуры

Процедура ОчиститьТокенСрегистра(ТТ)
	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаписатьТокенВРегистр(ТТ,"")
КонецПроцедуры

Процедура ДобавитьСтрокутуру(Стр,Добав)
	Для Каждого Стр_1 Из Стр Цикл
		
			Попытка
				Если ТипЗнч(Стр_1.Значение)=Тип("Структура") Тогда
					//Добав_2=Добав.ПолучитьЭлементы();
					Добав_1=Добав.Добавить();
				Добав_1.ИмяПоля=Стр_1.Ключ;
				
				Добав_1.Значение=СтрЗаменить(Стр_1.Значение,Символ(29),"");
				
				ДобавитьСтрокутуру(Стр_1.Значение,Добав_1.ПолучитьЭлементы())
					
				ИначеЕсли ТипЗнч(Стр_1.Значение)=Тип("Массив") Тогда
					
				Добав_1=Добав.Добавить();
				Добав_1.ИмяПоля=Стр_1.Ключ;
				
				Добав_1.Значение=СтрЗаменить(Стр_1.Значение,Символ(29),"");
				
				Для Каждого Стр11 ИЗ Стр_1.Значение 
					Цикл
					
					ДобавитьСтрокутуру(Стр11,Добав_1.ПолучитьЭлементы());
					
				Конеццикла;
				
					
			Иначе
				Добав_1=Добав.Добавить();
				Добав_1.ИмяПоля=Стр_1.Ключ;
				
				Добав_1.Значение=СтрЗаменить(Стр_1.Значение,Символ(29),"");
				
				
					
				КонецЕсли;
				
			Исключение
			КонецПопытки;
		
		
	Конеццикла;
	
КонецПроцедуры

Процедура ДобавитьСоответствие(Стр,Добав)
	Для Каждого Стр_1 Из Стр Цикл
		
			Попытка
				Добав_1=Добав.Добавить();
				Добав_1.ИмяПоля=Стр_1.Ключ;
				
				Если ТипЗнч(Стр_1.Значение)=Тип("Строка") Тогда
					Добав_1.Значение=СтрЗаменить(Стр_1.Значение,Символ(29),"");
				ИначеЕсли ТипЗнч(Стр_1.Значение)<>Тип("Соответствие") Тогда
					Добав_1.Значение=Стр_1.Значение;
					
				КонецЕсли;
				
				Если ТипЗнч(Стр_1.Значение)=Тип("Соответствие") Тогда
					//Добав_2=Добав.ПолучитьЭлементы();
					ДобавитьСоответствие(Стр_1.Значение,Добав_1.ПолучитьЭлементы())
				ИначеЕсли ТипЗнч(Стр_1.Значение)=Тип("Массив") Тогда
					
					Сч=1;
					Для Каждого Стр_2 Из Стр_1.Значение Цикл
						Добав_2=Добав_1.ПолучитьЭлементы().Добавить();
						Добав_2.Уровень=Сч;
						Сч=СЧ+1;
						ДобавитьСоответствие(Стр_1.Значение,Добав_2.ПолучитьЭлементы())
						
						
					КонецциклА;
					
				КонецЕсли;
				
				children=Стр_1.Значение["children"];
				//Если <>Неопределено Тогда
				Если ТипЗнч(children)=Тип("Массив") 
			И   children.Количество()>0 
			Тогда
			
					Для Каждого Стр_1 Из children Цикл
						
						Если ТипЗнч(Стр_1)<>Тип("Соответствие") Тогда
							Продолжить;
						КонецЕсли;
						Для Каждого Стр_2 Из Стр_1 Цикл
							
							НазваниеКолонки=Стр_2.Ключ;
							Если Элементы.Найти("ТаблицаПодчинения_"+НазваниеКолонки)=Неопределено Тогда
								Попытка
									МассивТип=Новый Массив;
									МассивТип.Очистить();
									МассивТип.Добавить(ТипЗнч(Стр_2.Значение));
									ОписаниеТипов=Новый ОписаниеТипов(МассивТип);
									МассивДобРекв=Новый Массив;
									РеквизитФормы = Новый РеквизитФормы(НазваниеКолонки, ОписаниеТипов,"ТаблицаПодчинения");
									МассивДобРекв.Добавить(РеквизитФормы);
									ИзменитьРеквизиты(МассивДобРекв);
									
									НовыйЭлемент = Элементы.Добавить("ТаблицаПодчинения_"+НазваниеКолонки, Тип("ПолеФормы"), Элементы.ТаблицаПодчинения);
									НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
									НовыйЭлемент.ПутьКДанным = "ТаблицаПодчинения."+НазваниеКолонки;
									НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
									НовыйЭлемент.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;
								Исключение
								КонецПопытки;
		//						НовыйЭлемент.УстановитьДействие("ПриИзменении","Таблица9Справочник1СПриИзменении");
								
		КонецЕсли;
		Попытка
		//					Добав[НазваниеКолонки]=Стр_2.Значение;
						Исключение
							КонецПопытки;
						КонецциклА;
						
										Добав=ТаблицаПодчинения.Добавить();
						Для Каждого Стр_2 Из Стр_1 Цикл
							
							НазваниеКолонки=Стр_2.Ключ;
							Попытка
							Добав[НазваниеКолонки]=Стр_2.Значение;
						Исключение
							КонецПопытки;
						КонецциклА;
						

						
					Конеццикла;
					
					
					
				КонецЕсли;
				

				//Конецесли;
					
				
				
			Исключение
			КонецПопытки;
		
		
	Конеццикла;
	
КонецПроцедуры


Процедура ЗагружаемШаблоныНасервере(Текст1,Пользователь)
	ТаблицаПолей.ПолучитьЭлементы().Очистить();
	ТаблицаПодчинения.Очистить();
	
	
	Попытка
	
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Текст1);
	//Попытка
	
	//Попытка
	
	
			NNN=ПрочитатьJSON(ЧтениеJSON);
			
			
			
		
	Исключение
			ЧтениеJSON = Новый ЧтениеJSON;
			ЧтениеJSON.УстановитьСтроку(Текст1);
			NNN=ПрочитатьJSON(ЧтениеJSON,Истина);
			Если ТипЗнч(NNN)=Тип("Массив") Тогда
				                    Сч=1;
				Для Каждого Стр_1 Из NNN Цикл
					Добав=ТаблицаПолей.ПолучитьЭлементы().Добавить();
					Добав.Уровень=Сч;
					ДобавитьСоответствие(Стр_1,Добав.ПолучитьЭлементы());
					                СЧ=Сч+1;
									
									
									
	
			children=Стр_1["child"];
		Если ТипЗнч(children)=Тип("Массив") 
			И   children.Количество()>0 
			Тогда
			
			Для Каждого Стр_1 Из children Цикл
				
				
					НазваниеКолонки="Марка";
					Если Элементы.Найти("ТаблицаПодчинения_"+НазваниеКолонки)=Неопределено Тогда
						Попытка
							МассивТип=Новый Массив;
							МассивТип.Очистить();
							МассивТип.Добавить(ТипЗнч(Стр_1));
							ОписаниеТипов=Новый ОписаниеТипов(МассивТип);
							МассивДобРекв=Новый Массив;
							РеквизитФормы = Новый РеквизитФормы(НазваниеКолонки, ОписаниеТипов,"ТаблицаПодчинения");
							МассивДобРекв.Добавить(РеквизитФормы);
							ИзменитьРеквизиты(МассивДобРекв);
							
							НовыйЭлемент = Элементы.Добавить("ТаблицаПодчинения_"+НазваниеКолонки, Тип("ПолеФормы"), Элементы.ТаблицаПодчинения);
							НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
							НовыйЭлемент.ПутьКДанным = "ТаблицаПодчинения."+НазваниеКолонки;
							НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
							НовыйЭлемент.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;
						Исключение
						КонецПопытки;
//						НовыйЭлемент.УстановитьДействие("ПриИзменении","Таблица9Справочник1СПриИзменении");
						
КонецЕсли;
Попытка
//					Добав[НазваниеКолонки]=Стр_2.Значение;
				Исключение
					КонецПопытки;
				
								Добав=ТаблицаПодчинения.Добавить();
				
					Попытка
					Добав[НазваниеКолонки]=Стр_1;
				Исключение
					КонецПопытки;
				
				КонецциклА;
				
			
			
			
		КонецЕсли;
									
									
				
									
								Конеццикла;
								
								
								
								
								
				
	ИначеЕсли ТипЗнч(NNN)=Тип("Соответствие") Тогда
			
			//Добав=ТаблицаПолей.ПолучитьЭлементы().Добавить();
			ДобавитьСоответствие(NNN,ТаблицаПолей.ПолучитьЭлементы());
			
			children=NNN["children"];
		Если ТипЗнч(children)=Тип("Массив") 
			И   children.Количество()>0 
			Тогда
			
			Для Каждого Стр_1 Из children Цикл
				
				Если ТипЗнч(Стр_1)<>Тип("Соответствие") Тогда
					Продолжить;
				КонецЕсли;
				Для Каждого Стр_2 Из Стр_1 Цикл
					
					НазваниеКолонки=Стр_2.Ключ;
					Если Элементы.Найти("ТаблицаПодчинения_"+НазваниеКолонки)=Неопределено Тогда
						Попытка
							МассивТип=Новый Массив;
							МассивТип.Очистить();
							МассивТип.Добавить(ТипЗнч(Стр_2.Значение));
							ОписаниеТипов=Новый ОписаниеТипов(МассивТип);
							МассивДобРекв=Новый Массив;
							РеквизитФормы = Новый РеквизитФормы(НазваниеКолонки, ОписаниеТипов,"ТаблицаПодчинения");
							МассивДобРекв.Добавить(РеквизитФормы);
							ИзменитьРеквизиты(МассивДобРекв);
							
							НовыйЭлемент = Элементы.Добавить("ТаблицаПодчинения_"+НазваниеКолонки, Тип("ПолеФормы"), Элементы.ТаблицаПодчинения);
							НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
							НовыйЭлемент.ПутьКДанным = "ТаблицаПодчинения."+НазваниеКолонки;
							НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
							НовыйЭлемент.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;
						Исключение
						КонецПопытки;
//						НовыйЭлемент.УстановитьДействие("ПриИзменении","Таблица9Справочник1СПриИзменении");
						
КонецЕсли;
Попытка
//					Добав[НазваниеКолонки]=Стр_2.Значение;
				Исключение
					КонецПопытки;
				КонецциклА;
				
								Добав=ТаблицаПодчинения.Добавить();
				Для Каждого Стр_2 Из Стр_1 Цикл
					
					НазваниеКолонки=Стр_2.Ключ;
					Попытка
					Добав[НазваниеКолонки]=Стр_2.Значение;
				Исключение
					КонецПопытки;
				КонецциклА;
				

				
			Конеццикла;
			
			
			
		КонецЕсли;
		
			
		КонецЕсли;
	Возврат;
	КонецПопытки;
		
	
	
Если ТипЗнч(NNN)=Тип("Массив") Тогда
				                    Сч=1;
				Для Каждого Стр_1 Из NNN Цикл
					Добав=ТаблицаПолей.ПолучитьЭлементы().Добавить();
					Добав.Уровень=Сч;
					ДобавитьСтрокутуру(Стр_1.cisinfo,Добав.ПолучитьЭлементы());
					                СЧ=Сч+1;
									
									
									
	
			children=Неопределено;
			Стр_1.cisInfo.Свойство("child",children);
		Если ТипЗнч(children)=Тип("Массив") 
			И   children.Количество()>0 
			Тогда
			
			Для Каждого Стр_1 Из children Цикл
				
				
					НазваниеКолонки="Марка";
					Если Элементы.Найти("ТаблицаПодчинения_"+НазваниеКолонки)=Неопределено Тогда
						Попытка
							МассивТип=Новый Массив;
							МассивТип.Очистить();
							МассивТип.Добавить(ТипЗнч(Стр_1));
							ОписаниеТипов=Новый ОписаниеТипов(МассивТип);
							МассивДобРекв=Новый Массив;
							РеквизитФормы = Новый РеквизитФормы(НазваниеКолонки, ОписаниеТипов,"ТаблицаПодчинения");
							МассивДобРекв.Добавить(РеквизитФормы);
							ИзменитьРеквизиты(МассивДобРекв);
							
							НовыйЭлемент = Элементы.Добавить("ТаблицаПодчинения_"+НазваниеКолонки, Тип("ПолеФормы"), Элементы.ТаблицаПодчинения);
							НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
							НовыйЭлемент.ПутьКДанным = "ТаблицаПодчинения."+НазваниеКолонки;
							НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
							НовыйЭлемент.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;
						Исключение
						КонецПопытки;
//						НовыйЭлемент.УстановитьДействие("ПриИзменении","Таблица9Справочник1СПриИзменении");
						
КонецЕсли;
Попытка
//					Добав[НазваниеКолонки]=Стр_2.Значение;
				Исключение
					КонецПопытки;
				
								Добав=ТаблицаПодчинения.Добавить();
				
					Попытка
					Добав[НазваниеКолонки]=Стр_1;
				Исключение
					КонецПопытки;
				
				КонецциклА;
				
			
			
			
		КонецЕсли;
									
									
				
									
								Конеццикла;
								
				Возврат;
								
	
	
		ИначеЕсли ТипЗнч(NNN)=Тип("Структура") Тогда
			entries="";
			ТаблицаПодчинения.Очистить();
			Если NNN.Свойство("entries",entries) И ТипЗнч(entries)=Тип("Массив") И entries.Количество()>0 тогда
				ДобавитьСтрокутуру(NNN.entries[0],ТаблицаПолей.ПолучитьЭлементы());
				Элементы.ТаблицаПодчинения.Видимость=Истина;
				
				
				Для Каждого Стр_1 ИЗ NNN.entries Цикл
				
						Для Каждого Стр_2 Из Стр_1 Цикл
							
							НазваниеКолонки=Стр_2.Ключ;
							Если Элементы.Найти("ТаблицаПодчинения_"+НазваниеКолонки)=Неопределено Тогда
								Попытка
									МассивТип=Новый Массив;
									МассивТип.Очистить();
									МассивТип.Добавить(ТипЗнч(Стр_2.Значение));
									ОписаниеТипов=Новый ОписаниеТипов(МассивТип);
									МассивДобРекв=Новый Массив;
									РеквизитФормы = Новый РеквизитФормы(НазваниеКолонки, ОписаниеТипов,"ТаблицаПодчинения");
									МассивДобРекв.Добавить(РеквизитФормы);
									ИзменитьРеквизиты(МассивДобРекв);
									
									НовыйЭлемент = Элементы.Добавить("ТаблицаПодчинения_"+НазваниеКолонки, Тип("ПолеФормы"), Элементы.ТаблицаПодчинения);
									НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
									НовыйЭлемент.ПутьКДанным = "ТаблицаПодчинения."+НазваниеКолонки;
									НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
									НовыйЭлемент.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;
								Исключение
								КонецПопытки;
		//						НовыйЭлемент.УстановитьДействие("ПриИзменении","Таблица9Справочник1СПриИзменении");
								
		КонецЕсли;
		Попытка
		//					Добав[НазваниеКолонки]=Стр_2.Значение;
						Исключение
							КонецПопытки;
						КонецциклА;
						
										Добав=ТаблицаПодчинения.Добавить();
						Для Каждого Стр_2 Из Стр_1 Цикл
							
							НазваниеКолонки=Стр_2.Ключ;
							Попытка
							Добав[НазваниеКолонки]=Стр_2.Значение;
						Исключение
							КонецПопытки;
						КонецциклА;
					КонецЦикла;
				//Для Каждого Стр_1 Из NNN.entries Цикл
				//	Добав=ТаблицаПодчинения.Добавить();
				//	Для Каждого Стр_2 Из Стр_1 Цикл
				//		
				//		НазваниеКолонки=Стр_2.Ключ;
				//		Попытка
				//		Добав[НазваниеКолонки]=Стр_2.Значение;
				//	Исключение
				//		КонецПопытки;
				//	КонецциклА;
				//Конеццикла;
				Возврат;
				
			Иначе
				Элементы.ТаблицаПодчинения.Видимость=Ложь;
				ДобавитьСтрокутуру(NNN,ТаблицаПолей.ПолучитьЭлементы());
			КонецЕсли;
		КонецЕсли;
		//Для Каждого Стр_Стр Из NNN Цикл
		//	
		//	Попытка
		//		Добав=ТаблицаПолей.ПолучитьЭлементы().Добавить();
		//		Добав.ИмяПоля=Стр_Стр.Ключ;
		//		Добав.Значение=Стр_Стр.Значение;
		//	Исключение
		//	КонецПопытки;
		//	
		//	
		//Конеццикла;
		children=неопределено;
		Если NNN.Свойство("children",children) И ТипЗнч(children)=Тип("Массив") 
			И   children.Количество()>0 
			Тогда
			
			Для Каждого Стр_1 Из children Цикл
				
				Для Каждого Стр_2 Из Стр_1 Цикл
					
					НазваниеКолонки=Стр_2.Ключ;
					Если Элементы.Найти("ТаблицаПодчинения_"+НазваниеКолонки)=Неопределено Тогда
						Попытка
							МассивТип=Новый Массив;
							МассивТип.Очистить();
							МассивТип.Добавить(ТипЗнч(Стр_2.Значение));
							ОписаниеТипов=Новый ОписаниеТипов(МассивТип);
							МассивДобРекв=Новый Массив;
							РеквизитФормы = Новый РеквизитФормы(НазваниеКолонки, ОписаниеТипов,"ТаблицаПодчинения");
							МассивДобРекв.Добавить(РеквизитФормы);
							ИзменитьРеквизиты(МассивДобРекв);
							
							НовыйЭлемент = Элементы.Добавить("ТаблицаПодчинения_"+НазваниеКолонки, Тип("ПолеФормы"), Элементы.ТаблицаПодчинения);
							НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
							НовыйЭлемент.ПутьКДанным = "ТаблицаПодчинения."+НазваниеКолонки;
							НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
							НовыйЭлемент.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;
						Исключение
						КонецПопытки;
//						НовыйЭлемент.УстановитьДействие("ПриИзменении","Таблица9Справочник1СПриИзменении");
						
КонецЕсли;
Попытка
//					Добав[НазваниеКолонки]=Стр_2.Значение;
				Исключение
					КонецПопытки;
				КонецциклА;
				
								Добав=ТаблицаПодчинения.Добавить();
				Для Каждого Стр_2 Из Стр_1 Цикл
					
					НазваниеКолонки=Стр_2.Ключ;
					Попытка
					Добав[НазваниеКолонки]=Стр_2.Значение;
				Исключение
					КонецПопытки;
				КонецциклА;
				

				
			Конеццикла;
			
			
			
		КонецЕсли;
		
	//Исключение
	//КонецПопытки;
	Элементы.ТаблицаПодчинения.Видимость=ТаблицаПодчинения.Количество()<>0
	
	
Конецпроцедуры


&НаКлиенте
Процедура НомерКМАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Если СтрДлина(текст)>=18 Тогда
		СтандартнаяОбработка=Ложь;
		
		
		НомерКМ=Текст;
		
		
		НомерКМПриИзменении(Элемент);
	КонецЕсли;
КонецПроцедуры


Функция ЗаписатьСтрокуВОЫЩТ(Знач Стр)
	НомерКМ_1=Стрзаменить(Стр,символы.Таб+"<GS>",Символ(29));
	Запись = Новый ЗаписьJSON;	
	//ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, "", Истина,ЭкранированиеСимволовJson.СимволыВнеASCII);
	Запись.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет,,,ЭкранированиеСимволовJSON.СимволыВнеASCII));
	ЗаписатьJSON(Запись, Новый Структура("code,codeType",НомерКМ_1, "datamatrix")); //"" : "ean8" : "ean13" : "qr" : "datamatrix"
	Возврат Запись.Закрыть()
Конецфункции



&НаКлиенте
Процедура ДвижениеПоКМ(Команда)
	МассивКМ=Новый СписокЗначений;
	МассивКМ.Добавить(ПоследнийКМ);
	
	Форм=ОткрытьФорму("Отчет.ОтчетПоКМ_ХамелеонЦРПТ.Форма.ФормаОтчета");
	Форм.ПрименитьОтбор(МассивКМ);
	
КонецПроцедуры


&НаКлиенте
Процедура ПолучитьДатуИзЧисла(Команда)
	// Вставить содержимое обработчика.
	Элем=Элементы.ТаблицаПолей.ТекущиеДанные;
	ПолученнаяДатаИзUnixФормата="";
	Если Элем<>Неопределено тогда
		Попытка
			ПолученнаяДатаИзUnixФормата=Дата(1970,1,1)+Элем.Значение/1000;
			
		Исключение
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

