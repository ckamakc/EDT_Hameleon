
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
		
	Тип=Параметры.тип;
	ТипДальше=Параметры.ТипДальше;
	
	Список.ОсновнаяТаблица=Тип+"."+ТипДальше;
	ЭтаФорма.Заголовок="Журнал "+Тип+"."+ТипДальше;
	
	Список.ПроизвольныйЗапрос=Истина;
	Сининоми=Сред(Список.ТекстЗапроса,Найти(Список.ТекстЗапроса,"ИЗ"));
	Сининоми=сред(Сининоми,Найти(Сининоми,"КАК")+4);
	
	Список.ТекстЗапроса=Сред(Список.ТекстЗапроса,1,Найти(Список.ТекстЗапроса,"ИЗ")-1);
	Список.ТекстЗапроса="ВЫБРАТЬ
	|регСв.СправочникДокумент_Меркурия КАК Связь,"+Сред(Список.ТекстЗапроса,8)+",
	|Неопределено КАК ПустаяКолонка
	| ИЗ "+Тип+"."+ТипДальше+" КАК "+Сининоми+"
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеСправочниковДокументов_ХамелеонЦРПТ КАК РегСв
	|		ПО РегСв.Справочник_Документ = "+Сининоми+".Ссылка";
	Список.ТекстЗапроса=Список.ТекстЗапроса+"
	|//ЛЕВОЕ СОЕДИНЕНИЕ С ТАБЛИЦЕЙ";
	//Список.ТекстЗапроса=СтрЗаменить(Список.ТекстЗапроса,"ИмяПредопределенныхДанных","ПометкаУдаления КАК ПУДАЛЕНИЯ");
	
	//Список.ТекстЗапроса=Список.ТекстЗапроса+Тип+"."+ТипДальше;
	//Список.ТекстЗапроса=Список.ТекстЗапроса+" 
	
	//Если Тип="Документ" Тогда
			ЭлементФормы = Элементы.Добавить("Связь",Тип("ПолеФормы"),Элементы.Список); 
			ЭлементФормы.ПутьКДанным = "Список.Связь";
			ЭлементФормы.Заголовок="Ссылка на сопоставление";
			ЭлементФормы = Элементы.Добавить("ПустаяКолонка",Тип("ПолеФормы"),Элементы.Список); 
			ЭлементФормы.ПутьКДанным = "Список.ПустаяКолонка";
			ЭлементФормы.Заголовок="Для внеш. обработки";
			Для Каждого Стр Из Метаданные.НайтиПоТипу(Тип(Тип+"Ссылка."+ТипДальше)).СтандартныеРеквизиты Цикл
				Если Стр.Имя="ИмяПредопределенныхДанных"
					ИЛИ Стр.Имя="Связь.Представление"
					Тогда
					Продолжить;
				КонецЕсли;
			//КонецЦИклА;
				
			ЭлементФормы = Элементы.Добавить(Стр.имя,Тип("ПолеФормы"),Элементы.Список); 
			ЭлементФормы.ПутьКДанным = "Список."+Стр.Имя;
		Конеццикла;
	//КонецЕсли;
	Для Каждого Стр Из Метаданные.НайтиПоТипу(Тип(Тип+"Ссылка."+ТипДальше)).Реквизиты Цикл
				Если Стр.Имя="ИмяПредопределенныхДанных"
					Тогда
					Продолжить;
				КонецЕсли;
		Попытка
			ЭлементФормы = Элементы.Добавить(Стр.имя,Тип("ПолеФормы"),Элементы.Список); 
			ЭлементФормы.ПутьКДанным = "Список."+Стр.Имя;
		Исключение
			Элементы.Удалить(ЭлементФормы);
		КонецПопытки;
	Конеццикла;
	Доп=6;
			//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВнешниеОбработки__ЦРПТ.ИмяВнешнейОБработки,
		|	ВнешниеОбработки__ЦРПТ.НаименованиеКнопки,
		|	ВнешниеОбработки__ЦРПТ.Код
		|ИЗ
		|	Справочник.ВнешниеОбработки_ХамелеонЦРПТ КАК ВнешниеОбработки__ЦРПТ
		|ГДЕ
		|	ВнешниеОбработки__ЦРПТ.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", "УНИВЕРСАЛЬНЫЙЖУРНАЛ"); //"Документ.ВетеринарныеСправки_ХамелеонМеркурий");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		ИмяКоманды="Команда"+ВыборкаДетальныеЗаписи.Код;
		Попытка
		КомандаФормы = Команды.Добавить(ИмяКоманды);
		КомандаФормы.Действие = "Подключаемый_ВыполнитьКомандуВнешняя";
		КомандаФормы.Заголовок = ВыборкаДетальныеЗаписи.ИмяВнешнейОБработки;
		КомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
		КомандаФормы.Отображение = ОтображениеКнопки.Текст;
		
		//ОписаниеКомандыПечати.ИмяКомандыНаФорме = ИмяКоманды;
		
		НовыйЭлемент = Элементы.Добавить("ГруппаКнопокВнешняя"+Доп+ ИмяКоманды, Тип("КнопкаФормы"),Элементы.ГруппаКнопокВнешняя6 );
		НовыйЭлемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		НовыйЭлемент.Заголовок=ВыборкаДетальныеЗаписи.НаименованиеКнопки;
		НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	Исключение
		КонецПопытки;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	Отображ=ХранилищеСистемныхНастроек.Загрузить("Отображение","Отображение");
	Если ЗначениеЗаполнено(Отображ) Тогда
		Попытка
			Элементы.Список.Отображение=Отображ;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьИмяВнешней(ИмяФайла)
    АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ИмяФайла);
    ИмяОбр = ВнешниеОбработки.Подключить(АдресВоВременномХранилище,,Ложь);
    Возврат ИмяОбр;
КонецФункции

Функция ВернутьИмяФайла(Команда)
	СпрВн=Справочники.ВнешниеОбработки_ХамелеонМеркурий.НайтиПоКоду(Сред(Команда,8));
	
	Возврат СпрВн.ИмяВнешнейОБработки
	//НаимСправочника=Метаданные.НайтиПоТипу(ТипЗнч(Объект.Ссылка)).ПолноеИмя();
	
КонецФункции

#Если ТолстыйКлиентОбычноеПриложение  ТОгда
&НаКлиенте
Процедура ВернутьВн(ДвоичныеДанные)
	//ИмяВременФ=ПолучитьИмяВременногоФайла();
	//ДвоичныеДанные.Записать(ИмяВременФ);
	ВнешняяОбработка=ВнешниеОбработки.Создать(ДвоичныеДанные);
	
	Фоорма=ВнешняяОбработка.ПолучитьФорму(,ЭтаФорма);
	Попытка
		Фоорма.УФ=ЭтаФорма;
	Исключение
	КонецПопытки;
	Фоорма.Открыть();
	
//	Фоорма.Открыть();
Конецпроцедуры      	
#КонецЕсли


&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуВнешняя(Команда)
	
	// Вставить содержимое обработчика.	// Вставить содержимое обработчика.
	//Если Элементы.Таблица8.ТекущиеДанные<>Неопределено Тогда
		
		Попытка
			ДвоичныеДанные=Новый ДвоичныеДанные(ВернутьИмяФайла(Команда.Имя));
			ОбработкаИмя=ПолучитьИмяВнешней(Двоичныеданные);
			ОткрытьФорму("ВнешняяОбработка."+ОбработкаИмя+".Форма",Новый Структура("Ссылка",Элементы.Список.ТекущиеДанные.Ссылка));
		Исключение
			Попытка
#Если ТолстыйКлиентОбычноеПриложение  Тогда
				ВернутьВн(ВернутьИмяФайла(Команда.Имя));
#Иначе
				
			ПоказатьПредупреждение(,"Не удалось выполнить внешнюю обработку");
#КонецЕсли
			Исключение
				ПоказатьПредупреждение(,"Не удалось выполнить внешнюю обработку");
			КонецПопытки;
		//	
		//	
		КонецПопытки;

		//УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	//КонецЕсли;
КонецПроцедуры



Функция ВернутьИмя()
	Возврат Список.ОсновнаяТаблица
КонецФункции

&НаКлиенте
Процедура Команда2(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура Команда3(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	
КонецПроцедуры


&НаКлиенте
Процедура Команда4(Команда)
	// Вставить содержимое обработчика.
	
	
	
КонецПроцедуры


&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ЭтаФорма.Закрыть(ВыбраннаяСтрока);
КонецПроцедуры


&НаКлиенте
Процедура Команда5(Команда)
	// Вставить содержимое обработчика.
	ЭтаФорма.Закрыть(Элементы.Список.ВыделенныеСтроки);
КонецПроцедуры


&НаКлиенте
Процедура Команда6(Команда)
	// Вставить содержимое обработчика.
	Удалим=Новый Массив;
	Для Каждого Стр ИЗ Список.Отбор.Элементы Цикл
		Если Стр.Представление="ОТБОР_ХС" Тогда
			Удалим.Добавить(Стр);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Стр Из Удалим Цикл
		Список.Отбор.Элементы.Удалить(Стр);
	КонецЦикла;
	Стр=Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Стр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Стр.Использование=Истина;
	Стр.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Связь");
	Стр.ПравоеЗначение=""; 
	Стр.Представление="ОТБОР_ХС";
	Стр.РежимОтображения=РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	
	Если тип="Справочник" Тогда
		Элементы.Список.Отображение=ОтображениеТаблицы.Список;
	Конецесли;
КонецПроцедуры

&НаКлиенте
Процедура ПоменятьТекстЗапроса(РР,ДД=неопределено) Экспорт
	Если РР<>Неопределено Тогда
		ЗаментаТекстЗапроса(РР);
	КонецЕсли;
КонецПроцедуры

Процедура ЗаментаТекстЗапроса(МеняемПустойЗапрос_1)
	МеняемПустойЗапрос=МеняемПустойЗапрос_1.МеняемПустойЗапрос;
	Если ЗначениеЗАполнено(МеняемПустойЗапрос) Тогда
		Список.ТекстЗапроса=СтрЗаменить(Список.ТекстЗапроса,"Неопределено",МеняемПустойЗапрос);
	Конецесли;
	ЛевоеСоединение=МеняемПустойЗапрос_1.ЛеввоеСоединение;
	Если ЗначениеЗАполнено(ЛевоеСоединение) Тогда
		
		Список.ТекстЗапроса=СтрЗаменить(Список.ТекстЗапроса,"//ЛЕВОЕ СОЕДИНЕНИЕ С ТАБЛИЦЕЙ",ЛевоеСоединение);
		
	КонецЕсли;
	
	
КонецПроцедуры
&НаКлиенте
Процедура Команда7(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	Удалим=Новый Массив;
	Для Каждого Стр ИЗ Список.Отбор.Элементы Цикл
		Если Стр.Представление="ОТБОР_ХС" Тогда
			Удалим.Добавить(Стр);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Стр Из Удалим Цикл
		Список.Отбор.Элементы.Удалить(Стр);
	КонецЦикла;
	Стр=Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Стр.ВидСравнения=ВидСравненияКомпоновкиДанных.Заполнено;
	Стр.Использование=Истина;
	Стр.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Связь");
	Стр.ПравоеЗначение=""; 
	Стр.Представление="ОТБОР_ХС";
	Стр.РежимОтображения=РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	Если тип="Справочник" Тогда
		Элементы.Список.Отображение=ОтображениеТаблицы.Список;
	Конецесли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура Команда8(Команда)
	// Вставить содержимое обработчика.
		ОткрытьФорму("Справочник.ВнешниеОбработки_ХамелеонМеркурий.Форма.ФормаСписка",
		Новый структура("Тип",
			"УНИВЕРСАЛЬНЫЙЖУРНАЛ"));
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	// Вставить содержимое обработчика.
	ХранилищеСистемныхНастроек.Сохранить("Отображение","Отображение",Элементы.Список.Отображение);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ПриЗакрытииНаСервере();
КонецПроцедуры


