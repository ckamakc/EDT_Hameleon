
Функция Сгенерировать(ИсходнаяСтрока) Экспорт

	КодированнаяСтрока = ЗакодироватьДанные(ИсходнаяСтрока);
	Холст = РазместитьИнформацию(КодированнаяСтрока);
	Возврат СоздатьКартинку(Холст);
		
КонецФункции

Функция ЗакодироватьДанные(ИсходнаяСтрока)
	
	ean = Новый Массив(10);
	ean[0] = "3211";
	ean[1] = "2221";
	ean[2] = "2122";
	ean[3] = "1411";
	ean[4] = "1132";
	ean[5] = "1231";
	ean[6] = "1114";
	ean[7] = "1312";
	ean[8] = "1213";
	ean[9] = "3112";
	
	ean13m = Новый Массив(10);
	ean13m[0] = "000000";
	ean13m[1] = "001011";
	ean13m[2] = "001101";
	ean13m[3] = "001110";
	ean13m[4] = "010011";
	ean13m[5] = "011001";
	ean13m[6] = "011100";
	ean13m[7] = "010101";
	ean13m[8] = "010110";
	ean13m[9] = "011010";
	
	Результат = "111";
	Если СтрДлина(ИсходнаяСтрока) = 13 тогда
		ИсходнаяСтрока = Лев(ИсходнаяСтрока, 12);
	ИначеЕсли СтрДлина(ИсходнаяСтрока)<>12 тогда
		Возврат "";
	КонецЕсли;
	кс = Число(Лев(ИсходнаяСтрока, 1));
	м = ean13m[Число(Лев(ИсходнаяСтрока, 1))];
	Для Н = 2 по 7 цикл
		ТекЧисло = Число(Сред(ИсходнаяСтрока, Н, 1));
		кс = кс + ТекЧисло * (((Н + 1) % 2) * 2 + 1);
		Знак = ean[ТекЧисло];
		Результат = Результат + ?(Сред(м, Н - 1, 1) = "0", Знак, ПеревернутьСтроку(Знак));
	КонецЦикла;
	Результат = Результат + "11111";
	Для Н = 8 по 12 цикл
		ТекЧисло = Число(Сред(ИсходнаяСтрока, Н, 1));
		кс = кс + ТекЧисло * (((Н + 1) % 2) * 2 + 1);
		Знак = ean[ТекЧисло];
		Результат = Результат + Знак;
	КонецЦикла;
	кс = (10 - кс % 10) % 10;
	ИсходнаяСтрока = ИсходнаяСтрока + кс;
	Возврат Результат + ean[кс] + "111";
	
КонецФункции

Функция РазместитьИнформацию(КодированнаяСтрока)
	
	ТекЦвет = 1;
	Результат = Новый Массив;
	Для Сч = 1 По ШиринаРамки Цикл
		Результат.Добавить(0);
	КонецЦикла;
	Для Симв = 1 По СтрДлина(КодированнаяСтрока) Цикл
		Для Сч = 1 По Число(Сред(КодированнаяСтрока, Симв, 1)) Цикл
			Результат.Добавить(ТекЦвет);
		КонецЦикла;
		ТекЦвет = 1 - ТекЦвет;
	КонецЦикла;
	Для Сч = 1 По ШиринаРамки Цикл
		Результат.Добавить(0);
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

Функция ПеревернутьСтроку(ИсходнаяСтрока)
	
	Результат = "";
	Длина = СтрДлина(ИсходнаяСтрока);
	Для Н = 0 по Длина - 1 Цикл
		Результат = Результат + Сред(ИсходнаяСтрока, Длина-Н, 1);
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

Функция СоздатьКартинку(Холст)
	ВысотаКартинки=40;
	РазмерЭлемента=2;
	РазмерХолста = Холст.Количество();
	Высота = ВысотаКартинки;
	Ширина = РазмерХолста * РазмерЭлемента;
	
	// Для простоты формирования возьемём 24 бита. По 8 бит на каждый канал. Альфаканал не используем. 
	ГлубинаЦвета_ЦРПТ = 3; // Измеряется в байтах. 	
	
	// Каждая строка должна содержать количество байтов кратное 4.
	БайтовДополнение = (4 - ГлубинаЦвета_ЦРПТ * Ширина % 4) % 4; 
	
	РазмерФайла = ГлубинаЦвета_ЦРПТ * Ширина * Высота + Высота * БайтовДополнение;	
	
	///////////////////////////////////////////////////////////////////////////////
		
	ПотокТело = Новый ПотокВПамяти();
	ЗаписьДанных = Новый ЗаписьДанных(ПотокТело);
		
	//BITMAPFILEHEADER
	
	//bfType 
	ЗаписьДанных.ЗаписатьЦелое16(16973, ПорядокБайтов.BigEndian); // 0x424D big-endian = 0x4D42 little-endian. Признак формата. Всегда это значение.
	//bfSize
	ЗаписьДанных.ЗаписатьЦелое32(54 + РазмерФайла);
	//bfReserved1
	ЗаписьДанных.ЗаписатьЦелое16(0);	
	//bfReserved2
	ЗаписьДанных.ЗаписатьЦелое16(0);	
	//bfOffBits
	ЗаписьДанных.ЗаписатьЦелое32(54);
	
	//BITMAPINFOHEADER // версия 3
	// biSize
	ЗаписьДанных.ЗаписатьЦелое32(40); 
	// biWidth
	ЗаписьДанных.ЗаписатьЦелое32(Ширина);			// ширина изображения в пикселах 
	// biHeight
	ЗаписьДанных.ЗаписатьЦелое32(Высота);			// высота изображения в пикселах
	// biPlanes
	ЗаписьДанных.ЗаписатьЦелое16(1);				// содержит единицу
	// biBitCount
	ЗаписьДанных.ЗаписатьЦелое16(ГлубинаЦвета_ЦРПТ * 8);	// количество бит на пиксел 
	// biCompression
	ЗаписьДанных.ЗаписатьЦелое32(0);				// тип сжатия 
	// biSizeImage
	ЗаписьДанных.ЗаписатьЦелое32(РазмерФайла);		// размер изображения в байтах
	// biXPelsPerMeter
	ЗаписьДанных.ЗаписатьЦелое32(0);				// горизонтальное разрешение в пикселах на метр 
	// biYPelsPerMeter
	ЗаписьДанных.ЗаписатьЦелое32(0); 				// вертикальное разрешение в пикселах на метр 
	// biClrUsed
	ЗаписьДанных.ЗаписатьЦелое32(0);				//  количество используемых цветовых индексов в палитре 
	// biClrImportant
	ЗаписьДанных.ЗаписатьЦелое32(0);				// количество индексов
	
	///////////////////////////////////////////////////////////////////////////////
	
	БелаяПолоса = Новый БуферДвоичныхДанных(РазмерЭлемента * ГлубинаЦвета_ЦРПТ);
	ЧернаяПолоса = Новый БуферДвоичныхДанных(РазмерЭлемента * ГлубинаЦвета_ЦРПТ);
	
	Для Инд = 0 По БелаяПолоса.Размер - 1 Цикл
		БелаяПолоса.Установить(Инд, 255);
		ЧернаяПолоса.Установить(Инд, 0);
	КонецЦикла;
	
	МаксМодуль = РазмерХолста - 1;
	
	ВесьРяд = Новый БуферДвоичныхДанных(Ширина * ГлубинаЦвета_ЦРПТ + БайтовДополнение);
	
	Для Шир = 0 По МаксМодуль Цикл
		
		Значение = Холст[Шир];
		
		Если Значение = 0 Тогда
			ВесьРяд.Записать(Шир * БелаяПолоса.Размер, БелаяПолоса);
		Иначе
			ВесьРяд.Записать(Шир * ЧернаяПолоса.Размер, ЧернаяПолоса);
		КонецЕсли;
		
	КонецЦикла;
	
	// Забиваем нулями остаток строки. Так как размер строки должен быть кратен 4 байтам.
	Для Доп = 1 По БайтовДополнение Цикл		
		ВесьРяд.Установить(ВесьРяд.Размер - Доп, 0);
	КонецЦикла;
	
	Для Сч = 1 По Высота Цикл
		ЗаписьДанных.ЗаписатьБуферДвоичныхДанных(ВесьРяд);
	КонецЦикла;
	
	ЗаписьДанных.Закрыть();	
	Возврат ПотокТело.ЗакрытьИПолучитьДвоичныеДанные();
		
КонецФункции
