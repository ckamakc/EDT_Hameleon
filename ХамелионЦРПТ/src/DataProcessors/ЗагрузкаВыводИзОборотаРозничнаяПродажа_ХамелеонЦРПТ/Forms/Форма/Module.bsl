&НаСервереБезКонтекста
Функция ПолучитьТокенСрегистра(Thumbprint_1)
	Возврат Регистрысведений.ТокенПоСертификату_ХамелеонЦРПТ.Получить(Новый Структура("Отпечаток",Thumbprint_1)).Токен;
КонецФункции

Процедура ОчиститьТокенСрегистра(ТТ)
	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаписатьТокенВРегистр(ТТ,"")
КонецПроцедуры

&НаСервереБезКонтекста
Функция дополнитьСтроку(Ср)
	ВОзврат Обработки._Запуск_ХамелеонЦРПТ.ДополнитьСтроку_11(Ср,14,"0");
	
Конецфункции


Процедура ОбновитьСтатусДокумента_чек(Текст1,Пользователь)
						NNN_1=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
	
	//ДокументВ=Документы.ВводВОборот_ХамелеонЦРПТ.НайтиПоРеквизиту("_Order_ID",
	///NNN_1.number);
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВводВОборот_ХамелеонЦРПТ.Ссылка
		|ИЗ
		|	Документ.ВводВОборот_ХамелеонЦРПТ КАК ВводВОборот_ХамелеонЦРПТ
		|ГДЕ
		|	ПОДСТРОКА(ВводВОборот_ХамелеонЦРПТ._Order_ID, 1, 1000) = &_Order_ID";
	
	Попытка
		Запрос.УстановитьПараметр("_Order_ID", NNN_1.number);
	Исключение
		Возврат;
	КонецПопытки;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ДокументВ=Неопределено;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		ДокументВ=ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕслИ;
	
	
	body=NNN_1.body.receipt;
	Если ЗначениеЗаполнено(ДокументВ) Тогда
		ДокумС=ДокументВ.ПолучитьОбъект();
	Иначе
		ДокумС=Документы.ВводВОборот_ХамелеонЦРПТ.СоздатьДокумент();
	КонецЕсли;
	ДатаДокумента=NNN_1.docDate;
	ДокумС.Дата=Дата(Сред(ДатаДокумента,1,4),Сред(ДатаДокумента,6,2),Сред(ДатаДокумента,9,2),Сред(ДатаДокумента,12,2),Сред(ДатаДокумента,15,2),Сред(ДатаДокумента,18,2));
	
	
	ДокумС._Order_ID=NNN_1.number;
	ДокумС.ВидПервичногоДокумента=Перечисления.ТипПервичногоДокумента_ХамелеонЦРПТ.RECEIPT;
	
	ДокумС.ПричинаВыводаИзОборота=Перечисления.ПричинаВыводаИзОборота_ХамлеонЦРПТ.RETAIL;
	Если NNN_1.status="CHECKED_OK" Тогда
		ДокумС.Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.Обработан;	
	ИначеЕсли NNN_1.status="CHECKED_NOT_OK" Тогда
		ДокумС.Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.Отказ;	
		          Иначе
		Сообщить("Не известный статус "+ NNN_1.status)
	КонецЕсли;
	//ДокумС.Статус=	
	ДокумС.ДатаПервичногоДокумента=Дата(1970,1,1)+body.dateTime;;
	ДокумС.ОФД=Истина;
	ДокумС.НомерПервичногоДокумента=xmlString(body.fiscalDocumentNumber);
	Если NNN_1.type="RECEIPT"	 Тогда
		ДокумС.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВыводИзОборота;
	ИначеЕсли NNN_1.type="RECEIPT_RETURN"	 Тогда
		ДокумС.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВводВОборотВозвратВРозницу;
	Конецесли;
	ДокумС.ТипПервичногоДокумента=Перечисления.ТипПервичногоДокумента_ХамелеонЦРПТ.RECEIPT;
	ДокумС.ТекущийПользователь=Пользователь;
	ДокумС.Организация=ДокумС.ТекущийПользователь.Организация;
	ДокумС.РегистрационныйНомерККТ=body.kktREGID;
	ДокумС.СерийныеНомера.Очистить();;
	ДокумС.Товары.Очистить();
	Для Каждого Стр_1 Из body.items Цикл
		Попытка
		  ШтрихКод=Стр_1.uit;
	  	Исключение
		  ШтрихКод="";
		 КонецПопытки;
			попытка
				Продукция=справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",
				Число(Сред(ШтрихКод,3,14)));;
				Если не ЗначениеЗаполнено(Продукция)  Тогда
					Прод=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
					Прод.GTIN=Число(Сред(ШтрихКод,3,14));
					Прод.Наименование=Стр_1.name;
					Прод.НаименованиеТовара=Стр_1.name;
					Прод.Записать();
					Продукция=Прод.Ссылка;
				КонецЕсли;
			Исключение
				Если Найти(ШТрихкОД,"gtin:")=1 ТОгда
					Продукция=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",
					Число(Сред(ШтрихКод,6,14)));
					Если не ЗначениеЗаполнено(Продукция)  Тогда
						Прод=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
						Прод.GTIN=Число(Сред(ШтрихКод,6,14));
						Прод.Наименование=Стр_1.name;
						Прод.НаименованиеТовара=Стр_1.name;
						Прод.Записать();
						Продукция=Прод.Ссылка;
					КонецЕсли;
					ШтрихКод=Сред(ШтрихКод,6,14)+"21"+Сред(ШтрихКод,Найти(ШтрихКод,"sn:")+4);
				Иначе 	
					Продукция=Справочники.Продукция_ХамелеонЦРПТ.ПустаяСсылка();
				КонецЕсли;
			КонецПопытки;
				Добав=ДокумС.СерийныеНомера.Добавить();
				Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
				Добав.НаименованиеТовара=Продукция;
				Добав.cis=ШтрихКод;
				
				
				ППП=ДокумС.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
				Если ППП.Количество()=0 Тогда
					Добав_1=ДокумС.Товары.Добавить();
					Добав_1.GTIN=Продукция;
					Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
			Если Продукция.СтранаПроизводства.Альфа2="RU" Тогда
				//СтрП="Производство в РФ";
					Добав_1.СпособВыпускаТоваров="Производство в РФ";
			Иначе
				//СтрП="Ввезен в РФ";
					Добав_1.СпособВыпускаТоваров="Ввезен в РФ";
				
			КонецЕсли;
					Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
					Добав_1.КоличествоКМ=1;
					Добав_1.ДекларацияИлиСертификатСоответствия=РегистрыСведений.ПодтверждающиеДокументы_ХамелеонЦРПТ.ПолучитьПоследнее(ДокумС.Дата,
					Новый Структура("Продукция",Продукция)).Документ;
					Добав_1.Цена=Стр_1.sum/100;
					
					Стр_1.Свойство("ndsSum",Добав_1.СуммаНДС);
					Добав_1.СуммаНДС=Добав_1.СуммаНДС/100;
				
						//=Стр_1.ndsSum/100;
					
				Иначе
					Добав_1=ППП[0];
					Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
					Сумма=Добав_1.Цена*(Добав_1.КоличествоКМ-1)+Стр_1.sum/100;
					Добав_1.Цена=Сумма/Добав_1.КоличествоКМ;
					
					СуммаНДС=0;
					Если Стр_1.Свойство("ndsSum",СуммаНДС) Тогда
						Добав_1.СуммаНДС=Добав_1.СуммаНДС+СуммаНДС/100
					КонецЕсли;
				КонецЕсли;
				Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
						
		
			КонецциклА;
			Попытка
	  			ДокумС.Записать();
			исключение
				Для Каждого Стр Из ДокумС.СерийныеНомера Цикл
					Стр.cis=КодироватьСтроку(Стр.cis,СпособКодированияСтроки.КодировкаURL);
				Конеццикла;
				
	  			ДокумС.Записать();
			КонецПопытки;
	  Попытка
		  ДокумС.Записать(РежимЗаписидокумента.Проведение);
	  Исключение
	  КонецПопытки;
	// ИначеЕсли NNN_1.type="RECEIPT_RETURN"	 Тогда
	//	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ВводВОборот_ХамелеонЦРПТ.Ссылка
	//	|ИЗ
	//	|	Документ.ВводВОборот_ХамелеонЦРПТ КАК ВводВОборот_ХамелеонЦРПТ
	//	|ГДЕ
	//	|	ПОДСТРОКА(ВводВОборот_ХамелеонЦРПТ._Order_ID, 1, 1000) = &_Order_ID";
	//
	//Запрос.УстановитьПараметр("_Order_ID", NNN_1.number);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//ДокументВ=Неопределено;
	//Если ВыборкаДетальныеЗаписи.Следующий() Тогда
	//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//	ДокументВ=ВыборкаДетальныеЗаписи.Ссылка;
	//КонецЕслИ;
	//
	//
	//body=NNN_1.body.receipt;
	//Если ЗначениеЗаполнено(ДокументВ) Тогда
	//	ДокумС=ДокументВ.ПолучитьОбъект();
	//Иначе
	//	ДокумС=Документы.ВводВОборот_ХамелеонЦРПТ.СоздатьДокумент();
	//КонецЕсли;
	//ДатаДокумента=NNN_1.docDate;
	//ДокумС.Дата=Дата(Сред(ДатаДокумента,1,4),Сред(ДатаДокумента,6,2),Сред(ДатаДокумента,9,2),Сред(ДатаДокумента,12,2),Сред(ДатаДокумента,15,2),Сред(ДатаДокумента,18,2));
	//
	//
	//ДокумС._Order_ID=NNN_1.number;
	//ДокумС.ВидПервичногоДокумента=Перечисления.ТипПервичногоДокумента_ХамелеонЦРПТ.RECEIPT;
	//
	//ДокумС.ПричинаВыводаИзОборота=Перечисления.ПричинаВыводаИзОборота_ХамлеонЦРПТ.RETAIL;
	//Если NNN_1.status="CHECKED_OK" Тогда
	//	ДокумС.Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.Обработан;	
	//ИначеЕсли NNN_1.status="CHECKED_NOT_OK" Тогда
	//	ДокумС.Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.Отказ;	
	//	          Иначе
	//	Сообщить("Не известный статус "+ NNN_1.status)
	//КонецЕсли;
	////ДокумС.Статус=	
	//ДокумС.ДатаПервичногоДокумента=Дата(1970,1,1)+body.dateTime;;
	//ДокумС.ОФД=Истина;
	//ДокумС.НомерПервичногоДокумента=xmlString(body.fiscalDocumentNumber);
	//ДокумС.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВводВОборотВозвратВРозницу;
	//ДокумС.ТипПервичногоДокумента=Перечисления.ТипПервичногоДокумента_ХамелеонЦРПТ.RECEIPT;
	//ДокумС.ТекущийПользователь=Пользователь;
	//ДокумС.Организация=ДокумС.ТекущийПользователь.Организация;
	//ДокумС.СерийныеНомера.Очистить();;
	//ДокумС.Товары.Очистить();
	//Для Каждого Стр_1 Из body.items Цикл
	//	  ШтрихКод=Стр_1.uit;
	//		попытка
	//			Продукция=справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",
	//			Число(Сред(ШтрихКод,3,14)));;
	//			Если не ЗначениеЗаполнено(Продукция)  Тогда
	//				Прод=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
	//				Прод.GTIN=Число(Сред(ШтрихКод,3,14));
	//				Прод.Наименование=Стр_1.name;
	//				Прод.Записать();
	//				Продукция=Прод.Ссылка;
	//			КонецЕсли;
	//		Исключение
	//			Продукция=Справочники.Продукция_ХамелеонЦРПТ.ПустаяСсылка();
	//		КонецПопытки;
	//			Добав=ДокумС.СерийныеНомера.Добавить();
	//			Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
	//			Добав.НаименованиеТовара=Продукция;
	//			Добав.cis=ШтрихКод;
	//			
	//			
	//			ППП=ДокумС.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
	//			Если ППП.Количество()=0 Тогда
	//				Добав_1=ДокумС.Товары.Добавить();
	//				Добав_1.GTIN=Продукция;
	//				Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
	//		Если Продукция.СтранаПроизводства.Альфа2="RU" Тогда
	//			//СтрП="Производство в РФ";
	//				Добав_1.СпособВыпускаТоваров="Производство в РФ";
	//		Иначе
	//			//СтрП="Ввезен в РФ";
	//				Добав_1.СпособВыпускаТоваров="Ввезен в РФ";
	//			
	//		КонецЕсли;
	//				Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
	//				Добав_1.КоличествоКМ=1;
	//				Добав_1.ДекларацияИлиСертификатСоответствия=РегистрыСведений.ПодтверждающиеДокументы_ХамелеонЦРПТ.ПолучитьПоследнее(ДокумС.Дата,
	//				Новый Структура("Продукция",Продукция)).Документ;
	//				Добав_1.Цена=Стр_1.sum/100;
	//				Добав_1.СуммаНДС=Стр_1.ndsSum/100;
	//				
	//			Иначе
	//				Добав_1=ППП[0];
	//				Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
	//				Сумма=Добав_1.Цена*(Добав_1.КоличествоКМ-1)+Стр_1.sum/100;
	//				Добав_1.Цена=Сумма/Добав_1.КоличествоКМ;
	//				Добав_1.СуммаНДС=Добав_1.СуммаНДС+Стр_1.ndsSum/100
	//			КонецЕсли;
	//			Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
	//					
	//	
	//		КонецциклА;
	//		Попытка
	//  			ДокумС.Записать();
	//		исключение
	//			Для Каждого Стр Из ДокумС.СерийныеНомера Цикл
	//				Стр.cis=КодироватьСтроку(Стр.cis,СпособКодированияСтроки.КодировкаURL);
	//			Конеццикла;
	//			
	//  			ДокумС.Записать();
	//		КонецПопытки;
	//  Попытка
	//	  ДокумС.Записать(РежимЗаписидокумента.Проведение);
	//  Исключение
	//  КонецПопытки; 
	// КонецЕсли;
КонецПроцедуры

Процедура ОбновитьСтатусДокумента_чек_Табак(Текст1,Пользователь,Общие,NNN_ТабличнаяЧасть)
				NNN_1=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
	
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	ВводВОборот_ХамелеонЦРПТ.Ссылка
					|ИЗ
					|	Документ.ВводВОборот_ХамелеонЦРПТ КАК ВводВОборот_ХамелеонЦРПТ
					|ГДЕ
					|	ПОДСТРОКА(ВводВОборот_ХамелеонЦРПТ._Order_ID, 1, 1000) = &_Order_ID";
				
				Запрос.УстановитьПараметр("_Order_ID", Общие.did);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				ДокументВ=Неопределено;
				Если ВыборкаДетальныеЗаписи.Следующий() Тогда
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					ДокументВ=ВыборкаДетальныеЗаписи.Ссылка;
				КонецЕслИ;
				
				
				body=NNN_1.receipt;
				Если ЗначениеЗаполнено(ДокументВ) Тогда
					ДокумС=ДокументВ.ПолучитьОбъект();
				Иначе
					ДокумС=Документы.ВводВОборот_ХамелеонЦРПТ.СоздатьДокумент();
				КонецЕсли;
				ДатаДокумента=Дата(1970,1,1)+body.dateTime;
				ДокумС.Дата=ДатаДокумента;
				//Дата(Сред(ДатаДокумента,1,4),Сред(ДатаДокумента,6,2),Сред(ДатаДокумента,9,2),Сред(ДатаДокумента,12,2),Сред(ДатаДокумента,15,2),Сред(ДатаДокумента,18,2));
				
				
				ДокумС._Order_ID=Общие.did;
				ДокумС.ВидПервичногоДокумента=Перечисления.ТипПервичногоДокумента_ХамелеонЦРПТ.RECEIPT;
				
				ДокумС.ПричинаВыводаИзОборота=Перечисления.ПричинаВыводаИзОборота_ХамлеонЦРПТ.RETAIL;
				Если Общие.status="CHECKED_OK" Тогда
					ДокумС.Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.Обработан;	
				ИначеЕсли Общие.status="CHECKED_NOT_OK" Тогда
					ДокумС.Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.Отказ;	
					          Иначе
					Сообщить("Не известный статус "+ NNN_1.status)
				КонецЕсли;
				//ДокумС.Статус=	
				ДокумС.ДатаПервичногоДокумента=Дата(1970,1,1)+body.dateTime;
				ДокумС.ОФД=Истина;
				ДокумС.НомерПервичногоДокумента=xmlString(body.fiscalDocumentNumber);
				
				Если Общие.type="RECEIPT"	 Тогда
					ДокумС.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВыводИзОборота;
				ИначеЕсли Общие.type="RECEIPT_RETURN" тогда
					ДокумС.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВводВОборотВозвратВРозницу;
				КонецЕсли;			
				ДокумС.ТипПервичногоДокумента=Перечисления.ТипПервичногоДокумента_ХамелеонЦРПТ.RECEIPT;
				//ДокумС.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВыводИзОборота;
				//ДокумС.ТипПервичногоДокумента=Перечисления.ТипПервичногоДокумента_ХамелеонЦРПТ.RECEIPT;
				ДокумС.ТекущийПользователь=Пользователь;
				ДокумС.Организация=ДокумС.ТекущийПользователь.Организация;
				ДокумС.РегистрационныйНомерККТ=Body.KKtRegid;
				ДокумС.СерийныеНомера.Очистить();;
				ДокумС.Товары.Очистить();
				
				
				сч=0;
				
				Если body.items.Количество()=NNN_ТабличнаяЧасть.results.Количество() Тогда
				
									Для Каждого Стр_1 Из body.items Цикл
										Стр_М=NNN_ТабличнаяЧасть.results[сч];
										сч=сч+1;
										ШтрихКод=Стр_М.cis;
											попытка
												Продукция=справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",
												Число(Стр_М.gtin));;
												Если не ЗначениеЗаполнено(Продукция)  Тогда
													Прод=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
													Прод.GTIN=Число(Стр_М.gtin);
													Прод.Наименование=Стр_М.productName;
													Прод.НаименованиеТовара=Стр_М.productName;
													Прод.Записать();
													Продукция=Прод.Ссылка;
												КонецЕсли;
											Исключение
												//Если Найти(ШТрихкОД,"gtin:")=1 ТОгда
												//	Продукция=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",
												//	Число(Сред(ШтрихКод,6,14)));
												//	Если не ЗначениеЗаполнено(Продукция)  Тогда
												//		Прод=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
												//		Прод.GTIN=Число(Сред(ШтрихКод,6,14));
												//		Прод.Наименование=Стр_1.name;
												//		Прод.Записать();
												//		Продукция=Прод.Ссылка;
												//	КонецЕсли;
												//	ШтрихКод=Сред(ШтрихКод,6,14)+"21"+Сред(ШтрихКод,Найти(ШтрихКод,"sn:")+4);
												//Иначе 	
												//	Продукция=Справочники.Продукция_ХамелеонЦРПТ.ПустаяСсылка();
												//КонецЕсли;
											КонецПопытки;
												Добав=ДокумС.СерийныеНомера.Добавить();
												Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
												Добав.НаименованиеТовара=Продукция;
												Добав.cis=ШтрихКод;
												
												
												ППП=ДокумС.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
												Если ППП.Количество()=0 Тогда
													Добав_1=ДокумС.Товары.Добавить();
													Добав_1.GTIN=Продукция;
													Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
											Если Продукция.СтранаПроизводства.Альфа2="RU" Тогда
												//СтрП="Производство в РФ";
													Добав_1.СпособВыпускаТоваров="Производство в РФ";
											Иначе
												//СтрП="Ввезен в РФ";
													Добав_1.СпособВыпускаТоваров="Ввезен в РФ";
												
											КонецЕсли;
													Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
													Добав_1.КоличествоКМ=1;
													Добав_1.ДекларацияИлиСертификатСоответствия=РегистрыСведений.ПодтверждающиеДокументы_ХамелеонЦРПТ.ПолучитьПоследнее(ДокумС.Дата,
													Новый Структура("Продукция",Продукция)).Документ;
													Добав_1.Цена=Стр_1.sum/100;
													Стр_1.Свойство("ndsSum",Добав_1.СуммаНДС);
														//=Стр_1.ndsSum/100;
													
												Иначе
													Добав_1=ППП[0];
													Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
													Сумма=Добав_1.Цена*(Добав_1.КоличествоКМ-1)+Стр_1.sum/100;
													Добав_1.Цена=Сумма/Добав_1.КоличествоКМ;
													
													СуммаНДС=0;
													Если Стр_1.Свойство("ndsSum",СуммаНДС) Тогда
														Добав_1.СуммаНДС=Добав_1.СуммаНДС+СуммаНДС/100
													КонецЕсли;
												КонецЕсли;
												Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
														
										
											КонецциклА;
					Иначе
											
											
								Для Каждого Стр_1 Из NNN_ТабличнаяЧасть.results Цикл
										//Стр_М=NNN_ТабличнаяЧасть.results[сч];
										сч=сч+1;
										Стр_М=Стр_1;
										ШтрихКод=Стр_М.cis;
											попытка
												Продукция=справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",
												Число(Стр_М.gtin));;
												Если не ЗначениеЗаполнено(Продукция)  Тогда
													Прод=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
													Прод.GTIN=Число(Стр_М.gtin);
													Прод.Наименование=Стр_М.productName;
													Прод.НаименованиеТовара=Стр_М.productName;
													Прод.Записать();
													Продукция=Прод.Ссылка;
												КонецЕсли;
											Исключение
												//Если Найти(ШТрихкОД,"gtin:")=1 ТОгда
												//	Продукция=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",
												//	Число(Сред(ШтрихКод,6,14)));
												//	Если не ЗначениеЗаполнено(Продукция)  Тогда
												//		Прод=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
												//		Прод.GTIN=Число(Сред(ШтрихКод,6,14));
												//		Прод.Наименование=Стр_1.name;
												//		Прод.Записать();
												//		Продукция=Прод.Ссылка;
												//	КонецЕсли;
												//	ШтрихКод=Сред(ШтрихКод,6,14)+"21"+Сред(ШтрихКод,Найти(ШтрихКод,"sn:")+4);
												//Иначе 	
												//	Продукция=Справочники.Продукция_ХамелеонЦРПТ.ПустаяСсылка();
												//КонецЕсли;
											КонецПопытки;
												Добав=ДокумС.СерийныеНомера.Добавить();
												Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
												Добав.НаименованиеТовара=Продукция;
												Добав.cis=ШтрихКод;
												
												
												ППП=ДокумС.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
												Если ППП.Количество()=0 Тогда
													Добав_1=ДокумС.Товары.Добавить();
													Добав_1.GTIN=Продукция;
													Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
											Если Продукция.СтранаПроизводства.Альфа2="RU" Тогда
												//СтрП="Производство в РФ";
													Добав_1.СпособВыпускаТоваров="Производство в РФ";
											Иначе
												//СтрП="Ввезен в РФ";
													Добав_1.СпособВыпускаТоваров="Ввезен в РФ";
												
											КонецЕсли;
													Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
													Добав_1.КоличествоКМ=1;
													Добав_1.ДекларацияИлиСертификатСоответствия=РегистрыСведений.ПодтверждающиеДокументы_ХамелеонЦРПТ.ПолучитьПоследнее(ДокумС.Дата,
													Новый Структура("Продукция",Продукция)).Документ;
													//Добав_1.Цена=Стр_1.sum/100;
													//Добав_1.СуммаНДС=Стр_1.ndsSum/100;
													
												Иначе
													Добав_1=ППП[0];
													Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
													//Сумма=Добав_1.Цена*(Добав_1.КоличествоКМ-1)+Стр_1.sum/100;
													//Добав_1.Цена=Сумма/Добав_1.КоличествоКМ;
													//Добав_1.СуммаНДС=Добав_1.СуммаНДС+Стр_1.ndsSum/100
												КонецЕсли;
												Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
														
										
											КонецциклА;
											
										ДокумС.Комментарий="ЦЕНЫ НЕ ЗАПОЛНЕНЫ. ЕСТЬ ДРУГАЯ ПРОДУКЦИЯ, отличная от ТАБАКА";	
											
										КонецЕсли;
										
						Попытка
				  			ДокумС.Записать();
						исключение
							Для Каждого Стр Из ДокумС.СерийныеНомера Цикл
								Стр.cis=КодироватьСтроку(Стр.cis,СпособКодированияСтроки.КодировкаURL);
							Конеццикла;
							
				  			ДокумС.Записать();
						КонецПопытки;
				  Попытка
					  ДокумС.Записать(РежимЗаписидокумента.Проведение);
				  Исключение
				  КонецПопытки;
				  
				  
КонецПроцедуры


Функция   ДобавитьПриемку(Текст1,Стр,ДатаДокумента,Thumbprint_1);
ДатаВыдачи=Стр.date;
ДатаДокумента=Дата(Сред(ДатаВыдачи,1,4),Сред(ДатаВыдачи,6,2),Сред(ДатаВыдачи,9,2),Сред(ДатаВыдачи,12,2),Сред(ДатаВыдачи,15,2),Сред(ДатаВыдачи,18,2));									 												          Чтен=Новый ЧтениеXML;
	Чтен.УстановитьСтроку(Текст1);
	ОтветСтруктура = ФабрикаXDTO.ПрочитатьXML(Чтен).retail_sale;	
	
	ИдДокумента=Стр.document_id;
	
	ДокументПриемки=Документы.Приемка_ХамелеонЦРПТ.НайтиПоРеквизиту("_Order_ID",ИдДокумента);
	Если ЗначениеЗаполнено(ДокументПриемки) тогда
		ДокументПриемки=ДокументПриемки.ПолучитьОбъект();
		Возврат ДокументПриемки.Ссылка
	Иначе
		ДокументПриемки=Документы.ВводВОборот_ХамелеонЦРПТ.СоздатьДокумент();
	КонецЕслИ;
	
	
	ДокументПриемки._Order_ID=ИдДокумента;
ДокументПриемки.Организация=Thumbprint_1.ТекущийПользователь.Организация;                
ДокументПриемки.ТекущийПользователь=Thumbprint_1.ТекущийПользователь;
ДокументПриемки.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВыводИзОборота;
ДокументПриемки.ПричинаВыводаИзОборота=Перечисления.ПричинаВыводаИзОборота_ХамлеонЦРПТ.RETAIL;

ДокументПриемки.Дата=Дата(Сред(ДатаВыдачи,1,4),Сред(ДатаВыдачи,6,2),Сред(ДатаВыдачи,9,2),Сред(ДатаВыдачи,12,2),Сред(ДатаВыдачи,15,2),Сред(ДатаВыдачи,18,2));

//ДатаВыдачи=ОтветСтруктура.doc_date;
//ДокументПриемки.ДатаВходящий=	Дата(Сред(ДатаВыдачи,7,4),Сред(ДатаВыдачи,4,2),Сред(ДатаВыдачи,1,2));
//ДокументПриемки.НомерВходящий=ОтветСтруктура.doc_num;


ДокументПриемки.Товары.Очистить();
ДокументПриемки.СерийныеНомера.Очистить();
//ДокументПриемки.Короба.Очистить();
Если ТипЗнч(ОтветСтруктура.sell_details)=Тип("ОбъектXDTO") тогда
	
	   Стр_1=ОтветСтруктура.sell_details;
	   
	   
	   
	   
	   Если ТипЗнч(Стр_1.items)=ТиП("ОбъектXDTO") Тогда
		   Стр_Итемс=Стр_1.items;
		   
		   Добав=ДокументПриемки.СерийныеНомера.Добавить();
		   
		   		//Добав=Документприемки.СерийныеНомера.Добавить();
		//Если Стр_1.Свойства().Получить("sgtin")=Неопределено Тогда
			//Cnh
			
			
			//Сообщить(Текст1);
			
			// Сообщить("Есть упаковки");
			//Сообщить(Стр_1.sscc_detail.sscc);
			Добав.cis=Стр_1.sgtin;
			
			Добав.Цена=Стр_1.cost;
			Добав.НаименованиеТовара=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("gtin",
			Число(Сред(Стр_1.sgtin,1,14)));
			Нстр=ДокументПриемки.Товары.НайтиСтроки(Новый Структура("GTIN,Цена",Добав.НаименованиеТовара,Добав.Цена));
			Если НСтр.Количество()=0 Тогда
				НСтр=ДокументПриемки.Товары.Добавить();
				НСтр.GTIN=Добав.НаименованиеТовара;
				Попытка
				Исключение
				КонецПопытки;
			Иначе
				НСтр=Нстр[0]
			КонецЕсли;
			Добав.НДС=Стр_1.vat_value;
			НСтр.КоличествоКМ=НСтр.КоличествоКМ+1;
			НСтр.Сумма=НСтр.Сумма+Стр_1.cost;
			НСтр.НДС=НСтр.НДС+Стр_1.vat_value;
			Нстр.Цена=НСтр.Сумма/НСтр.КоличествоКМ;
			 
			 
		Иначе
			
			Для Каждого Стр_Итемс Из Стр_1.items Цикл
			  Добав=ДокументПриемки.СерийныеНомера.Добавить();
		   
	   
			//Добав=Документприемки.СерийныеНомера.Добавить();
			//Если Стр_1.Свойства().Получить("sgtin")=Неопределено Тогда
				//Cnh
				
				
				//Сообщить(Текст1);
				
				// Сообщить("Есть упаковки");
				//Сообщить(Стр_1.sscc_detail.sscc);
				Добав.cis=Стр_1.sgtin;
				
				Добав.Цена=Стр_1.cost;
				Добав.НаименованиеТовара=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("gtin",
				Число(Сред(Стр_1.sgtin,1,14)));
				Нстр=ДокументПриемки.Товары.НайтиСтроки(Новый Структура("GTIN,Цена",Добав.НаименованиеТовара,Добав.Цена));
				Если НСтр.Количество()=0 Тогда
					НСтр=ДокументПриемки.Товары.Добавить();
					НСтр.GTIN=Добав.НаименованиеТовара;
					Попытка
					Исключение
					КонецПопытки;
				Иначе
					НСтр=Нстр[0]
				КонецЕсли;
				Добав.НДС=Стр_1.vat_value;
				НСтр.КоличествоКМ=НСтр.КоличествоКМ+1;
				НСтр.Сумма=НСтр.Сумма+Стр_1.cost;
				НСтр.НДС=НСтр.НДС+Стр_1.vat_value;
				Нстр.Цена=НСтр.Сумма/НСтр.КоличествоКМ;
				 
			Конеццикла;
				
		КонецЕсли;
		
	
Иначе
	Для Каждого Стр_1 Из ОтветСтруктура.sell_details Цикл
		 	
	   
	   
	   
	   
	   Если ТипЗнч(Стр_1.items)=ТиП("ОбъектXDTO") Тогда
		   Стр_Итемс=Стр_1.items;
		   
		   Добав=ДокументПриемки.СерийныеНомера.Добавить();
		   
	   
		//Добав=Документприемки.СерийныеНомера.Добавить();
		//Если Стр_1.Свойства().Получить("sgtin")=Неопределено Тогда
			//Cnh
			
			
			//Сообщить(Текст1);
			
			// Сообщить("Есть упаковки");
			//Сообщить(Стр_1.sscc_detail.sscc);
			Добав.cis=Стр_1.sgtin;
			
			Добав.Цена=Стр_1.cost;
			Добав.НаименованиеТовара=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("gtin",
			Число(Сред(Стр_1.sgtin,1,14)));
			Нстр=ДокументПриемки.Товары.НайтиСтроки(Новый Структура("GTIN,Цена",Добав.НаименованиеТовара,Добав.Цена));
			Если НСтр.Количество()=0 Тогда
				НСтр=ДокументПриемки.Товары.Добавить();
				НСтр.GTIN=Добав.НаименованиеТовара;
				Попытка
				Исключение
				КонецПопытки;
			Иначе
				НСтр=Нстр[0]
			КонецЕсли;
			Добав.НДС=Стр_1.vat_value;
			НСтр.КоличествоКМ=НСтр.КоличествоКМ+1;
			НСтр.Сумма=НСтр.Сумма+Стр_1.cost;
			НСтр.НДС=НСтр.НДС+Стр_1.vat_value;
			Нстр.Цена=НСтр.Сумма/НСтр.КоличествоКМ;
			 
			 
		Иначе
			
			Для Каждого Стр_Итемс Из Стр_1.items Цикл
			  Добав=ДокументПриемки.СерийныеНомера.Добавить();
		   
	   
			//Добав=Документприемки.СерийныеНомера.Добавить();
			//Если Стр_1.Свойства().Получить("sgtin")=Неопределено Тогда
				//Cnh
				
				
				//Сообщить(Текст1);
				
				// Сообщить("Есть упаковки");
				//Сообщить(Стр_1.sscc_detail.sscc);
				Добав.cis=Стр_1.sgtin;
				
				Добав.Цена=Стр_1.cost;
				Добав.НаименованиеТовара=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("gtin",
				Число(Сред(Стр_1.sgtin,1,14)));
				Нстр=ДокументПриемки.Товары.НайтиСтроки(Новый Структура("GTIN,Цена",Добав.НаименованиеТовара,Добав.Цена));
				Если НСтр.Количество()=0 Тогда
					НСтр=ДокументПриемки.Товары.Добавить();
					НСтр.GTIN=Добав.НаименованиеТовара;
					Попытка
					Исключение
					КонецПопытки;
				Иначе
					НСтр=Нстр[0]
				КонецЕсли;
				Добав.НДС=Стр_1.vat_value;
				НСтр.КоличествоКМ=НСтр.КоличествоКМ+1;
				НСтр.Сумма=НСтр.Сумма+Стр_1.cost;
				НСтр.НДС=НСтр.НДС+Стр_1.vat_value;
				Нстр.Цена=НСтр.Сумма/НСтр.КоличествоКМ;
				 
			Конеццикла;
				
		КонецЕсли;
		

				
		
		 
		
	Конеццикла;
	
Конецесли;
ДокументПриемки.Записать();

			ЗаполненаТабличнаяЧастьПриемки=ДокументПриемки.ПроверкаПоНомерамКМ.Количество()>0;
				
				Возврат документПриемки.Ссылка;
КонецФункции


&НаКлиенте
Процедура Загрузить(Команда,УжеОтправили=Ложь) Экспорт
	// Вставить содержимое обработчика.
	СколькоНаСтранице=50; 
	 
	
	//Форм=ОткрытьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	//Пользователь=Форм.Пользователь;
	// Вставить содержимое обработчика.
	
	Thumbprint_1=ПолучитьИзПользователя();
	
	Если        Thumbprint_1=Неопределено Тогда
		ВОзврат
	КонецЕсли;
	ЭтаФорма.Активизировать();
	
	Если Thumbprint_1.НаименованиеСтенда="Фармацевтика" Тогда
			
			
СРегистра="";
	Если Не ЗначениеЗаполнено(СРегистра) тогда
		Попытка
			СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена_ЛДМП(Thumbprint_1);	
		исключение
			СРегистра=Неопределено;
		КонецПопытки;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СРегистра) Тогда
		ПоказатьПредупреждение(,"Не удалось получить токен по организации");
		Возврат;
	Конецесли;
	
		//АдресКАПИ=СтрЗаменить(Thumbprint_1.АдресКАПИ,"api.","");
		  АдресКАПИ=Thumbprint_1.АдресКАПИ;
		
	Датаотчета="";
			
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;   
			
				Куки="lk-auth-token="+Срегистра ;
				
				
				 
	Чтен=Новый  ЗаписьJSON;
	Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
	Чтен.ЗаписатьНачалоОбъекта();
	Чтен.ЗаписатьИмяСвойства("start_from");	
	Чтен.ЗаписатьЗначение(0);
	Чтен.ЗаписатьИмяСвойства("count");
	Чтен.ЗаписатьЗначение(СколькоНаСтранице);
	Чтен.ЗаписатьИмяСвойства("filter");
	Чтен.ЗаписатьНачалоОбъекта();
	
	Если ЗначениеЗаполнено(НачДата) тогда
		Чтен.ЗаписатьИмяСвойства("start_date");
		Чтен.ЗаписатьЗначение(Формат(НачалоДня(НачДата),"ДФ=""гггг-ММ-ддTЧЧ:мм:сс""")+"Z");
	КонецЕслИ;	
	
	Если ЗначениеЗаполнено(КонДата) тогда
		Чтен.ЗаписатьИмяСвойства("end_date");
		Чтен.ЗаписатьЗначение(Формат(КонецДня(КонДата),"ДФ=""гггг-ММ-ддTЧЧ:мм:сс""")+"Z");
	КонецЕслИ;	

	
	Чтен.ЗаписатьИмяСвойства("doc_type");
	Чтен.ЗаписатьЗначение("10511");
	
	ВсеХорошо=Истина;
	
				       Чтен.ЗаписатьКонецОбъекта();
	
	//Чтен.ЗаписатьЗначение("{}");
				       Чтен.ЗаписатьКонецОбъекта();
				
				Тело=Чтен.Закрыть();//"{""start_from"":0,""count"":20,""filter"":{}}";
	Тело=СтрЗаменить(Тело,Символы.ПС,"");
	Тело=СтрЗаменить(Тело,Символы.ВК,"");
	
				
//			Тело="{start_from: 0, count: 20, filter: {doc_type: ""601""}}";
			
	HTTPЗапрос=Новый HTTPЗапрос("api/v1/documents/income");
	HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","token "+СРегистра);
	//Тело="documentType=LP_ACCEPT_GOODS_XML";
//	HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
							
	
	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(4);
	
	Если Ответ.КодСостояния=202 ИЛИ Ответ.КодСостояния=200 Тогда
				//ЧтениеJSON = Новый ЧтениеJSON;
			Страница=0;
			Тотал=1;
			Пока Страница*СколькоНаСтранице<=Тотал Цикл
				
 					страница=Страница+1;
				//ЧтениеJSON.УстановитьСтроку(Текст1);
				NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
				Тотал=NNN.total;
				
				Если СколькоНаСтранице>NNN.documents.Количество() Тогда
					 Тотал=NNN.documents.Количество()
				КонецЕсли;
				
				did="";
				Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
					Прокси=Новый ИнтернетПрокси;
					Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
				
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				Иначе
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				КонецЕсли;
				
				docDate="";
				Для Каждого Стр Из  NNN.documents Цикл
					
					
												Если Найти( Thumbprint_1.АдресКАПИ,"api")>0 Тогда
														HTTPЗапрос=Новый HTTPЗапрос("api/v1/documents/download/"+Стр.document_id+"");
													Иначе
														HTTPЗапрос=Новый HTTPЗапрос("documents/download/"+Стр.document_id+"");
											/////			
													Куки="certSerial="+Thumbprint_1.Thumbprint_1+";lk-auth-token="+Срегистра ;
														
														HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
														
												КонецЕсли;
											HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
											HTTPЗапрос.Заголовки.Вставить("Authorization","token "+СРегистра);
											//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
											///Константин           
											//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
											Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
											Текст1=Ответ.ПолучитьТелоКакСтроку();
											
										
	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(1);
	
		
Если Найти( Thumbprint_1.АдресКАПИ,"api")>0 Тогда
																							
											NNN_2_Ы=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
											
											Попытка
												Сайт_1=NNN_2_Ы.link;
											Исключение
												Продолжить;
											КонецПопытки;
											Сайт_1=Сред(Сайт_1,Найти(Сайт_1,"//")+2);
											Сайт_1=Сред(Сайт_1,Найти(Сайт_1,"/")+1);
											
											

																
											
														HTTPЗапрос=Новый HTTPЗапрос(Сайт_1);
								HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
								HTTPЗапрос.Заголовки.Вставить("Authorization","token "+СРегистра);
								//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
								///Константин           
								//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
								Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
								Текст1=Ответ.ПолучитьТелоКакСтроку();
												ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(1);
								
										КонецЕсли;												
										
																						
											
			//Попытка
				
				
				МассивПроудкций=Новый Массив;
				МассивКонтрагентов=Новый Массив;
				Попытка
					ЗаполненаТабличнаяЧастьПриемки=Ложь;
					ДатаДокумента="";
					дкоументФарм=ДобавитьПриемку(Текст1,Стр,ДатаДокумента,Thumbprint_1);
																	
				Исключение
					КонецПопытки;
						
					Конеццикла;

					
														  //ОработатьДокументы(Стр,Результат,Ошибка)

														
														//ОбработаноМассив.Добавить(Новый Структура("Докум,Сч,Статус,Ошибка",Стр.Документ,Стр.Сч,Результат,Ошибка));
																									//Исключение
											//	КонецПопытки;
//											 Конеццикла;

					
								//Конеццикла;
				
				Если Страница*СколькоНаСтранице>Тотал Тогда
					Прервать;
				КонецЕсли;
				
			 
	Чтен=Новый  ЗаписьJSON;
	Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
	Чтен.ЗаписатьНачалоОбъекта();
	Чтен.ЗаписатьИмяСвойства("start_from");	
	Чтен.ЗаписатьЗначение(Страница*СколькоНаСтранице);
	Чтен.ЗаписатьИмяСвойства("count");
	Чтен.ЗаписатьЗначение(СколькоНаСтранице);
	Чтен.ЗаписатьИмяСвойства("filter");
	Чтен.ЗаписатьНачалоОбъекта();
	
	
	Если ЗначениеЗаполнено(НачДата) тогда
		Чтен.ЗаписатьИмяСвойства("start_date");
		Чтен.ЗаписатьЗначение(Формат(НачалоДня(НачДата),"ДФ=""гггг-ММ-ддTЧЧ:мм:сс""")+"Z");
	КонецЕслИ;	
	
	Если ЗначениеЗаполнено(КонДата) тогда
		Чтен.ЗаписатьИмяСвойства("end_date");
		Чтен.ЗаписатьЗначение(Формат(КонецДня(КонДата),"ДФ=""гггг-ММ-ддTЧЧ:мм:сс""")+"Z");
	КонецЕслИ;	

		
	Чтен.ЗаписатьИмяСвойства("doc_type");
	Чтен.ЗаписатьЗначение("10511");
	           Чтен.ЗаписатьКонецОбъекта();
	
	//Чтен.ЗаписатьЗначение("{}");
				       Чтен.ЗаписатьКонецОбъекта();
				
				Тело=Чтен.Закрыть();//"{""start_from"":0,""count"":20,""filter"":{}}";
	Тело=СтрЗаменить(Тело,Символы.ПС,"");
	Тело=СтрЗаменить(Тело,Символы.ВК,"");
	
		
				HTTPЗапрос=Новый HTTPЗапрос("api/v1/documents/income");
	HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","token "+СРегистра);
	//Тело="documentType=LP_ACCEPT_GOODS_XML";
//	HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(1);
							
	
	

	Если Ответ.КодСостояния<>202 И Ответ.КодСостояния<>200  Тогда
				Сообщить("Не удалось загрузить приходы с ЦРПТ, отсутствует доступ.");
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
				Возврат;
	КонецЕсли;
	
	Конеццикла;	
				
				
ИначеЕсли Ответ.КодСостояния=401 		ИЛИ Ответ.КодСостояния=502    Тогда
					ВсеХорошо=Ложь;
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
	Иначе
					ВсеХорошо=Ложь;
					Попытка
						//ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);ЧтениеJSON = Новый ЧтениеJSON;
						//ЧтениеJSON.УстановитьСтроку(Текст1);
						NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
						попытка
								Если NNN.error="access_denied" Тогда
									Сообщить(NNN.error_description+" "+" сайт ЦРПТ не доступен. Повторите отправку позже");
								КонецЕсли;
							
						Исключение
							Попытка
								Если NNN.error="access_denied" Тогда
									Сообщить(NNN.error_description+" "+" сайт ЦРПТ не доступен. Повторите отправку позже");
								КонецЕсли;
							Исключение
								
								Если Найти(Текст1,"Billing contract")>0 И
									Найти(Текст1,"not signed by participant")>0 Тогда
									Сообщить("Договор биллинга для выбранной группы товаров не подписан участником");
								КонецЕсли;
								
							КонецПопытки;
							
						КонецПопытки;
						
					Исключение
					КонецПопытки;
		//	Иначе
		//		ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,ЭтаФорма,"ПодписатьФайлПослеПолученияТокена");
		//		ОтправитьЗаявку(Команда,Истина)			
		//	КонецЕсли
		//КонецЦикла;	
			   КонецЕсли;
			
			Возврат;
		КонецЕсли;
		
		
	
	
				//СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);	
		
		СРегистра=ПолучитьТокенСрегистра(Thumbprint_1.Thumbprint_1);
		Если Не ЗначениеЗаполнено(СРегистра) тогда
			Попытка
				СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);	
			исключение
				СРегистра=Неопределено;
			КонецПопытки;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СРегистра) Тогда
			ПоказатьПредупреждение(,"Не удалось получить токен по организации");
			Возврат;
		Конецесли;
		
 	Если Ложь Тогда
		//Если НЕ ЗагрузканаСерверИзЦРПТ(Thumbprint_1,СРегистра,УжеОтправили) Тогда
		//		Если УжеОтправили=Истина Тогда
		//		//ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
		//	Иначе
		//		ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
		//		ЗагрузитьИзЦРПТ(Команда,Истина)			
		//КонецЕсли
		//
		//КонецЕсли;
		
		
	Иначе
		
		
			
			
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;                                                       
			
			
 			что=Thumbprint_1.что;
			
			
			
			
			
	
	Если Thumbprint_1.НаименованиеСтенда="Альтернативный табак" Тогда
		
			//ТекстЗапроса="api/v3/facade/receipt/search";
			
			Страница=0;
			
							did="";
				docDate="";
				SenderINN="";
		Пока Истина Цикл
			
			Если ЗначениеЗаполнено(did) И ЗначениеЗаполнено(docDate) Тогда
				ТелоЗапроса="{""receipt"":{""dateFrom"":"""+Формат(НачДата,"ДФ=""гггг-ММ-дд'T'ЧЧ:мм:сс""")+".000Z"+
				""",""dateTo"":"""+Формат(КонДата,"ДФ=""гггг-ММ-дд'T'ЧЧ:мм:сс""")+".999Z"+""",""page"":1},""pagination"":{""limit"":"+Формат(СколькоНаСтранице,"ЧГ=")+",""pageDir"":""NEXT"",""did"":"""+
				did+""",""senderInn"":"""+senderInn+""",""receiptDate"":"""+docDate+"""}}";
				
				
				//"{""receipt"":{""dateFrom"":"""+Формат(НачДата,"ДФ=""гггг-ММ-дд'T'ЧЧ:мм:сс""")+".000Z"+
				//""",""dateTo"":"""+Формат(КонДата,"ДФ=""гггг-ММ-дд'T'ЧЧ:мм:сс""")+".999Z"+""",""page"":"+"1"+"},""pagination"":{""limit"":"+xmlString(СколькоНаСтранице)+"}}";
			Иначе
				ТелоЗапроса="{""receipt"":{""dateFrom"":"""+Формат(НачДата,"ДФ=""гггг-ММ-дд'T'ЧЧ:мм:сс""")+".000Z"+
				""",""dateTo"":"""+Формат(КонДата,"ДФ=""гггг-ММ-дд'T'ЧЧ:мм:сс""")+".999Z"+""",""page"":"+"1"+"},""pagination"":{""limit"":"+Формат(СколькоНаСтранице,"ЧГ=")+"}}";
			Конецесли;
			Страница=Страница+1;
			
			HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/receipt/search");
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
			HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса);
			
			Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
			
			еСЛИ оТВЕТ.КодСостояния<>200 тОГДА	
				Если УжеОтправили=Истина Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
				Иначе
					ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
					Загрузить(Команда,Истина)			
				КонецЕсли;
				Возврат;
				
			кОНЕЦеСЛИ;		
							Текст1=Ответ.ПолучитьТелоКакСтроку();
			
			NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
						
			Если NNN.Количество()=0 тогда
				Возврат;
			КонецЕсли;
			
			
			
				Тотал=999999999999;
				
				Тотал=NNN.Количество();
				
					МММ=NNN;
					Для Каждого Стр Из  МММ Цикл
						did=Стр.did;
						senderInn=Стр.senderInn;
						docDate=Формат(Дата(1970,1,1)+Стр.receiptDate/1000,"ДФ=""гггг-ММ-ддTЧЧ:мм:ссZ""");
					//	Если Стр.input=true 
					//		И Найти(Стр.type,"LP_SHIP_GOODS")=1
					//		Тогда
					
	 			что=Thumbprint_1.что;
		
				
							//Если Thumbprint_1.НаименованиеСтенда="Альтернативный табак" Тогда
								HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/receipt/"+Стр.did+"/download");
							//Иначе
							//	HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/receipt/"+Стр.number+"/body?pg="+Что+"&limit=2147483647");
							//КонецЕсли;
							HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
							HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
							//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
							///Константин           
							Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
							Текст1=Ответ.ПолучитьТелоКакСтроку();
							
							
							
							
							
							ТелоЗапроса="{""needTotal"":true,""documentId"":"""+Стр.did+""",""limit"":"+Формат(СколькоНаСтранице,"ЧГ=")+",""offset"":0}";
							
							HTTPЗапрос=Новый HTTPЗапрос("private-office-api/private/v2/cis/search");
							HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
							HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
		#Если ВебКлиент Тогда
							HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса,КодировкаТекста.UTF8);
			#Иначе
							HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
							
							
							Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
						еСЛИ оТВЕТ.КодСостояния<>200 тОГДА	
				Если УжеОтправили=Истина Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
				Иначе
					ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
					Загрузить(Команда,Истина)			
				КонецЕсли;
				Возврат;
				
			кОНЕЦеСЛИ;		 	
							
							ТекстТабл=Ответ.ПолучитьТелоКакСтроку();
							NNN_ТабличнаяЧасть=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(ТекстТабл);//ПрочитатьJSON(ЧтениеJSON);
							
							
					ОбновитьСтатусДокумента_чек_Табак(Текст1,Пользователь,Стр,NNN_ТабличнаяЧасть);	
													
					// 	КонецЕсли;
					Конеццикла;
			
			
			
			
			//
			//Если ЗначениеЗаполнено(НачДата) Тогда
			//	ТекстЗапроса=ТекстЗапроса+"&dateFrom="+Формат(НачДата,"ДФ=""гггг-ММ-дд'T'ЧЧ:мм:сс""")+".000Z";
			//	
			//КонецЕслИ;
			//Если ЗначениеЗаполнено(КонДата) Тогда
			//	ТекстЗапроса=ТекстЗапроса+"&dateTo="+Формат(КонДата,"ДФ=""гггг-ММ-дд'T'ЧЧ:мм:сс""")+".999Z";
			//	
			//КонецЕслИ;

		Конеццикла;	
		Возврат;		
		
	КонецЕсли;
	
			
			Если Thumbprint_1.НаименованиеСтенда="Альтернативный табак" Тогда
				ТекстЗапроса="api/v3/true-api/receipt/listV2?pg="+Что;
			Иначе
				ТекстЗапроса="api/v3/facade/receipt/listV2?pg="+Что;
			КонецЕсли;
			Если ЗначениеЗаполнено(НачДата) Тогда
				ТекстЗапроса=ТекстЗапроса+"&dateFrom="+Формат(НачДата,"ДФ=""гггг-ММ-дд'T'ЧЧ:мм:сс""")+".000Z";
				
			КонецЕслИ;
			Если ЗначениеЗаполнено(КонДата) Тогда
				ТекстЗапроса=ТекстЗапроса+"&dateTo="+Формат(КонДата,"ДФ=""гггг-ММ-дд'T'ЧЧ:мм:сс""")+".999Z";
				
			КонецЕслИ;
			
			
			ТекстЗапроса=ТекстЗапроса+"&limit="+Формат(СколькоНаСтранице,"ЧГ=")+"&order=DESC&orderColumn=docDate&pageDir=NEXT";
	HTTPЗапрос=Новый HTTPЗапрос(ТекстЗапроса);
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	//Тело="documentType=LP_ACCEPT_GOODS_XML";
//	HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
							
	
	
	Если Ответ.КодСостояния=202 ИЛИ Ответ.КодСостояния=200 Тогда
				//ЧтениеJSON = Новый ЧтениеJSON;
			Страница=0;
			Тотал=1;
			Пока Страница*СколькоНаСтранице<=Тотал Цикл
				
 					страница=Страница+1;
				//ЧтениеJSON.УстановитьСтроку(Текст1);
				NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
				Тотал=999999999999;
				
				Если Thumbprint_1.НаименованиеСтенда="Альтернативный табак" Тогда
				 	Тотал=NNN.Количество()
				 Иначе
					Если СколькоНаСтранице>NNN.results.Количество() Тогда
					 Тотал=NNN.results.Количество()
				 	КонецЕсли;
				КонецЕсли;
				
				did="";
				docDate="";
				Если Thumbprint_1.НаименованиеСтенда="Альтернативный табак" Тогда
					МММ=NNN;
					Для Каждого Стр Из  МММ Цикл
						did=Стр.did;
						docDate=Дата(1970,1,1)+Стр.receiptDate;
					//	Если Стр.input=true 
					//		И Найти(Стр.type,"LP_SHIP_GOODS")=1
					//		Тогда
					
	 			что=Thumbprint_1.что;
		
				
							Если Thumbprint_1.НаименованиеСтенда="Альтернативный табак" Тогда
								HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/receipt/"+Стр.did+"/info");
							Иначе
								HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/receipt/"+Стр.number+"/body?pg="+Что+"&limit=2147483647");
							КонецЕсли;
							HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
							HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
							//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
							///Константин           
							Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
							Текст1=Ответ.ПолучитьТелоКакСтроку();
							//ЧтениеJSON = Новый ЧтениеJSON;
							//ЧтениеJSON.УстановитьСтроку(Текст1);
							//МассивУп=Новый Массив;
							
							//МассивКМ=Новый Массив;
					ОбновитьСтатусДокумента_чек(Текст1,Пользователь);	
													
					// 	КонецЕсли;
					Конеццикла;
					
				Иначе
					МММ=NNN.results;
					Для Каждого Стр Из  МММ Цикл
						did=Стр.number;
						docDate=Стр.docDate;
					//	Если Стр.input=true 
					//		И Найти(Стр.type,"LP_SHIP_GOODS")=1
					//		Тогда
					
	 			что=Thumbprint_1.что;
		
				
							Если Thumbprint_1.НаименованиеСтенда="Альтернативный табак" Тогда
								HTTPЗапрос=Новый HTTPЗапрос("api/v3/true-api/receipt/"+Стр.number+"/body?pg="+Что+"&limit=2147483647");
							Иначе
								HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/receipt/"+Стр.number+"/body?pg="+Что+"&limit=2147483647");
							КонецЕсли;
							HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
							HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
							//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
							///Константин           
							Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
							Текст1=Ответ.ПолучитьТелоКакСтроку();
							//ЧтениеJSON = Новый ЧтениеJSON;
							//ЧтениеJSON.УстановитьСтроку(Текст1);
							//МассивУп=Новый Массив;
							
							//МассивКМ=Новый Массив;
					ОбновитьСтатусДокумента_чек(Текст1,Пользователь);	
													
					// 	КонецЕсли;
					Конеццикла;
				КонецЕсли;
				Если Страница*СколькоНаСтранице>Тотал Тогда
					Прервать;
				КонецЕсли;
				
 			что=Thumbprint_1.что;
	

			Если Thumbprint_1.НаименованиеСтенда="Альтернативный табак" Тогда
				ТекстЗапроса="api/v3/true-api/receipt/listV2?pg="+Что;
			Иначе
				ТекстЗапроса="api/v3/facade/receipt/listV2?pg="+Что;
			КонецЕсли;
			Если ЗначениеЗаполнено(НачДата) Тогда
				ТекстЗапроса=ТекстЗапроса+"&dateFrom="+Формат(НачалоДня(НачДата),"ДФ=""гггг-ММ-дд'T'ЧЧ:мм:сс""")+".000Z";
				
			КонецЕслИ;
			Если ЗначениеЗаполнено(КонДата) Тогда
				ТекстЗапроса=ТекстЗапроса+"&dateTo="+Формат(КонецДня(КонДата),"ДФ=""гггг-ММ-дд'T'ЧЧ:мм:сс""")+".999Z";
				
			КонецЕслИ;
			
Если Thumbprint_1.НаименованиеСтенда="Альтернативный табак" Тогда
			 ТекстЗапроса=ТекстЗапроса+"&limit="+Формат(СколькоНаСтранице,"ЧГ=")+"&order=DESC&orderColumn=docDate&did="+did+"&pageDir=NEXT";
Иначе										
			 ТекстЗапроса=ТекстЗапроса+"&limit="+Формат(СколькоНаСтранице,"ЧГ=")+"&order=DESC&orderColumn=docDate&did="+did+"&orderedColumnValue="+docDate+"&pageDir=NEXT";
КонецЕсли;
				 HTTPЗапрос=Новый HTTPЗапрос(ТекстЗапроса);
				 
				 //"api/v4/facade/doc/listV2?documentType=LK_RECEIPT&documentType=RECEIPT&limit="+Формат(СколькоНаСтранице,"ЧГ=")+"&order=DESC&orderColumn=docDate&did="+did+"&orderedColumnValue="+docDate+"&pageDir=NEXT");
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
		//Тело="documentType=LP_ACCEPT_GOODS_XML";
//	HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	Если Ответ.КодСостояния<>202 И Ответ.КодСостояния<>200  Тогда
		Если УжеОтправили=Истина Тогда
				Сообщить("Не удалось загрузить приходы с ЦРПТ, отсутствует доступ.");
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1);
				Возврат;
			Иначе
				ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
				Загрузить(Команда,Истина)			
			КонецЕсли
	КонецЕсли;
	
	Конеццикла;	
				
				
	ИначеЕсли Ответ.КодСостояния=401 		ИЛИ Ответ.КодСостояния=502    Тогда
			Если УжеОтправили=Истина Тогда
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
			Иначе
				ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
				Загрузить(Команда,Истина)			
			КонецЕсли
	Иначе
					Попытка
						//ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);ЧтениеJSON = Новый ЧтениеJSON;
						//ЧтениеJSON.УстановитьСтроку(Текст1);
						NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
						попытка
								Если NNN.error="access_denied" Тогда
									Сообщить(NNN.error_description+" "+" сайт ЦРПТ не доступен. Повторите отправку позже");
								КонецЕсли;
							
						Исключение
							Попытка
								Если NNN.error="access_denied" Тогда
									Сообщить(NNN.error_description+" "+" сайт ЦРПТ не доступен. Повторите отправку позже");
								КонецЕсли;
							Исключение
								
								Если Найти(Текст1,"Billing contract")>0 И
									Найти(Текст1,"not signed by participant")>0 Тогда
									Сообщить("Договор биллинга для выбранной группы товаров не подписан участником");
								КонецЕсли;
								
							КонецПопытки;
							
						КонецПопытки;
						
					Исключение
					КонецПопытки;
		//	Иначе
		//		ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,ЭтаФорма,"ПодписатьФайлПослеПолученияТокена");
		//		ОтправитьЗаявку(Команда,Истина)			
		//	КонецЕсли
	КонецЕсли;
	КонецЕсли;


	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	Форм=ПолучитьФОрму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если НЕ Форм.открыта() Тогда
		Форм.Открыть();
	КонецЕсли;
	Пользователь=Форм.Пользователь;
	ОрганизацияПоПользователю();
	
КонецПроцедуры


Процедура ОрганизацияПоПользователю()
	Организация=Пользователь.Организация;
	Элементы.Надпись.Заголовок="Загрузка по разделу учета: "+Пользователь.СайтыВходаВСистему.Наименование;
КонецПроцедуры

Функция ПолучитьИзПользователя() Экспорт
	    Струк=Неопределено;
	Если Организация.ИНН=Пользователь.Организация.ИНН Тогда
		Струк=Обработки._Запуск_ХамелеонЦРПТ.ПолучитьИзПользователя(Пользователь);
	Иначе
		
			//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи_ХамелеонЦРПТ.Ссылка
		|ИЗ
		|	Справочник.Пользователи_ХамелеонЦРПТ КАК Пользователи_ХамелеонЦРПТ
		|ГДЕ
		|	Пользователи_ХамелеонЦРПТ.Организация.ИНН = &Организация
		|	И Пользователи_ХамелеонЦРПТ.СайтыВходаВСистему = &СайтыВходаВСистему
		|	И НЕ Пользователи_ХамелеонЦРПТ.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Организация", Организация.ИНН);
	Запрос.УстановитьПараметр("СайтыВходаВСистему", Пользователь.СайтыВходаВСистему);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	НайтиПольз=Неопределено;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		                      НайтиПольз=ВыборкаДетальныеЗаписи.Ссылка
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

		
		//НайтиПольз=Справочники.Пользователи_ХамелеонЦРПТ.НайтиПоРеквизиту("Организация",Объект.Организация);
		Если ЗначениеЗаполнено(НайтиПольз) Тогда
			Пользователь=НайтиПольз;
			Струк=Обработки._Запуск_ХамелеонЦРПТ.ПолучитьИзПользователя(НайтиПольз);
		КонецЕсли;
		
	КонецЕслИ;
	
	
	Если ЗначениеЗаполнено(Струк) тогда
	
		Струк.Вставить("РасчетОстатков",РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().РасчетОстатков);
	
		Возврат Струк;
	Иначе
		Возврат Неопределено
	КонецЕсли;
КонецФункции


&НаКлиенте
Процедура КонДатаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Если НачалоДня(КонДата)=КонДата Тогда
		КонДата=КонецДня(Кондата);
	КонецЕсли;
КонецПроцедуры

