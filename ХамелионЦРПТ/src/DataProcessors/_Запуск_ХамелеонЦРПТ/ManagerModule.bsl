	
Функция УровеньИерархии_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.УровеньИерархии_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.УровеньИерархии_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.УровеньИерархии_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.УровеньИерархии_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.УровеньИерархии_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции
	
	
Функция ОКПД2_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ОКПД2_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ОКПД2_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ОКПД2_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ОКПД2_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ОКПД2_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции
	
Функция КодВидаПодакцизныхТоваров_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.КодВидаПодакцизныхТоваров_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.КодВидаПодакцизныхТоваров_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.КодВидаПодакцизныхТоваров_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.КодВидаПодакцизныхТоваров_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.КодВидаПодакцизныхТоваров_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции

	
Функция ЕдиницаИзмеренияВысотыСпинки_Коляски_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ЕдиницаИзмеренияВысотыСпинки_Коляски_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ЕдиницаИзмеренияВысотыСпинки_Коляски_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ЕдиницаИзмеренияВысотыСпинки_Коляски_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ЕдиницаИзмеренияВысотыСпинки_Коляски_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ЕдиницаИзмеренияВысотыСпинки_Коляски_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ЕдиницыИзмеренияВысоты_Коляски_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ЕдиницыИзмеренияВысоты_Коляски_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ЕдиницыИзмеренияВысоты_Коляски_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ЕдиницыИзмеренияВысоты_Коляски_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ЕдиницыИзмеренияВысоты_Коляски_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ЕдиницыИзмеренияВысоты_Коляски_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ЕдиницаИзмеренияШирины_Коляски_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ЕдиницаИзмеренияШирины_Коляски_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ЕдиницаИзмеренияШирины_Коляски_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ЕдиницаИзмеренияШирины_Коляски_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ЕдиницаИзмеренияШирины_Коляски_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ЕдиницаИзмеренияШирины_Коляски_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ТипПриводаВДвижении_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ТипПриводаВДвижении_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ТипПриводаВДвижении_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ТипПриводаВДвижении_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ТипПриводаВДвижении_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ТипПриводаВДвижении_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ЕдиницыИзмеренияГлубины_Коляски_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ЕдиницыИзмеренияГлубины_Коляски_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ЕдиницыИзмеренияГлубины_Коляски_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ЕдиницыИзмеренияГлубины_Коляски_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ЕдиницыИзмеренияГлубины_Коляски_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ЕдиницыИзмеренияГлубины_Коляски_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ВидТовара_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ВидТовара_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ВидТовара_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ВидТовара_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ВидТовара_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ВидТовара_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ТипРамы_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ТипРамы_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ТипРамы_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ТипРамы_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ТипРамы_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ТипРамы_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ВидМатериала_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ВидМатериала_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ВидМатериала_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ВидМатериала_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ВидМатериала_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ВидМатериала_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ВидИзделия_Белье_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ВидИзделия_Белье_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ВидИзделия_Белье_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ВидИзделия_Белье_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ВидИзделия_Белье_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ВидИзделия_Белье_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ВозврастПотребителя_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ВозрастПотребителя_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ВозрастПотребителя_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ВозрастПотребителя_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ВозрастПотребителя_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ВозрастПотребителя_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ТипИзделия_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ТипИзделия_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ТипИзделия_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ТипИзделия_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ТипИзделия_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ТипИзделия_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция РазмерИзделияГОСТ_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.РазмерИзделияГОСТ_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.РазмерИзделияГОСТ_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.РазмерИзделияГОСТ_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.РазмерИзделияГОСТ_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.РазмерИзделияГОСТ_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683),Истина)
	 
	КонецЕсли;
КонецФункции



Функция ВидИзделия_ХамелеонЦРПТ( V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ВидИзделия_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ВидИзделия_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если Не ЗначениеЗаполнено(КодВида) Тогда
		 Возврат Справочники.ВидИзделия_ХамелеонЦРПТ.ПустаяСсылка();
	КонецЕсли;
	 Если СпрВидОбуви=Справочники.ВидИзделия_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ВидИзделия_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ВидИзделия_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683),Истина)
	 
	КонецЕсли;
КонецФункции





Функция ЦелевойПол_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ЦелевойПол_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ЦелевойПол_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ЦелевойПол_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ЦелевойПол_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ЦелевойПол_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции



Функция ТипПарфюмерии_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ТипПарфюмерии_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ТипПарфюмерии_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ТипПарфюмерии_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ТипПарфюмерии_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ТипПарфюмерии_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ЕдиницаИзмерения_Вода(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ЕдиницаИзмерения_Вода_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ЕдиницаИзмерения_Вода_ХамелеонЦРПТ.НайтиПоНаименованию(Наименование);
	 Если  Не ЗначениеЗаполнено(СпрВидОбуви) Тогда
	 	СпрВидОбуви=Справочники.ЕдиницаИзмерения_Вода_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	КонецЕсли;
	 Если СпрВидОбуви=Справочники.ЕдиницаИзмерения_Вода_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ЕдиницаИзмерения_Вода_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 СпрВидОбуви=СпрВидОбуви.Ссылка.ПолучитьОбъект();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ЕдиницаИзмерения_Вода_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции

Функция ЕдиницаИзмеренияМинерализации_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ЕдиницаИзмеренияМинерализации_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ЕдиницаИзмеренияМинерализации_ХамелеонЦРПТ.НайтиПоНаименованию(Наименование);
	 Если  Не ЗначениеЗаполнено(СпрВидОбуви) Тогда
	 	СпрВидОбуви=Справочники.ЕдиницаИзмеренияМинерализации_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	КонецЕсли;
	 Если СпрВидОбуви=Справочники.ЕдиницаИзмеренияМинерализации_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ЕдиницаИзмеренияМинерализации_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 СпрВидОбуви=СпрВидОбуви.Ссылка.ПолучитьОбъект();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ЕдиницаИзмеренияМинерализации_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции

Функция МетодГазирования_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.МетодГазирования_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.МетодГазирования_ХамелеонЦРПТ.НайтиПоНаименованию(Наименование);
	 Если  Не ЗначениеЗаполнено(СпрВидОбуви) Тогда
	 	СпрВидОбуви=Справочники.МетодГазирования_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	КонецЕсли;
	 Если СпрВидОбуви=Справочники.МетодГазирования_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.МетодГазирования_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 СпрВидОбуви=СпрВидОбуви.Ссылка.ПолучитьОбъект();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.МетодГазирования_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ЕдиницаИзмерения(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ЕдиницыИзмерения_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ЕдиницыИзмерения_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ЕдиницыИзмерения_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ЕдиницыИзмерения_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ЕдиницыИзмерения_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ТипШиныПоСпособуГерметизации(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ТипШиныПоСпособуГерметизации_Шины_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ТипШиныПоСпособуГерметизации_Шины_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ТипШиныПоСпособуГерметизации_Шины_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ТипШиныПоСпособуГерметизации_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ТипШиныПоСпособуГерметизации_Шины_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция Сезонность(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.Сезонность_Шины_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.Сезонность_Шины_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.Сезонность_Шины_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.Сезонность_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.Сезонность_Шины_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции




Функция КатегорияСкорости(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.КатегорияСкорости_Шины_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.КатегорияСкорости_Шины_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.КатегорияСкорости_Шины_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.КатегорияСкорости_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.КатегорияСкорости_Шины_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции



Функция ИндексНагрузкиНаШину(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ИндексНагрузкиНаШину_Шины_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ИндексНагрузкиНаШину_Шины_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ИндексНагрузкиНаШину_Шины_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ИндексНагрузкиНаШину_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ИндексНагрузкиНаШину_Шины_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ТипКонструкцииКаркасаШины(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ТипКонструкцииКаркасаШины_Шины_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ТипКонструкцииКаркасаШины_Шины_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ТипКонструкцииКаркасаШины_Шины_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ТипКонструкцииКаркасаШины_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ТипКонструкцииКаркасаШины_Шины_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине_Шины_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине_Шины_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине_Шины_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине_Шины_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ЕдиницаИзмерения_Шины(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ЕдиницаИзмерения_Шины_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ЕдиницаИзмерения_Шины_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ЕдиницаИзмерения_Шины_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ЕдиницаИзмерения_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ЕдиницаИзмерения_Шины_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ЕдиницыИзмерения_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ЕдиницаИзмеренияМолока_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ЕдиницаИзмеренияМолока_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ЕдиницаИзмеренияМолока_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ЕдиницаИзмеренияМолока_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ЕдиницаИзмеренияМолока_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции
Функция ПродукцияДляДетскогоПитания(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ПродукцияДляДетскогоПитания_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ПродукцияДляДетскогоПитания_ХамелеонЦРПТ.НайтиПоКоду(КодВида,Истина);
	 Если СпрВидОбуви=Справочники.ПродукцияДляДетскогоПитания_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ПродукцияДляДетскогоПитания_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ПродукцияДляДетскогоПитания_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции



Функция ПродукцияДляДетскогоПитания_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ПродукцияДляДетскогоПитания_МОЛОКО_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ПродукцияДляДетскогоПитания_МОЛОКО_ХамелеонЦРПТ.НайтиПоКоду(КодВида,Истина);
	 Если СпрВидОбуви=Справочники.ПродукцияДляДетскогоПитания_МОЛОКО_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ПродукцияДляДетскогоПитания_МОЛОКО_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ПродукцияДляДетскогоПитания_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ПроисхождениеСырья_Молоко_ХамлеоенЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ПроисхождениеСырья_Молоко_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ПроисхождениеСырья_Молоко_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ПроисхождениеСырья_Молоко_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ПроисхождениеСырья_Молоко_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ПроисхождениеСырья_Молоко_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции



Функция МатериалУпаковки_Молоко_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.МатериалУпаковки_Молоко_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.МатериалУпаковки_Молоко_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.МатериалУпаковки_Молоко_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.МатериалУпаковки_Молоко_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.МатериалУпаковки_Молоко_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции

Функция ТипУпаковки_Молоко_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ТипУпаковки_Молоко_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ТипУпаковки_Молоко_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ТипУпаковки_Молоко_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ТипУпаковки_Молоко_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ТипУпаковки_Молоко_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ТипПродукта_Вода_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ТипПродукта_Вода_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ТипПродукта_Вода_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ТипПродукта_Вода_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ТипПродукта_Вода_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ТипПродукта_Вода_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ТипПродукта_Молоко_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ТипПродукта_Молоко_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ТипПродукта_Молоко_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ТипПродукта_Молоко_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ТипПродукта_Молоко_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ТипПродукта_Молоко_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ТипВелосипеда_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ТипВелосипеда_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ТипВелосипеда_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ТипВелосипеда_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ТипВелосипеда_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ТипВелосипеда_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ТипДвигателя_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ТипДвигателя_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ТипДвигателя_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ТипДвигателя_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ТипДвигателя_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ТипДвигателя_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция РазмерРамы_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.РазмерРамы_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.РазмерРамы_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.РазмерРамы_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.РазмерРамы_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.РазмерРамы_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции



Функция ШиринаПрофиля_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ШиринаПрофиля_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ШиринаПрофиля_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ШиринаПрофиля_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ШиринаПрофиля_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ШиринаПрофиля_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции




Функция ТипТормознойСистемы_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ТипТормознойСистемы_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ТипТормознойСистемы_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ТипТормознойСистемы_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ТипТормознойСистемы_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ТипТормознойСистемы_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции



Функция ТипПереднейВилки_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ТипПереднейВилки_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ТипПереднейВилки_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ТипПереднейВилки_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ТипПереднейВилки_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ТипПереднейВилки_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции



Функция ЕдиницыИзмеренияМощностиДвигателя_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ЕдиницыИзмеренияМощностиДвигателя_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ЕдиницыИзмеренияМощностиДвигателя_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ЕдиницыИзмеренияМощностиДвигателя_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ЕдиницыИзмеренияМощностиДвигателя_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ЕдиницыИзмеренияМощностиДвигателя_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


Функция ГодПроизводства_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ГодПроизводства_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ГодПроизводства_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ГодПроизводства_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ГодПроизводства_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ГодПроизводства_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции




Функция ЕдиницаИзмеренияРазмераРамы_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ЕдиницаИзмеренияРазмераРамы_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ЕдиницаИзмеренияРазмераРамы_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ЕдиницаИзмеренияРазмераРамы_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ЕдиницаИзмеренияРазмераРамы_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ЕдиницаИзмеренияРазмераРамы_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции

Функция МатериалРамы_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.МатериалРамы_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.МатериалРамы_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.МатериалРамы_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.МатериалРамы_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.МатериалРамы_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции



Функция ВидСертификатов(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ВидСертификатаПоGSI_ХамелеонЦРПТ.ПустаяСсылка();
	ИначеЕсли СокрЛП(V_WEB_90001683)="<>" Тогда
		Возврат Справочники.ВидСертификатаПоGSI_ХамелеонЦРПТ.ПустаяСсылка();
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ВидСертификатаПоGSI_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ВидСертификатаПоGSI_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ВидСертификатаПоGSI_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ВидСертификатаПоGSI_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции



Процедура ЗагружаемШаблоныНасервере(Текст1,Пользователь) Экспорт
		Попытка
			//ЧтениеJSON = Новый ЧтениеJSON;
			//ЧтениеJSON.УстановитьСтроку(Текст1);
			//СтруктураШаблонов=ПрочитатьJSON(ЧтениеJSON,);
			СтруктураШаблонов=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON_Соответствие(Текст1);
		Исключение
			Возврат;
		КонецПопытки;
		Для Каждого 			Стр_1							 Из СтруктураШаблонов["stickers"] Цикл
			Справ=Справочники.ШаблоныЭтикеток_ХамелеонЦРПТ.НайтиПоРеквизиту("stickers",Стр_1["stickerId"]);
			Если ЗначениеЗаполнено(Справ) Тогда
				Справ=Справ.Ссылка.ПолучитьОбъект();
			Иначе
				Справ=Справочники.ШаблоныЭтикеток_ХамелеонЦРПТ.СоздатьЭлемент();
			КонецЕсли;
			Справ.УникальныйИдентификатор=Стр_1["_id"];
			Справ.stickers=Стр_1["stickerId"];
			
			Справ.Наименование=Стр_1["title"];
			Справ.Пользователь=Пользователь;
			Справ.ТоварнаяГруппа=Стр_1["productGroupType"];
			 //Справ.Тип=Стр_1.label_template_type;
			 //Справ.ДатаСоздания=Дата(1970,1,1)+Стр_1.label_template_create_date/1000;
			 Справ.Записать();
		Конеццикла;
КонецПроцедуры


Функция ВернутьПроизводителя(V_WEB_90000626,Наименование="") Экспорт
	СпрПр=Справочники.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.НайтиПоРеквизиту("ИНН",V_WEB_90000626);
	Если СпрПр=Справочники.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		СпрПр=Справочники.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.СоздатьЭлемент();
		СпрПр.ИНН=V_WEB_90000626;
		Если ЗначениеЗаполнено(Наименование) Тогда
			СпрПр.Наименование=Наименование;
		Иначе
			СпрПр.Наименование=V_WEB_90000626
		КонецЕсли;
		СпрПр.Записать();
		Возврат СпрПр.Ссылка
		
	Иначе
		Возврат СпрПр.Ссылка
	Конецесли;
	
КонецФункции

Функция ВидОбуви_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ВидОбуви_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ВидОбуви_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ВидОбуви_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ВидОбуви_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ВидОбуви_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции

Функция ВернутьСтрану(V_WEB_90000187)  Экспорт
	Если Сред(V_WEB_90000187,1,1)="<" Тогда
	 	КодВида_1=Сред(V_WEB_90000187,2);
		 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
		 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
		 СпрВидОбуви=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",Сред(КодВида,1,2));
		 Если СпрВидОбуви=Справочники.СтранаПроизводства_ХамелеонЦРПТ.ПустаяСсылка() Тогда
			 СпрВидОбуви=Справочники.СтранаПроизводства_ХамелеонЦРПТ.СоздатьЭлемент();
			 СпрВидОбуви.Альфа2=КодВида;
			 СпрВидОбуви.Наименование=Наименование;
			 СпрВидОбуви.Записать();;
			 Возврат СпрВидОбуви.Ссылка
		 Иначе
			 Возврат СпрВидОбуви.Ссылка
		 КонецЕсли;
	 Иначе
		 Возврат Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90000187);
		 
		КонецЕсли;
КонецФункции


Функция Вернутьразмер(V_WEB_90000187)
	Если не ЗначениеЗаполнено(V_WEB_90000187) Тогда
		Возврат Неопределено;
	КонецЕсли;
	 КодВида_1=Сред(V_WEB_90000187,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",Сред(КодВида,1,2));
	 Если СпрВидОбуви=Справочники.СтранаПроизводства_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.СтранаПроизводства_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Альфа2=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	КонецЕсли;
КонецФункции


Функция РазмерСправочник(V_WEB_90001683) Экспорт
	Если Не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.ПустаяСсылка()
	КонецЕсли;
	еСЛИ Найти(V_WEB_90001683,">") Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
 	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
 Иначе
	 //КодВида=V_WEB_90001683;
	 Наименование=V_WEB_90001683;
	 СпрВидОбуви=Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.НайтиПоНаименованию(Наименование,Истина);
	 Если СпрВидОбуви=Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 Возврат Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.ПустаяСсылка()
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	КонецЕсли;
	 
 КонецЕсли;
	 
	 СпрВидОбуви=Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.СоздатьЭлемент();
	 Иначе
		 СпрВидОбуви=СпрВидОбуви.Получитьобъект();
		КонецЕсли;
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
//	 Иначе
//		 Возврат СпрВидОбуви.Ссылка
//	КонецЕсли;
КонецФункции

Функция ВернутьКодТНВЭД(V_WEB_90001683) Экспорт
		Если Не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.КодТНВЭД_ХамелеонЦРПТ.ПустаяСсылка()
	КонецЕсли;
	еСЛИ Найти(V_WEB_90001683,">") Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
 	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 
	 Если не ЗначениеЗаполнено(СокрЛП(Наименование)) Тогда
		 Возврат  Справочники.КодТНВЭД_ХамелеонЦРПТ.ПустаяСсылка()
	КонецЕсли;
	 
 Иначе
	 //КодВида=V_WEB_90001683;
	 Наименование=V_WEB_90001683;
	 СпрВидОбуви=Справочники.КодТНВЭД_ХамелеонЦРПТ.НайтиПоКоду(Наименование);
	 Если ЗначениеЗАполнено(СпрВидОбуви) тогда
		 Возврат СпрВидОбуви
		Конецесли;
	 СпрВидОбуви=Справочники.КодТНВЭД_ХамелеонЦРПТ.НайтиПоНаименованию(Наименование);
	 Если СпрВидОбуви=Справочники.КодТНВЭД_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 Возврат Справочники.КодТНВЭД_ХамелеонЦРПТ.ПустаяСсылка()
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	КонецЕсли;
	 
 КонецЕсли;
 
 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КодТНВЭД_ХамелеонЦРПТ.Ссылка
		|ИЗ
		|	Справочник.КодТНВЭД_ХамелеонЦРПТ КАК КодТНВЭД_ХамелеонЦРПТ
		|ГДЕ
		|	КодТНВЭД_ХамелеонЦРПТ.Код = &Код";
	
	Запрос.УстановитьПараметр("Код", КодВида);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		 Возврат ВыборкаДетальныеЗаписи.Ссылка
	Иначе
		 СпрВидОбуви=Справочники.КодТНВЭД_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	КонецЕсли;
КонецФункции

Процедура ОбработкаЗагрузкиДокумента(Докум,Адр,Расширение="xlsx",ТипДокумента=Неопределено) Экспорт

	
	ТаблицаКоличествоКМ=Новый Массив;
	ТаблицаДляАнализа=Новый Массив;
	Если Докум.GS1.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.GS1
	ИначеЕсли Докум.Шины.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.Шины
	ИначеЕсли Докум.МолокоGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.МолокоGS
	ИначеЕсли Докум.ПарфюмGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.ПарфюмGS
	ИначеЕсли Докум.ВелосипедыGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.ВелосипедыGS
	ИначеЕсли Докум.ОдеждаGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.ОдеждаGS
	ИначеЕсли Докум.ФотоGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.ФотоGS
	ИначеЕсли Докум.БельеGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.БельеGS
	ИначеЕсли Докум.РамыGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.РамыGS
	ИначеЕсли Докум.КоляскиGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.КоляскиGS
	ИначеЕсли Докум.АльтернативныйТабакGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.АльтернативныйТабакGS
		
	Конецесли;
	Для Каждого Стр_1 Из ТаблицаДляАнализа Цикл
		ТаблицаКоличествоКМ.Добавить(Стр_1.КоличествоКМ);
	Конеццикла;
	
	
	
		Докум.GS1.Очистить();
		Докум.Шины.Очистить();
		Докум.МолокоGS.Очистить();
		Докум.ПарфюмGS.Очистить();
		Докум.ВелосипедыGS.Очистить();
		Докум.ОдеждаGS.Очистить();
		Докум.ФотоGS.Очистить();
		Докум.БельеGS.Очистить();
		Докум.РамыGS.Очистить();
		Докум.КоляскиGS.Очистить();
		Докум.АльтернативныйТабакGS.Очистить();
		
	
	НаимСайтВхода="";
	Если ЗначениеЗаполнено(ТипДокумента) Тогда
		Докум.ВторойВариант=0;
		
		Если ТипДокумента="ALTTOBACCO" Тогда
			НаимСайтВхода="Альтернативный табак";
		ИначеЕсли ТипДокумента="MDO" Тогда
			НаимСайтВхода="Обувь";
		Иначеесли ТипДокумента="TIRES" Тогда
			НаимСайтВхода="Шины";
		Иначеесли ТипДокумента="MILK" Тогда
			НаимСайтВхода="Молоко";
		Иначеесли ТипДокумента="PARFUM" Тогда ////ПРОВЕРИТЬ!!!
			НаимСайтВхода="Парфюм";
		Иначеесли ТипДокумента="BICYCLES" Тогда ////ПРОВЕРИТЬ!!!
			НаимСайтВхода="Велосипеды";
		  	
		Иначеесли ТипДокумента="CLOTHING" Тогда ////ПРОВЕРИТЬ!!!
			НаимСайтВхода="Одежда";
		Иначеесли ТипДокумента="PHOTO" Тогда ////ПРОВЕРИТЬ!!!
			НаимСайтВхода="Фото";
		Иначеесли ТипДокумента="LINEN" Тогда ////ПРОВЕРИТЬ!!!
			НаимСайтВхода="Белье";
			
		Иначеесли ТипДокумента="FRAMES" Тогда ////ПРОВЕРИТЬ!!!
			НаимСайтВхода="Рамы";
		Иначеесли ТипДокумента="WHEELCHAIRS" Тогда ////ПРОВЕРИТЬ!!!
			НаимСайтВхода="Коляски";
			
		Иначеесли ТипДокумента="WATER" Тогда ////ТОЧНО НЕ ЗНАЮ
		 НаимСайтВхода="Питьевая вода"
		Иначе
			Возврат;
		КонецЕсли;
		
	Иначе
		
		НаимСайтВхода=Докум.ТекущийПользователь.СайтыВходаВСистему.наименование;
		
		Если НаимСайтВхода="Одежда" И Докум.ВторойВариант=1 Тогда
			НаимСайтВхода="Белье";
		ИначеЕсли НаимСайтВхода="Велосипеды" И Докум.ВторойВариант=1 Тогда
			НаимСайтВхода="Рамы";
			
		ИначеЕсли НаимСайтВхода="Кресла-коляски"	 Тогда
			НаимСайтВхода="Коляски";
			
		КонецЕсли;
		
	КонецЕсли;
	
	
	Если НаимСайтВхода="Альтернативный табак" Тогда
		
	
		Имяекселя_1=ПолучитьИмяВременногоФайла(Расширение);
		
		Дан=ПолучитьИзВременногоХранилища(Адр);
		Дан.Записать(Имяекселя_1);
		ОбластьФайла = Новый ТабличныйДокумент;
		Попытка
			// Выполняется долго на больших файлах.
			ОбластьФайла.Прочитать(Имяекселя_1, СпособЧтенияЗначенийТабличногоДокумента.Значение);
			УдалитьФайлы(Имяекселя_1);
		Исключение
			//Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
			УдалитьФайлы(Имяекселя_1);
			Возврат;
		КонецПопытки;
		
		
		
		КолСтр = ОбластьФайла.ВысотаТаблицы;
		КолКолонок = ОбластьФайла.ШиринаТаблицы;
		
		ТаблицаРезультат = Новый ТаблицаЗначений;
		
		ТаблицаРезультат.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№", 4);
		ТаблицаРезультат.Колонки.Добавить("Сопоставлено", Новый ОписаниеТипов("Булево"), "Сопоставлено", 1);
		
		Для Сч = 1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			ТаблицаРезультат.Колонки.Добавить(ИмяКолонки);
		КонецЦикла;
		
		// 1-я строка. Заголовки.
		НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
		НоваяСтрокаТФ.НомерСтроки = 1;
		Для Сч=1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			НоваяСтрокаТФ[ИмяКолонки] = ОбластьФайла.ПолучитьОбласть("R1" + "C"+нКолонка).ТекущаяОбласть.Текст;
			
			// Используется при формировании таблицы на форме обработки.
			ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
			ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
			ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
		КонецЦикла;
		
		НачСтрока = ?(Не ЗначениеЗаполнено(НачСтрока), 2, НачСтрока);
		КонСтрока = ?(Не ЗначениеЗаполнено(КонСтрока), КолСтр, КонСтрока);
		
		
		
		
		Для нСтрокаТФ = НачСтрока ПО КонСтрока Цикл
			НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
			НоваяСтрокаТФ[0] = нСтрокаТФ;
			нСтрока = СтрЗаменить(нСтрокаТФ, Символы.НПП, "");
			Для Колонка = 1 ПО КолКолонок Цикл
				нКолонка = СтрЗаменить(Колонка, Символы.НПП, "");
				Область = ОбластьФайла.ПолучитьОбласть("R"+нСтрока+"C"+нКолонка);
				ТекущаяОбласть = Область.ТекущаяОбласть;
				Если Колонка=2 Или Колонка=5 Тогда
					ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
					Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
						ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
					Иначе
						ЗначениеЯчейки = Неопределено;
					КонецЕсли;
				Иначе
					Попытка
						ЗначениеЯчейки = xmlString(ТекущаяОбласть.Значение);        // Число, Дата.
					Исключение
						ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
						Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
							ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
						Иначе
							ЗначениеЯчейки = Неопределено;
						КонецЕсли;
					КонецПопытки;
				КонецЕсли;
				ИмяКолонки = "N" + нКолонка;
				НоваяСтрокаТФ[ИмяКолонки] = ЗначениеЯчейки;
				
				// Используется при формировании таблицы на форме обработки.
				ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
				ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
				ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
			КонецЦикла;
		КонецЦикла;
		
		// Юзабилити. Удалить пустые колонки.
	 	
			//	Возврат ТаблицаРезультат;	
		НачинаемЗаписывать=Ложь;
		Для Каждого Стр Из ТаблицаРезультат Цикл
			Если Не НачинаемЗаписывать Тогда
				Попытка
					ГТИНЧисло=Стр.N2;
					Если СокрЛП(ГТИНЧисло)="Цифровое поле" Тогда
						НачинаемЗаписывать=Истина;
					КонецЕсли;
					//Если ГТИНЧисло<=1000000 Тогда
					//	Продолжить;
					//КонецЕсли;
				Исключение
				КонецПопытки;
				Продолжить;
			КонецЕсли;
			
			
			Пояснение=xmlString(Стр.N1);
			Попытка
				V_PROD_COVER_GTIN=Число(Стр.N2);
			Исключение
				V_PROD_COVER_GTIN=0;
			КонецПопытки;
			V_ID_IS=xmlString(Стр.N3);
			__HLEVEL=xmlString(Стр.N4);
			V_PARENT_REF=xmlString(Стр.N5);
			
			V_PUBLICATION_DATE=xmlString(Стр.N6);
			V_PROD_DESC_RU=xmlString(Стр.N7);
			Если Не ЗначениеЗаполнено(V_PROD_DESC_RU) Тогда
				Продолжить;
			КонецЕсли;
			V_PROD_NAME_RU=xmlString(Стр.N8);
			V_PROD_COUNT=xmlString(Стр.N9);
			V_PROD_MEASURE=xmlString(Стр.N10); //Страна производства
			V_PROD_COVER_TYPE_DICT=xmlString(Стр.N11); //ИНН
			V_PROD_COVER_MATERIAL=xmlString(Стр.N12); //Наименование компании изготовителя

			V_WEB_90001820=xmlString(Стр.N13);///Размер изделия ГОСТ
			V_WEB_90001731=xmlString(Стр.N14);///Размер изделия ГОСТ
			V_PROD_OKPD2_CAT=xmlString(Стр.N15);///Размер изделия ГОСТ
			V_CLASS_TNVED=xmlString(Стр.N16);///Цвет
			V_PROD_CERT_NUMBER=xmlString(Стр.N17);///Модель
			V_PROD_CERT_TYPE=xmlString(Стр.N18);///Целевой пол
			V_PROD_CERT_ISSUE_DATE=xmlString(Стр.N19);///Состав сырья
			
			Если Не ЗначениеЗаполнено(V_CLASS_TNVED) Тогда
				Продолжить;
			КонецЕсли;
			
			Попытка
				РезультатОбработки=xmlString(Стр.N20);
			Исключение
				РезультатОбработки="";
			КонецПопытки;
			//Если Сред(РезультатОбработки,1,1)="<" Или Не ЗначениеЗаполненО(РезультатОбработки) Тогда
			КодТНВЭД=ВернутьКодТНВЭД(V_CLASS_TNVED);
				
				//РезультатОбработки=xmlString(Стр.N17);
			//КонецЕслИ;
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(V_PROD_COVER_GTIN));
				Если ЗначениеЗаполнено(Спроб) Тогда
					СпрОб=СпрОб.ПолучитьОбъект();
				Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
			Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				Конецесли;
				
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак;
				СпрОб.GTIN=V_PROD_COVER_GTIN;
				СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=V_PROD_NAME_RU;
				
				СпрОб.СтранаПроизводства=ВернутьСтрану(V_WEB_90001731);
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				
				//СпрОб.ИННПроизводителяИмпортёра=ВернутьПроизводителя(V_WEB_90000626,V_MANUFACTURER_NAME);
				
								
				
				Если ЗначениеЗаполнено(V_ID_IS) Тогда
					СпрОб.КодВУчетнойСистеме=V_ID_IS;
				КонецЕсли;
				

				//
				ДопРеквизиты=Спроб.ДополнительныйРеквизитАльтернативныйТабак;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_АльтернативныйТабак_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизитыОбщие=Спроб.ДополнительныйРеквизитОбщиеНК;
				Если ЗначениеЗаполненО(ДопРеквизитыОбщие) тогда
					ДопРеквизитыОбщие=ДопРеквизитыОбщие.ПолучитьОбъект();
				Иначе
					ДопРеквизитыОбщие=Справочники.ДополинтельныеРеквизиты_ДругиеНК_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
			
				
				ДопРеквизиты.УровеньИерархии=УровеньИерархии_ХамелеонЦРПТ(__HLEVEL);
				ДопРеквизиты.СсылкаНаИдентификаторВложенойУпаковки=V_PARENT_REF;
				СпрОб.Наименование=V_PROD_DESC_RU;
				СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
				СпрОб.БрендТорговаяМарка=V_PROD_NAME_RU;
				Если Не ЗначениеЗАполненО(Спроб.ИННПроизводителяИмпортёра) ТОгда
					Спроб.ИННПроизводителяИмпортёра=
					ВернутьПроизводителя(Докум.Организация.ИНН,Докум.Организация.Наименование);
					//Докум.Организация;
				КонецЕсли;
					
			//	Если Сред(КодТнВЭД,1,4)="2403" Тогда
			//		ДопРеквизиты.вес=V_PROD_COUNT;
					
				//Иначе
					ДопРеквизиты.КоличествоВложений=V_PROD_COUNT;
				//КонецЕсли;
				ДопРеквизиты.КоличествоВПотребительскойУпаковкеЕдиницаИзмерения=ЕдиницыИзмерения_ХамелеонЦРПТ(V_PROD_MEASURE);;
				
				ДопРеквизитыОбщие.ТипУпаковки=ТипУпаковки_Молоко_ХамелеонЦРПТ(V_PROD_COVER_TYPE_DICT);
				ДопРеквизитыОбщие.МатериалУпаковки=МатериалУпаковки_Молоко_ХамелеонЦРПТ(V_PROD_COVER_MATERIAL);
				ДопРеквизиты.КодВидаПодакцизныхТоваров=КодВидаПодакцизныхТоваров_ХамелеонЦРПТ(V_WEB_90001820);
				
				СпрОб.СтранаПроизводства=ВернутьСтрану(V_WEB_90001731);
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				ДопРеквизиты.ОКПД2=ОКПД2_ХамелеонЦРПТ(V_PROD_OKPD2_CAT);

				
				Сертификат=Справочники.Сертификат_ДекларацияСоответствия_ХамелеонЦРПТ.НайтиПоНаименованию(
				 V_PROD_CERT_NUMBER);
				 Если ЗначениеЗаполнено(Сертификат) тогда
					 Сертификат=Сертификат.ПолучитьОбъект();
				 Иначе
					 Сертификат=Справочники.Сертификат_ДекларацияСоответствия_ХамелеонЦРПТ.СоздатьЭлемент();
				  КонецЕсли;
				Сертификат.Наименование=V_PROD_CERT_NUMBER;
				ДатаВыдачи=V_PROD_CERT_ISSUE_DATE;
				Попытка
					Сертификат.ДатаНачалаДействия=Дата(Сред(ДатаВыдачи,1,4),Сред(ДатаВыдачи,6,2),Сред(ДатаВыдачи,9,2));
				Исключение
					Попытка
						Сертификат.ДатаНачалаДействия=Дата(Сред(ДатаВыдачи,7,4),Сред(ДатаВыдачи,4,2),Сред(ДатаВыдачи,1,2));
					исключение
						Попытка
							Сертификат.ДатаНачалаДействия=Дата(1899,12,30)+ДатаВыдачи*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				 Сертификат.ВидСертификатаGSI=ВидСертификатов(V_PROD_CERT_TYPE);
				 Сертификат.Записать();
				 
				 ДопРеквизитыОбщие.Записать();
				
				
				ДопРеквизиты.Записать();
				Спроб.ДополнительныйРеквизитАльтернативныйТабак=ДопРеквизиты.Ссылка;
				СпрОб.ДополнительныйРеквизитОбщиеНК=ДопРеквизитыОбщие.Ссылка;
				

				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=КодТНВЭД
				;//КонецЕсли;
				//	//ДобавСтр.Сертификат=Сертификат.Ссылка;

		 
				
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб.Записать();
			КонецЕсли;	
			///	Если Докум.GS1.НайтиСтроки(Новый Структура("GTIN",V_PROD_COVER_GTIN)).Количество()=0 Тогда
				ДобавСтр=Докум.АльтернативныйТабакGS.Добавить();
				ДобавСтр.Пояснение=Пояснение;
				ЗаполнитьЗначенияСвойств(ДобавСтр,Спроб);
				ЗаполнитьЗначенияСвойств(ДобавСтр,ДопРеквизиты);
				ЗаполнитьЗначенияСвойств(ДобавСтр,ДопРеквизитыОбщие);
				ДобавСтр.Сертификат=Сертификат.Ссылка;
				
				ДобавСтр.ИННПроизводства=СпРоб.ИННПроизводителяИмпортёра.ИНН;
				ДобавСтр.ИННПроизводителяСтрокой=СпРоб.ИННПроизводителяИмпортёра.Наименование;
				
				
				ДобавСтр.НаименованиеТовараНаЭтикетке=Спроб.НаименованиеТовара;
				ДобавСтр.Товар=СпрОб.Ссылка;
				Попытка
					Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,1,4),Сред(V_PUBLICATION_DATE,6,2),Сред(V_PUBLICATION_DATE,9,2));
				Исключение
					Попытка
						Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,7,4),Сред(V_PUBLICATION_DATE,4,2),Сред(V_PUBLICATION_DATE,1,2));
					исключение
						Попытка
							Добавстр.ДатаПубликацииПлан=Дата(1899,12,30)+V_PUBLICATION_DATE*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				ДобавСтр.РезультатОбработкиДанныхВGS46=РезультатОбработки;
				//ДобавСтр.ИННПроизводителяСтрокой=ДобавСтр.ИННПроизводителяИмпортёра.ИНН;
		//	КонецЕсли;
					
			
		Конеццикла;	
		
	
	ИначеЕсли НаимСайтВхода="Белье" Тогда
		
	
		Имяекселя_1=ПолучитьИмяВременногоФайла(Расширение);
		
		Дан=ПолучитьИзВременногоХранилища(Адр);
		Дан.Записать(Имяекселя_1);
		ОбластьФайла = Новый ТабличныйДокумент;
		Попытка
			// Выполняется долго на больших файлах.
			ОбластьФайла.Прочитать(Имяекселя_1, СпособЧтенияЗначенийТабличногоДокумента.Значение);
			УдалитьФайлы(Имяекселя_1);
		Исключение
			//Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
			УдалитьФайлы(Имяекселя_1);
			Возврат;
		КонецПопытки;
		
		
		
		КолСтр = ОбластьФайла.ВысотаТаблицы;
		КолКолонок = ОбластьФайла.ШиринаТаблицы;
		
		ТаблицаРезультат = Новый ТаблицаЗначений;
		
		ТаблицаРезультат.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№", 4);
		ТаблицаРезультат.Колонки.Добавить("Сопоставлено", Новый ОписаниеТипов("Булево"), "Сопоставлено", 1);
		
		Для Сч = 1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			ТаблицаРезультат.Колонки.Добавить(ИмяКолонки);
		КонецЦикла;
		
		// 1-я строка. Заголовки.
		НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
		НоваяСтрокаТФ.НомерСтроки = 1;
		Для Сч=1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			НоваяСтрокаТФ[ИмяКолонки] = ОбластьФайла.ПолучитьОбласть("R1" + "C"+нКолонка).ТекущаяОбласть.Текст;
			
			// Используется при формировании таблицы на форме обработки.
			ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
			ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
			ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
		КонецЦикла;
		
		НачСтрока = ?(Не ЗначениеЗаполнено(НачСтрока), 2, НачСтрока);
		КонСтрока = ?(Не ЗначениеЗаполнено(КонСтрока), КолСтр, КонСтрока);
		
		
		
		
		Для нСтрокаТФ = НачСтрока ПО КонСтрока Цикл
			НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
			НоваяСтрокаТФ[0] = нСтрокаТФ;
			нСтрока = СтрЗаменить(нСтрокаТФ, Символы.НПП, "");
			Для Колонка = 1 ПО КолКолонок Цикл
				нКолонка = СтрЗаменить(Колонка, Символы.НПП, "");
				Область = ОбластьФайла.ПолучитьОбласть("R"+нСтрока+"C"+нКолонка);
				ТекущаяОбласть = Область.ТекущаяОбласть;
				Если Колонка=2 Или Колонка=5 Тогда
					ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
					Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
						ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
					Иначе
						ЗначениеЯчейки = Неопределено;
					КонецЕсли;
				Иначе
					Попытка
						ЗначениеЯчейки = xmlString(ТекущаяОбласть.Значение);        // Число, Дата.
					Исключение
						ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
						Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
							ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
						Иначе
							ЗначениеЯчейки = Неопределено;
						КонецЕсли;
					КонецПопытки;
				КонецЕсли;
				ИмяКолонки = "N" + нКолонка;
				НоваяСтрокаТФ[ИмяКолонки] = ЗначениеЯчейки;
				
				// Используется при формировании таблицы на форме обработки.
				ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
				ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
				ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
			КонецЦикла;
		КонецЦикла;
		
		// Юзабилити. Удалить пустые колонки.
	 	
			//	Возврат ТаблицаРезультат;	
		НачинаемЗаписывать=Ложь;
		Для Каждого Стр Из ТаблицаРезультат Цикл
			Если Не НачинаемЗаписывать Тогда
				Попытка
					ГТИНЧисло=Стр.N2;
					Если СокрЛП(ГТИНЧисло)="Цифровое поле" Тогда
						НачинаемЗаписывать=Истина;
					КонецЕсли;
					//Если ГТИНЧисло<=1000000 Тогда
					//	Продолжить;
					//КонецЕсли;
				Исключение
				КонецПопытки;
				Продолжить;
			КонецЕсли;
			
			
			Пояснение=xmlString(Стр.N1);
			Попытка
				V_PROD_COVER_GTIN=Число(Стр.N2);
			Исключение
				V_PROD_COVER_GTIN=0;
			КонецПопытки;
			//V_ID_IS=xmlString(Стр.N3);
			V_MANUFACTURER_CODE=xmlString(Стр.N3);
			V_PUBLICATION_DATE=xmlString(Стр.N4);
			V_PROD_DESC_RU=xmlString(Стр.N5);
			Если Не ЗначениеЗаполнено(V_PROD_DESC_RU) Тогда
				Продолжить;
			КонецЕсли;
			V_PROD_NAME_RU=xmlString(Стр.N6);
			V_WEB_90001731=xmlString(Стр.N7); //Страна производства
			V_WEB_90000626=xmlString(Стр.N8); //ИНН
			V_MANUFACTURER_NAME=xmlString(Стр.N9); //Наименование компании изготовителя


						
			V_WEB_90001722=xmlString(Стр.N10);///Вид изделия
			V_WEB_90001723=xmlString(Стр.N11);///Вид изделия (Другое)
			V_TNVED=xmlString(Стр.N12);///ТН ВЭД
			V_WEB_90001727=xmlString(Стр.N13);///Размер изделия ГОСТ
			V_WEB_90001741=xmlString(Стр.N14);///Размер изделия ГОСТ
			V_WEB_90001742=xmlString(Стр.N15);///Размер изделия ГОСТ
			V_WEB_90001743=xmlString(Стр.N16);///Цвет
			V_WEB_90001728=xmlString(Стр.N17);///Модель
			V_WEB_90001807=xmlString(Стр.N18);///Целевой пол
			V_WEB_90001724=xmlString(Стр.N19);///Состав сырья
			V_WEB_90001725=xmlString(Стр.N20);///Состав сырья
			V_WEB_90001726=xmlString(Стр.N21);///Состав сырья
			V_WEB_90001809_1=xmlString(Стр.N22);///ТР ТС 007/2011 "О БЕЗОПАСНОСТИ ПРОДУКЦИИ, ПРЕДНАЗНАЧЕННОЙ ДЛЯ ДЕТЕЙ И ПОДРОСТКОВ"
			V_WEB_90001809_2=xmlString(Стр.N23);///ТР ТС 017/2011 "О БЕЗОПАСНОСТИ ПРОДУКЦИИ ЛЕГКОЙ ПРОМЫШЛЕННОСТИ"
			V_WEB_90001809_3=xmlString(Стр.N24);///ТР ТС 019/2011 "О БЕЗОПАСНОСТИ СРЕДСТВ ИНДИВИДУАЛЬНОЙ ЗАЩИТЫ"
			V_WEB_90001809_4=xmlString(Стр.N25);///ТР ТС 005/2011 "О БЕЗОПАСНОСТИ УПАКОВКИ"

			V_WEB_90001800=xmlString(Стр.N26);///Состав сырья
			V_WEB_90001801=xmlString(Стр.N27);///Состав сырья
			V_WEB_90001804=xmlString(Стр.N28);///Состав сырья
			
			Если Не ЗначениеЗаполнено(V_TNVED) Тогда
				Продолжить;
			КонецЕсли;
			
			Попытка
				РезультатОбработки=xmlString(Стр.N29);
			Исключение
				РезультатОбработки="";
			КонецПопытки;
			
			
			//Если Сред(РезультатОбработки,1,1)="<" Или Не ЗначениеЗаполненО(РезультатОбработки) Тогда
			КодТНВЭД=ВернутьКодТНВЭД(V_TNVED);
				
				//РезультатОбработки=xmlString(Стр.N17);
			//КонецЕслИ;
				СпрОб=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(V_PROD_COVER_GTIN));
				Если ЗначениеЗаполнено(Спроб) Тогда
					СпрОб=СпрОб.ПолучитьОбъект();
				Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Белье;
				СпрОб.GTIN=V_PROD_COVER_GTIN;
				СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=V_PROD_NAME_RU;
				
				СпрОб.СтранаПроизводства=ВернутьСтрану(V_WEB_90001731);
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				
				СпрОб.ИННПроизводителяИмпортёра=ВернутьПроизводителя(V_WEB_90000626,V_MANUFACTURER_NAME);
				
								
				
				Если ЗначениеЗаполнено(V_MANUFACTURER_CODE) Тогда
					СпрОб.МодельПроизводителяАртикул=V_MANUFACTURER_CODE;
				КонецЕсли;
				

				//
				ДопРеквизиты=Спроб.ДополнительныйРеквизитБелье;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_Белье_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизиты.ВидИзделия=ВидИзделия_Белье_ХамелеонЦРПТ(V_WEB_90001722);
				ДопРеквизиты.ВидИзделияДругое=V_WEB_90001723;
				ДопРеквизиты.РазмерИзделия=V_WEB_90001727;
				ДопРеквизиты.РазмерШирина=V_WEB_90001741;
				ДопРеквизиты.РазмерДлина=V_WEB_90001742;
				ДопРеквизиты.Цвет=V_WEB_90001743;
				ДопРеквизиты.Модель=V_WEB_90001728;
				ДопРеквизиты.ВидМатериала=ВидМатериала_ХамелеонЦРПТ(V_WEB_90001807);
				ДопРеквизиты.ВидМатериалаДругое=V_WEB_90001724;
				ДопРеквизиты.Состав=V_WEB_90001725;
				ДопРеквизиты.ВозрастПотребителя=ВозврастПотребителя_ХамелеонЦРПТ(V_WEB_90001726);
				Если Врег(V_WEB_90001800)="ДА" Тогда
					ДопРеквизиты.Комплект=Истина;
					СпрОб.ТипУпаковки=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.НайтиПоНаименованию("BUNDLE");
					Если Не ЗначениеЗаполнено(СпрОб.ТипУпаковки) тогда
						ПолОб=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.СоздатьЭлемент();
						ПолОб.Наименование="BUNDLE";
						ПолОб.Записать();;
						Спроб.ТипУпаковки=ПолОб.Ссылка;
					КонецЕсли;
					
				Иначе
					ДопРеквизиты.Комплект=Ложь;
					СпрОб.ТипУпаковки=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.НайтиПоНаименованию("UNIT");
					Если Не ЗначениеЗаполнено(СпрОб.ТипУпаковки) тогда
						ПолОб=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.СоздатьЭлемент();
						ПолОб.Наименование="UNIT";
						ПолОб.Записать();;
						Спроб.ТипУпаковки=ПолОб.Ссылка;
					КонецЕсли;
				КонецЕсли;
				ДопРеквизиты.Комплектация=V_WEB_90001804;
				ДопРеквизиты.КоличествоЭлементовВнутри=V_WEB_90001801;
				
				Если Врег(V_WEB_90001809_1)="ДА" Тогда
					ДопРеквизиты.НомерРегламента007=Истина
				Иначе
					ДопРеквизиты.НомерРегламента007=Ложь
				КонецЕсли;
				Если Врег(V_WEB_90001809_2)="ДА" Тогда
					ДопРеквизиты.НомерРегламента017=Истина
				Иначе
					ДопРеквизиты.НомерРегламента017=Ложь
				КонецЕсли;
				
				Если Врег(V_WEB_90001809_3)="ДА" Тогда
					ДопРеквизиты.НомерРегламента005=Истина
				Иначе
					ДопРеквизиты.НомерРегламента005=Ложь
				КонецЕсли;
				Если Врег(V_WEB_90001809_4)="ДА" Тогда
					ДопРеквизиты.БезРегламента=Истина
				Иначе
					ДопРеквизиты.БезРегламента=Ложь
				КонецЕсли;
				ДопРеквизиты.Записать();
				Спроб.ДополнительныйРеквизитБелье=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=КодТНВЭД;
				//КонецЕсли;
				//	//ДобавСтр.Сертификат=Сертификат.Ссылка;

		 
				
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб.Записать();
			КонецЕсли;	
			Докум.ВторойВариант=1;
			///	Если Докум.GS1.НайтиСтроки(Новый Структура("GTIN",V_PROD_COVER_GTIN)).Количество()=0 Тогда
				ДобавСтр=Докум.БельеGS.Добавить();
				ДобавСтр.Пояснение=Пояснение;
				ЗаполнитьЗначенияСвойств(ДобавСтр,Спроб);
				ЗаполнитьЗначенияСвойств(ДобавСтр,ДопРеквизиты);
				
				ДобавСтр.ИННПроизводства=СпРоб.ИННПроизводителяИмпортёра.ИНН;
				ДобавСтр.ИННПроизводителяСтрокой=СпРоб.ИННПроизводителяИмпортёра.Наименование;
				
				Попытка
					ДобавСтр.КоличествоКМ=Стр.N30;
				Исключение
				КонецПопытки;
				
				ДобавСтр.НаименованиеТовараНаЭтикетке=Спроб.НаименованиеТовара;
				ДобавСтр.Товар=СпрОб.Ссылка;
				Попытка
					Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,1,4),Сред(V_PUBLICATION_DATE,6,2),Сред(V_PUBLICATION_DATE,9,2));
				Исключение
					Попытка
						Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,7,4),Сред(V_PUBLICATION_DATE,4,2),Сред(V_PUBLICATION_DATE,1,2));
					исключение
						Попытка
							Добавстр.ДатаПубликацииПлан=Дата(1899,12,30)+V_PUBLICATION_DATE*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				ДобавСтр.РезультатОбработкиДанныхВGS46=РезультатОбработки;
				//ДобавСтр.ИННПроизводителяСтрокой=ДобавСтр.ИННПроизводителяИмпортёра.ИНН;
		//	КонецЕсли;
				Конеццикла;	
		

	
	ИначеЕсли НаимСайтВхода="Коляски" Тогда
	
		Имяекселя_1=ПолучитьИмяВременногоФайла(Расширение);
		
		Дан=ПолучитьИзВременногоХранилища(Адр);
		Дан.Записать(Имяекселя_1);
		ОбластьФайла = Новый ТабличныйДокумент;
		Попытка
			// Выполняется долго на больших файлах.
			ОбластьФайла.Прочитать(Имяекселя_1, СпособЧтенияЗначенийТабличногоДокумента.Значение);
			УдалитьФайлы(Имяекселя_1);
		Исключение
			//Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
			УдалитьФайлы(Имяекселя_1);
			Возврат;
		КонецПопытки;
		
		
		
		КолСтр = ОбластьФайла.ВысотаТаблицы;
		КолКолонок = ОбластьФайла.ШиринаТаблицы;
		
		ТаблицаРезультат = Новый ТаблицаЗначений;
		
		ТаблицаРезультат.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№", 4);
		ТаблицаРезультат.Колонки.Добавить("Сопоставлено", Новый ОписаниеТипов("Булево"), "Сопоставлено", 1);
		
		Для Сч = 1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			ТаблицаРезультат.Колонки.Добавить(ИмяКолонки);
		КонецЦикла;
		
		// 1-я строка. Заголовки.
		НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
		НоваяСтрокаТФ.НомерСтроки = 1;
		Для Сч=1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			НоваяСтрокаТФ[ИмяКолонки] = ОбластьФайла.ПолучитьОбласть("R1" + "C"+нКолонка).ТекущаяОбласть.Текст;
			
			// Используется при формировании таблицы на форме обработки.
			ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
			ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
			ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
		КонецЦикла;
		
		НачСтрока = ?(Не ЗначениеЗаполнено(НачСтрока), 2, НачСтрока);
		КонСтрока = ?(Не ЗначениеЗаполнено(КонСтрока), КолСтр, КонСтрока);
		
		
		
		
		Для нСтрокаТФ = НачСтрока ПО КонСтрока Цикл
			НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
			НоваяСтрокаТФ[0] = нСтрокаТФ;
			нСтрока = СтрЗаменить(нСтрокаТФ, Символы.НПП, "");
			Для Колонка = 1 ПО КолКолонок Цикл
				нКолонка = СтрЗаменить(Колонка, Символы.НПП, "");
				Область = ОбластьФайла.ПолучитьОбласть("R"+нСтрока+"C"+нКолонка);
				ТекущаяОбласть = Область.ТекущаяОбласть;
				Если Колонка=2 Или Колонка=5 Тогда
					ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
					Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
						ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
					Иначе
						ЗначениеЯчейки = Неопределено;
					КонецЕсли;
				Иначе
					Попытка
						ЗначениеЯчейки = xmlString(ТекущаяОбласть.Значение);        // Число, Дата.
					Исключение
						ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
						Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
							ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
						Иначе
							ЗначениеЯчейки = Неопределено;
						КонецЕсли;
					КонецПопытки;
				КонецЕсли;
				ИмяКолонки = "N" + нКолонка;
				НоваяСтрокаТФ[ИмяКолонки] = ЗначениеЯчейки;
				
				// Используется при формировании таблицы на форме обработки.
				ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
				ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
				ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
			КонецЦикла;
		КонецЦикла;
		
		// Юзабилити. Удалить пустые колонки.
	 	
			//	Возврат ТаблицаРезультат;	
		НачинаемЗаписывать=Ложь;
		Для Каждого Стр Из ТаблицаРезультат Цикл
			Если Не НачинаемЗаписывать Тогда
				Попытка
					ГТИНЧисло=Стр.N2;
					Если СокрЛП(ГТИНЧисло)="Цифровое поле" Тогда
						НачинаемЗаписывать=Истина;
					КонецЕсли;
					//Если ГТИНЧисло<=1000000 Тогда
					//	Продолжить;
					//КонецЕсли;
				Исключение
				КонецПопытки;
				Продолжить;
			КонецЕсли;
			
			
			Пояснение=xmlString(Стр.N1);
			Попытка
				V_PROD_COVER_GTIN=Число(Стр.N2);
			Исключение
				V_PROD_COVER_GTIN=0;
			КонецПопытки;
			V_ID_IS=xmlString(Стр.N3);
			V_MANUFACTURER_CODE=xmlString(Стр.N4);
			V_PUBLICATION_DATE=xmlString(Стр.N5);
			V_PROD_DESC_RU=xmlString(Стр.N6);
			Если Не ЗначениеЗаполнено(V_PROD_DESC_RU) Тогда
				Продолжить;
			КонецЕсли;
			V_PROD_NAME_RU=xmlString(Стр.N7);
			V_WEB_90001746=xmlString(Стр.N8);///Тип велосипеда
			V_WEB_90001747=xmlString(Стр.N9);///Модель
			V_WEB_90001799=xmlString(Стр.N10);///Год производства
			V_WEB_90001748=xmlString(Стр.N11);///Размер рамы
			V_WEB_90001749=xmlString(Стр.N12);///Единица измерения
			V_WEB_90001823=xmlString(Стр.N13);///Цвет
			V_WEB_90001750=xmlString(Стр.N14);///Материал рамы
			V_WEB_90001824=xmlString(Стр.N15);///Тип передней вилки

			V_WEB_90001751=xmlString(Стр.N16);///Конструктивная масса
			V_WEB_90001825=xmlString(Стр.N17);///Страна производства
			V_WEB_90001752=xmlString(Стр.N18);///Страна производства
			V_WEB_90001826=xmlString(Стр.N19);///Страна производства
			V_WEB_90001821=xmlString(Стр.N20);///Страна производства
			V_WEB_90001822=xmlString(Стр.N21);///Страна производства
			V_WEB_90001731=xmlString(Стр.N22);///Страна производства
			
			
			V_CLASS_TNVED=xmlString(Стр.N23);///ТНВЭД
			Если Не ЗначениеЗаполнено(V_CLASS_TNVED) Тогда
				Продолжить;
			КонецЕсли;
			
			Попытка
				РезультатОбработки=xmlString(Стр.N24);
			Исключение
				РезультатОбработки="";
			КонецПопытки;
			//Если Сред(РезультатОбработки,1,1)="<" Или Не ЗначениеЗаполненО(РезультатОбработки) Тогда
			КодТНВЭД=ВернутьКодТНВЭД(V_CLASS_TNVED);
				
				//РезультатОбработки=xmlString(Стр.N17);
			//КонецЕслИ;
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) Тогда
				СпрОб=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(V_PROD_COVER_GTIN));
				Если ЗначениеЗаполнено(Спроб) Тогда
					СпрОб=СпрОб.ПолучитьОбъект();
				Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
			иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
			Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.КреслаКоляски;
				СпрОб.GTIN=V_PROD_COVER_GTIN;
				СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=V_PROD_NAME_RU;
				Если ЗначениеЗаполнено(V_ID_IS) Тогда
					СпрОб.КодВУчетнойСистеме=V_ID_IS;
				КонецЕсли;
				Если ЗначениеЗаполнено(V_MANUFACTURER_CODE) Тогда
					СпрОб.МодельПроизводителяАртикул=V_MANUFACTURER_CODE;
				КонецЕсли;
				

				
				ДопРеквизиты=Спроб.ДополнительныйРеквизитКоляски;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_Кресла_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизиты.ВидТовара=ВидТовара_ХамелеонЦРПТ(V_WEB_90001746);
				ДопРеквизиты.ТипПриводаВДвижении=ТипПриводаВДвижении_ХамелеонЦРПТ(V_WEB_90001747);
				ДопРеквизиты.МассаИзделия=V_WEB_90001799;
				ДопРеквизиты.МаксимальнаяНагрузка=V_WEB_90001748;
				ДопРеквизиты.ГлубинаСидения=V_WEB_90001749;
				ДопРеквизиты.ЕдиницаИзмеренияГлубины=ЕдиницыИзмеренияГлубины_Коляски_ХамелеонЦРПТ(V_WEB_90001747);
				ДопРеквизиты.ШиринаСидения=V_WEB_90001750;
				ДопРеквизиты.ЕдиницаИзмеренияШирины=ЕдиницаИзмеренияШирины_Коляски_ХамелеонЦРПТ(V_WEB_90001824);
				ДопРеквизиты.ВысотаСидения=V_WEB_90001751;
				ДопРеквизиты.ЕдиницаИзмеренияВысоты=ЕдиницыИзмеренияВысоты_Коляски_ХамелеонЦРПТ(V_WEB_90001825);
				ДопРеквизиты.ВысотаСпинки=V_WEB_90001752;
				ДопРеквизиты.ЕдиницаИзмреенияВысотыСпинки=ЕдиницаИзмеренияВысотыСпинки_Коляски_ХамелеонЦРПТ(V_WEB_90001826);
				ДопРеквизиты.Модель=V_WEB_90001821;
				ДопРеквизиты.КодТСР=V_WEB_90001822;
				//
				СпрОб.СтранаПроизводства=ВернутьСтрану(V_WEB_90001731);
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				ДопРеквизиты.Записать();
				Спроб.ДополнительныйРеквизитКоляски=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=КодТНВЭД;
				//КонецЕсли;
					//ДобавСтр.Сертификат=Сертификат.Ссылка;

		 
				
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб.Записать();
			КонецЕсли;	
			///	Если Докум.GS1.НайтиСтроки(Новый Структура("GTIN",V_PROD_COVER_GTIN)).Количество()=0 Тогда
				ДобавСтр=Докум.КоляскиGS.Добавить();
				ДобавСтр.Пояснение=Пояснение;
				ЗаполнитьЗначенияСвойств(ДобавСтр,Спроб);
				ЗаполнитьЗначенияСвойств(ДобавСтр,ДопРеквизиты);
				
				//ДобавСтр.Сертификат=Сертификат.Ссылка;
				
				ДобавСтр.НаименованиеТовараНаЭтикетке=Спроб.НаименованиеТовара;
				ДобавСтр.Товар=СпрОб.Ссылка;
				Попытка
					Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,1,4),Сред(V_PUBLICATION_DATE,6,2),Сред(V_PUBLICATION_DATE,9,2));
				Исключение
					Попытка
						Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,7,4),Сред(V_PUBLICATION_DATE,4,2),Сред(V_PUBLICATION_DATE,1,2));
					исключение
						Попытка
							Добавстр.ДатаПубликацииПлан=Дата(1899,12,30)+V_PUBLICATION_DATE*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				ДобавСтр.РезультатОбработкиДанныхВGS46=РезультатОбработки;
				//ДобавСтр.ИННПроизводителяСтрокой=ДобавСтр.ИННПроизводителяИмпортёра.ИНН;
		//	КонецЕсли;
					
			
		Конеццикла;	
		

	
	ИначеЕсли НаимСайтВхода="Рамы" Тогда
			Докум.ВторойВариант=1;

	
		Имяекселя_1=ПолучитьИмяВременногоФайла(Расширение);
		
		Дан=ПолучитьИзВременногоХранилища(Адр);
		Дан.Записать(Имяекселя_1);
		ОбластьФайла = Новый ТабличныйДокумент;
		Попытка
			// Выполняется долго на больших файлах.
			ОбластьФайла.Прочитать(Имяекселя_1, СпособЧтенияЗначенийТабличногоДокумента.Значение);
			УдалитьФайлы(Имяекселя_1);
		Исключение
			//Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
			УдалитьФайлы(Имяекселя_1);
			Возврат;
		КонецПопытки;
		
		
		
		КолСтр = ОбластьФайла.ВысотаТаблицы;
		КолКолонок = ОбластьФайла.ШиринаТаблицы;
		
		ТаблицаРезультат = Новый ТаблицаЗначений;
		
		ТаблицаРезультат.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№", 4);
		ТаблицаРезультат.Колонки.Добавить("Сопоставлено", Новый ОписаниеТипов("Булево"), "Сопоставлено", 1);
		
		Для Сч = 1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			ТаблицаРезультат.Колонки.Добавить(ИмяКолонки);
		КонецЦикла;
		
		// 1-я строка. Заголовки.
		НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
		НоваяСтрокаТФ.НомерСтроки = 1;
		Для Сч=1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			НоваяСтрокаТФ[ИмяКолонки] = ОбластьФайла.ПолучитьОбласть("R1" + "C"+нКолонка).ТекущаяОбласть.Текст;
			
			// Используется при формировании таблицы на форме обработки.
			ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
			ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
			ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
		КонецЦикла;
		
		НачСтрока = ?(Не ЗначениеЗаполнено(НачСтрока), 2, НачСтрока);
		КонСтрока = ?(Не ЗначениеЗаполнено(КонСтрока), КолСтр, КонСтрока);
		
		
		
		
		Для нСтрокаТФ = НачСтрока ПО КонСтрока Цикл
			НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
			НоваяСтрокаТФ[0] = нСтрокаТФ;
			нСтрока = СтрЗаменить(нСтрокаТФ, Символы.НПП, "");
			Для Колонка = 1 ПО КолКолонок Цикл
				нКолонка = СтрЗаменить(Колонка, Символы.НПП, "");
				Область = ОбластьФайла.ПолучитьОбласть("R"+нСтрока+"C"+нКолонка);
				ТекущаяОбласть = Область.ТекущаяОбласть;
				Если Колонка=2 Или Колонка=5 Тогда
					ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
					Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
						ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
					Иначе
						ЗначениеЯчейки = Неопределено;
					КонецЕсли;
				Иначе
					Попытка
						ЗначениеЯчейки = xmlString(ТекущаяОбласть.Значение);        // Число, Дата.
					Исключение
						ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
						Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
							ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
						Иначе
							ЗначениеЯчейки = Неопределено;
						КонецЕсли;
					КонецПопытки;
				КонецЕсли;
				ИмяКолонки = "N" + нКолонка;
				НоваяСтрокаТФ[ИмяКолонки] = ЗначениеЯчейки;
				
				// Используется при формировании таблицы на форме обработки.
				ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
				ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
				ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
			КонецЦикла;
		КонецЦикла;
		
		// Юзабилити. Удалить пустые колонки.
	 	
			//	Возврат ТаблицаРезультат;	
		НачинаемЗаписывать=Ложь;
		Для Каждого Стр Из ТаблицаРезультат Цикл
			Если Не НачинаемЗаписывать Тогда
				Попытка
					ГТИНЧисло=Стр.N2;
					Если СокрЛП(ГТИНЧисло)="Цифровое поле" Тогда
						НачинаемЗаписывать=Истина;
					КонецЕсли;
					//Если ГТИНЧисло<=1000000 Тогда
					//	Продолжить;
					//КонецЕсли;
				Исключение
				КонецПопытки;
				Продолжить;
			КонецЕсли;
			
			
			Пояснение=xmlString(Стр.N1);
			Попытка
				V_PROD_COVER_GTIN=Число(Стр.N2);
			Исключение
				V_PROD_COVER_GTIN=0;
			КонецПопытки;
			V_ID_IS=xmlString(Стр.N3);
			V_MANUFACTURER_CODE=xmlString(Стр.N4);
			V_PUBLICATION_DATE=xmlString(Стр.N5);
			V_PROD_DESC_RU=xmlString(Стр.N6);
			Если Не ЗначениеЗаполнено(V_PROD_DESC_RU) Тогда
				Продолжить;
			КонецЕсли;
			V_PROD_NAME_RU=xmlString(Стр.N7);
			V_WEB_90001774=xmlString(Стр.N8);///Тип велосипеда
			V_WEB_90001832=xmlString(Стр.N9);///Модель
			V_WEB_90001829=xmlString(Стр.N10);///Год производства
			V_WEB_90001760=xmlString(Стр.N11);///Размер рамы
			V_WEB_90001830=xmlString(Стр.N12);///Единица измерения
			V_WEB_90001768=xmlString(Стр.N13);///Цвет
			V_WEB_90001762=xmlString(Стр.N14);///Материал рамы
			V_WEB_90001766=xmlString(Стр.N15);///Тип передней вилки

			V_WEB_90001798=xmlString(Стр.N16);///Конструктивная масса
			V_WEB_90001731=xmlString(Стр.N17);///Страна производства
			
			
			V_CLASS_TNVED=xmlString(Стр.N18);///ТНВЭД
			V_WEB_90001833_1=xmlString(Стр.N19);///ТР ТС 007/2011 "О БЕЗОПАСНОСТИ ПРОДУКЦИИ, ПРЕДНАЗНАЧЕННОЙ ДЛЯ ДЕТЕЙ И ПОДРОСТКОВ"
			V_WEB_90001833_2=xmlString(Стр.N20);///ТР ТС 010/2011 "О БЕЗОПАСНОСТИ МАШИН И ОБОРУДОВАНИЯ"
			V_WEB_90001833_3=xmlString(Стр.N21);///ТР ТС 018/2011 "О БЕЗОПАСНОСТИ КОЛЕСНЫХ ТРАНСПОРТНЫХ СРЕДСТВ"
			V_WEB_90001833_4=xmlString(Стр.N22);///ТР ТС 005/2011 "О БЕЗОПАСНОСТИ УПАКОВКИ"
			//V_WEB_90001731=xmlString(Стр.N20);///Страна производства
			//V_PROD_CERT_NUMBER=xmlString(Стр.N21);///Номер декларации (сертификата) соответствия
			//V_PROD_CERT_TYPE=xmlString(Стр.N22);///Тип документа соответствия
			//V_PROD_CERT_ISSUE_DATE=xmlString(Стр.N23);///Дата выдачи декларации (сертификата)
			
			Если Не ЗначениеЗаполнено(V_CLASS_TNVED) Тогда
				Продолжить;
			КонецЕсли;
			
			Попытка
				РезультатОбработки=xmlString(Стр.N31);
			Исключение
				РезультатОбработки="";
			КонецПопытки;
			//Если Сред(РезультатОбработки,1,1)="<" Или Не ЗначениеЗаполненО(РезультатОбработки) Тогда
			КодТНВЭД=ВернутьКодТНВЭД(V_CLASS_TNVED);
				
				//РезультатОбработки=xmlString(Стр.N17);
			//КонецЕслИ;
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) Тогда
				СпрОб=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(V_PROD_COVER_GTIN));
				Если ЗначениеЗаполнено(Спроб) Тогда
					СпрОб=СпрОб.ПолучитьОбъект();
				Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
			Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
			Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Рамы;
				СпрОб.GTIN=V_PROD_COVER_GTIN;
				СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=V_PROD_NAME_RU;
				Если ЗначениеЗаполнено(V_ID_IS) Тогда
					СпрОб.КодВУчетнойСистеме=V_ID_IS;
				КонецЕсли;
				Если ЗначениеЗаполнено(V_MANUFACTURER_CODE) Тогда
					СпрОб.МодельПроизводителяАртикул=V_MANUFACTURER_CODE;
				КонецЕсли;
				

				
				ДопРеквизиты=Спроб.ДополнительныйРеквизитРамы;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_Рамы_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизиты.ТипРамы=ТипРамы_ХамелеонЦРПТ(V_WEB_90001774);
				ДопРеквизиты.Модель=V_WEB_90001832;
				
				
				
				
				ДопРеквизиты.ГодПроизводства=ГодПроизводства_ХамелеонЦРПТ(V_WEB_90001829);
				
				ДопРеквизиты.РазмерРамы=РазмерРамы_ХамелеонЦРПТ(V_WEB_90001760);
				ДопРеквизиты.ЕдиницаИзмеренияРазмераРамы=ЕдиницаИзмеренияРазмераРамы_ХамелеонЦРПТ(V_WEB_90001830);
				ДопРеквизиты.Цвет=V_WEB_90001768;
				ДопРеквизиты.МатериалРамы=МатериалРамы_ХамелеонЦРПТ(V_WEB_90001762);
				ДопРеквизиты.ТипПереднейВилки=ТипПереднейВилки_ХамелеонЦРПТ(V_WEB_90001766);
				ДопРеквизиты.КонструктивнаяМасса=V_WEB_90001798;
				
				СпрОб.СтранаПроизводства=ВернутьСтрану(V_WEB_90001731);
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				
				Если Врег(V_WEB_90001833_1)="ДА" Тогда
					ДопРеквизиты.НомерРегламента007=Истина
				Иначе
					ДопРеквизиты.НомерРегламента007=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001833_2)="ДА" Тогда
					ДопРеквизиты.НомерРегламента010=Истина
				Иначе
					ДопРеквизиты.НомерРегламента010=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001833_3)="ДА" Тогда
					ДопРеквизиты.НомерРегламента018=Истина
				Иначе
					ДопРеквизиты.НомерРегламента018=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001833_4)="ДА" Тогда
					ДопРеквизиты.НомерРегламента005=Истина
				Иначе
					ДопРеквизиты.НомерРегламента005=Ложь
				
				КонецЕсли;
				
				
				ДопРеквизиты.Записать();
				Спроб.ДополнительныйРеквизитРамы=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=КодТНВЭД
				;//КонецЕсли;
					//ДобавСтр.Сертификат=Сертификат.Ссылка;

		 
				
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб.Записать();
			КонецЕсли;	
			///	Если Докум.GS1.НайтиСтроки(Новый Структура("GTIN",V_PROD_COVER_GTIN)).Количество()=0 Тогда
				ДобавСтр=Докум.РамыGS.Добавить();
				ДобавСтр.Пояснение=Пояснение;
				ЗаполнитьЗначенияСвойств(ДобавСтр,Спроб);
				ЗаполнитьЗначенияСвойств(ДобавСтр,ДопРеквизиты);
				
				//ДобавСтр.Сертификат=Сертификат.Ссылка;
				
				ДобавСтр.НаименованиеТовараНаЭтикетке=Спроб.НаименованиеТовара;
				ДобавСтр.Товар=СпрОб.Ссылка;
				Попытка
					Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,1,4),Сред(V_PUBLICATION_DATE,6,2),Сред(V_PUBLICATION_DATE,9,2));
				Исключение
					Попытка
						Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,7,4),Сред(V_PUBLICATION_DATE,4,2),Сред(V_PUBLICATION_DATE,1,2));
					исключение
						Попытка
							Добавстр.ДатаПубликацииПлан=Дата(1899,12,30)+V_PUBLICATION_DATE*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				ДобавСтр.РезультатОбработкиДанныхВGS46=РезультатОбработки;
				//ДобавСтр.ИННПроизводителяСтрокой=ДобавСтр.ИННПроизводителяИмпортёра.ИНН;
		//	КонецЕсли;
					
			
		Конеццикла;	
		
ИначеЕсли НаимСайтВхода="Фото" Тогда
		
	
		Имяекселя_1=ПолучитьИмяВременногоФайла(Расширение);
		
		Дан=ПолучитьИзВременногоХранилища(Адр);
		Дан.Записать(Имяекселя_1);
		ОбластьФайла = Новый ТабличныйДокумент;
		Попытка
			// Выполняется долго на больших файлах.
			ОбластьФайла.Прочитать(Имяекселя_1, СпособЧтенияЗначенийТабличногоДокумента.Значение);
			УдалитьФайлы(Имяекселя_1);
		Исключение
			//Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
			УдалитьФайлы(Имяекселя_1);
			Возврат;
		КонецПопытки;
		
		
		
		КолСтр = ОбластьФайла.ВысотаТаблицы;
		КолКолонок = ОбластьФайла.ШиринаТаблицы;
		
		ТаблицаРезультат = Новый ТаблицаЗначений;
		
		ТаблицаРезультат.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№", 4);
		ТаблицаРезультат.Колонки.Добавить("Сопоставлено", Новый ОписаниеТипов("Булево"), "Сопоставлено", 1);
		
		Для Сч = 1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			ТаблицаРезультат.Колонки.Добавить(ИмяКолонки);
		КонецЦикла;
		
		// 1-я строка. Заголовки.
		НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
		НоваяСтрокаТФ.НомерСтроки = 1;
		Для Сч=1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			НоваяСтрокаТФ[ИмяКолонки] = ОбластьФайла.ПолучитьОбласть("R1" + "C"+нКолонка).ТекущаяОбласть.Текст;
			
			// Используется при формировании таблицы на форме обработки.
			ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
			ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
			ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
		КонецЦикла;
		
		НачСтрока = ?(Не ЗначениеЗаполнено(НачСтрока), 2, НачСтрока);
		КонСтрока = ?(Не ЗначениеЗаполнено(КонСтрока), КолСтр, КонСтрока);
		
		
		
		
		Для нСтрокаТФ = НачСтрока ПО КонСтрока Цикл
			НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
			НоваяСтрокаТФ[0] = нСтрокаТФ;
			нСтрока = СтрЗаменить(нСтрокаТФ, Символы.НПП, "");
			Для Колонка = 1 ПО КолКолонок Цикл
				нКолонка = СтрЗаменить(Колонка, Символы.НПП, "");
				Область = ОбластьФайла.ПолучитьОбласть("R"+нСтрока+"C"+нКолонка);
				ТекущаяОбласть = Область.ТекущаяОбласть;
				Если Колонка=2 Или Колонка=5 Тогда
					ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
					Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
						ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
					Иначе
						ЗначениеЯчейки = Неопределено;
					КонецЕсли;
				Иначе
					Попытка
						ЗначениеЯчейки = xmlString(ТекущаяОбласть.Значение);        // Число, Дата.
					Исключение
						ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
						Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
							ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
						Иначе
							ЗначениеЯчейки = Неопределено;
						КонецЕсли;
					КонецПопытки;
				КонецЕсли;
				ИмяКолонки = "N" + нКолонка;
				НоваяСтрокаТФ[ИмяКолонки] = ЗначениеЯчейки;
				
				// Используется при формировании таблицы на форме обработки.
				ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
				ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
				ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
			КонецЦикла;
		КонецЦикла;
		
		// Юзабилити. Удалить пустые колонки.
	 	
			//	Возврат ТаблицаРезультат;	
		НачинаемЗаписывать=Ложь;
		Для Каждого Стр Из ТаблицаРезультат Цикл
			Если Не НачинаемЗаписывать Тогда
				Попытка
					ГТИНЧисло=Стр.N2;
					Если СокрЛП(ГТИНЧисло)="Цифровое поле" Тогда
						НачинаемЗаписывать=Истина;
					КонецЕсли;
					//Если ГТИНЧисло<=1000000 Тогда
					//	Продолжить;
					//КонецЕсли;
				Исключение
				КонецПопытки;
				Продолжить;
			КонецЕсли;
			
			
			Пояснение=xmlString(Стр.N1);
			Попытка
				V_PROD_COVER_GTIN=Число(Стр.N2);
			Исключение
				V_PROD_COVER_GTIN=0;
			КонецПопытки;
			V_ID_IS=xmlString(Стр.N3);
			V_MANUFACTURER_CODE=xmlString(Стр.N4);
			V_PUBLICATION_DATE=xmlString(Стр.N5);
			V_PROD_DESC_RU=xmlString(Стр.N6);
			Если Не ЗначениеЗаполнено(V_PROD_DESC_RU) Тогда
				Продолжить;
			КонецЕсли;
			V_PROD_NAME_RU=xmlString(Стр.N7);
			V_WEB_90001793=xmlString(Стр.N8); //Тип изделия
			V_WEB_90001794=xmlString(Стр.N9); //Тип изделия (другое)
			V_WEB_90001795=xmlString(Стр.N10); //Модель

			V_WEB_90001731=xmlString(Стр.N11);///Страна производства
			V_TNVED=xmlString(Стр.N12);///V_WEB_90001811_1
			V_WEB_90001811_1=xmlString(Стр.N13);///ТР ТС 004/2011 "О БЕЗОПАСНОСТИ НИЗКОВОЛЬТНОГО ОБОРУДОВАНИЯ"

			V_WEB_90001811_2=xmlString(Стр.N14);///ТР ЕАЭС 037/2016 "ОБ ОГРАНИЧЕНИИ ПРИМЕНЕНИЯ ОПАСНЫХ ВЕЩЕСТВ В ИЗДЕЛИЯХ ЭЛЕКТРОТЕХНИКИ И РАДИОЭЛЕКТРОНИКИ"
			V_WEB_90001811_3=xmlString(Стр.N15);///ТР ТС 005/2011 "О БЕЗОПАСНОСТИ УПАКОВКИ"
			V_WEB_90001811_4=xmlString(Стр.N16);///ТР ТС 012/2011 "О БЕЗОПАСНОСТИ ОБОРУДОВАНИЯ ДЛЯ РАБОТЫ ВО ВЗРЫВООПАСНЫХ СРЕДАХ"
			V_WEB_90001811_5=xmlString(Стр.N17);///ТР ТС 020/2011 "ЭЛЕКТРОМАГНИТНАЯ СОВМЕСТИМОСТЬ ТЕХНИЧЕСКИХ СРЕДСТВ"
			V_WEB_90001811_6=xmlString(Стр.N18);///ДЕЙСТВИЕ ТЕХНИЧЕСКИХ РЕГЛАМЕНТОВ НЕ РАСПРОСТРАНЯЕТСЯ
			V_WEB_90001800=xmlString(Стр.N19);///Комплект - предмет торговли, в который входит нескольких составляющих, не имеющих своего номера GTIN и которые не продаются отдельно.
			V_WEB_90001801=xmlString(Стр.N20);///Поле для указания общего количества самостоятельных предметов внутри.  Пример: внутри комплекта Фотокамера (1 шт.), лампа-вспышка (2 шт.). В данном случае кол-во элементов внутри будет 3..
			V_WEB_90001804=xmlString(Стр.N21);///Позиции нужно описывать через точку с запятой. Пример: Фотокамера (1 шт.); лампа-вспышка (2 шт.)..

			Если Не ЗначениеЗаполнено(V_TNVED) Тогда
				Продолжить;
			КонецЕсли;
			
			Попытка
				РезультатОбработки=xmlString(Стр.N22);
			Исключение
				РезультатОбработки="";
			КонецПопытки;
			//Если Сред(РезультатОбработки,1,1)="<" Или Не ЗначениеЗаполненО(РезультатОбработки) Тогда
			КодТНВЭД=ВернутьКодТНВЭД(V_TNVED);
				
				//РезультатОбработки=xmlString(Стр.N17);
			//КонецЕслИ;
			Если ЗначениеЗаполненО(V_PROD_COVER_GTIN) Тогда
				СпрОб=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(V_PROD_COVER_GTIN));
				Если ЗначениеЗаполнено(Спроб) Тогда
					СпрОб=СпрОб.ПолучитьОбъект();
				Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
			Иначе
				Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
			Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Фото;
				СпрОб.GTIN=V_PROD_COVER_GTIN;
				СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=V_PROD_NAME_RU;
				
				СпрОб.СтранаПроизводства=ВернутьСтрану(V_WEB_90001731);
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				
				Если ЗначениеЗаполнено(V_MANUFACTURER_CODE) Тогда
					СпрОб.МодельПроизводителяАртикул=V_MANUFACTURER_CODE;
				КонецЕсли;
				Если ЗначениеЗаполнено(V_ID_IS) Тогда
					СпрОб.КодВУчетнойСистеме=V_ID_IS;
				КонецЕсли;
				

				
				ДопРеквизиты=Спроб.ДополнительныеРеквизитФото;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополинительныеРеквизиты_Фото_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;

				ДопРеквизиты.ТипИзделия=ТипИзделия_ХамелеонЦРПТ(V_WEB_90001793);
				ДопРеквизиты.ТипИзделияДругое=V_WEB_90001794;
				
				ДопРеквизиты.Модель=V_WEB_90001795;

				Если Врег(V_WEB_90001811_1)="ДА" Тогда
					ДопРеквизиты.НомерРегламента004=Истина
				Иначе
					ДопРеквизиты.НомерРегламента004=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001811_2)="ДА" Тогда
					ДопРеквизиты.НомерРегламента037=Истина
				Иначе
					ДопРеквизиты.НомерРегламента037=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001811_3)="ДА" Тогда
					ДопРеквизиты.НомерРегламента005=Истина
				Иначе
					ДопРеквизиты.НомерРегламента005=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001811_4)="ДА" Тогда
					ДопРеквизиты.НомерРегламента012=Истина
				Иначе
					ДопРеквизиты.НомерРегламента012=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001811_5)="ДА" Тогда
					ДопРеквизиты.НомерРегламента020=Истина
				Иначе
					ДопРеквизиты.НомерРегламента020=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001811_6)="ДА" Тогда
					ДопРеквизиты.БезРегламента=Истина
				Иначе
					ДопРеквизиты.БезРегламента=Ложь
				
				КонецЕсли;
				Если Врег(V_WEB_90001800)="ДА" Тогда
					ДопРеквизиты.Комплект=Истина
				Иначе
					ДопРеквизиты.Комплект=Ложь
				
				КонецЕсли;
				ДопРеквизиты.КоличествоЭлементовВнутри=V_WEB_90001801;
				ДопРеквизиты.Комплектация=V_WEB_90001804;
				
				
				ДопРеквизиты.Записать();
				Спроб.ДополнительныеРеквизитФото=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=КодТНВЭД
				;//КонецЕсли;
					//ДобавСтр.Сертификат=Сертификат.Ссылка;

		 
				
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб.Записать();
			КонецЕсли;	
			///	Если Докум.GS1.НайтиСтроки(Новый Структура("GTIN",V_PROD_COVER_GTIN)).Количество()=0 Тогда
				ДобавСтр=Докум.ФотоGS.Добавить();
				ДобавСтр.Пояснение=Пояснение;
				ЗаполнитьЗначенияСвойств(ДобавСтр,Спроб);
				ЗаполнитьЗначенияСвойств(ДобавСтр,ДопРеквизиты);
				
				
				//ДобавСтр.Сертификат=Сертификат.Ссылка;
				
				ДобавСтр.НаименованиеТовараНаЭтикетке=Спроб.НаименованиеТовара;
				ДобавСтр.Товар=СпрОб.Ссылка;
				Попытка
					Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,1,4),Сред(V_PUBLICATION_DATE,6,2),Сред(V_PUBLICATION_DATE,9,2));
				Исключение
					Попытка
						Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,7,4),Сред(V_PUBLICATION_DATE,4,2),Сред(V_PUBLICATION_DATE,1,2));
					исключение
						Попытка
							Добавстр.ДатаПубликацииПлан=Дата(1899,12,30)+V_PUBLICATION_DATE*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				ДобавСтр.РезультатОбработкиДанныхВGS46=РезультатОбработки;
				//ДобавСтр.ИННПроизводителяСтрокой=ДобавСтр.ИННПроизводителяИмпортёра.ИНН;
		//	КонецЕсли;
					
			
		Конеццикла;	
		
		
	ИначеЕсли НаимСайтВхода="Одежда" Тогда
		
	
		Имяекселя_1=ПолучитьИмяВременногоФайла(Расширение);
		
		Дан=ПолучитьИзВременногоХранилища(Адр);
		Дан.Записать(Имяекселя_1);
		ОбластьФайла = Новый ТабличныйДокумент;
		Попытка
			// Выполняется долго на больших файлах.
			ОбластьФайла.Прочитать(Имяекселя_1, СпособЧтенияЗначенийТабличногоДокумента.Значение);
			УдалитьФайлы(Имяекселя_1);
		Исключение
			//Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
			УдалитьФайлы(Имяекселя_1);
			Возврат;
		КонецПопытки;
		
		
		
		КолСтр = ОбластьФайла.ВысотаТаблицы;
		КолКолонок = ОбластьФайла.ШиринаТаблицы;
		
		ТаблицаРезультат = Новый ТаблицаЗначений;
		
		ТаблицаРезультат.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№", 4);
		ТаблицаРезультат.Колонки.Добавить("Сопоставлено", Новый ОписаниеТипов("Булево"), "Сопоставлено", 1);
		
		Для Сч = 1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			ТаблицаРезультат.Колонки.Добавить(ИмяКолонки);
		КонецЦикла;
		
		// 1-я строка. Заголовки.
		НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
		НоваяСтрокаТФ.НомерСтроки = 1;
		Для Сч=1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			НоваяСтрокаТФ[ИмяКолонки] = ОбластьФайла.ПолучитьОбласть("R1" + "C"+нКолонка).ТекущаяОбласть.Текст;
			
			// Используется при формировании таблицы на форме обработки.
			ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
			ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
			ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
		КонецЦикла;
		
		НачСтрока = ?(Не ЗначениеЗаполнено(НачСтрока), 2, НачСтрока);
		КонСтрока = ?(Не ЗначениеЗаполнено(КонСтрока), КолСтр, КонСтрока);
		
		
		
		
		Для нСтрокаТФ = НачСтрока ПО КонСтрока Цикл
			НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
			НоваяСтрокаТФ[0] = нСтрокаТФ;
			нСтрока = СтрЗаменить(нСтрокаТФ, Символы.НПП, "");
			Для Колонка = 1 ПО КолКолонок Цикл
				нКолонка = СтрЗаменить(Колонка, Символы.НПП, "");
				Область = ОбластьФайла.ПолучитьОбласть("R"+нСтрока+"C"+нКолонка);
				ТекущаяОбласть = Область.ТекущаяОбласть;
				Если Колонка=2 Или Колонка=5 Тогда
					ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
					Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
						ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
					Иначе
						ЗначениеЯчейки = Неопределено;
					КонецЕсли;
				Иначе
					Попытка
						ЗначениеЯчейки = xmlString(ТекущаяОбласть.Значение);        // Число, Дата.
					Исключение
						ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
						Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
							ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
						Иначе
							ЗначениеЯчейки = Неопределено;
						КонецЕсли;
					КонецПопытки;
				КонецЕсли;
				ИмяКолонки = "N" + нКолонка;
				НоваяСтрокаТФ[ИмяКолонки] = ЗначениеЯчейки;
				
				// Используется при формировании таблицы на форме обработки.
				ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
				ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
				ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
			КонецЦикла;
		КонецЦикла;
		
		// Юзабилити. Удалить пустые колонки.
	 	
			//	Возврат ТаблицаРезультат;	
		НачинаемЗаписывать=Ложь;
		Для Каждого Стр Из ТаблицаРезультат Цикл
			Если Не НачинаемЗаписывать Тогда
				Попытка
					ГТИНЧисло=Стр.N2;
					Если СокрЛП(ГТИНЧисло)="Цифровое поле" Тогда
						НачинаемЗаписывать=Истина;
					КонецЕсли;
					//Если ГТИНЧисло<=1000000 Тогда
					//	Продолжить;
					//КонецЕсли;
				Исключение
				КонецПопытки;
				Продолжить;
			КонецЕсли;
			
			
			Пояснение=xmlString(Стр.N1);
			Попытка
				V_PROD_COVER_GTIN=Число(Стр.N2);
			Исключение
				V_PROD_COVER_GTIN=0;
			КонецПопытки;
			//V_ID_IS=xmlString(Стр.N3);
			V_MANUFACTURER_CODE=xmlString(Стр.N3);
			V_PUBLICATION_DATE=xmlString(Стр.N4);
			V_PROD_DESC_RU=xmlString(Стр.N5);
			Если Не ЗначениеЗаполнено(V_PROD_DESC_RU) Тогда
				Продолжить;
			КонецЕсли;
			V_PROD_NAME_RU=xmlString(Стр.N6);
			V_WEB_90001731=xmlString(Стр.N7); //Страна производства
			V_WEB_90000626=xmlString(Стр.N8); //ИНН
			V_MANUFACTURER_NAME=xmlString(Стр.N9); //Наименование компании изготовителя


						
			V_WEB_90001697=xmlString(Стр.N10);///Вид изделия
			V_WEB_90001698=xmlString(Стр.N11);///Вид изделия (Другое)
			V_TNVED=xmlString(Стр.N12);///ТН ВЭД
			V_WEB_90001781=xmlString(Стр.N13);///Размер изделия ГОСТ
			V_WEB_90001782=xmlString(Стр.N14);///Размер изделия ГОСТ
			V_WEB_90000203=xmlString(Стр.N15);///Цвет
			V_WEB_90000200=xmlString(Стр.N16);///Модель
			V_WEB_90000206=xmlString(Стр.N17);///Целевой пол
			V_WEB_90000195=xmlString(Стр.N18);///Состав сырья
			V_WEB_90001810_1=xmlString(Стр.N19);///ТР ТС 007/2011 "О БЕЗОПАСНОСТИ ПРОДУКЦИИ, ПРЕДНАЗНАЧЕННОЙ ДЛЯ ДЕТЕЙ И ПОДРОСТКОВ"
			V_WEB_90001810_2=xmlString(Стр.N20);///ТР ТС 017/2011 "О БЕЗОПАСНОСТИ ПРОДУКЦИИ ЛЕГКОЙ ПРОМЫШЛЕННОСТИ"
			V_WEB_90001810_3=xmlString(Стр.N21);///ТР ТС 019/2011 "О БЕЗОПАСНОСТИ СРЕДСТВ ИНДИВИДУАЛЬНОЙ ЗАЩИТЫ"
			V_WEB_90001810_4=xmlString(Стр.N22);///ТР ТС 005/2011 "О БЕЗОПАСНОСТИ УПАКОВКИ"

			V_WEB_90001810_5=xmlString(Стр.N23);///ДЕЙСТВИЕ ТЕХНИЧЕСКИХ РЕГЛАМЕНТОВ НЕ РАСПРОСТРАНЯЕТСЯ
			
			Если Не ЗначениеЗаполнено(V_TNVED) Тогда
				Продолжить;
			КонецЕсли;
			
			Попытка
				РезультатОбработки=xmlString(Стр.N24);
			Исключение
				РезультатОбработки="";
			КонецПопытки;
			//Если Сред(РезультатОбработки,1,1)="<" Или Не ЗначениеЗаполненО(РезультатОбработки) Тогда
			КодТНВЭД=ВернутьКодТНВЭД(V_TNVED);
				
				//РезультатОбработки=xmlString(Стр.N17);
			//КонецЕслИ;
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(V_PROD_COVER_GTIN));
				Если ЗначениеЗаполнено(Спроб) Тогда
					СпрОб=СпрОб.ПолучитьОбъект();
				Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
			Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				
			Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Одежда;
				СпрОб.GTIN=V_PROD_COVER_GTIN;
				СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=V_PROD_NAME_RU;
				
				СпрОб.СтранаПроизводства=ВернутьСтрану(V_WEB_90001731);
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				
				СпрОб.ИННПроизводителяИмпортёра=ВернутьПроизводителя(V_WEB_90000626);
				
				
				
				
				Если ЗначениеЗаполнено(V_MANUFACTURER_CODE) Тогда
					СпрОб.МодельПроизводителяАртикул=V_MANUFACTURER_CODE;
				КонецЕсли;
				

				
				ДопРеквизиты=Спроб.ДополнительныеРеквизитОдежда;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_ПредметыОдежды_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизиты.ВидИзделия=ВидИзделия_ХамелеонЦРПТ(V_WEB_90001697);
				ДопРеквизиты.ВидИзделияДругое=V_WEB_90001698;
				ДопРеквизиты.РазмерИзделияГОСТ=РазмерИзделияГОСТ_ХамелеонЦРПТ(V_WEB_90001781);
				ДопРеквизиты.РазмерИзделияГОСТДругое=V_WEB_90001782;
				ДопРеквизиты.Цвет=V_WEB_90000203;
				ДопРеквизиты.Модель=V_WEB_90000200;
				ДопРеквизиты.ЦелевойПол=ЦелевойПол_ХамелеонЦРПТ(V_WEB_90000206);
				
				ДопРеквизиты.Состав=V_WEB_90000195;
				

				Если Врег(V_WEB_90001810_1)="ДА" Тогда
					ДопРеквизиты.НомерРегламента007=Истина
				Иначе
					ДопРеквизиты.НомерРегламента007=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001810_2)="ДА" Тогда
					ДопРеквизиты.НомерРегламента017=Истина
				Иначе
					ДопРеквизиты.НомерРегламента017=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001810_3)="ДА" Тогда
					ДопРеквизиты.НомерРегламента019=Истина
				Иначе
					ДопРеквизиты.НомерРегламента019=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001810_4)="ДА" Тогда
					ДопРеквизиты.НомерРегламента005=Истина
				Иначе
					ДопРеквизиты.НомерРегламента005=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001810_5)="ДА" Тогда
					ДопРеквизиты.БезРегламента=Истина
				Иначе
					ДопРеквизиты.БезРегламента=Ложь
				
				КонецЕсли;
				
				
				ДопРеквизиты.Записать();
				Спроб.ДополнительныеРеквизитОдежда=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=КодТНВЭД
				;//КонецЕсли;
					//ДобавСтр.Сертификат=Сертификат.Ссылка;

		 
				
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб.Записать();
			КонецЕсли;	
			///	Если Докум.GS1.НайтиСтроки(Новый Структура("GTIN",V_PROD_COVER_GTIN)).Количество()=0 Тогда
				ДобавСтр=Докум.ОдеждаGS.Добавить();
				ДобавСтр.Пояснение=Пояснение;
				ЗаполнитьЗначенияСвойств(ДобавСтр,Спроб);
				ЗаполнитьЗначенияСвойств(ДобавСтр,ДопРеквизиты);
				ДобавСтр.СоставСырья=ДопРеквизиты.Состав;
				
				ДобавСтр.ИННПроизводства=СпРоб.ИННПроизводителяИмпортёра.ИНН;
				ДобавСтр.ИННПроизводителяСтрокой=V_MANUFACTURER_NAME;
				
				//ДобавСтр.Сертификат=Сертификат.Ссылка;
				
				
				Попытка
					ДобавСтр.КоличествоКМ=Стр.N25;
				Исключение
				КонецПопытки;

				
				ДобавСтр.НаименованиеТовараНаЭтикетке=Спроб.НаименованиеТовара;
				ДобавСтр.Товар=СпрОб.Ссылка;
				Попытка
					Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,1,4),Сред(V_PUBLICATION_DATE,6,2),Сред(V_PUBLICATION_DATE,9,2));
				Исключение
					Попытка
						Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,7,4),Сред(V_PUBLICATION_DATE,4,2),Сред(V_PUBLICATION_DATE,1,2));
					исключение
						Попытка
							Добавстр.ДатаПубликацииПлан=Дата(1899,12,30)+V_PUBLICATION_DATE*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				ДобавСтр.РезультатОбработкиДанныхВGS46=РезультатОбработки;
				//ДобавСтр.ИННПроизводителяСтрокой=ДобавСтр.ИННПроизводителяИмпортёра.ИНН;
		//	КонецЕсли;
					
			
		Конеццикла;	
		
		

	
	ИначеЕсли НаимСайтВхода="Велосипеды" Тогда
		
	
		Имяекселя_1=ПолучитьИмяВременногоФайла(Расширение);
		
		Дан=ПолучитьИзВременногоХранилища(Адр);
		Дан.Записать(Имяекселя_1);
		ОбластьФайла = Новый ТабличныйДокумент;
		Попытка
			// Выполняется долго на больших файлах.
			ОбластьФайла.Прочитать(Имяекселя_1, СпособЧтенияЗначенийТабличногоДокумента.Значение);
			УдалитьФайлы(Имяекселя_1);
		Исключение
			//Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
			УдалитьФайлы(Имяекселя_1);
			Возврат;
		КонецПопытки;
		
		
		
		КолСтр = ОбластьФайла.ВысотаТаблицы;
		КолКолонок = ОбластьФайла.ШиринаТаблицы;
		
		ТаблицаРезультат = Новый ТаблицаЗначений;
		
		ТаблицаРезультат.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№", 4);
		ТаблицаРезультат.Колонки.Добавить("Сопоставлено", Новый ОписаниеТипов("Булево"), "Сопоставлено", 1);
		
		Для Сч = 1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			ТаблицаРезультат.Колонки.Добавить(ИмяКолонки);
		КонецЦикла;
		
		// 1-я строка. Заголовки.
		НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
		НоваяСтрокаТФ.НомерСтроки = 1;
		Для Сч=1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			НоваяСтрокаТФ[ИмяКолонки] = ОбластьФайла.ПолучитьОбласть("R1" + "C"+нКолонка).ТекущаяОбласть.Текст;
			
			// Используется при формировании таблицы на форме обработки.
			ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
			ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
			ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
		КонецЦикла;
		
		НачСтрока = ?(Не ЗначениеЗаполнено(НачСтрока), 2, НачСтрока);
		КонСтрока = ?(Не ЗначениеЗаполнено(КонСтрока), КолСтр, КонСтрока);
		
		
		
		
		Для нСтрокаТФ = НачСтрока ПО КонСтрока Цикл
			НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
			НоваяСтрокаТФ[0] = нСтрокаТФ;
			нСтрока = СтрЗаменить(нСтрокаТФ, Символы.НПП, "");
			Для Колонка = 1 ПО КолКолонок Цикл
				нКолонка = СтрЗаменить(Колонка, Символы.НПП, "");
				Область = ОбластьФайла.ПолучитьОбласть("R"+нСтрока+"C"+нКолонка);
				ТекущаяОбласть = Область.ТекущаяОбласть;
				Если Колонка=2 Или Колонка=5 Тогда
					ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
					Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
						ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
					Иначе
						ЗначениеЯчейки = Неопределено;
					КонецЕсли;
				Иначе
					Попытка
						ЗначениеЯчейки = xmlString(ТекущаяОбласть.Значение);        // Число, Дата.
					Исключение
						ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
						Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
							ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
						Иначе
							ЗначениеЯчейки = Неопределено;
						КонецЕсли;
					КонецПопытки;
				КонецЕсли;
				ИмяКолонки = "N" + нКолонка;
				НоваяСтрокаТФ[ИмяКолонки] = ЗначениеЯчейки;
				
				// Используется при формировании таблицы на форме обработки.
				ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
				ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
				ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
			КонецЦикла;
		КонецЦикла;
		
		// Юзабилити. Удалить пустые колонки.
	 	
			//	Возврат ТаблицаРезультат;	
		НачинаемЗаписывать=Ложь;
		Для Каждого Стр Из ТаблицаРезультат Цикл
			Если Не НачинаемЗаписывать Тогда
				Попытка
					ГТИНЧисло=Стр.N2;
					Если СокрЛП(ГТИНЧисло)="Цифровое поле" Тогда
						НачинаемЗаписывать=Истина;
					КонецЕсли;
					//Если ГТИНЧисло<=1000000 Тогда
					//	Продолжить;
					//КонецЕсли;
				Исключение
				КонецПопытки;
				Продолжить;
			КонецЕсли;
			
			
			Пояснение=xmlString(Стр.N1);
			Попытка
				V_PROD_COVER_GTIN=Число(Стр.N2);
			Исключение
				V_PROD_COVER_GTIN=0;
			КонецПопытки;
			V_ID_IS=xmlString(Стр.N3);
			V_MANUFACTURER_CODE=xmlString(Стр.N4);
			V_PUBLICATION_DATE=xmlString(Стр.N5);
			V_PROD_DESC_RU=xmlString(Стр.N6);
			Если Не ЗначениеЗаполнено(V_PROD_DESC_RU) Тогда
				Продолжить;
			КонецЕсли;
			V_PROD_NAME_RU=xmlString(Стр.N7);
			V_WEB_90001755=xmlString(Стр.N8);///Тип велосипеда
			V_WEB_90001828=xmlString(Стр.N9);///Модель
			V_WEB_90001829=xmlString(Стр.N10);///Год производства
			V_ENGINE=xmlString(Стр.N11);///Наличие двигателя
			V_WEB_90001757=xmlString(Стр.N12);///Тип двигателя
			V_WEB_90001758=xmlString(Стр.N13);///Мощность двигателя
			V_WEB_90001759=xmlString(Стр.N14);///Единица измерения
			V_WEB_90001760=xmlString(Стр.N15);///Размер рамы
			V_WEB_90001830=xmlString(Стр.N16);///Единица измерения
			V_WEB_90001761=xmlString(Стр.N17);///Цвет
			V_WEB_90001762=xmlString(Стр.N18);///Материал рамы
			V_WEB_90001827=xmlString(Стр.N19);///Посадочный диаметр обода
			V_WEB_90001764=xmlString(Стр.N20);///Ширина профиля
			V_WEB_90001765=xmlString(Стр.N21);///Тип тормозной системы
			V_WEB_90001766=xmlString(Стр.N22);///Тип передней вилки

			V_WEB_90001797=xmlString(Стр.N23);///Конструктивная масса
			V_WEB_90001731=xmlString(Стр.N24);///Страна производства
			
			
			V_CLASS_TNVED=xmlString(Стр.N25);///ТНВЭД
			V_WEB_90001831_1=xmlString(Стр.N26);///ТР ТС 007/2011 "О БЕЗОПАСНОСТИ ПРОДУКЦИИ, ПРЕДНАЗНАЧЕННОЙ ДЛЯ ДЕТЕЙ И ПОДРОСТКОВ"
			V_WEB_90001831_2=xmlString(Стр.N27);///ТР ТС 010/2011 "О БЕЗОПАСНОСТИ МАШИН И ОБОРУДОВАНИЯ"
			V_WEB_90001831_3=xmlString(Стр.N28);///ТР ТС 012/2011 "О БЕЗОПАСНОСТИ ОБОРУДОВАНИЯ ДЛЯ РАБОТЫ ВО ВЗРЫВООПАСНЫХ СРЕДАХ"
			V_WEB_90001831_4=xmlString(Стр.N29);///ТР ТС 018/2011 "О БЕЗОПАСНОСТИ КОЛЕСНЫХ ТРАНСПОРТНЫХ СРЕДСТВ"
			V_WEB_90001831_5=xmlString(Стр.N30);///ТР ТС 005/2011 "О БЕЗОПАСНОСТИ УПАКОВКИ"
			//V_WEB_90001731=xmlString(Стр.N20);///Страна производства
			//V_PROD_CERT_NUMBER=xmlString(Стр.N21);///Номер декларации (сертификата) соответствия
			//V_PROD_CERT_TYPE=xmlString(Стр.N22);///Тип документа соответствия
			//V_PROD_CERT_ISSUE_DATE=xmlString(Стр.N23);///Дата выдачи декларации (сертификата)
			
			Если Не ЗначениеЗаполнено(V_CLASS_TNVED) Тогда
				Продолжить;
			КонецЕсли;
			
			Попытка
				РезультатОбработки=xmlString(Стр.N31);
			Исключение
				РезультатОбработки="";
			КонецПопытки;
			//Если Сред(РезультатОбработки,1,1)="<" Или Не ЗначениеЗаполненО(РезультатОбработки) Тогда
			КодТНВЭД=ВернутьКодТНВЭД(V_CLASS_TNVED);
				
				//РезультатОбработки=xmlString(Стр.N17);
			//КонецЕслИ;
			Если ЗначениеЗаполненО(V_PROD_COVER_GTIN) Тогда
				СпрОб=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(V_PROD_COVER_GTIN));
				Если ЗначениеЗаполнено(Спроб) Тогда
					СпрОб=СпрОб.ПолучитьОбъект();
				Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
			Иначе
				Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
			Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Велосипеды;
				СпрОб.GTIN=V_PROD_COVER_GTIN;
				СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=V_PROD_NAME_RU;
				Если ЗначениеЗаполнено(V_ID_IS) Тогда
					СпрОб.КодВУчетнойСистеме=V_ID_IS;
				КонецЕсли;
				Если ЗначениеЗаполнено(V_MANUFACTURER_CODE) Тогда
					СпрОб.МодельПроизводителяАртикул=V_MANUFACTURER_CODE;
				КонецЕсли;
				

				
				ДопРеквизиты=Спроб.ДополнительныйРеквизитВелосипед;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_Велосипеды_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизиты.ТипВелосипеда=ТипВелосипеда_ХамелеонЦРПТ(V_WEB_90001755);
				ДопРеквизиты.Модель=V_WEB_90001828;
				
				
				
				
				ДопРеквизиты.ГодПроизводства=ГодПроизводства_ХамелеонЦРПТ(V_WEB_90001829);
				Если Врег(V_ENGINE)="ДА" Тогда
					ДопРеквизиты.НаличиеДвигателя=Истина;
				Иначе
					ДопРеквизиты.НаличиеДвигателя=Ложь;
				КонецЕсли;
				ДопРеквизиты.ТипДвигателя=ТипДвигателя_ХамелеонЦРПТ(V_WEB_90001757);
				ДопРеквизиты.ТипДвигателя=ТипДвигателя_ХамелеонЦРПТ(V_WEB_90001757);
				
				ДопРеквизиты.МощностьДвигателя=V_WEB_90001758;
				ДопРеквизиты.ЕдиницаИзмеренияМощности=ЕдиницыИзмеренияМощностиДвигателя_ХамелеонЦРПТ(V_WEB_90001759);
				ДопРеквизиты.РазмерРамы=РазмерРамы_ХамелеонЦРПТ(V_WEB_90001760);
				ДопРеквизиты.ЕдиницаИзмеренияРазмераРамы=ЕдиницаИзмеренияРазмераРамы_ХамелеонЦРПТ(V_WEB_90001830);
				ДопРеквизиты.Цвет=V_WEB_90001761;
				ДопРеквизиты.МатериалРамы=МатериалРамы_ХамелеонЦРПТ(V_WEB_90001762);
				ДопРеквизиты.ПосадочныйДиамтерОбода=V_WEB_90001827;
				ДопРеквизиты.ШиринаПрофиляШины=ШиринаПрофиля_ХамелеонЦРПТ(V_WEB_90001764);
				ДопРеквизиты.ТипТормознойСистемы=ТипТормознойСистемы_ХамелеонЦРПТ(V_WEB_90001765);
				ДопРеквизиты.ТипПереднейВилки=ТипПереднейВилки_ХамелеонЦРПТ(V_WEB_90001766);
				ДопРеквизиты.КонструктивнаяМасса=V_WEB_90001797;
				
				СпрОб.СтранаПроизводства=ВернутьСтрану(V_WEB_90001731);
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				
				Если Врег(V_WEB_90001831_1)="ДА" Тогда
					ДопРеквизиты.НомерРегламента007=Истина
				Иначе
					ДопРеквизиты.НомерРегламента007=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001831_2)="ДА" Тогда
					ДопРеквизиты.НомерРегламента010=Истина
				Иначе
					ДопРеквизиты.НомерРегламента010=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001831_3)="ДА" Тогда
					ДопРеквизиты.НомерРегламента012=Истина
				Иначе
					ДопРеквизиты.НомерРегламента012=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001831_4)="ДА" Тогда
					ДопРеквизиты.НомерРегламента018=Истина
				Иначе
					ДопРеквизиты.НомерРегламента018=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001831_5)="ДА" Тогда
					ДопРеквизиты.НомерРегламента005=Истина
				Иначе
					ДопРеквизиты.НомерРегламента005=Ложь
				
				КонецЕсли;
				
				
				ДопРеквизиты.Записать();
				Спроб.ДополнительныйРеквизитВелосипед=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=КодТНВЭД
				;//КонецЕсли;
					//ДобавСтр.Сертификат=Сертификат.Ссылка;

		 
				
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб.Записать();
			КонецЕсли;	
			///	Если Докум.GS1.НайтиСтроки(Новый Структура("GTIN",V_PROD_COVER_GTIN)).Количество()=0 Тогда
				ДобавСтр=Докум.ВелосипедыGS.Добавить();
				ДобавСтр.Пояснение=Пояснение;
				ЗаполнитьЗначенияСвойств(ДобавСтр,Спроб);
				ЗаполнитьЗначенияСвойств(ДобавСтр,ДопРеквизиты);
				
				//ДобавСтр.Сертификат=Сертификат.Ссылка;
				
				ДобавСтр.НаименованиеТовараНаЭтикетке=Спроб.НаименованиеТовара;
				ДобавСтр.Товар=СпрОб.Ссылка;
				Попытка
					Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,1,4),Сред(V_PUBLICATION_DATE,6,2),Сред(V_PUBLICATION_DATE,9,2));
				Исключение
					Попытка
						Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,7,4),Сред(V_PUBLICATION_DATE,4,2),Сред(V_PUBLICATION_DATE,1,2));
					исключение
						Попытка
							Добавстр.ДатаПубликацииПлан=Дата(1899,12,30)+V_PUBLICATION_DATE*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				ДобавСтр.РезультатОбработкиДанныхВGS46=РезультатОбработки;
				//ДобавСтр.ИННПроизводителяСтрокой=ДобавСтр.ИННПроизводителяИмпортёра.ИНН;
		//	КонецЕсли;
					
			
		Конеццикла;	
		
		
	
	ИначеЕсли НаимСайтВхода="Парфюм" Тогда
		
	
		Имяекселя_1=ПолучитьИмяВременногоФайла(Расширение);
		
		Дан=ПолучитьИзВременногоХранилища(Адр);
		Дан.Записать(Имяекселя_1);
		ОбластьФайла = Новый ТабличныйДокумент;
		Попытка
			// Выполняется долго на больших файлах.
			ОбластьФайла.Прочитать(Имяекселя_1, СпособЧтенияЗначенийТабличногоДокумента.Значение);
			УдалитьФайлы(Имяекселя_1);
		Исключение
			//Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
			УдалитьФайлы(Имяекселя_1);
			Возврат;
		КонецПопытки;
		
		
		
		КолСтр = ОбластьФайла.ВысотаТаблицы;
		КолКолонок = ОбластьФайла.ШиринаТаблицы;
		
		ТаблицаРезультат = Новый ТаблицаЗначений;
		
		ТаблицаРезультат.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№", 4);
		ТаблицаРезультат.Колонки.Добавить("Сопоставлено", Новый ОписаниеТипов("Булево"), "Сопоставлено", 1);
		
		Для Сч = 1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			ТаблицаРезультат.Колонки.Добавить(ИмяКолонки);
		КонецЦикла;
		
		// 1-я строка. Заголовки.
		НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
		НоваяСтрокаТФ.НомерСтроки = 1;
		Для Сч=1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			НоваяСтрокаТФ[ИмяКолонки] = ОбластьФайла.ПолучитьОбласть("R1" + "C"+нКолонка).ТекущаяОбласть.Текст;
			
			// Используется при формировании таблицы на форме обработки.
			ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
			ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
			ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
		КонецЦикла;
		
		НачСтрока = ?(Не ЗначениеЗаполнено(НачСтрока), 2, НачСтрока);
		КонСтрока = ?(Не ЗначениеЗаполнено(КонСтрока), КолСтр, КонСтрока);
		
		
		
		
		Для нСтрокаТФ = НачСтрока ПО КонСтрока Цикл
			НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
			НоваяСтрокаТФ[0] = нСтрокаТФ;
			нСтрока = СтрЗаменить(нСтрокаТФ, Символы.НПП, "");
			Для Колонка = 1 ПО КолКолонок Цикл
				нКолонка = СтрЗаменить(Колонка, Символы.НПП, "");
				Область = ОбластьФайла.ПолучитьОбласть("R"+нСтрока+"C"+нКолонка);
				ТекущаяОбласть = Область.ТекущаяОбласть;
				Если Колонка=2 Или Колонка=5 Тогда
					ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
					Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
						ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
					Иначе
						ЗначениеЯчейки = Неопределено;
					КонецЕсли;
				Иначе
					Попытка
						ЗначениеЯчейки = xmlString(ТекущаяОбласть.Значение);        // Число, Дата.
					Исключение
						ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
						Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
							ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
						Иначе
							ЗначениеЯчейки = Неопределено;
						КонецЕсли;
					КонецПопытки;
				КонецЕсли;
				ИмяКолонки = "N" + нКолонка;
				НоваяСтрокаТФ[ИмяКолонки] = ЗначениеЯчейки;
				
				// Используется при формировании таблицы на форме обработки.
				ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
				ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
				ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
			КонецЦикла;
		КонецЦикла;
		
		// Юзабилити. Удалить пустые колонки.
	 	
			//	Возврат ТаблицаРезультат;	
		НачинаемЗаписывать=Ложь;
		Для Каждого Стр Из ТаблицаРезультат Цикл
			Если Не НачинаемЗаписывать Тогда
				Попытка
					ГТИНЧисло=Стр.N2;
					Если СокрЛП(ГТИНЧисло)="Цифровое поле" Тогда
						НачинаемЗаписывать=Истина;
					КонецЕсли;
					//Если ГТИНЧисло<=1000000 Тогда
					//	Продолжить;
					//КонецЕсли;
				Исключение
				КонецПопытки;
				Продолжить;
			КонецЕсли;
			
			
			Пояснение=xmlString(Стр.N1);
			Попытка
				V_PROD_COVER_GTIN=Число(Стр.N2);
			Исключение
				V_PROD_COVER_GTIN=0;
			КонецПопытки;
			V_ID_IS=xmlString(Стр.N3);
			V_MANUFACTURER_CODE=xmlString(Стр.N4);
			V_PUBLICATION_DATE=xmlString(Стр.N5);
			V_PROD_DESC_RU=xmlString(Стр.N6);
			Если Не ЗначениеЗаполнено(V_PROD_DESC_RU) Тогда
				Продолжить;
			КонецЕсли;
			V_PROD_NAME_RU=xmlString(Стр.N7);
			V_WEB_90001812=xmlString(Стр.N8);///Тип парфюмерии
			V_WEB_90001736=xmlString(Стр.N9);///Тип парфюмерии (Другое)
			V_PROD_COUNT=xmlString(Стр.N10);///Объем
			V_PROD_MEASURE=xmlString(Стр.N11);///Единица измерения объема
			V_PROD_COVER_TYPE_DICT=xmlString(Стр.N12);///Тип упаковки
			V_PROD_COVER_MATERIAL=xmlString(Стр.N13);///Материал упаковки
			V_PROD_COVER_EXT_DESC=xmlString(Стр.N14);///Дополнительное описание упаковки
			V_WEB_90001731=xmlString(Стр.N15);///Страна производства
			V_WEB_90000626=xmlString(Стр.N16);///ИНН
			V_TNVED=xmlString(Стр.N17);///ТНВЭД
			V_WEB_90001776_1=xmlString(Стр.N18);///ТР ТС 009/2011 "О БЕЗОПАСНОСТИ ПАРФЮМЕРНО-КОСМЕТИЧЕСКОЙ ПРОДУКЦИИ"
			V_WEB_90001776_2=xmlString(Стр.N19);///ТР ТС 005/2011 "О БЕЗОПАСНОСТИ УПАКОВКИ"
			V_WEB_90001776_3=xmlString(Стр.N20);///ТР ТС 029/2012 "ТРЕБОВАНИЯ К БЕЗОПАСНОСТИ ПИЩЕВЫХ ДОБАВОК, АРОМАТИЗАТОРОВ И ТЕХНОЛОГИЧЕСКИХ ВСПОМОГАТЕЛЬНЫХ СРЕДСТВ"
			//V_WEB_90001731=xmlString(Стр.N21);///Страна производства
			V_PROD_CERT_NUMBER=xmlString(Стр.N21);///Номер декларации (сертификата) соответствия
			V_PROD_CERT_TYPE=xmlString(Стр.N22);///Тип документа соответствия
			V_PROD_CERT_ISSUE_DATE=xmlString(Стр.N23);///Дата выдачи декларации (сертификата)
			V_WEB_90001800=xmlString(Стр.N24);///Комплект - предмет торговли, в который входит нескольких составляющих, не имеющих своего номера GTIN и которые не продаются отдельно.)
			V_WEB_90001801=xmlString(Стр.N25);///Поле для указания общего количества самостоятельных предметов внутри.  Пример: внутри комплекта Флакон духов (1 шт.), Мыло (1 шт.), Гель для душа (2 шт.). В данном случае кол-во элементов внутри будет 4.
			V_WEB_90001804=xmlString(Стр.N26);///Позиции нужно описывать через точку с запятой. Пример: Флакон духов (1 шт.) 100 мл; Мыло (1 шт.) 100 грамм; Гель для душа (2 шт.) 200 мл
			V_WEB_90001800=xmlString(Стр.N26);///Позиции нужно описывать через точку с запятой. Пример: Флакон духов (1 шт.) 100 мл; Мыло (1 шт.) 100 грамм; Гель для душа (2 шт.) 200 мл
			Если Не ЗначениеЗаполнено(V_TNVED) Тогда
				Продолжить;
			КонецЕсли;
			
			Попытка
				РезультатОбработки=xmlString(Стр.N27);
			Исключение
				РезультатОбработки="";
			КонецПопытки;
			//Если Сред(РезультатОбработки,1,1)="<" Или Не ЗначениеЗаполненО(РезультатОбработки) Тогда
			КодТНВЭД=ВернутьКодТНВЭД(V_TNVED);
				
				//РезультатОбработки=xmlString(Стр.N17);
			//КонецЕслИ;
			Если ЗначениеЗаполненО(V_PROD_COVER_GTIN) Тогда
				СпрОб=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(V_PROD_COVER_GTIN));
				Если ЗначениеЗаполнено(Спроб) Тогда
					СпрОб=СпрОб.ПолучитьОбъект();
				Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
			Иначе
				Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
			Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Парфюм;
				СпрОб.GTIN=V_PROD_COVER_GTIN;
				СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=V_PROD_NAME_RU;
				Если ЗначениеЗаполнено(V_ID_IS) Тогда
					СпрОб.КодВУчетнойСистеме=V_ID_IS;
				КонецЕсли;
				Если ЗначениеЗаполнено(V_MANUFACTURER_CODE) Тогда
					СпрОб.МодельПроизводителяАртикул=V_MANUFACTURER_CODE;
				КонецЕсли;
				

				
				ДопРеквизиты=Спроб.ДополнительныйРеквизитПарфюм;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_Парфюмерия_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				
				ДопРеквизиты_Общие=Спроб.ДополнительныйРеквизитОбщиеНК;
				Если ЗначениеЗаполненО(ДопРеквизиты_Общие) тогда
					ДопРеквизиты_Общие=ДопРеквизиты_Общие.ПолучитьОбъект();
				Иначе
					ДопРеквизиты_Общие=Справочники.ДополинтельныеРеквизиты_ДругиеНК_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
							
				
				ДопРеквизиты.ТипПарфюмерии=ТипПарфюмерии_ХамелеонЦРПТ(V_WEB_90001812);
				ДопРеквизиты.ТипПарфюмерииДругое=V_WEB_90001736;
				
				ДопРеквизиты.Объем=V_PROD_COUNT;
				ДопРеквизиты.ЕдиницаИзмеренияОбъема=ЕдиницаИзмерения_Вода(V_PROD_MEASURE);
				ДопРеквизиты_Общие.ТипУпаковки=ТипУпаковки_Молоко_ХамелеонЦРПТ(V_PROD_COVER_TYPE_DICT);
				ДопРеквизиты_Общие.МатериалУпаковки=МатериалУпаковки_Молоко_ХамелеонЦРПТ(V_PROD_COVER_MATERIAL);
				ДопРеквизиты.ДополнительноеОписаниеУпаковки=V_PROD_COVER_EXT_DESC;
				СпрОб.СтранаПроизводства=ВернутьСтрану(V_WEB_90001731);
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				
				Если Врег(V_WEB_90001776_1)="ДА" Тогда
					ДопРеквизиты.НомерРегламента009=Истина
				Иначе
					ДопРеквизиты.НомерРегламента009=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001776_2)="ДА" Тогда
					ДопРеквизиты.НомерРегламента005=Истина
				Иначе
					ДопРеквизиты.НомерРегламента005=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001776_3)="ДА" Тогда
					ДопРеквизиты.НомерРегламента029=Истина
				Иначе
					ДопРеквизиты.НомерРегламента029=Ложь
				
				КонецЕсли;
				
				Если Врег(V_WEB_90001800)="ДА" Тогда
					ДопРеквизиты.Комплект=Истина;
					СпрОб.ТипУпаковки=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.НайтиПоНаименованию("BUNDLE");
					Если Не ЗначениеЗаполнено(СпрОб.ТипУпаковки) тогда
						ПолОб=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.СоздатьЭлемент();
						ПолОб.Наименование="BUNDLE";
						ПолОб.Записать();;
						Спроб.ТипУпаковки=ПолОб.Ссылка;
					КонецЕсли;
					
				Иначе
					ДопРеквизиты.Комплект=Ложь;
					СпрОб.ТипУпаковки=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.НайтиПоНаименованию("UNIT");
					Если Не ЗначениеЗаполнено(СпрОб.ТипУпаковки) тогда
						ПолОб=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.СоздатьЭлемент();
						ПолОб.Наименование="UNIT";
						ПолОб.Записать();;
						Спроб.ТипУпаковки=ПолОб.Ссылка;
					КонецЕсли;
				КонецЕсли;
				ДопРеквизиты.Комплектация=V_WEB_90001804;
				ДопРеквизиты.КоличествоЭлементовВнутри=V_WEB_90001801;
				

				
				Если ЗначениеЗаполнено(V_PROD_CERT_NUMBER) ТОгда
					Сертификат=Справочники.Сертификат_ДекларацияСоответствия_ХамелеонЦРПТ.НайтиПоНаименованию(
					 V_PROD_CERT_NUMBER);
					 Если ЗначениеЗаполнено(Сертификат) тогда
						 Сертификат=Сертификат.ПолучитьОбъект();
					 Иначе
						 Сертификат=Справочники.Сертификат_ДекларацияСоответствия_ХамелеонЦРПТ.СоздатьЭлемент();
					  КонецЕсли;
					Сертификат.Наименование=V_PROD_CERT_NUMBER;
					ДатаВыдачи=V_PROD_CERT_ISSUE_DATE;
					Если ЗначениеЗАполнено(ДатаВыдачи) Тогда
						Попытка
							Сертификат.ДатаНачалаДействия=Дата(Сред(ДатаВыдачи,1,4),Сред(ДатаВыдачи,6,2),Сред(ДатаВыдачи,9,2));
						Исключение
							Попытка
								Сертификат.ДатаНачалаДействия=Дата(Сред(ДатаВыдачи,7,4),Сред(ДатаВыдачи,4,2),Сред(ДатаВыдачи,1,2));
							исключение
								Попытка
									Сертификат.ДатаНачалаДействия=Дата(1899,12,30)+ДатаВыдачи*60*60*24
								Исключение
								КонецПопытки;
							КонецПопытки;
						КонецПопытки;
					Иначе
						Сертификат.ДатаНачалаДействия=Неопределено;
					КонецЕсли;
					 Сертификат.ВидСертификатаGSI=ВидСертификатов(V_PROD_CERT_TYPE);
					 Сертификат.Записать();
				 Иначе
					 Сертификат=Справочники.Сертификат_ДекларацияСоответствия_ХамелеонЦРПТ.ПустаяСсылка();
				 КонецЕсли;
				 ДопРеквизиты_Общие.Записать();
				ДопРеквизиты.Записать();
				СпрОб.ДополнительныйРеквизитОбщиеНК=ДопРеквизиты_Общие.Ссылка;
				Спроб.ДополнительныйРеквизитПарфюм=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=КодТНВЭД
				;//КонецЕсли;
					//ДобавСтр.Сертификат=Сертификат.Ссылка;

		 
				
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб.Записать();
			КонецЕсли;	
			///	Если Докум.GS1.НайтиСтроки(Новый Структура("GTIN",V_PROD_COVER_GTIN)).Количество()=0 Тогда
				ДобавСтр=Докум.ПарфюмGS.Добавить();
				ДобавСтр.Пояснение=Пояснение;
				ЗаполнитьЗначенияСвойств(ДобавСтр,Спроб);
				ЗаполнитьЗначенияСвойств(ДобавСтр,ДопРеквизиты);
				ЗаполнитьЗначенияСвойств(ДобавСтр,ДопРеквизиты_Общие);
				
				ДобавСтр.Сертификат=Сертификат.Ссылка;
				
				ДобавСтр.НаименованиеТовараНаЭтикетке=Спроб.НаименованиеТовара;
				ДобавСтр.Товар=СпрОб.Ссылка;
				Попытка
					Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,1,4),Сред(V_PUBLICATION_DATE,6,2),Сред(V_PUBLICATION_DATE,9,2));
				Исключение
					Попытка
						Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,7,4),Сред(V_PUBLICATION_DATE,4,2),Сред(V_PUBLICATION_DATE,1,2));
					исключение
						Попытка
							Добавстр.ДатаПубликацииПлан=Дата(1899,12,30)+V_PUBLICATION_DATE*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				ДобавСтр.РезультатОбработкиДанныхВGS46=РезультатОбработки;
				Попытка
					ДобавСтр.КоличествоКМ=Стр.N28
				Исключение
				КонецПопытки;
				//ДобавСтр.ИННПроизводителяСтрокой=ДобавСтр.ИННПроизводителяИмпортёра.ИНН;
		//	КонецЕсли;
					
			
		Конеццикла;	
		
		
	
	ИначеЕсли НаимСайтВхода="Питьевая вода" Тогда
		
	
		Имяекселя_1=ПолучитьИмяВременногоФайла(Расширение);
		
		Дан=ПолучитьИзВременногоХранилища(Адр);
		Дан.Записать(Имяекселя_1);
		ОбластьФайла = Новый ТабличныйДокумент;
		Попытка
			// Выполняется долго на больших файлах.
			ОбластьФайла.Прочитать(Имяекселя_1, СпособЧтенияЗначенийТабличногоДокумента.Значение);
			УдалитьФайлы(Имяекселя_1);
		Исключение
			//Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
			УдалитьФайлы(Имяекселя_1);
			Возврат;
		КонецПопытки;
		
		
		
		КолСтр = ОбластьФайла.ВысотаТаблицы;
		КолКолонок = ОбластьФайла.ШиринаТаблицы;
		
		ТаблицаРезультат = Новый ТаблицаЗначений;
		
		ТаблицаРезультат.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№", 4);
		ТаблицаРезультат.Колонки.Добавить("Сопоставлено", Новый ОписаниеТипов("Булево"), "Сопоставлено", 1);
		
		Для Сч = 1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			ТаблицаРезультат.Колонки.Добавить(ИмяКолонки);
		КонецЦикла;
		
		// 1-я строка. Заголовки.
		НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
		НоваяСтрокаТФ.НомерСтроки = 1;
		Для Сч=1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			НоваяСтрокаТФ[ИмяКолонки] = ОбластьФайла.ПолучитьОбласть("R1" + "C"+нКолонка).ТекущаяОбласть.Текст;
			
			// Используется при формировании таблицы на форме обработки.
			ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
			ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
			ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
		КонецЦикла;
		
		НачСтрока = ?(Не ЗначениеЗаполнено(НачСтрока), 2, НачСтрока);
		КонСтрока = ?(Не ЗначениеЗаполнено(КонСтрока), КолСтр, КонСтрока);
		
		
		
		
		Для нСтрокаТФ = НачСтрока ПО КонСтрока Цикл
			НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
			НоваяСтрокаТФ[0] = нСтрокаТФ;
			нСтрока = СтрЗаменить(нСтрокаТФ, Символы.НПП, "");
			Для Колонка = 1 ПО КолКолонок Цикл
				нКолонка = СтрЗаменить(Колонка, Символы.НПП, "");
				Область = ОбластьФайла.ПолучитьОбласть("R"+нСтрока+"C"+нКолонка);
				ТекущаяОбласть = Область.ТекущаяОбласть;
				Если Колонка=2 Или Колонка=5 Тогда
					ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
					Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
						ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
					Иначе
						ЗначениеЯчейки = Неопределено;
					КонецЕсли;
				Иначе
					Попытка
						ЗначениеЯчейки = xmlString(ТекущаяОбласть.Значение);        // Число, Дата.
					Исключение
						ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
						Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
							ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
						Иначе
							ЗначениеЯчейки = Неопределено;
						КонецЕсли;
					КонецПопытки;
				КонецЕсли;
				ИмяКолонки = "N" + нКолонка;
				НоваяСтрокаТФ[ИмяКолонки] = ЗначениеЯчейки;
				
				// Используется при формировании таблицы на форме обработки.
				ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
				ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
				ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
			КонецЦикла;
		КонецЦикла;
		
		// Юзабилити. Удалить пустые колонки.
	 	
			//	Возврат ТаблицаРезультат;	
		НачинаемЗаписывать=Ложь;
		Для Каждого Стр Из ТаблицаРезультат Цикл
			Если Не НачинаемЗаписывать Тогда
				Попытка
					ГТИНЧисло=Стр.N2;
					Если СокрЛП(ГТИНЧисло)="Цифровое поле" Тогда
						НачинаемЗаписывать=Истина;
					КонецЕсли;
					//Если ГТИНЧисло<=1000000 Тогда
					//	Продолжить;
					//КонецЕсли;
				Исключение
				КонецПопытки;
				Продолжить;
			КонецЕсли;
			
			
			Пояснение=xmlString(Стр.N1);
			Попытка
				V_PROD_COVER_GTIN=Число(Стр.N2);
			Исключение
				V_PROD_COVER_GTIN=0;
			КонецПопытки;
			V_ID_IS=xmlString(Стр.N3);
			//V_MANUFACTURER_CODE=xmlString(Стр.N4);
			V_PUBLICATION_DATE=xmlString(Стр.N4);
			V_PROD_DESC_RU=xmlString(Стр.N5);
			Если Не ЗначениеЗаполнено(V_PROD_DESC_RU) Тогда
				Продолжить;
			КонецЕсли;
			
							
				V_PROD_NAME_RU=xmlString(Стр.N6);
				V_WEB_90001814=xmlString(Стр.N7);///Тип продукта
				V_PROD_COUNT=xmlString(Стр.N8);///
				V_PROD_MEASURE=xmlString(Стр.N9);///Заявленный объём/вес нетто
				V_PROD_COVER_TYPE_DICT=xmlString(Стр.N10);///Заявленный объём / вес нетто - единица измерения
				V_PROD_COVER_MATERIAL=xmlString(Стр.N11);///Тип упаковки
				V_WEB_90001815=xmlString(Стр.N12);///Материал упаковки
				V_WEB_90001840=xmlString(Стр.N13);///Дополнительное описание упаковки
				V_WEB_90001816=xmlString(Стр.N14);///Происхождение сырья
				V_WEB_70000164=xmlString(Стр.N15);///Жирность, %
				V_WEB_90001817=xmlString(Стр.N16);///Продукция для детского питания
				V_WEB_90001731=xmlString(Стр.N17);///Состав
				V_CLASS_TNVED=xmlString(Стр.N18);///Страна производства
				V_PROD_CERT_NUMBER=xmlString(Стр.N19);///ИНН
				V_PROD_CERT_TYPE=xmlString(Стр.N20);///ТНВЭД
				V_PROD_CERT_ISSUE_DATE=xmlString(Стр.N21);///Идентификатор товара в ФГИС ВетИС
				Если Не ЗначениеЗаполнено(V_CLASS_TNVED) Тогда
					Продолжить;
				КонецЕсли;
				
				Попытка
					РезультатОбработки=xmlString(Стр.N22);
				Исключение
					РезультатОбработки="";
				КонецПопытки;
			//Если Сред(РезультатОбработки,1,1)="<" Или Не ЗначениеЗаполненО(РезультатОбработки) Тогда
			КодТНВЭД=ВернутьКодТНВЭД(V_CLASS_TNVED);
				
				//РезультатОбработки=xmlString(Стр.N17);
			//КонецЕслИ;
			Если ЗначениеЗаполненО(V_PROD_COVER_GTIN) Тогда
				СпрОб=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(V_PROD_COVER_GTIN));
				Если ЗначениеЗаполнено(Спроб) Тогда
					СпрОб=СпрОб.ПолучитьОбъект();
				Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
			Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
			Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода;
				СпрОб.GTIN=V_PROD_COVER_GTIN;
				СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=V_PROD_NAME_RU;
				Если ЗначениеЗаполнено(V_ID_IS) Тогда
					СпрОб.КодВУчетнойСистеме=V_ID_IS;
				КонецЕсли;
				//Если ЗначениеЗаполнено(V_MANUFACTURER_CODE) Тогда
				////	СпрОб.МодельПроизводителяАртикул=V_MANUFACTURER_CODE;
				//КонецЕсли;
				

				ДопРеквизиты_Общиее=Спроб.ДополнительныйРеквизитОбщиеНК;
				Если ЗначениеЗаполненО(ДопРеквизиты_Общиее) тогда
					ДопРеквизиты_Общиее=ДопРеквизиты_Общиее.ПолучитьОбъект();
				Иначе
					ДопРеквизиты_Общиее=Справочники.ДополинтельныеРеквизиты_ДругиеНК_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				
				ДопРеквизиты=Спроб.ДополнительныеРеквизитВода;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизит_ПитьеваяВода_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизиты.ТипПродукта=ТипПродукта_Вода_ХамелеонЦРПТ(V_WEB_90001814);
				
				ДопРеквизиты.ЗаявленныйОбъемВесНетто=V_PROD_COUNT;
				ДопРеквизиты.ЕдиницаОбъема=ЕдиницаИзмерения_Вода(V_PROD_MEASURE);
				ДопРеквизиты_Общиее.ТипУпаковки=ТипУпаковки_Молоко_ХамелеонЦРПТ(V_PROD_COVER_TYPE_DICT);
				ДопРеквизиты_Общиее.МатериалУпаковки=МатериалУпаковки_Молоко_ХамелеонЦРПТ(V_PROD_COVER_MATERIAL);
				ДопРеквизиты.ОбщаяМинерализация=V_WEB_90001815;
				
				
				ДопРеквизиты.ЕдиницаИзмеренияМинерализации=ЕдиницаИзмеренияМинерализации_ХамелеонЦРПТ(V_WEB_90001840);
				ДопРеквизиты.МетодГазирования=МетодГазирования_ХамелеонЦРПТ(V_WEB_90001816);
				ДопРеквизиты.Состав=V_WEB_70000164;
				ДопРеквизиты.ПродукцияДляДетскогоПитания=ПродукцияДляДетскогоПитания_ХамелеонЦРПТ(V_WEB_90001817);
				СПрОб.СтранаПроизводства=ВернутьСтрану(V_WEB_90001731);
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				Если ЗначениеЗАполнено(V_PROD_CERT_NUMBER) ТОгда
				Сертификат=Справочники.Сертификат_ДекларацияСоответствия_ХамелеонЦРПТ.НайтиПоНаименованию(
				 V_PROD_CERT_NUMBER);
				 Если ЗначениеЗаполнено(Сертификат) тогда
					 Сертификат=Сертификат.ПолучитьОбъект();
				 Иначе
					 Сертификат=Справочники.Сертификат_ДекларацияСоответствия_ХамелеонЦРПТ.СоздатьЭлемент();
				  КонецЕсли;
				Сертификат.Наименование=V_PROD_CERT_NUMBER;
				ДатаВыдачи=V_PROD_CERT_ISSUE_DATE;
				Попытка
					Сертификат.ДатаНачалаДействия=Дата(Сред(ДатаВыдачи,1,4),Сред(ДатаВыдачи,6,2),Сред(ДатаВыдачи,9,2));
				Исключение
					Попытка
						Сертификат.ДатаНачалаДействия=Дата(Сред(ДатаВыдачи,7,4),Сред(ДатаВыдачи,4,2),Сред(ДатаВыдачи,1,2));
					исключение
						Попытка
							Сертификат.ДатаНачалаДействия=Дата(1899,12,30)+ДатаВыдачи*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				 Сертификат.ВидСертификатаGSI=ВидСертификатов(V_PROD_CERT_TYPE);
				 Сертификат.Записать();
				 
			 	Иначе
					 Сертификат=Справочники.Сертификат_ДекларацияСоответствия_ХамелеонЦРПТ.ПустаяСсылка()
				Конецесли;
				ДопРеквизиты.Записать();
				
				ДопРеквизиты_Общиее.Записать();
				Спроб.ДополнительныйРеквизитОбщиеНК=ДопРеквизиты_Общиее;
				Спроб.ДополнительныеРеквизитВода=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=КодТНВЭД
				;//КонецЕсли;
					//ДобавСтр.Сертификат=Сертификат.Ссылка;

		 
				
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб.Записать();
			КонецЕсли;	
			///	Если Докум.GS1.НайтиСтроки(Новый Структура("GTIN",V_PROD_COVER_GTIN)).Количество()=0 Тогда
				ДобавСтр=Докум.ПитьеваяВодаGS.Добавить();
				ДобавСтр.Пояснение=Пояснение;
				ЗаполнитьЗначенияСвойств(ДобавСтр,Спроб);
				ЗаполнитьЗначенияСвойств(ДобавСтр,ДопРеквизиты);
				ЗаполнитьЗначенияСвойств(ДобавСтр,ДопРеквизиты_Общиее);
				
				
				
				ДобавСтр.Сертификат=Сертификат.Ссылка;
				
				ДобавСтр.НаименованиеТовараНаЭтикетке=Спроб.НаименованиеТовара;
				ДобавСтр.Товар=СпрОб.Ссылка;
				Попытка
					Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,1,4),Сред(V_PUBLICATION_DATE,6,2),Сред(V_PUBLICATION_DATE,9,2));
				Исключение
					Попытка
						Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,7,4),Сред(V_PUBLICATION_DATE,4,2),Сред(V_PUBLICATION_DATE,1,2));
					исключение
						Попытка
							Добавстр.ДатаПубликацииПлан=Дата(1899,12,30)+V_PUBLICATION_DATE*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				ДобавСтр.РезультатОбработкиДанныхВGS46=РезультатОбработки;
				//ДобавСтр.ИННПроизводителяСтрокой=ДобавСтр.ИННПроизводителяИмпортёра.ИНН;
		//	КонецЕсли;
					
			
		Конеццикла;	
		
		
	

	ИначеЕсли НаимСайтВхода="Молоко" Тогда
		
	
		Имяекселя_1=ПолучитьИмяВременногоФайла(Расширение);
		
		Дан=ПолучитьИзВременногоХранилища(Адр);
		Дан.Записать(Имяекселя_1);
		ОбластьФайла = Новый ТабличныйДокумент;
		Попытка
			// Выполняется долго на больших файлах.
			ОбластьФайла.Прочитать(Имяекселя_1, СпособЧтенияЗначенийТабличногоДокумента.Значение);
			УдалитьФайлы(Имяекселя_1);
		Исключение
			//Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
			УдалитьФайлы(Имяекселя_1);
			Возврат;
		КонецПопытки;
		
		
		
		КолСтр = ОбластьФайла.ВысотаТаблицы;
		КолКолонок = ОбластьФайла.ШиринаТаблицы;
		
		ТаблицаРезультат = Новый ТаблицаЗначений;
		
		ТаблицаРезультат.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№", 4);
		ТаблицаРезультат.Колонки.Добавить("Сопоставлено", Новый ОписаниеТипов("Булево"), "Сопоставлено", 1);
		
		Для Сч = 1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			ТаблицаРезультат.Колонки.Добавить(ИмяКолонки);
		КонецЦикла;
		
		// 1-я строка. Заголовки.
		НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
		НоваяСтрокаТФ.НомерСтроки = 1;
		Для Сч=1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			НоваяСтрокаТФ[ИмяКолонки] = ОбластьФайла.ПолучитьОбласть("R1" + "C"+нКолонка).ТекущаяОбласть.Текст;
			
			// Используется при формировании таблицы на форме обработки.
			ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
			ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
			ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
		КонецЦикла;
		
		НачСтрока = ?(Не ЗначениеЗаполнено(НачСтрока), 2, НачСтрока);
		КонСтрока = ?(Не ЗначениеЗаполнено(КонСтрока), КолСтр, КонСтрока);
		
		
		
		
		Для нСтрокаТФ = НачСтрока ПО КонСтрока Цикл
			НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
			НоваяСтрокаТФ[0] = нСтрокаТФ;
			нСтрока = СтрЗаменить(нСтрокаТФ, Символы.НПП, "");
			Для Колонка = 1 ПО КолКолонок Цикл
				нКолонка = СтрЗаменить(Колонка, Символы.НПП, "");
				Область = ОбластьФайла.ПолучитьОбласть("R"+нСтрока+"C"+нКолонка);
				ТекущаяОбласть = Область.ТекущаяОбласть;
				Если Колонка=2 Или Колонка=5 Тогда
					ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
					Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
						ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
					Иначе
						ЗначениеЯчейки = Неопределено;
					КонецЕсли;
				Иначе
					Попытка
						ЗначениеЯчейки = xmlString(ТекущаяОбласть.Значение);        // Число, Дата.
					Исключение
						ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
						Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
							ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
						Иначе
							ЗначениеЯчейки = Неопределено;
						КонецЕсли;
					КонецПопытки;
				КонецЕсли;
				ИмяКолонки = "N" + нКолонка;
				НоваяСтрокаТФ[ИмяКолонки] = ЗначениеЯчейки;
				
				// Используется при формировании таблицы на форме обработки.
				ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
				ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
				ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
			КонецЦикла;
		КонецЦикла;
		
		// Юзабилити. Удалить пустые колонки.
	 	
			//	Возврат ТаблицаРезультат;	
		НачинаемЗаписывать=Ложь;
		Для Каждого Стр Из ТаблицаРезультат Цикл
			Если Не НачинаемЗаписывать Тогда
				Попытка
					ГТИНЧисло=Стр.N2;
					Если СокрЛП(ГТИНЧисло)="Цифровое поле" Тогда
						НачинаемЗаписывать=Истина;
					КонецЕсли;
					//Если ГТИНЧисло<=1000000 Тогда
					//	Продолжить;
					//КонецЕсли;
				Исключение
				КонецПопытки;
				Продолжить;
			КонецЕсли;
			
			
			Пояснение=xmlString(Стр.N1);
			Попытка
				V_PROD_COVER_GTIN=Число(Стр.N2);
			Исключение
				V_PROD_COVER_GTIN=0;
			КонецПопытки;
			V_ID_IS=xmlString(Стр.N3);
			//V_MANUFACTURER_CODE=xmlString(Стр.N4);
			V_PUBLICATION_DATE=xmlString(Стр.N4);
			V_PROD_DESC_RU=xmlString(Стр.N5);
			Если Не ЗначениеЗаполнено(V_PROD_DESC_RU) Тогда
				Продолжить;
			КонецЕсли;
			
			Попытка
				V_PROD_CERT_ISSUE_DATE=xmlString(Стр.N27);///Дата выдачи декларации (сертификата)
					
				V_PROD_NAME_RU=xmlString(Стр.N6);
				V_WEB_90001769=xmlString(Стр.N7);///Тип продукта
				V_WEB_90001838=xmlString(Стр.N8);///Тип продукта (другое)
				V_WEB_90001836=xmlString(Стр.N9);///Является ли товар весовым
				V_WEB_90001837=xmlString(Стр.N10);///Диапазон веса, указанный на упаковке
				V_PROD_COUNT=xmlString(Стр.N11);///Заявленный объём/вес нетто
				V_PROD_MEASURE=xmlString(Стр.N12);///Заявленный объём / вес нетто - единица измерения
				V_PROD_COVER_TYPE_DICT=xmlString(Стр.N13);///Тип упаковки
				V_PROD_COVER_MATERIAL=xmlString(Стр.N14);///Материал упаковки
				V_PROD_COVER_EXT_DESC=xmlString(Стр.N15);///Дополнительное описание упаковки
				V_WEB_90001770=xmlString(Стр.N16);///Происхождение сырья
				V_WEB_90001771=xmlString(Стр.N17);///Жирность, %
				V_WEB_90001772=xmlString(Стр.N18);///Продукция для детского питания
				V_WEB_70000164=xmlString(Стр.N19);///Состав
				V_WEB_90001731=xmlString(Стр.N20);///Страна производства
				V_WEB_90000626=xmlString(Стр.N21);///ИНН
				V_CLASS_TNVED=xmlString(Стр.N22);///ТНВЭД
				V_WEB_90001773=xmlString(Стр.N23);///Идентификатор товара в ФГИС ВетИС
				V_WEB_90001813=xmlString(Стр.N24);///Подлежит ветеринарному контролю (надзору)
				V_PROD_CERT_NUMBER=xmlString(Стр.N25);///Номер декларации (сертификата) соответствия
				V_PROD_CERT_TYPE=xmlString(Стр.N26);///Тип документа соответствия
				V_PROD_CERT_ISSUE_DATE=xmlString(Стр.N27);///Дата выдачи декларации (сертификата)
				
				Если Не ЗначениеЗаполнено(V_CLASS_TNVED) Тогда
					Продолжить;
				КонецЕсли;
				
				Попытка
					РезультатОбработки=xmlString(Стр.N28);
				Исключение
					РезультатОбработки="";
				КонецПопытки;
				
			Исключение
				
				V_PROD_NAME_RU=xmlString(Стр.N6);
				V_WEB_90001769=xmlString(Стр.N7);///Тип продукта
				V_WEB_90001838=xmlString(Стр.N8);///Тип продукта (другое)
				V_WEB_90001836="";///Является ли товар весовым
				V_WEB_90001837="";///Диапазон веса, указанный на упаковке
				V_PROD_COUNT=xmlString(Стр.N9);///Заявленный объём/вес нетто
				V_PROD_MEASURE=xmlString(Стр.N10);///Заявленный объём / вес нетто - единица измерения
				V_PROD_COVER_TYPE_DICT=xmlString(Стр.N11);///Тип упаковки
				V_PROD_COVER_MATERIAL=xmlString(Стр.N12);///Материал упаковки
				V_PROD_COVER_EXT_DESC=xmlString(Стр.N13);///Дополнительное описание упаковки
				V_WEB_90001770=xmlString(Стр.N14);///Происхождение сырья
				V_WEB_90001771=xmlString(Стр.N15);///Жирность, %
				V_WEB_90001772=xmlString(Стр.N16);///Продукция для детского питания
				V_WEB_70000164=xmlString(Стр.N17);///Состав
				V_WEB_90001731=xmlString(Стр.N18);///Страна производства
				V_WEB_90000626=xmlString(Стр.N19);///ИНН
				V_CLASS_TNVED=xmlString(Стр.N20);///ТНВЭД
				V_WEB_90001773=xmlString(Стр.N21);///Идентификатор товара в ФГИС ВетИС
				V_WEB_90001813=xmlString(Стр.N22);///Подлежит ветеринарному контролю (надзору)
				V_PROD_CERT_NUMBER=xmlString(Стр.N23);///Номер декларации (сертификата) соответствия
				V_PROD_CERT_TYPE=xmlString(Стр.N24);///Тип документа соответствия
				V_PROD_CERT_ISSUE_DATE=xmlString(Стр.N25);///Дата выдачи декларации (сертификата)
				
				Если Не ЗначениеЗаполнено(V_CLASS_TNVED) Тогда
					Продолжить;
				КонецЕсли;
				
				Попытка
					РезультатОбработки=xmlString(Стр.N26);
				Исключение
					РезультатОбработки="";
				КонецПопытки;
		КонецПопытки;
			//Если Сред(РезультатОбработки,1,1)="<" Или Не ЗначениеЗаполненО(РезультатОбработки) Тогда
			КодТНВЭД=ВернутьКодТНВЭД(V_CLASS_TNVED);
				
				//РезультатОбработки=xmlString(Стр.N17);
			//КонецЕслИ;
			Если ЗначениеЗаполненО(V_PROD_COVER_GTIN) Тогда
				СпрОб=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(V_PROD_COVER_GTIN));
				Если ЗначениеЗаполнено(Спроб) Тогда
					СпрОб=СпрОб.ПолучитьОбъект();
				Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
			Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
			Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Молоко;
				СпрОб.GTIN=V_PROD_COVER_GTIN;
				СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=V_PROD_NAME_RU;
				Если ЗначениеЗаполнено(V_ID_IS) Тогда
					СпрОб.КодВУчетнойСистеме=V_ID_IS;
				КонецЕсли;
				//Если ЗначениеЗаполнено(V_MANUFACTURER_CODE) Тогда
				////	СпрОб.МодельПроизводителяАртикул=V_MANUFACTURER_CODE;
				//КонецЕсли;
				

				ДопРеквизиты_Общиее=Спроб.ДополнительныйРеквизитОбщиеНК;
				Если ЗначениеЗаполненО(ДопРеквизиты_Общиее) тогда
					ДопРеквизиты_Общиее=ДопРеквизиты_Общиее.ПолучитьОбъект();
				Иначе
					ДопРеквизиты_Общиее=Справочники.ДополинтельныеРеквизиты_ДругиеНК_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				
				ДопРеквизиты=Спроб.ДополнительныеРеквизитВода;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_Молоко_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизиты.ТипПродукта=ТипПродукта_Молоко_ХамелеонЦРПТ(V_WEB_90001769);
				ДопРеквизиты.ТипПродуктаДругое=V_WEB_90001838;
				Если Врег(V_WEB_90001836)="ДА" Тогда
					ДопРеквизиты.ТоварВесовой=Истина
				Иначе
					ДопРеквизиты.ТоварВесовой=Ложь
				
				КонецЕсли;
				ДопРеквизиты.ДиапазонВеса=V_WEB_90001837;
				ДопРеквизиты.ЗаявленныйОбъемВесНетто=V_PROD_COUNT;
				ДопРеквизиты.ЕдиницаОбъема=ЕдиницыИзмерения_ХамелеонЦРПТ(V_PROD_MEASURE);
				ДопРеквизиты_Общиее.ТипУпаковки=ТипУпаковки_Молоко_ХамелеонЦРПТ(V_PROD_COVER_TYPE_DICT);
				ДопРеквизиты_Общиее.МатериалУпаковки=МатериалУпаковки_Молоко_ХамелеонЦРПТ(V_PROD_COVER_MATERIAL);
				ДопРеквизиты.ДополнительноеОписаниеУпаковки=V_PROD_COVER_EXT_DESC;
				ДопРеквизиты.ПроисхождениеСырья=ПроисхождениеСырья_Молоко_ХамлеоенЦРПТ(V_WEB_90001770);
				ДопРеквизиты.Жирность=V_WEB_90001771;
				ДопРеквизиты.ПродукцияДляДетскогоПитания =ПродукцияДляДетскогоПитания(V_WEB_90001772);
				ДопРеквизиты.Состав=V_WEB_70000164;
				СПрОб.СтранаПроизводства=ВернутьСтрану(V_WEB_90001731);
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				ДопРеквизиты.ИдентификаторТовараВФГИСМеркурий=V_WEB_90001773;
				Если Врег(V_WEB_90001813)="ДА" Тогда
					ДопРеквизиты.ПодлежитВетеринарномуКонтролю=Истина
				Иначе
					ДопРеквизиты.ПодлежитВетеринарномуКонтролю=ложь;
				КонецЕсли;
				Сертификат=Справочники.Сертификат_ДекларацияСоответствия_ХамелеонЦРПТ.НайтиПоНаименованию(
				 V_PROD_CERT_NUMBER);
				 Если ЗначениеЗаполнено(Сертификат) тогда
					 Сертификат=Сертификат.ПолучитьОбъект();
				 Иначе
					 Сертификат=Справочники.Сертификат_ДекларацияСоответствия_ХамелеонЦРПТ.СоздатьЭлемент();
				  КонецЕсли;
				Сертификат.Наименование=V_PROD_CERT_NUMBER;
				ДатаВыдачи=V_PROD_CERT_ISSUE_DATE;
				Попытка
					Сертификат.ДатаНачалаДействия=Дата(Сред(ДатаВыдачи,1,4),Сред(ДатаВыдачи,6,2),Сред(ДатаВыдачи,9,2));
				Исключение
					Попытка
						Сертификат.ДатаНачалаДействия=Дата(Сред(ДатаВыдачи,7,4),Сред(ДатаВыдачи,4,2),Сред(ДатаВыдачи,1,2));
					исключение
						Попытка
							Сертификат.ДатаНачалаДействия=Дата(1899,12,30)+ДатаВыдачи*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				 Сертификат.ВидСертификатаGSI=ВидСертификатов(V_PROD_CERT_TYPE);
				 Сертификат.Записать();
				
				ДопРеквизиты.Записать();
				
				ДопРеквизиты_Общиее.Записать();
				Спроб.ДополнительныйРеквизитОбщиеНК=ДопРеквизиты_Общиее;
				Спроб.ДополнительныйРеквизитМолоко=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=КодТНВЭД
				;//КонецЕсли;
					//ДобавСтр.Сертификат=Сертификат.Ссылка;

		 
				
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб.Записать();
			КонецЕсли;	
			///	Если Докум.GS1.НайтиСтроки(Новый Структура("GTIN",V_PROD_COVER_GTIN)).Количество()=0 Тогда
				ДобавСтр=Докум.МолокоGS.Добавить();
				ДобавСтр.Пояснение=Пояснение;
				ЗаполнитьЗначенияСвойств(ДобавСтр,Спроб);
				ЗаполнитьЗначенияСвойств(ДобавСтр,ДопРеквизиты);
				ЗаполнитьЗначенияСвойств(ДобавСтр,ДопРеквизиты_Общиее);
				
				
				
				ДобавСтр.Сертификат=Сертификат.Ссылка;
				
				ДобавСтр.НаименованиеТовараНаЭтикетке=Спроб.НаименованиеТовара;
				ДобавСтр.Товар=СпрОб.Ссылка;
				Попытка
					Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,1,4),Сред(V_PUBLICATION_DATE,6,2),Сред(V_PUBLICATION_DATE,9,2));
				Исключение
					Попытка
						Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,7,4),Сред(V_PUBLICATION_DATE,4,2),Сред(V_PUBLICATION_DATE,1,2));
					исключение
						Попытка
							Добавстр.ДатаПубликацииПлан=Дата(1899,12,30)+V_PUBLICATION_DATE*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				ДобавСтр.РезультатОбработкиДанныхВGS46=РезультатОбработки;
				//ДобавСтр.ИННПроизводителяСтрокой=ДобавСтр.ИННПроизводителяИмпортёра.ИНН;
		//	КонецЕсли;
					
			
		Конеццикла;	
		
		
	
	ИначеЕсли НаимСайтВхода="Шины" Тогда
		
	
		Имяекселя_1=ПолучитьИмяВременногоФайла(Расширение);
		
		Дан=ПолучитьИзВременногоХранилища(Адр);
		Дан.Записать(Имяекселя_1);
		ОбластьФайла = Новый ТабличныйДокумент;
		Попытка
			// Выполняется долго на больших файлах.
			ОбластьФайла.Прочитать(Имяекселя_1, СпособЧтенияЗначенийТабличногоДокумента.Значение);
			УдалитьФайлы(Имяекселя_1);
		Исключение
			//Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
			УдалитьФайлы(Имяекселя_1);
			Возврат;
		КонецПопытки;
		
		
		
		КолСтр = ОбластьФайла.ВысотаТаблицы;
		КолКолонок = ОбластьФайла.ШиринаТаблицы;
		
		ТаблицаРезультат = Новый ТаблицаЗначений;
		
		ТаблицаРезультат.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№", 4);
		ТаблицаРезультат.Колонки.Добавить("Сопоставлено", Новый ОписаниеТипов("Булево"), "Сопоставлено", 1);
		
		Для Сч = 1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			ТаблицаРезультат.Колонки.Добавить(ИмяКолонки);
		КонецЦикла;
		
		// 1-я строка. Заголовки.
		НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
		НоваяСтрокаТФ.НомерСтроки = 1;
		Для Сч=1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			НоваяСтрокаТФ[ИмяКолонки] = ОбластьФайла.ПолучитьОбласть("R1" + "C"+нКолонка).ТекущаяОбласть.Текст;
			
			// Используется при формировании таблицы на форме обработки.
			ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
			ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
			ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
		КонецЦикла;
		
		НачСтрока = ?(Не ЗначениеЗаполнено(НачСтрока), 2, НачСтрока);
		КонСтрока = ?(Не ЗначениеЗаполнено(КонСтрока), КолСтр, КонСтрока);
		
		
		
		
		Для нСтрокаТФ = НачСтрока ПО КонСтрока Цикл
			НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
			НоваяСтрокаТФ[0] = нСтрокаТФ;
			нСтрока = СтрЗаменить(нСтрокаТФ, Символы.НПП, "");
			Для Колонка = 1 ПО КолКолонок Цикл
				нКолонка = СтрЗаменить(Колонка, Символы.НПП, "");
				Область = ОбластьФайла.ПолучитьОбласть("R"+нСтрока+"C"+нКолонка);
				ТекущаяОбласть = Область.ТекущаяОбласть;
				Если Колонка=2 Или Колонка=5 Тогда
					ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
					Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
						ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
					Иначе
						ЗначениеЯчейки = Неопределено;
					КонецЕсли;
				Иначе
					Попытка
						ЗначениеЯчейки = xmlString(ТекущаяОбласть.Значение);        // Число, Дата.
					Исключение
						ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
						Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
							ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
						Иначе
							ЗначениеЯчейки = Неопределено;
						КонецЕсли;
					КонецПопытки;
				КонецЕсли;
				ИмяКолонки = "N" + нКолонка;
				НоваяСтрокаТФ[ИмяКолонки] = ЗначениеЯчейки;
				
				// Используется при формировании таблицы на форме обработки.
				ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
				ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
				ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
			КонецЦикла;
		КонецЦикла;
		
		// Юзабилити. Удалить пустые колонки.
	 	
			//	Возврат ТаблицаРезультат;	
		НачинаемЗаписывать=Ложь;
		Для Каждого Стр Из ТаблицаРезультат Цикл
			Если Не НачинаемЗаписывать Тогда
				Попытка
					ГТИНЧисло=Стр.N2;
					Если СокрЛП(ГТИНЧисло)="Цифровое поле" Тогда
						НачинаемЗаписывать=Истина;
					КонецЕсли;
					//Если ГТИНЧисло<=1000000 Тогда
					//	Продолжить;
					//КонецЕсли;
				Исключение
				КонецПопытки;
				Продолжить;
			КонецЕсли;
			
			
			Пояснение=xmlString(Стр.N1);
			Попытка
				V_PROD_COVER_GTIN=Число(Стр.N2);
			Исключение
				V_PROD_COVER_GTIN=0;
			КонецПопытки;
			V_ID_IS=xmlString(Стр.N3);
			V_MANUFACTURER_CODE=xmlString(Стр.N4);
			V_PUBLICATION_DATE=xmlString(Стр.N5);
			V_PROD_DESC_RU=xmlString(Стр.N6);
			Если Не ЗначениеЗаполнено(V_PROD_DESC_RU) Тогда
				Продолжить;
			КонецЕсли;
			V_PROD_NAME_RU=xmlString(Стр.N7);
			V_WEB_90001783=xmlString(Стр.N8);///Модель шины
			V_WEB_90001784=xmlString(Стр.N9);///ширина профиля
			V_WEB_90001785=xmlString(Стр.N10);///Единица измерения
			V_WEB_90001786=xmlString(Стр.N11);///Номинальное отношение
			V_WEB_90001787=xmlString(Стр.N12);///Тип конструкции
			V_WEB_90001788=xmlString(Стр.N13);///Номинальный посадочный диаметр
			V_WEB_90001789=xmlString(Стр.N14);///Индекс нагрузки
			V_WEB_90001835=xmlString(Стр.N15);///Индекс нагрузки другое
			V_WEB_90001790=xmlString(Стр.N16);///Категории скорости
			V_WEB_90001791=xmlString(Стр.N17);///Сезонност
			V_WEB_90001792=xmlString(Стр.N18);///Тип шины
			V_CLASS_TNVED=xmlString(Стр.N19);///ТНВЭД
			
			Если Не ЗначениеЗаполнено(V_CLASS_TNVED) Тогда
				Продолжить;
			КонецЕсли;
			
			Попытка
				РезультатОбработки=xmlString(Стр.N20);
			Исключение
				РезультатОбработки="";
			КонецПопытки;
			//Если Сред(РезультатОбработки,1,1)="<" Или Не ЗначениеЗаполненО(РезультатОбработки) Тогда
			КодТНВЭД=ВернутьКодТНВЭД(V_CLASS_TNVED);
				
				//РезультатОбработки=xmlString(Стр.N17);
			//КонецЕслИ;
			Если ЗначениеЗаполненО(V_PROD_COVER_GTIN) Тогда
				СпрОб=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(V_PROD_COVER_GTIN));
				Если ЗначениеЗаполнено(Спроб) Тогда
					СпрОб=СпрОб.ПолучитьОбъект();
				Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
			Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
			Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Шины;
				СпрОб.GTIN=V_PROD_COVER_GTIN;
				СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=V_PROD_NAME_RU;
				Если ЗначениеЗаполнено(V_ID_IS) Тогда
					СпрОб.КодВУчетнойСистеме=V_ID_IS;
				КонецЕсли;
				Если ЗначениеЗаполнено(V_MANUFACTURER_CODE) Тогда
					СпрОб.МодельПроизводителяАртикул=V_MANUFACTURER_CODE;
				КонецЕсли;
				

				
				ДопРеквизиты=Спроб.ДополнительныйРеквизитШины;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизиты.МодельШины=V_WEB_90001783;
				ДопРеквизиты.ШиринаПрофиляШины=V_WEB_90001784;
				ДопРеквизиты.ЕдиницаИзмерения=ЕдиницаИзмерения_Шины(V_WEB_90001785);
				ДопРеквизиты.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине=НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине(V_WEB_90001786);
				ДопРеквизиты.ТипКонструкцииКаркасаШины=ТипКонструкцииКаркасаШины(V_WEB_90001787);
				ДопРеквизиты.ПосадочныйДиамтерОбода=V_WEB_90001788;
				
				ДопРеквизиты.ИндексНагрузкиНаШину=ИндексНагрузкиНаШину(V_WEB_90001789);
				ДопРеквизиты.ИндексНагрузкиНаШинуДругое=V_WEB_90001835;
				ДопРеквизиты.КатегорияСкорости=КатегорияСкорости(V_WEB_90001790);
				ДопРеквизиты.Сезонность=Сезонность(V_WEB_90001791);
				ДопРеквизиты.ТипШиныПоСпособуГерметизации=ТипШиныПоСпособуГерметизации(V_WEB_90001792);
				ДопРеквизиты.Записать();
				Спроб.ДополнительныйРеквизитШины=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=КодТНВЭД
				;//КонецЕсли;
		 
				
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб.Записать();
			КонецЕсли;	
			///	Если Докум.GS1.НайтиСтроки(Новый Структура("GTIN",V_PROD_COVER_GTIN)).Количество()=0 Тогда
				ДобавСтр=Докум.Шины.Добавить();
				ДобавСтр.Пояснение=Пояснение;
				ЗаполнитьЗначенияСвойств(ДобавСтр,Спроб);
				ЗаполнитьЗначенияСвойств(ДобавСтр,ДопРеквизиты);
				ДобавСтр.НоминальныйПосадочныйДиаметрОбода=ДопРеквизиты.ПосадочныйДиамтерОбода;
				
				ДобавСтр.НаименованиеТовараНаЭтикетке=Спроб.НаименованиеТовара;
				ДобавСтр.Товар=СпрОб.Ссылка;
				Попытка
					Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,1,4),Сред(V_PUBLICATION_DATE,6,2),Сред(V_PUBLICATION_DATE,9,2));
				Исключение
					Попытка
						Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,7,4),Сред(V_PUBLICATION_DATE,4,2),Сред(V_PUBLICATION_DATE,1,2));
					исключение
						Попытка
							Добавстр.ДатаПубликацииПлан=Дата(1899,12,30)+V_PUBLICATION_DATE*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				ДобавСтр.РезультатОбработкиДанныхВGS46=РезультатОбработки;
				//ДобавСтр.ИННПроизводителяСтрокой=ДобавСтр.ИННПроизводителяИмпортёра.ИНН;
		//	КонецЕсли;
					
			
		Конеццикла;	
		
			
	
	Иначе
		
		Имяекселя_1=ПолучитьИмяВременногоФайла(Расширение);
		
		Дан=ПолучитьИзВременногоХранилища(Адр);
		Дан.Записать(Имяекселя_1);
		ОбластьФайла = Новый ТабличныйДокумент;
		Попытка
			// Выполняется долго на больших файлах.
			ОбластьФайла.Прочитать(Имяекселя_1, СпособЧтенияЗначенийТабличногоДокумента.Значение);
			УдалитьФайлы(Имяекселя_1);
		Исключение
			//Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
			УдалитьФайлы(Имяекселя_1);
			Возврат;
		КонецПопытки;
		
		
		
		КолСтр = ОбластьФайла.ВысотаТаблицы;
		КолКолонок = ОбластьФайла.ШиринаТаблицы;
		
		ТаблицаРезультат = Новый ТаблицаЗначений;
		
		ТаблицаРезультат.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№", 4);
		ТаблицаРезультат.Колонки.Добавить("Сопоставлено", Новый ОписаниеТипов("Булево"), "Сопоставлено", 1);
		
		Для Сч = 1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			ТаблицаРезультат.Колонки.Добавить(ИмяКолонки);
		КонецЦикла;
		
		// 1-я строка. Заголовки.
		НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
		НоваяСтрокаТФ.НомерСтроки = 1;
		Для Сч=1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
			ИмяКолонки = "N" + нКолонка;
			НоваяСтрокаТФ[ИмяКолонки] = ОбластьФайла.ПолучитьОбласть("R1" + "C"+нКолонка).ТекущаяОбласть.Текст;
			
			// Используется при формировании таблицы на форме обработки.
			ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
			ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
			ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
		КонецЦикла;
		
		НачСтрока = ?(Не ЗначениеЗаполнено(НачСтрока), 2, НачСтрока);
		КонСтрока = ?(Не ЗначениеЗаполнено(КонСтрока), КолСтр, КонСтрока);
		
		УжеБылаПустаяСтрока=Ложь;
		Если Найти(СокрЛП(ОбластьФайла.ПолучитьОбласть("R"+3+"C"+16).ТекущаяОбласть.Текст),"Результат обработки данных в GS46")>0
			ИЛИ Найти(СокрЛП(ОбластьФайла.ПолучитьОбласть("R"+3+"C"+9).ТекущаяОбласть.Текст),"Страна производства")>0
			Тогда
		Для нСтрокаТФ = НачСтрока ПО КонСтрока Цикл
			НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
			НоваяСтрокаТФ[0] = нСтрокаТФ;
			нСтрока = СтрЗаменить(нСтрокаТФ, Символы.НПП, "");
			
			ПустаяСтрока=Истина;
			
			Для Колонка = 1 ПО КолКолонок Цикл
				нКолонка = СтрЗаменить(Колонка, Символы.НПП, "");
				Область = ОбластьФайла.ПолучитьОбласть("R"+нСтрока+"C"+нКолонка);
				ТекущаяОбласть = Область.ТекущаяОбласть;
				Если Колонка=2 Или Колонка=5 Тогда
					ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
					Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
						ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
					Иначе
						ЗначениеЯчейки = Неопределено;
					КонецЕсли;
				Иначе
					Попытка
						ЗначениеЯчейки = xmlString(ТекущаяОбласть.Значение);        // Число, Дата.
					Исключение
						ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
						Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
							ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
						Иначе
							ЗначениеЯчейки = Неопределено;
						КонецЕсли;
					КонецПопытки;
				КонецЕсли;
				ИмяКолонки = "N" + нКолонка;
				НоваяСтрокаТФ[ИмяКолонки] = ЗначениеЯчейки;
				
				// Используется при формировании таблицы на форме обработки.
				ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
				ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
				ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
				Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
					 ПустаяСтрока=Ложь;
				Конецесли;
				
			КонецЦикла;
			Если Пустаястрока=Истина И УжеБылаПустаяСтрока=Истина Тогда
				Прервать;
			ИначеЕсли Пустаястрока=Истина Тогда
				УжеБылаПустаяСтрока=Истина
				
			Конецесли;
		КонецЦикла;
		
		// Юзабилити. Удалить пустые колонки.
	 	
			//	Возврат ТаблицаРезультат;	
		Докум.GS1.Очистить();
		НачинаемЗаписывать=Ложь;
		Для Каждого Стр Из ТаблицаРезультат Цикл
			Если Не НачинаемЗаписывать Тогда
				Попытка
					ГТИНЧисло=Стр.N2;
					Если СокрЛП(ГТИНЧисло)="Цифровое поле" Тогда
						НачинаемЗаписывать=Истина;
					КонецЕсли;
					//Если ГТИНЧисло<=1000000 Тогда
					//	Продолжить;
					//КонецЕсли;
				Исключение
				КонецПопытки;
				Продолжить;
			КонецЕсли;
			
			
			Пояснение=xmlString(Стр.N1);
			Попытка
				V_PROD_COVER_GTIN=Число(Стр.N2);
			Исключение
				V_PROD_COVER_GTIN=0;
			КонецПопытки;
			V_ID_IS=xmlString(Стр.N3);
			V_MANUFACTURER_CODE=xmlString(Стр.N4);
			V_PUBLICATION_DATE=xmlString(Стр.N5);
			V_PROD_DESC_RU=xmlString(Стр.N6);
			Если Не ЗначениеЗаполнено(V_PROD_DESC_RU) Тогда
				Продолжить;
			КонецЕсли;
			V_PROD_NAME_RU=xmlString(Стр.N7);
			V_WEB_90000626=xmlString(Стр.N8);///ИНН
			V_WEB_90000187=xmlString(Стр.N9);///страна
			V_WEB_90001683=xmlString(Стр.N10);///Вид обуви
			V_WEB_90001685=xmlString(Стр.N11);///Материал вверха
			V_WEB_90001686=xmlString(Стр.N12);///Материал подладки
			V_WEB_90001687=xmlString(Стр.N13);///Материал низа
			V_WEB_90001688=xmlString(Стр.N14);///Цвет
			V_WEB_90001690=xmlString(Стр.N15);///Размер
			Попытка
				РезультатОбработки=xmlString(Стр.N16);
			Исключение
				РезультатОбработки="";
			КонецПопытки;
			Если Сред(РезультатОбработки,1,1)="<" Или  ЗначениеЗаполненО(РезультатОбработки) Тогда
				КодТНВЭД=ВернутьКодТНВЭД(РезультатОбработки);
			Попытка	
				РезультатОбработки=xmlString(Стр.N17);
			Исключение
РезультатОбработки="";				
			КонецПопытки;
			
			КонецЕслИ;
			Если ЗначениеЗаполненО(V_PROD_COVER_GTIN) Тогда
				СпрОб=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(V_PROD_COVER_GTIN));
				Если Спроб=Справочники.Продукция_ХамелеонЦРПТ.ПустаяСсылка() Тогда
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
					
				Иначе
					СпрОб=СпрОб.ПолучитьОбъект();
				КонецЕсли;
			Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
			КонецеслИ;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Обувь;
				СпрОб.GTIN=V_PROD_COVER_GTIN;
				СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
				Спроб.БрендТорговаяМарка=V_PROD_NAME_RU;
				СпрОб.ВидОбуви=ВидОбуви_ХамелеонЦРПТ(V_WEB_90001683);
				СпрОб.ИННПроизводителяИмпортёра=ВернутьПроизводителя(V_WEB_90000626);
				Если ЗначениеЗаполнено(V_ID_IS) Тогда
					СпрОб.КодВУчетнойСистеме=V_ID_IS;
				КонецЕсли;
				СпрОб.МатериалВерха=V_WEB_90001685;
				СпрОб.МатериалНиза=V_WEB_90001687;
				СпрОб.МатериалПодкладки=V_WEB_90001686;
				СпрОб.МодельПроизводителяАртикул=V_MANUFACTURER_CODE;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				СпрОб.СтранаПроизводства=ВернутьСтрану(V_WEB_90000187);
				СпрОб.Цвет=V_WEB_90001688;
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=КодТНВЭД
				;//КонецЕсли;
		
				СпрОб.Размер=РазмерСправочник(V_WEB_90001690);
				
				
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб.Записать();
			КонецЕсли;	
			///	Если Докум.GS1.НайтиСтроки(Новый Структура("GTIN",V_PROD_COVER_GTIN)).Количество()=0 Тогда
				ДобавСтр=Докум.GS1.Добавить();
				ДобавСтр.Пояснение=Пояснение;
				ЗаполнитьЗначенияСвойств(ДобавСтр,Спроб);
				
				Если ЗначениеЗаполнено(V_WEB_90001690) Тогда
					ДобавСтр.РазмерВШтихмассовойСистеме=РазмерСправочник(V_WEB_90001690);
				КонецЕсли;
				ДобавСтр.НаименованиеТовараНаЭтикетке=Спроб.НаименованиеТовара;
				ДобавСтр.Товар=СпрОб.Ссылка;
				Попытка
					Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,1,4),Сред(V_PUBLICATION_DATE,6,2),Сред(V_PUBLICATION_DATE,9,2));
				Исключение
					Попытка
						Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,7,4),Сред(V_PUBLICATION_DATE,4,2),Сред(V_PUBLICATION_DATE,1,2));
					исключение
						Попытка
							Добавстр.ДатаПубликацииПлан=Дата(1899,12,30)+V_PUBLICATION_DATE*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				ДобавСтр.РезультатОбработкиДанныхВGS46=РезультатОбработки;
				ДобавСтр.ИННПроизводителяСтрокой=ДобавСтр.ИННПроизводителяИмпортёра.ИНН;
		//	КонецЕсли;
		
		Если КолКолонок>=18 Тогда
			Попытка
				ДобавСтр.КоличествоКМ=Стр.N18
			Исключение
			КонецПопытки;
		КонецеслИ;
		
		
		Конеццикла;	
		
			
			
		Иначе
		
		
		Для нСтрокаТФ = НачСтрока ПО КонСтрока Цикл
			НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
			НоваяСтрокаТФ[0] = нСтрокаТФ;
			нСтрока = СтрЗаменить(нСтрокаТФ, Символы.НПП, "");
			Для Колонка = 1 ПО КолКолонок Цикл
				нКолонка = СтрЗаменить(Колонка, Символы.НПП, "");
				Область = ОбластьФайла.ПолучитьОбласть("R"+нСтрока+"C"+нКолонка);
				ТекущаяОбласть = Область.ТекущаяОбласть;
				Если Колонка=2 Или Колонка=5 Тогда
					ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
					Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
						ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
					Иначе
						ЗначениеЯчейки = Неопределено;
					КонецЕсли;
				Иначе
					Попытка
						ЗначениеЯчейки = xmlString(ТекущаяОбласть.Значение);        // Число, Дата.
					Исключение
						ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
						Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
							ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
						Иначе
							ЗначениеЯчейки = Неопределено;
						КонецЕсли;
					КонецПопытки;
				КонецЕсли;
				ИмяКолонки = "N" + нКолонка;
				НоваяСтрокаТФ[ИмяКолонки] = ЗначениеЯчейки;
				
				// Используется при формировании таблицы на форме обработки.
				ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
				ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
				ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
			КонецЦикла;
		КонецЦикла;
		
		// Юзабилити. Удалить пустые колонки.
	 	
			//	Возврат ТаблицаРезультат;	
		Докум.GS1.Очистить();
		НачинаемЗаписывать=Ложь;
		Для Каждого Стр Из ТаблицаРезультат Цикл
			Если Не НачинаемЗаписывать Тогда
				Попытка
					ГТИНЧисло=Стр.N2;
					Если СокрЛП(ГТИНЧисло)="Цифровое поле" Тогда
						НачинаемЗаписывать=Истина;
					КонецЕсли;
					//Если ГТИНЧисло<=1000000 Тогда
					//	Продолжить;
					//КонецЕсли;
				Исключение
				КонецПопытки;
				Продолжить;
			КонецЕсли;
			
			
			Пояснение=xmlString(Стр.N1);
			Попытка
				V_PROD_COVER_GTIN=Число(Стр.N2);
			Исключение
				V_PROD_COVER_GTIN=0;
			КонецПопытки;
			V_ID_IS=xmlString(Стр.N3);
			V_MANUFACTURER_CODE=xmlString(Стр.N4);
			V_PUBLICATION_DATE=xmlString(Стр.N5);
			V_PROD_DESC_RU=xmlString(Стр.N6);
			Если Не ЗначениеЗаполнено(V_PROD_DESC_RU) Тогда
				Продолжить;
			КонецЕсли;
			V_PROD_NAME_RU=xmlString(Стр.N7);
			V_WEB_90000626=xmlString(Стр.N8);///ИНН
			//V_WEB_90000187=xmlString(Стр.N9);///страна
			V_WEB_90001683=xmlString(Стр.N9);///Вид обуви
			КодТНВЭД=xmlString(Стр.N10);///Материал вверха
			V_WEB_90001685=xmlString(Стр.N11);///Материал вверха
			V_WEB_90001686=xmlString(Стр.N12);///Материал подладки
			V_WEB_90001687=xmlString(Стр.N13);///Материал низа
			
			ДатаВводВоборот=xmlString(стр.N14);
			МатериалСтельки=xmlString(стр.N15);
			V_WEB_90000187=xmlString(Стр.N16);///страна
			
			V_WEB_90001688=xmlString(Стр.N17);///Цвет
			V_WEB_90001690=xmlString(Стр.N18);///Размер
			
			
			НомерДекларации=xmlString(Стр.N19);
			Тип=xmlString(Стр.N20);
			ДатаВыдачи=xmlString(Стр.N21);
			
			Попытка
				РезультатОбработки=xmlString(Стр.N22);
			Исключение
				РезультатОбработки="";
			КонецПопытки;
			Если ЗначениеЗаполненО(V_PROD_COVER_GTIN) Тогда
				СпрОб=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(V_PROD_COVER_GTIN));
				Если ЗначениеЗаполнено(Спроб) Тогда
					
					СпрОб=СпрОб.ПолучитьОбъект();
				Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
			Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
			Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Обувь;
				СпрОб.GTIN=V_PROD_COVER_GTIN;
				СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
				Спроб.БрендТорговаяМарка=V_PROD_NAME_RU;
				СпрОб.ВидОбуви=ВидОбуви_ХамелеонЦРПТ(V_WEB_90001683);
				СпрОб.ИННПроизводителяИмпортёра=ВернутьПроизводителя(V_WEB_90000626);
				СпрОб.КодВУчетнойСистеме=V_ID_IS;
				СпрОб.МатериалВерха=V_WEB_90001685;
				СпрОб.МатериалНиза=V_WEB_90001687;
				СпрОб.МатериалПодкладки=V_WEB_90001686;
				СпрОб.МодельПроизводителяАртикул=V_MANUFACTURER_CODE;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				СпрОб.СтранаПроизводства=ВернутьСтрану(V_WEB_90000187);
				СпрОб.Цвет=V_WEB_90001688;
				спроб.Стелька=МатериалСтельки;
				СпрОб.Размер=РазмерСправочник(V_WEB_90001690);
				КодТНВЭД=ВернутьКодТНВЭД(КодТНВЭД);
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=КодТНВЭД
				;//КонецЕсли;
				
				Сертификат=Справочники.Сертификат_ДекларацияСоответствия_ХамелеонЦРПТ.НайтиПоНаименованию(
				 НомерДекларации);
				 Если ЗначениеЗаполнено(Сертификат) тогда
					 Сертификат=Сертификат.ПолучитьОбъект();
				 Иначе
					 Сертификат=Справочники.Сертификат_ДекларацияСоответствия_ХамелеонЦРПТ.СоздатьЭлемент();
				  КонецЕсли;
				Сертификат.Наименование=НомерДекларации;
				Попытка
					Сертификат.ДатаНачалаДействия=Дата(Сред(ДатаВыдачи,1,4),Сред(ДатаВыдачи,6,2),Сред(ДатаВыдачи,9,2));
				Исключение
					Попытка
						Сертификат.ДатаНачалаДействия=Дата(Сред(ДатаВыдачи,7,4),Сред(ДатаВыдачи,4,2),Сред(ДатаВыдачи,1,2));
					исключение
						Попытка
							Сертификат.ДатаНачалаДействия=Дата(1899,12,30)+ДатаВыдачи*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				 Сертификат.ВидСертификатаGSI=ВидСертификатов(Тип);
				 Сертификат.Записать();
				 
				
			Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб.Записать();
			КонецЕсли;	
			///	Если Докум.GS1.НайтиСтроки(Новый Структура("GTIN",V_PROD_COVER_GTIN)).Количество()=0 Тогда
				ДобавСтр=Докум.GS1.Добавить();
				ДобавСтр.Пояснение=Пояснение;
				ЗаполнитьЗначенияСвойств(ДобавСтр,Спроб);
				
				Если ЗначениеЗаполнено(V_WEB_90001690) Тогда
					ДобавСтр.РазмерВШтихмассовойСистеме=РазмерСправочник(V_WEB_90001690);
				КонецЕсли;
				ДобавСтр.НаименованиеТовараНаЭтикетке=Спроб.НаименованиеТовара;
				ДобавСтр.Товар=СпрОб.Ссылка;
				Попытка
					Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,1,4),Сред(V_PUBLICATION_DATE,6,2),Сред(V_PUBLICATION_DATE,9,2));
				Исключение
					Попытка
						Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,7,4),Сред(V_PUBLICATION_DATE,4,2),Сред(V_PUBLICATION_DATE,1,2));
					исключение
						Попытка
							Добавстр.ДатаПубликацииПлан=Дата(1899,12,30)+V_PUBLICATION_DATE*60*60*24
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;
				ДобавСтр.РезультатОбработкиДанныхВGS46=РезультатОбработки;
				ДобавСтр.ИННПроизводителяСтрокой=ДобавСтр.ИННПроизводителяИмпортёра.ИНН;
				ДобавСтр.Сертификат=Сертификат.Ссылка;
		//	КонецЕсли;
					
			
		Конеццикла;	
		КонецЕсли;
	КонецЕсли;
	
	
	ТаблицаДляАнализа=Новый Массив;
	Если Докум.GS1.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.GS1
	ИначеЕсли Докум.Шины.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.Шины
	ИначеЕсли Докум.МолокоGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.МолокоGS
	ИначеЕсли Докум.ПарфюмGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.ПарфюмGS
	ИначеЕсли Докум.ВелосипедыGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.ВелосипедыGS
	ИначеЕсли Докум.ОдеждаGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.ОдеждаGS
	ИначеЕсли Докум.ФотоGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.ФотоGS
	ИначеЕсли Докум.БельеGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.БельеGS
	ИначеЕсли Докум.РамыGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.РамыGS
	ИначеЕсли Докум.КоляскиGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.КоляскиGS
	ИначеЕсли Докум.АльтернативныйТабакGS.Количество()>0 Тогда
		ТаблицаДляАнализа=Докум.АльтернативныйТабакGS
		
	Конецесли;
	Сч=0;
	Для Каждого Стр_1 Из ТаблицаДляАнализа Цикл
		Сч=Сч+1;
		Если Сч>ТаблицаКоличествоКМ.Количество() Тогда
			Прервать;
		Конецесли;
		Стр_1.КоличествоКМ=ТаблицаКоличествоКМ[Сч-1];
		
		
		//ТаблицаКоличествоКМ.Добавить(Стр_1.КоличествоКМ);
	Конеццикла;
	

	
КонецПроцедуры


Функция ДополнитьСтроку_11(Знач Стр, Длина, Чем=" ", Режим = 0) Экспорт
	
	СимволовДополнить = Длина -  СтрДлина(Стр);
	Добавок = "";
	Для Н=1 по СимволовДополнить Цикл
		Добавок =	Добавок + Чем;
	КонецЦикла;
	Возврат ?(Режим=0, Добавок + Стр, Стр + Добавок);
	
КонецФункции 

Процедура ЗаписатьКодыТНВЭД(Шаблон,ТИпПродукции)
	Текст=Справочники.КодТНВЭД_ХамелеонЦРПТ.ПолучитьМакет(Шаблон).ПолучитьТекст();
	NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст);
	Для Каждого Стр_1 ИЗ NNN.records Цикл
		
		СпрК=Справочники.КодТНВЭД_ХамелеонЦРПТ.НайтиПоКоду(Стр_1.code);
		Если ЗначениеЗаполнено(СпрК) Тогда
			СпрК=СПрК.ПолучитьОбъект();
		Иначе
			СпрК=Справочники.КодТНВЭД_ХамелеонЦРПТ.СоздатьЭлемент();
			СпрК.Код=Стр_1.code;
		КонецЕсли;
		СпрК.Наименование=Стр_1.description;
		СпрК.НаименованиеПолное=Стр_1.description;
		СпрК.ТипПродукции=ТИпПродукции;
		СпрК.Записать();
		
	Конеццикла;
	
	
КонецПроцедуры

Процедура ОбновитьСправочникиТНВЭД(Кто) Экспорт
	
	Если Кто="Молоко"	 Тогда
		ЗаписатьКодыТНВЭД("Молоко",Перечисления.ТипПродукции_ХамелеонЦРПТ.Молоко);
	ИначеЕсли Кто="Обувь" Тогда
		ЗаписатьКодыТНВЭД("Обувь",Перечисления.ТипПродукции_ХамелеонЦРПТ.Обувь);
	ИначеЕсли Кто="Шины" Тогда
		ЗаписатьКодыТНВЭД("Шины",Перечисления.ТипПродукции_ХамелеонЦРПТ.Шины);
	ИначеЕсли Кто="Фото" Тогда
		ЗаписатьКодыТНВЭД("Фото",Перечисления.ТипПродукции_ХамелеонЦРПТ.Фото);
	ИначеЕсли Кто="Парфюм" Тогда
		ЗаписатьКодыТНВЭД("Духи",Перечисления.ТипПродукции_ХамелеонЦРПТ.Парфюм);
	ИначеЕсли Кто="Питьевая вода" Тогда
		ЗаписатьКодыТНВЭД("Вода",Перечисления.ТипПродукции_ХамелеонЦРПТ.ПитьеваяВода);
	ИначеЕсли Кто="Велосипеды" Тогда
		ЗаписатьКодыТНВЭД("Велосипеды",Перечисления.ТипПродукции_ХамелеонЦРПТ.Велосипеды);
	ИначеЕсли Кто="Одежда" Тогда
		ЗаписатьКодыТНВЭД("Одежда",Перечисления.ТипПродукции_ХамелеонЦРПТ.Одежда);
	ИначеЕсли Кто="Кресла-коляски" Тогда
		ЗаписатьКодыТНВЭД("КреслаКоляски",Перечисления.ТипПродукции_ХамелеонЦРПТ.КреслаКоляски);
	ИначеЕсли Кто="Пиво" Тогда
		ЗаписатьКодыТНВЭД("Пиво",Перечисления.ТипПродукции_ХамелеонЦРПТ.Пиво);
	ИначеЕсли Кто="Табак" ИЛИ Кто="Альтернативный табак" Тогда
		ЗаписатьКодыТНВЭД_МакетТабл("АльтернативныйТабак",Перечисления.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак);
		//ЗаписатьКодыТНВЭД_МакетТабл("АльтернативныйТабак",Перечисления.ТипПродукции_ХамелеонЦРПТ.Табак);
	КонецЕсли;
	
	
КонецПроцедуры



Процедура ЗаписатьКодыТНВЭД_МакетТабл(Мак,Тип)
	Макет_1=Справочники.КодТНВЭД_ХамелеонЦРПТ.ПолучитьМакет(Мак);
	Таб=Новый ТабличныйДокумент;
	//ОбластьМакета=Макет_1.ПолучитьОбласть("Кодвида");
	Таб.Вывести(Макет_1);
	
	Для Сч=1 По Таб.ВысотаТаблицы Цикл
		Если ЗначениеЗАполнено(Таб.Область(Сч,1).Текст) Тогда
			
			ВернутьКодТНВЭД(Таб.Область(Сч,1).Текст);
		//	
		//	Код=СокрЛП(Таб.Область(Сч,1).Текст);
		//	Наименование=СокрЛП(Таб.Область(Сч,2).Текст);
		//СпрК=Справочники.КодТНВЭД_ХамелеонЦРПТ.НайтиПоКоду(Код);
		//Если ЗначениеЗаполнено(СпрК) Тогда
		//	СпрК=СПрК.ПолучитьОбъект();
		//Иначе
		//	СпрК=Справочники.КодТНВЭД_ХамелеонЦРПТ.СоздатьЭлемент();
		//	СпрК.Код=Код;
		//КонецЕсли;
		//СпрК.Наименование=Наименование;
		//СпрК.НаименованиеПолное=Наименование;
		//СпрК.ТипПродукции=ТИп;
		//СпрК.Записать();
		//
			
			
		КонецЕсли;
		//Продукция=Таб.Область(Сч,1).Текст;
		//Наименование=Таб.Область(Сч,2).Текст;
		//Стр=КодыВидов.Добавить();
		//Стр.КодВида=КодВида;
		//Стр.НаименованиеВида=Наименование;
	КонецЦикла;
	

	
КонецПроцедуры


Функция ПолучитьИзПользователя(ТекущийПользователь,ТекСайт="") Экспорт
	
	Настройки=РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить();
	ПараметрыДлякилента=Новый Структура("Thumbprint_1,Pin",ТекущийПользователь.СертификатТумбер,ТекущийПользователь.PIN);
	
	ПараметрыДлякилента.Вставить("ИдентификаторСоединения",ТекущийПользователь.ИдентификаторСоединения);
	ПараметрыДлякилента.Вставить("СУЗПоНовомуДинамическийТокен",ТекущийПользователь.Организация.СУЗПоНовомуДинамическийТокен);
	ПараметрыДлякилента.Вставить("ПарольПрокси",ТекущийПользователь.ПарольПрокси);
	
	
	ПараметрыДлякилента.Вставить("Пользователь",ТекущийПользователь.Логин);
	ПараметрыДлякилента.Вставить("Пароль",ТекущийПользователь.Пароль);
	Если    ТекущийПользователь.Сайт=Перечисления.Сайты_ХамелеонЦРПТ.Обувь Тогда
		ТекСайт=Строка(Перечисления.Сайты_ХамелеонЦРПТ.Обувь);
	Иначе
		ПараметрыДлякилента.Вставить("Пользователь","");
		ПараметрыДлякилента.Вставить("Пароль","");
		
	КонецЕсли;
	ПараметрыДлякилента.Вставить("СайтКСУЗ",ТекущийПользователь.СайтыВходаВСистему.ДоступПоСУЗ);
	
	ПараметрыДлякилента.Вставить("ТекущийПользователь",ТекущийПользователь.Ссылка);
	
	ПараметрыДлякилента.Вставить("ТипПеремаркировки",ТекущийПользователь.ТипПеремаркировки);
	
	
	Если ТекущийПользователь.ПолучитьТокен=Перечисления.ТипПолученияТокенаИзПользователя_ХамелеонЦРПТ.ИзПараметра 
		Или не ЗначениеЗаполнено(ТекущийПользователь.ПолучитьТокен) 
		Тогда
		
		ПараметрыДлякилента.Вставить("БратьСертификатНасервере",Настройки.ПолучитьТокенНаСервере
		ИЛИ Настройки.ОбработкаWEBНаСервере
		);
	ИначеЕсли ТекущийПользователь.ПолучитьТокен=Перечисления.ТипПолученияТокенаИзПользователя_ХамелеонЦРПТ.НаСервере Тогда
		
		ПараметрыДлякилента.Вставить("БратьСертификатНасервере",Истина);
	Иначе	
		ПараметрыДлякилента.Вставить("БратьСертификатНасервере",Ложь);
	
	Конецесли;
	
	

	
	
	ПараметрыДлякилента.Вставить("АдресПрокси",ТекущийПользователь.АдресПрокси);
	ПараметрыДлякилента.Вставить("ПортПрокси",ТекущийПользователь.ПортПрокси);
	ПараметрыДлякилента.Вставить("ПользовательПрокси",ТекущийПользователь.ПользовательПрокси);
	ПараметрыДлякилента.Вставить("ПарольПрокси",ТекущийПользователь.ПарольПрокси);
	ПараметрыДлякилента.Вставить("РегисстрационныйНомер",ТекущийПользователь.РегисстрационныйНомер);
	ПараметрыДлякилента.Вставить("ИдентификаторКлиентаМДЛП",ТекущийПользователь.ИдентификаторКлиентаМДЛП);
	ПараметрыДлякилента.Вставить("СекретныйКодМДЛП",ТекущийПользователь.СекретныйКодМДЛП);
	
	ПараметрыДлякилента.Вставить("ЛогинСБ",ТекущийПользователь.ЛогинДляСБ);
	ПараметрыДлякилента.Вставить("ПарольСБ",ТекущийПользователь.ПарольДляСБ);
	ПараметрыДлякилента.Вставить("ЛогинКонтур",ТекущийПользователь.ЛогинКонтур);
	ПараметрыДлякилента.Вставить("ПарольКонтур",ТекущийПользователь.ПарольКонтур);
//	ПараметрыДлякилента.Вставить("ТипПродукции",ТекущийПользователь.СайтыВходаВСистему.ТипПродукции);

Если Константы.РежимРаботыХамелеонЦРПТ.Получить()=1 Тогда
		ПараметрыДлякилента.Вставить("АдресДляПолученияТокена","markirovka.crpt.ru");
Иначе
		ПараметрыДлякилента.Вставить("АдресДляПолученияТокена","markirovka.sandbox.crpt.tech");
	
	КонецЕсли;
	
	ПараметрыДлякилента.Вставить("АдресСУЗ",ТекущийПользователь.АдресСайтаСУЗ);
	ПараметрыДлякилента.Вставить("ПользовательСУЗ",ТекущийПользователь.ПользовательСУЗ);
	ПараметрыДлякилента.Вставить("ПарольСУЗ",ТекущийПользователь.ПарольСУЗ);
	ПараметрыДлякилента.Вставить("ТокенСУЗ",ТекущийПользователь.ТокенКСУЗ);
	ПараметрыДлякилента.Вставить("ИдентификаторСУЗ",ТекущийПользователь.ИдентификаторСУЗ);
	ПараметрыДлякилента.Вставить("Таймаут",Настройки.ТаймаутОжиданияОтСайта);
	ПараметрыДлякилента.Вставить("omsConnection",ТекущийПользователь.omsConnection);
	ПараметрыДлякилента.Вставить("ТокенПоОтпечатку",
	Регистрысведений.ТокенПоСертификату_ХамелеонЦРПТ.Получить(Новый Структура("Отпечаток",ТекущийПользователь.СертификатТумбер)).Токен);

	ПараметрыДлякилента.Вставить("ПолучениеТокенаСУЗЧерезИдентификаторРазработчика",Настройки.ПолучениеТокенаСУЗЧерезИдентификаторРазработчика);
	ПараметрыДлякилента.Вставить("АдресРегистрацииПечатиКМ",ТекущийПользователь.АдресРегистрацииУчтенойСистемы);
	
	
	
	РежимР=Константы.РежимРаботыХамелеонЦРПТ.Получить();
	Если РежимР=2 Тогда
		ПараметрыДлякилента.Вставить("ПараметрРаботы","Тестовый");
		
		ПараметрыДлякилента.Вставить("АдресКАПИ",ТекущийПользователь.СайтыВходаВСистему.ТестовыйСтенд);
		
		
		ПараметрыДлякилента.Вставить("КаталогСайт","account.integrators.nk.crpt.tech");
		ПараметрыДлякилента.Вставить("КаталогСайтAPI","api.integrators.nk.crpt.tech");
		ПараметрыДлякилента.Вставить("КлючAPIККМТ",ТекущийПользователь.КлючДляРаботыСНК);
		//ПараметрыДлякилента.Вставить("КлючAPIККМТ","");
		

		ПараметрыДлякилента.Вставить("МобильныйСайтДляПолученияИсходящих","mobapi-integration.taxcom.ru");
		
		ПараметрыДлякилента.Вставить("ТХЦ","api-invoice.taxcom.ru/v1.3/");
		ПараметрыДлякилента.Вставить("СБ","fix-online.sbis.ru");
		
		ПараметрыДлякилента.Вставить("КлючРазработчика",ТекущийПользователь.КлючРазработчика);
		ПараметрыДлякилента.Вставить("АдресАпи","https://diadoc-api.kontur.ru:443");
		
		ПараметрыДлякилента.Вставить("WEBSERVICE_Идентификатор",Настройки.ТестовыйWEBSERVICE);
		
		
		
	ИначеЕсли РежимР=1 Тогда
		ПараметрыДлякилента.Вставить("ПараметрРаботы","Рабочий");
		ПараметрыДлякилента.Вставить("АдресКАПИ",ТекущийПользователь.СайтыВходаВСистему.ОригинальныйСтенд);
		ПараметрыДлякилента.Вставить("КаталогСайт","xn--j1ab.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
		ПараметрыДлякилента.Вставить("КаталогСайтAPI","xn--80aqu.xn----7sbabas4ajkhfocclk9d3cvfsa.xn--p1ai");
		ПараметрыДлякилента.Вставить("КлючAPIККМТ",ТекущийПользователь.КлючДляРаботыСНК);
		//ПараметрыДлякилента.Вставить("КлючAPIККМТ","");
		
		ПараметрыДлякилента.Вставить("МобильныйСайтДляПолученияИсходящих","mobapi-invoice.taxcom.ru");
		ПараметрыДлякилента.Вставить("ТХЦ","api.taxcom.ru/v1.3/");
		ПараметрыДлякилента.Вставить("СБ","online.sbis.ru");
		
		ПараметрыДлякилента.Вставить("КлючРазработчика",ТекущийПользователь.КлючРазработчика);
		ПараметрыДлякилента.Вставить("АдресАпи","https://diadoc-api.kontur.ru:443");
		ПараметрыДлякилента.Вставить("WEBSERVICE_Идентификатор",Настройки.ОригинальныйWEBSERVICE);
		
	Иначе
		Сообщить("Выберите режим работы");
		ПараметрыДлякилента.Вставить("АдресКАПИ","");
		ПараметрыДлякилента.Вставить("WEBSERVICE_Идентификатор",Настройки.ТестовыйWEBSERVICE);
		
	КонецЕсли;
	ПараметрыДлякилента.Вставить("ТипПодключения",ТекущийПользователь.ТипПодключенияСБ);
	
	Если Не ЗначениеЗаполнено( ТекущийПользователь.ИдентификаторКлиентаМДЛП) Тогда
		ПараметрыДлякилента.АдресКАПИ=СтрЗаменить(ПараметрыДлякилента.АдресКАПИ,"api.","");
		
	КонецЕсли;
	
	
	НаименованиеСт=ТекущийПользователь.СайтыВходаВСистему.Наименование;
		   Если НаименованиеСт="Обувь" Тогда
	ПараметрыДлякилента.Вставить("Что","shoes");
		ИначеЕсли НаименованиеСт="Одежда" Тогда
	ПараметрыДлякилента.Вставить("Что","lp");
		ИначеЕсли НаименованиеСт="Парфюм" Тогда
			ПараметрыДлякилента.Вставить("Что","perfumery");
		ИначеЕсли НаименованиеСт="Альтернативный табак" Тогда
			ПараметрыДлякилента.Вставить("Что","otp");
			
		ИначеЕсли НаименованиеСт="Парфюм" Тогда
			ПараметрыДлякилента.Вставить("Что","perfumery");
		ИначеЕсли НаименованиеСт="Фото" Тогда
			
			ПараметрыДлякилента.Вставить("Что","electronics");
		Иначе
		
			что=ТекущийПользователь.СайтыВходаВСистему.ДоступПоСУЗ;
			ПараметрыДлякилента.Вставить("Что",что);
			
		КонецЕсли;
		
	ПараметрыДлякилента.Вставить("НаименованиеСтенда",НаименованиеСт);
	ПараметрыДлякилента.Вставить("Организация",ТекущийПользователь.Организация);
	ПараметрыДлякилента.Вставить("ТаймаутОжиданияПослеПлученияКМ",Настройки.ТаймаутОжиданияПослеПлученияКМ);
	ПараметрыДлякилента.Вставить("ИД_ЦРПТ",ТекущийПользователь.Организация.Ид_ЭДО_ЦРПТ);
	ПараметрыДлякилента.Вставить("email",ТекущийПользователь.Организация.email);
	
	ПараметрыДлякилента.Вставить("РежимРаботы",РежимР);
	ПараметрыДлякилента.Вставить("ТекущийПользователь",ТекущийПользователь);
	ПараметрыДлякилента.Вставить("Внешняя",ТекущийПользователь.ИспользоватьВнешнийСертификат);
	
	ПараметрыДлякилента.Вставить("ИНН",ТекущийПользователь.Организация.ИНН);
	ПараметрыДлякилента.Вставить("КПП",ТекущийПользователь.Организация.КПП);
	ПараметрыДлякилента.Вставить("subject_id",ТекущийПользователь.Организация.subjectIdФармацевтика);
	ПараметрыДлякилента.Вставить("ДатаЗагрузкиФармацевтка",
	РегистрыСведений.ОтгрузкаПоОрганизациям_Фарма_ХамелеонЦРПТ.Получить(Новый Структура(
	"Организация,СайтВходаВСистему",ТекущийПользователь.Организация,НаименованиеСт)).ДатаОтсчета);
	
	
		Возврат ПараметрыДлякилента;

	Конецфункции
	
Функция ВернутьМного1СПоМеркурию(Стр) Экспорт
		
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СопоставлениеСправочниковДокументов_ХамелеонМеркурий.Справочник_Документ КАК Ссылка
		|ИЗ
		|	РегистрСведений.СопоставлениеСправочниковДокументов_ХамелеонЦРПТ КАК СопоставлениеСправочниковДокументов_ХамелеонМеркурий
		|ГДЕ
		|	СопоставлениеСправочниковДокументов_ХамелеонМеркурий.СправочникДокумент_Меркурия = &СправочникДокумент_Меркурия";
	
	Запрос.УстановитьПараметр("СправочникДокумент_Меркурия", Стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Массив_Справ=Новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Массив_Справ.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Возврат Массив_Справ;
КонецФункции

Функция xml_ЗаписатьАтрибут(прм_ЗначениеАтрибута) Экспорт                                              
    
    стр=xmlString(прм_ЗначениеАтрибута);                      
    стр=СтрЗаменить(стр, "&", "&"+"a"+"m"+"p"+";");
    стр=СтрЗаменить(стр, """", "&"+"q"+"u"+"o"+"t;");
    стр=СтрЗаменить(стр, "<", "&"+"l"+"t"+";");                
    стр=СтрЗаменить(стр, ">", "&"+"g"+"t"+";");
    стр=СтрЗаменить(стр, "'", "&"+"a"+"p"+"o"+"s;");    
	Возврат Стр;
КонецФункции    // xml_ЗаписатьЗаписатьАтрибут   


Процедура СформироватьСлучайныйКоробСервер(Объект,выбранаНоменклатура) Экспорт
	КоличествоВКОробе=18;
	Если РЕгистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().ФормироватьАгрегатПоНовому Тогда
		//Иначе
		КоличествоВКОробе=РЕгистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().КоличествоЗнаковВКМАгрегата;
		Если КоличествоВКОробе=0 Тогда
			КоличествоВКОробе=18;
		КонецЕсли;
	КонецЕсли;
	КолИчествоСимволов=КоличествоВКОробе-11;
	Если РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().ФормироватьАгрегациюПоGTIN Тогда
		Если Значениезаполнено(Объект.НомерКороба) тогда
			Сообщить("Номер короба уже заполнен!!");
			Возврат;
		КонецЕсли;;
		
		GTIN="";
		Если РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().БратьGLNОрганизацииДляФормированииАгрегации
			И ЗначениеЗаполнено(Объект.Организация.GLN) 
			Тогда
			
			GTIN=Обработки._Запуск_ХамелеонЦРПТ.ДополнитьСтроку_11(xmlString(Объект.Организация.GLN),14,"0");
			
			GTIN=Сред(GTIN,2,9);
		КонецЕсли;
		
		Если Не ЗначениеЗаполненО(GTIN) Тогда
			Если Объект.Марки.Количество()>0 Тогда
				Стр=Объект.Марки[0];
				Если СтрДлина(Стр.Марка)<>18 Тогда
					Если Сред(Стр.Марка,1,2)="01" Тогда
						GTIN=Сред(Стр.Марка,3,14);
					Иначе
						GTIN=Сред(Стр.Марка,1,14);
						
					КонецЕсли;
					GTIN=Сред(GTIN,2,9);
				КонецЕслИ;
				
			Конецесли;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(GTIN) И ЗначениеЗаполнено(Объект.Продукция.GTIN) Тогда
			
			GTIN=Обработки._Запуск_ХамелеонЦРПТ.ДополнитьСтроку_11(xmlString(Объект.Продукция.GTIN),14,"0");
			
			GTIN=Сред(GTIN,2,9);
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(GTIN) Тогда
			//Сообщить("Не выбрана продукция ЦРПТ.");
			//выбранаНоменклатура=Ложь;
			//Возврат;
			///ПЫТАЕМСЯ СЛУЧАЙНО!!!
			
			УникУр=xmlString(Новый УникальныйИдентификатор());
			УникУр=СтрЗаменить(УникУр,"-","");
			//Объект.НомерКороба="";
			GTIN="029";
			Для Сч=1 По 36 Цикл
				Симв=Сред(УникУр,Сч,1);
				Если Не ЗначениеЗаполнено(Симв) Тогда
					Прервать;
				КонецЕсли;
				Если Найти("01234567890",Симв)>0 Тогда
					GTIN=GTIN+Симв;
					Если СтрДлина(GTIN)>=11 Тогда
						Прервать;
					Конецесли;
				КонецЕсли;
				
			Конеццикла;
			Если СтрДлина(GTIN)<11 Тогда
				Для Сч=1 По 36 Цикл
					
					Симв=Сред(УникУр,Сч,1);
					Если Симв="a" Тогда
						GTIN=GTIN+"1";
					ИначеЕсли Симв="b" Тогда
						GTIN=GTIN+"3";
					ИначеЕсли Симв="c" Тогда
						GTIN=GTIN+"5";
					ИначеЕсли Симв="d" Тогда
						GTIN=GTIN+"7";
					ИначеЕсли Симв="e" Тогда
						GTIN=GTIN+"9";
					ИначеЕсли Симв="f" Тогда
						GTIN=GTIN+"0";
					КонецЕсли;
					
					Если СтрДлина(GTIN)>=11 Тогда
						Прервать;
					КонецЕсли;
				Конеццикла;
			КонецЕсли;
			
			GTIN=Сред(GTIN,2,9);
			
			
			
		КонецЕсли;
		
		Счеттчи=РегистрыСведений.СчетчикАгрегацийGTIN_ХамелеонЦРПТ.Получить(Новый Структура("GTIN",GTIN)).Счетчик;
		//Если Счеттчи>99999 Тогда
		//	Объект.НомерКороба=GTIN+Обработки._Запуск_ХамелеонЦРПТ.ДополнитьСтроку_11(xmlString(Счеттчи),6,"0");
		//Иначе
		
		
		
		
			Объект.НомерКороба="2"+GTIN+Обработки._Запуск_ХамелеонЦРПТ.ДополнитьСтроку_11(xmlString(Счеттчи),КолИчествоСимволов,"0");
		//КонецЕсли;
		Попытка
			РегДв=РегистрыСведений.СчетчикАгрегацийGTIN_ХамелеонЦРПТ.СоздатьНаборЗаписей();
			РегДв.Отбор.GTIN.Установить(GTIN);
			Добав=РегДв.Добавить();
			Добав.GTIN=GTIN;
			Добав.Счетчик=Счеттчи+1;
			РегДв.Записать(Истина);
		Исключение
			Объект.НомерКороба="";
			Сообщить("Не удалось сформировать номер короба. Попробуйте еще раз");
		КонецПопытки;
		
		
	Иначе
		
		
		Объект.НомерКороба="";
		Пока СтрДлина(Объект.НомерКороба)<>КоличествоВКОробе Цикл
		
			УникУр=xmlString(Новый УникальныйИдентификатор());
			
			
			УникУр=СтрЗаменить(УникУр,"-","");
			
			
			
			Для Сч=1 По 36 Цикл
				Симв=Сред(УникУр,Сч,1);
				Если Не ЗначениеЗаполнено(Симв) Тогда
					Прервать;
				КонецЕсли;
				Если Найти("01234567890",Симв)>0 Тогда
					Объект.НомерКороба=Объект.НомерКороба+Симв;
					Если СтрДлина(Объект.НомерКороба)>=КоличествоВКОробе Тогда
						Прервать;
					Конецесли;
				КонецЕсли;
				
			Конеццикла;
			Если СтрДлина(Объект.НомерКороба)<КоличествоВКОробе Тогда
				Для Сч=1 По 36 Цикл
					
					Симв=Сред(УникУр,Сч,1);
					Если Симв="a" Тогда
						Объект.НомерКороба=Объект.НомерКороба+"1";
					ИначеЕсли Симв="b" Тогда
						Объект.НомерКороба=Объект.НомерКороба+"3";
					ИначеЕсли Симв="c" Тогда
						Объект.НомерКороба=Объект.НомерКороба+"5";
					ИначеЕсли Симв="d" Тогда
						Объект.НомерКороба=Объект.НомерКороба+"7";
					ИначеЕсли Симв="e" Тогда
						Объект.НомерКороба=Объект.НомерКороба+"9";
					ИначеЕсли Симв="f" Тогда
						Объект.НомерКороба=Объект.НомерКороба+"0";
					КонецЕсли;
					
					Если СтрДлина(Объект.НомерКороба)>=КоличествоВКОробе Тогда
						Прервать;
					КонецЕсли;
				Конеццикла;
				
				
			КонецЕсли;
		Конеццикла;	
		//Объект.НомерКороба="00"+Сред(ОБъект.НомерКороба,3);
		
	КонецЕсли;
	
	Если КоличествоВКОробе=18 Тогда
		СуммаНечетных=0;
		СуммаЧетных=0;
		Если ЗначениеЗаполнено(Объект.НомерКороба) тогда
			Для Индекс = 1 по 17 Цикл
				Если Индекс%2=0 Тогда
					СуммаЧетных=СуммаЧетных+Сред(Объект.НомерКороба,Индекс,1);
				Иначе
					СуммаНечетных=СуммаНечетных+Сред(Объект.НомерКороба,Индекс,1);
					//СуммаНечетных=СуммаНечетных+Массив[Индекс];
				КонецЕсли;	
			КонецЦикла;

		//	КонтрольноеЧисло=10-(СуммаЧетных*3+СуммаНечетных)%10;
		//	Сообщить(КонтрольноеЧисло);
			КонтрольноеЧисло=10-(СуммаЧетных+СуммаНечетных*3)%10;
			Если КонтрольноеЧисло=10 Тогда
				КонтрольноеЧисло=0;
			КонецЕсли;
			Объект.НомерКороба=Сред(Объект.НомерКороба,1,17)+xmlString(КонтрольноеЧисло);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Функция СтраныДляИныхРазмеровОдежды_ХамелеонЦРПТ(text) Экспорт
		Если Не ЗначениеЗаполненО(text) Тогда
		Возврат 
		Справочники.ВозвратПотребителя_Одежда_ХамелеонЦРПТ.ПустаяСсылка()
	Конецесли;
	

	СпрМ=Справочники.СтраныДляИныхРазмеровОдежды_ХамелеонЦРПТ.НайтиПоНаименованию(text,Истина);
	Если Не Значениезаполнено(СпрМ) Тогда
			СпрМ=Справочники.СтраныДляИныхРазмеровОдежды_ХамелеонЦРПТ.СоздатьЭлемент();
			СпрМ.Наименование=text;
			СпрМ.Записать();
		КонецЕсли;
		Возврат СпрМ.Ссылка
		
Конецфункции

Функция ВозвратПотребителя_Одежда_ХамелеонЦРПТ(text) Экспорт

	Если Не ЗначениеЗаполненО(text) Тогда
		Возврат 
		Справочники.ВозвратПотребителя_Одежда_ХамелеонЦРПТ.ПустаяСсылка()
	Конецесли;
	
	СпрМ=Справочники.ВозвратПотребителя_Одежда_ХамелеонЦРПТ.НайтиПоНаименованию(text,Истина);
	Если Не Значениезаполнено(СпрМ) Тогда
			СпрМ=Справочники.ВозвратПотребителя_Одежда_ХамелеонЦРПТ.СоздатьЭлемент();
			СпрМ.Наименование=text;
			СпрМ.Записать();
		КонецЕсли;
		
		Возврат СпрМ.Ссылка
КонецФункции
	
	
Функция Стандарты_ХамелеонЦРПТ(text) Экспорт

	
	Если Не ЗначениеЗаполненО(text) Тогда
		Возврат 
		Справочники.Стандарты_ХамелеонЦРПТ.ПустаяСсылка()
	Конецесли;
	СпрМ=Справочники.Стандарты_ХамелеонЦРПТ.НайтиПоНаименованию(text,Истина);
	Если Не Значениезаполнено(СпрМ) Тогда
			СпрМ=Справочники.Стандарты_ХамелеонЦРПТ.СоздатьЭлемент();
			СпрМ.Наименование=text;
			СпрМ.Записать();
		КонецЕсли;
		
		Возврат СпрМ.Ссылка
КонецФункции

Функция КодТВЭДПоКОду(КодВида) Экспорт
		// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
		Если Не ЗначениезАполнено(КодВида) тогда
	    Возврат Справочники.КодТНВЭД_ХамелеонЦРПТ.ПустаяСсылка()
 Конецесли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КодТНВЭД_ХамелеонЦРПТ.Ссылка
		|ИЗ
		|	Справочник.КодТНВЭД_ХамелеонЦРПТ КАК КодТНВЭД_ХамелеонЦРПТ
		|ГДЕ
		|	КодТНВЭД_ХамелеонЦРПТ.Код ПОДОБНО &Код";
	
	Запрос.УстановитьПараметр("Код", КодВида+"%");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		 Возврат ВыборкаДетальныеЗаписи.Ссылка
	Иначе
		 СпрВидОбуви=Справочники.КодТНВЭД_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=КодВида;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	КонецЕсли;
Конецфункции