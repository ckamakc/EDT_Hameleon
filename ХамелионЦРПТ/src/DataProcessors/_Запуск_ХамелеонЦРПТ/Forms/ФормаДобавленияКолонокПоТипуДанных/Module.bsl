
&НаКлиенте
Процедура Таблица1ПередУдалением(Элемент, Отказ)
	// Вставить содержимое обработчика.
	//Отказ=Истина;
КонецПроцедуры

&НаКлиенте
Процедура Таблица1ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	// Вставить содержимое обработчика.
	Отказ=Истина
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	Параметры.Свойство("Сохранять",СохранятьЗначения);
	Тип=Параметры.тип;
	
	Если Не ЗначениеЗАполнено(Тип) Тогда
		Отказ=Истина;
		Возврат;
	КонецЕсли;
	
	Пользователь=Параметры.Пользователь;
	
//	Хранилищ=Пользователь.КолонкиВСопоставлении.Получить();
//	Если Хранилищ<>Неопределено Тогда
//		ТаблицаКолонок.Загрузить(Хранилищ);
		
//	КонецЕсли;
	Колонки=Параметры.Колонки;

	НайтиМ=Метаданные.НайтиПоТипу(Тип(Тип));
	
	Для Каждого Стр Из НайтиМ.СтандартныеРеквизиты Цикл
		Если ТаблицаКолонок.НайтиСтроки(Новый Структура("ИмяКолонки",Стр.Имя)).Количество()>0 Тогда
			Продолжить;
		КонецЕсли;
		ТТ=ТаблицаКолонок.Добавить();
		Если Колонки.Найти(Стр.Имя)=НЕопределено Тогда
			ТТ.Отметка=ложь;
		Иначе
			ТТ.Отметка=Истина;
		КонецЕсли;
		ТТ.ТипПереданного=Тип;
		ТТ.ИмяКолонки=Стр.Имя;
		Если Стр.Тип.Типы().Количество()=1 Тогда
			Тт.Тип=Стр.Тип.Типы()[0];
		Иначе
			ТТ.Тип=неопределено;
		КонецЕсли;
	КонецЦикла;
	
	
	
	Для Каждого Стр Из НайтиМ.Реквизиты Цикл
		Если ТаблицаКолонок.НайтиСтроки(Новый Структура("ИмяКолонки",Стр.Имя)).Количество()>0 Тогда
			Продолжить;
		КонецЕсли;
		ТТ=ТаблицаКолонок.Добавить();
		ТТ.ТипПереданного=Тип;
		ТТ.ИмяКолонки=Стр.Имя;
		Если Колонки.Найти(Стр.Имя)=НЕопределено Тогда
			ТТ.Отметка=ложь;
		Иначе
			ТТ.Отметка=Истина;
		КонецЕсли;
		Если Стр.Тип.Типы().Количество()=1 Тогда
			Тт.Тип=Стр.Тип.Типы()[0];
		Иначе
			ТТ.Тип=неопределено;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	// Вставить содержимое обработчика.
	Если Элементы.Таблица1.ТекущиеДанные<>Неопределено Тогда
		СписоокЗнач=ПолучитьСписокПолейДляДанного(Элементы.Таблица1.ТекущиеДанные.Тип,Элементы.Таблица1.ТекущиеДанные.Имяколонки);
		Если СписоокЗнач.Количество()>0 Тогда
			СписоокЗнач.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ВыборПоля",ЭтаФорма,Элементы.Таблица1.ТекущиеДанные));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборПоля(РР,ДД) Экспорт
	Если РР<>Неопределено Тогда
		Добав=ТаблицаКолонок.Добавить();
		Добав.ТипПереданного=РР.Значение.ТипПереданного;
		Добав.Отметка=Истина;
		Добав.ИмяКолонки=ДД.ИмяКолонки+"."+РР.Значение.Имя;
		Если РР.Значение.Тип.Типы().Количество()=1 Тогда
			Добав.Тип=РР.Значение.Тип.Типы()[0];
		Иначе
			Добав.Тип=неопределено;
		КонецЕсли;
	//	Добав.тип=
	КонецЕсли;
КонецПРоцедуры

Функция ПолучитьСписокПолейДляДанного(Тип,имя)
	//Попытка
		СписокВыбора=Новый СПисокЗначений;
		НайтиМ=Метаданные.НайтиПоТипу(Тип);
		ДЛя Каждого Стр Из НайтиМ.Реквизиты Цикл
			СписокВыбора.Добавить(Новый Структура("Имя,Тип,ТипПереданного",Стр.Имя,Стр.Тип,Тип),Стр.Имя);
		КонецЦикла;
		Возврат СписокВыбора;
КонецФункции


&НаКлиенте
Процедура Команда2(Команда)
	// Вставить содержимое обработчика.
	МассивВернуть=Новый Массив;
	Для Каждого Стр Из ТаблицаКолонок Цикл
		Если Стр.Отметка Тогда
			МассивВернуть.Добавить(Стр.ИмяКолонки);
		КонецЕсли;
		
	КонецЦикла;
	СохранитьВхранилище();
	ЭтаФорма.Закрыть(МассивВернуть);
КонецПроцедуры

Процедура СохранитьВхранилище()
	Если СохранятьЗначения И ЗначениеЗаполнено(Пользователь) Тогда
		Польз=Пользователь.ПолучитьОбъект();
		
		ПолучитьТабл=Польз.КолонкиВСопоставлении.Получить();
		Если ПолучитьТабл=Неопределено Тогда
			Польз.КолонкиВСопоставлении=Новый хранилищеЗначения(ТаблицаКолонок.Выгрузить());
		Иначе
			НайтиДляУдал=ПолучитьТабл.НайтиСтроки(Новый Структура("ТипПереданного",Тип));
			
			Для Каждого Стр Из НайтиДляУдал Цикл
				ПолучитьТабл.Удалить(Стр);
			КонецЦикла;
			
			Для Каждого Стр Из   ТаблицаКолонок Цикл
				ДД=ПолучитьТабл.Добавить();
				ЗаполнитьЗначенияСвойств(ДД,Стр);
			КонецЦикла;
			Польз.КолонкиВСопоставлении=Новый ХранилищеЗначения(ПолучитьТабл);
		КонецЕсли;	
		Польз.Записать();
	КонецЕсли;
КонецПроцедуры

