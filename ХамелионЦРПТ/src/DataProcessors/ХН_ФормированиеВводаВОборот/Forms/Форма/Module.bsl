
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДатаПроизводства = ТекущаяДатаСеанса();
	ВыборВариантаТиповДокументов = 2;
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьНаСервереОтчетыДляОформления()
		ОтчетыДляОформления.Очистить();

	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВводВОборот_ХамелеонЦРПТ.Ссылка КАК Ссылка,
		|	ВводВОборот_ХамелеонЦРПТ.Номер КАК Номер,
		|	ВводВОборот_ХамелеонЦРПТ.Дата КАК Дата,
		|	ВводВОборот_ХамелеонЦРПТ.Статус КАК Статус,
		|	ВводВОборот_ХамелеонЦРПТ.КоличествоКМ КАК КоличествоКМДокумента,
		|	ВводВОборот_ХамелеонЦРПТ.ТипДокумента КАК ТипДокумента,
		|	ВводВОборот_ХамелеонЦРПТ.ДатаПроизводства КАК ДатаПроизводства,
		|	ЕСТЬNULL(ДанныеТЧ.КоличествоКМ, 0) КАК КоличествоКМ,
		|	ЕСТЬNULL(ДанныеТЧ.GTIN, """") КАК Продукция,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеТЧ.GTINGTIN КАК ЧИСЛО(15, 0)), 0) КАК GTIN,
		|	ЕСТЬNULL(ДанныеТЧ.КодТНВЭД, """") КАК КодТНВЭД,
		|	ЕСТЬNULL(ДанныеТЧ.НомерВСД, """") КАК НомерВСД,
		|	ЕСТЬNULL(ДанныеТЧ.КоличествоТоваров, 0) КАК КоличествоТоваров,
		|	ЕСТЬNULL(ДанныеТЧ.Годендо, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ГоденДо,
		|	ЕСТЬNULL(ДанныеТЧ.КоличествоВСД, 0) КАК КоличествоВСД,
		|	ВЫБОР
		|		КОГДА ВводВОборот_ХамелеонЦРПТ.ДокОснование = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЕСТЬNULL(ДубликатыНаОсновании.ССылкаВВодВОборот, ЗНАЧЕНИЕ(Документ.ВводВОборот_ХамелеонЦРПТ.ПустаяСсылка))
		|		ИНАЧЕ ВводВОборот_ХамелеонЦРПТ.ДокОснование
		|	КОНЕЦ КАК ДокОснование,
		|	ВводВОборот_ХамелеонЦРПТ.Комментарий КАК Комментарий,
		|	ВводВОборот_ХамелеонЦРПТ.НомерПартии КАК НомерПартии,
		|	ДанныеТЧ.GTINКодВУчетнойСистеме КАК КодВУчетнойСистеме,
		|	ВводВОборот_ХамелеонЦРПТ.ТекущийПользователь КАК ТекущийПользователь,
		|	ДубликатыНаОсновании.ССылкаВВодВОборот КАК ССылкаВВодВОборот
		|ПОМЕСТИТЬ ВрОтчетыОНанесении
		|ИЗ
		|	Документ.ВводВОборот_ХамелеонЦРПТ КАК ВводВОборот_ХамелеонЦРПТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Товары.Ссылка КАК ВВодВоборот,
		|			МАКСИМУМ(Товары.GTIN) КАК GTIN,
		|			МАКСИМУМ(Товары.GTIN.GTIN) КАК GTINGTIN,
		|			МАКСИМУМ(Товары.КодТНВЭД) КАК КодТНВЭД,
		|			СУММА(Товары.КоличествоКМ) КАК КоличествоКМ,
		|			МАКСИМУМ(Товары.НомерВСД) КАК НомерВСД,
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.GTIN) КАК КоличествоТоваров,
		|			МАКСИМУМ(Товары.Годендо) КАК Годендо,
		|			СУММА(Товары.МВ_КоличествоВСД) КАК КоличествоВСД,
		|			МАКСИМУМ(Товары.GTIN.КодВУчетнойСистеме) КАК GTINКодВУчетнойСистеме
		|		ИЗ
		|			Документ.ВводВОборот_ХамелеонЦРПТ.Товары КАК Товары
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Товары.Ссылка) КАК ДанныеТЧ
		|		ПО ВводВОборот_ХамелеонЦРПТ.Ссылка = ДанныеТЧ.ВВодВоборот
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			МАКСИМУМ(ХН_СоответствиеОперациямВводВОборот.ВводВОборот) КАК ССылкаВВодВОборот,
		|			ВводВОборот_ХамелеонЦРПТ.Ссылка КАК Ссылка
		|		ИЗ
		|			РегистрСведений.ХН_СоответствиеОперациямВводВОборот КАК ХН_СоответствиеОперациямВводВОборот
		|				ПОЛНОЕ СОЕДИНЕНИЕ Документ.ВводВОборот_ХамелеонЦРПТ КАК ВводВОборот_ХамелеонЦРПТ
		|				ПО ХН_СоответствиеОперациямВводВОборот.ОтчетОбИспользовании = ВводВОборот_ХамелеонЦРПТ.Ссылка
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВводВОборот_ХамелеонЦРПТ.Ссылка) КАК ДубликатыНаОсновании
		|		ПО ВводВОборот_ХамелеонЦРПТ.Ссылка = ДубликатыНаОсновании.Ссылка
		|ГДЕ
		|	ВводВОборот_ХамелеонЦРПТ.ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ОтчетОбИспользовании)
		|	И ВводВОборот_ХамелеонЦРПТ.ДатаПроизводства <= &ТекДата
		|	И (ВводВОборот_ХамелеонЦРПТ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДокументов_ХамелеонЦРПТ.ПустаяСсылка)
		|			ИЛИ ВводВОборот_ХамелеонЦРПТ.ДокОснование = НЕОПРЕДЕЛЕНО)
		|	И НЕ ВводВОборот_ХамелеонЦРПТ.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВрОтчетыОНанесении.Ссылка КАК Ссылка,
		|	ВрОтчетыОНанесении.Номер КАК Номер,
		|	ВрОтчетыОНанесении.Дата КАК Дата,
		|	ВрОтчетыОНанесении.Статус КАК Статус,
		|	ВрОтчетыОНанесении.КоличествоКМДокумента КАК КоличествоКМДокумента,
		|	ВрОтчетыОНанесении.ТипДокумента КАК ТипДокумента,
		|	ВрОтчетыОНанесении.ДатаПроизводства КАК ДатаПроизводства,
		|	ВрОтчетыОНанесении.КоличествоКМ КАК КоличествоКМ,
		|	ВрОтчетыОНанесении.Продукция КАК Продукция,
		|	ВрОтчетыОНанесении.GTIN КАК GTIN,
		|	ВрОтчетыОНанесении.КодТНВЭД КАК КодТНВЭД,
		|	ВрОтчетыОНанесении.НомерВСД КАК НомерВСД,
		|	ВрОтчетыОНанесении.КоличествоТоваров КАК КоличествоТоваров,
		|	ВрОтчетыОНанесении.ГоденДо КАК ГоденДо,
		|	ВрОтчетыОНанесении.КоличествоВСД КАК КоличествоВСД,
		|	ВрОтчетыОНанесении.ДокОснование КАК ДокОснование,
		|	ВрОтчетыОНанесении.Комментарий КАК Комментарий,
		|	ВрОтчетыОНанесении.НомерПартии КАК НомерПартии,
		|	ВрОтчетыОНанесении.КодВУчетнойСистеме КАК КодВУчетнойСистеме,
		|	ВрОтчетыОНанесении.ТекущийПользователь КАК ТекущийПользователь,
		|	ВрОтчетыОНанесении.ССылкаВВодВОборот КАК ССылкаВВодВОборот
		|ИЗ
		|	ВрОтчетыОНанесении КАК ВрОтчетыОНанесении
		|ГДЕ
		|	(ВрОтчетыОНанесении.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДокументов_ХамелеонЦРПТ.ПустаяСсылка)
		|			ИЛИ ВрОтчетыОНанесении.ДокОснование = ЗНАЧЕНИЕ(Документ.ВводВОборот_ХамелеонЦРПТ.ПустаяСсылка))
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодВУчетнойСистеме,
		|	ДатаПроизводства";
	
	Запрос.УстановитьПараметр("ТекДата",ДатаПроизводства);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = ОтчетыДляОформления.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	Элементы.СтраницаОтчеты.Заголовок = "Отчеты для оформления " + "("+ОтчетыДляОформления.Количество()+")";

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервереОшибкиОтчетовПриОФормлении()
	ОшибкиОформления.Очистить();

	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВводВОборот_ХамелеонЦРПТ.Ссылка КАК Ссылка,
		|	ВводВОборот_ХамелеонЦРПТ.Номер КАК Номер,
		|	ВводВОборот_ХамелеонЦРПТ.Дата КАК Дата,
		|	ВводВОборот_ХамелеонЦРПТ.Статус КАК Статус,
		|	ВводВОборот_ХамелеонЦРПТ.КоличествоКМ КАК КоличествоКМДокумента,
		|	ВводВОборот_ХамелеонЦРПТ.ТипДокумента КАК ТипДокумента,
		|	ВводВОборот_ХамелеонЦРПТ.ДатаПроизводства КАК ДатаПроизводства,
		|	ЕСТЬNULL(ДанныеТЧ.КоличествоКМ, 0) КАК КоличествоКМ,
		|	ЕСТЬNULL(ДанныеТЧ.GTIN, """") КАК Продукция,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеТЧ.GTINGTIN КАК ЧИСЛО(15, 0)), 0) КАК GTIN,
		|	ЕСТЬNULL(ДанныеТЧ.КодТНВЭД, """") КАК КодТНВЭД,
		|	ЕСТЬNULL(ДанныеТЧ.НомерВСД, """") КАК НомерВСД,
		|	ЕСТЬNULL(ДанныеТЧ.КоличествоТоваров, 0) КАК КоличествоТоваров,
		|	ЕСТЬNULL(ДанныеТЧ.Годендо, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ГоденДо,
		|	ЕСТЬNULL(ДанныеТЧ.КоличествоВСД, 0) КАК КоличествоВСД,
		|	ВводВОборот_ХамелеонЦРПТ.ДокОснование КАК ДокОснование,
		|	ВводВОборот_ХамелеонЦРПТ.Комментарий КАК Комментарий,
		|	ДубликатыНаОсновании.КоличествоДубликатов КАК КоличествоДубликатов,
		|	ВводВОборот_ХамелеонЦРПТ.НомерПартии КАК НомерПартии,
		|	ДанныеТЧ.GTINКодВУчетнойСистеме КАК КодВУчетнойСистеме
		|ИЗ
		|	Документ.ВводВОборот_ХамелеонЦРПТ КАК ВводВОборот_ХамелеонЦРПТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Товары.Ссылка КАК ВВодВоборот,
		|			МАКСИМУМ(Товары.GTIN) КАК GTIN,
		|			МАКСИМУМ(Товары.GTIN.GTIN) КАК GTINGTIN,
		|			МАКСИМУМ(Товары.КодТНВЭД) КАК КодТНВЭД,
		|			СУММА(Товары.КоличествоКМ) КАК КоличествоКМ,
		|			МАКСИМУМ(Товары.НомерВСД) КАК НомерВСД,
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.GTIN) КАК КоличествоТоваров,
		|			МАКСИМУМ(Товары.Годендо) КАК Годендо,
		|			СУММА(Товары.МВ_КоличествоВСД) КАК КоличествоВСД,
		|			МАКСИМУМ(Товары.GTIN.КодВУчетнойСистеме) КАК GTINКодВУчетнойСистеме
		|		ИЗ
		|			Документ.ВводВОборот_ХамелеонЦРПТ.Товары КАК Товары
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Товары.Ссылка) КАК ДанныеТЧ
		|		ПО ВводВОборот_ХамелеонЦРПТ.Ссылка = ДанныеТЧ.ВВодВоборот
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ХН_СоответствиеОперациямВводВОборот.ВводВОборот) КАК КоличествоДубликатов,
		|			ВводВОборот_ХамелеонЦРПТ.Ссылка КАК Ссылка
		|		ИЗ
		|			РегистрСведений.ХН_СоответствиеОперациямВводВОборот КАК ХН_СоответствиеОперациямВводВОборот
		|				ПОЛНОЕ СОЕДИНЕНИЕ Документ.ВводВОборот_ХамелеонЦРПТ КАК ВводВОборот_ХамелеонЦРПТ
		|				ПО ХН_СоответствиеОперациямВводВОборот.ОтчетОбИспользовании = ВводВОборот_ХамелеонЦРПТ.Ссылка
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВводВОборот_ХамелеонЦРПТ.Ссылка) КАК ДубликатыНаОсновании
		|		ПО ВводВОборот_ХамелеонЦРПТ.Ссылка = ДубликатыНаОсновании.Ссылка
		|ГДЕ
	//	|	ВводВОборот_ХамелеонЦРПТ.ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ОтчетОбИспользовании)
		|	 ВводВОборот_ХамелеонЦРПТ.ДатаПроизводства <= &ТекДата
		|	И (ВводВОборот_ХамелеонЦРПТ.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ))
		|	ИЛИ ВводВОборот_ХамелеонЦРПТ.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыДокументов_ХамелеонЦРПТ.ОбработаноСОшибкойВЭДО)))
		|	И НЕ ВводВОборот_ХамелеонЦРПТ.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ТекДата",ДатаПроизводства);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = ОшибкиОформления.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
	КонецЦикла;
	Элементы.СтраницаОшибки.Заголовок = "Ошибки оформления " + "("+ОшибкиОформления.Количество()+")";
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервереВВодВОборотДляОформления()
	ВводВОборотДляОтправки.Очистить();

	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВводВОборот_ХамелеонЦРПТ.Ссылка КАК Ссылка,
		|	ВводВОборот_ХамелеонЦРПТ.Номер КАК Номер,
		|	ВводВОборот_ХамелеонЦРПТ.Дата КАК Дата,
		|	ВводВОборот_ХамелеонЦРПТ.Статус КАК Статус,
		|	ВводВОборот_ХамелеонЦРПТ.КоличествоКМ КАК КоличествоКМДокумента,
		|	ВводВОборот_ХамелеонЦРПТ.ТипДокумента КАК ТипДокумента,
		|	ВводВОборот_ХамелеонЦРПТ.ДатаПроизводства КАК ДатаПроизводства,
		|	ЕСТЬNULL(ДанныеТЧ.КоличествоКМ, 0) КАК КоличествоКМ,
		|	ЕСТЬNULL(ДанныеТЧ.GTIN, """") КАК Продукция,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеТЧ.GTINGTIN КАК ЧИСЛО(15, 0)), 0) КАК GTIN,
		|	ЕСТЬNULL(ДанныеТЧ.КодТНВЭД, """") КАК КодТНВЭД,
		|	ЕСТЬNULL(ДанныеТЧ.НомерВСД, """") КАК НомерВСД,
		|	ЕСТЬNULL(ДанныеТЧ.КоличествоТоваров, 0) КАК КоличествоТоваров,
		|	ЕСТЬNULL(ДанныеТЧ.Годендо, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ГоденДо,
		|	ЕСТЬNULL(ДанныеТЧ.КоличествоВСД, 0) КАК КоличествоВСД,
		|	ВводВОборот_ХамелеонЦРПТ.ДокОснование КАК ДокОснование,
		|	ВводВОборот_ХамелеонЦРПТ.Комментарий КАК Комментарий,
		|	ДубликатыНаОсновании.КоличествоДубликатов КАК КоличествоДубликатов,
		|	ВводВОборот_ХамелеонЦРПТ.НомерПартии КАК НомерПартии,
		|	ДанныеТЧ.GTINКодВУчетнойСистеме КАК КодВУчетнойСистеме
		|ИЗ
		|	Документ.ВводВОборот_ХамелеонЦРПТ КАК ВводВОборот_ХамелеонЦРПТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Товары.Ссылка КАК ВВодВоборот,
		|			МАКСИМУМ(Товары.GTIN) КАК GTIN,
		|			МАКСИМУМ(Товары.GTIN.GTIN) КАК GTINGTIN,
		|			МАКСИМУМ(Товары.КодТНВЭД) КАК КодТНВЭД,
		|			СУММА(Товары.КоличествоКМ) КАК КоличествоКМ,
		|			МАКСИМУМ(Товары.НомерВСД) КАК НомерВСД,
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.GTIN) КАК КоличествоТоваров,
		|			МАКСИМУМ(Товары.Годендо) КАК Годендо,
		|			СУММА(Товары.МВ_КоличествоВСД) КАК КоличествоВСД,
		|			МАКСИМУМ(Товары.GTIN.КодВУчетнойСистеме) КАК GTINКодВУчетнойСистеме
		|		ИЗ
		|			Документ.ВводВОборот_ХамелеонЦРПТ.Товары КАК Товары
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Товары.Ссылка) КАК ДанныеТЧ
		|		ПО ВводВОборот_ХамелеонЦРПТ.Ссылка = ДанныеТЧ.ВВодВоборот
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ХН_СоответствиеОперациямВводВОборот.ВводВОборот) КАК КоличествоДубликатов,
		|			ВводВОборот_ХамелеонЦРПТ.Ссылка КАК Ссылка
		|		ИЗ
		|			РегистрСведений.ХН_СоответствиеОперациямВводВОборот КАК ХН_СоответствиеОперациямВводВОборот
		|				ПОЛНОЕ СОЕДИНЕНИЕ Документ.ВводВОборот_ХамелеонЦРПТ КАК ВводВОборот_ХамелеонЦРПТ
		|				ПО ХН_СоответствиеОперациямВводВОборот.ОтчетОбИспользовании = ВводВОборот_ХамелеонЦРПТ.Ссылка
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВводВОборот_ХамелеонЦРПТ.Ссылка) КАК ДубликатыНаОсновании
		|		ПО ВводВОборот_ХамелеонЦРПТ.Ссылка = ДубликатыНаОсновании.Ссылка
		|ГДЕ
		|	ВводВОборот_ХамелеонЦРПТ.ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВводВОборот)
		|	И ВводВОборот_ХамелеонЦРПТ.ДатаПроизводства <= &ТекДата
		|	И ВводВОборот_ХамелеонЦРПТ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДокументов_ХамелеонЦРПТ.ПустаяСсылка)
		|	И НЕ ВводВОборот_ХамелеонЦРПТ.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ТекДата",ДатаПроизводства);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = ВводВОборотДляОтправки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	Элементы.СтраницаВводВОборот.Заголовок = "Ввод В Оборот " + "("+ВводВОборотДляОтправки.Количество()+")";

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервереОбновитьСтатусВводаВОборот()
	ОбновитьСтатус.Очистить();
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВводВОборот_ХамелеонЦРПТ.Ссылка КАК Ссылка,
		|	ВводВОборот_ХамелеонЦРПТ.Номер КАК Номер,
		|	ВводВОборот_ХамелеонЦРПТ.Дата КАК Дата,
		|	ВводВОборот_ХамелеонЦРПТ.Статус КАК Статус,
		|	ВводВОборот_ХамелеонЦРПТ.КоличествоКМ КАК КоличествоКМДокумента,
		|	ВводВОборот_ХамелеонЦРПТ.ТипДокумента КАК ТипДокумента,
		|	ВводВОборот_ХамелеонЦРПТ.ДатаПроизводства КАК ДатаПроизводства,
		|	ЕСТЬNULL(ДанныеТЧ.КоличествоКМ, 0) КАК КоличествоКМ,
		|	ЕСТЬNULL(ДанныеТЧ.GTIN, """") КАК Продукция,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеТЧ.GTINGTIN КАК ЧИСЛО(15, 0)), 0) КАК GTIN,
		|	ЕСТЬNULL(ДанныеТЧ.КодТНВЭД, """") КАК КодТНВЭД,
		|	ЕСТЬNULL(ДанныеТЧ.НомерВСД, """") КАК НомерВСД,
		|	ЕСТЬNULL(ДанныеТЧ.КоличествоТоваров, 0) КАК КоличествоТоваров,
		|	ЕСТЬNULL(ДанныеТЧ.Годендо, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ГоденДо,
		|	ЕСТЬNULL(ДанныеТЧ.КоличествоВСД, 0) КАК КоличествоВСД,
		|	ВводВОборот_ХамелеонЦРПТ.ДокОснование КАК ДокОснование,
		|	ВводВОборот_ХамелеонЦРПТ.Комментарий КАК Комментарий,
		|	ДубликатыНаОсновании.КоличествоДубликатов КАК КоличествоДубликатов,
		|	ВводВОборот_ХамелеонЦРПТ.НомерПартии КАК НомерПартии,
		|	ДанныеТЧ.GTINКодВУчетнойСистеме КАК КодВУчетнойСистеме
		|ИЗ
		|	Документ.ВводВОборот_ХамелеонЦРПТ КАК ВводВОборот_ХамелеонЦРПТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Товары.Ссылка КАК ВВодВоборот,
		|			МАКСИМУМ(Товары.GTIN) КАК GTIN,
		|			МАКСИМУМ(Товары.GTIN.GTIN) КАК GTINGTIN,
		|			МАКСИМУМ(Товары.КодТНВЭД) КАК КодТНВЭД,
		|			СУММА(Товары.КоличествоКМ) КАК КоличествоКМ,
		|			МАКСИМУМ(Товары.НомерВСД) КАК НомерВСД,
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.GTIN) КАК КоличествоТоваров,
		|			МАКСИМУМ(Товары.Годендо) КАК Годендо,
		|			СУММА(Товары.МВ_КоличествоВСД) КАК КоличествоВСД,
		|			МАКСИМУМ(Товары.GTIN.КодВУчетнойСистеме) КАК GTINКодВУчетнойСистеме
		|		ИЗ
		|			Документ.ВводВОборот_ХамелеонЦРПТ.Товары КАК Товары
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Товары.Ссылка) КАК ДанныеТЧ
		|		ПО ВводВОборот_ХамелеонЦРПТ.Ссылка = ДанныеТЧ.ВВодВоборот
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ХН_СоответствиеОперациямВводВОборот.ВводВОборот) КАК КоличествоДубликатов,
		|			ВводВОборот_ХамелеонЦРПТ.Ссылка КАК Ссылка
		|		ИЗ
		|			РегистрСведений.ХН_СоответствиеОперациямВводВОборот КАК ХН_СоответствиеОперациямВводВОборот
		|				ПОЛНОЕ СОЕДИНЕНИЕ Документ.ВводВОборот_ХамелеонЦРПТ КАК ВводВОборот_ХамелеонЦРПТ
		|				ПО ХН_СоответствиеОперациямВводВОборот.ОтчетОбИспользовании = ВводВОборот_ХамелеонЦРПТ.Ссылка
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВводВОборот_ХамелеонЦРПТ.Ссылка) КАК ДубликатыНаОсновании
		|		ПО ВводВОборот_ХамелеонЦРПТ.Ссылка = ДубликатыНаОсновании.Ссылка
		|ГДЕ
		//|	ВводВОборот_ХамелеонЦРПТ.ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ОтчетОбИспользовании)
		|	 ВводВОборот_ХамелеонЦРПТ.ДатаПроизводства <= &ТекДата
		|   И &ОтборДокументовПотипу
		|	И НЕ ВводВОборот_ХамелеонЦРПТ.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ))
		|	И НЕ ВводВОборот_ХамелеонЦРПТ.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыДокументов_ХамелеонЦРПТ.ПустаяСсылка))
		|	И НЕ ВводВОборот_ХамелеонЦРПТ.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Обработан))
		|	И НЕ ВводВОборот_ХамелеонЦРПТ.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыДокументов_ХамелеонЦРПТ.ОбработаноСОшибкойВЭДО))
		|	И НЕ ВводВОборот_ХамелеонЦРПТ.ПометкаУдаления";
	
	Если ВыборВариантаТиповДокументов = 0 Тогда
		Запрос.УстановитьПараметр("ОтборДокументовПотипу",Истина);
	ИначеЕсли ВыборВариантаТиповДокументов = 1 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ОтборДокументовПотипу","ВводВОборот_ХамелеонЦРПТ.ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ОтчетОбИспользовании)");
	ИначеЕсли ВыборВариантаТиповДокументов = 2 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ОтборДокументовПотипу","ВводВОборот_ХамелеонЦРПТ.ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВводВОборот)");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТекДата",ДатаПроизводства);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = ОбновитьСтатус.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
	КонецЦикла;
	Элементы.СтраницаОбновитьСтатус.Заголовок = "Обновить статус " + "("+ОбновитьСтатус.Количество()+")";
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)	
	ЗаполнитьНаСервереОтчетыДляОформления();
	ЗаполнитьНаСервереОшибкиОтчетовПриОФормлении();
	ЗаполнитьНаСервереВВодВОборотДляОформления();
	ЗаполнитьНаСервереОбновитьСтатусВводаВОборот();
КонецПроцедуры

&НаСервере
Процедура НачатьПодборВСДНаСервере()
	
	Для Каждого Стр Из ОтчетыДляОформления Цикл
		Если Стр.Ссылка.Товары.Количество() > 1 Тогда
			//Стр.Статус = "Ошибка. Количество в ТЧ Товары больше 1 позиции";
			Продолжить;	
		КонецЕсли;	
		ОрганизацияМеркурия = ПолучитиьОрганизациюМеркурияПоХамелеону(Стр.Ссылка.Организация);
		GTIN =  Формат(Стр.Ссылка.Товары.Получить(0).GTIN,"ЧГ=0");
		ДатаПроизводства =  Стр.Ссылка.Товары.Получить(0).ДатаПроизводства;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Организация"           , ОрганизацияМеркурия);
		ПараметрыОтбора.Вставить("ТипДокумента"          , ПредопределенноеЗначение("Справочник.ТипыДокументов.ЭлектронныйДокумент"));
		НомерПартии = СокрЛП(Стр.НомерПартии);
		Если ЗначениеЗаполнено(НомерПартии) И СтрДлина(НомерПартии) > 10 ТОгда 
			ДлинаСтроки = СтрДлина(НомерПартии)-7;
			ПартияАрлы = Сред(НомерПартии,8,ДлинаСтроки);
			ПараметрыОтбора.Вставить("НомерПартии", ПартияАрлы);
		КонецЕсли;	
		ПараметрыОтбора.Вставить("ВидВСД"                , ПредопределенноеЗначение("Перечисление.ВидыВСД.Производственный"));
		ПараметрыОтбора.Вставить("GTIN"           		, Формат(Стр.продукция.GTIN,"ЧГ=0"));	
		Если  ЗначениеЗаполнено(ДатаПроизводства) и ДатаПроизводства <> Дата(1,1,1) Тогда
			ПараметрыОтбора.Вставить("ДатаВыработкиНачало", ДатаПроизводства);
		КонецЕсли;	
		
		СтруктураВСД = АвтоПодборВСДНаСервере(ПараметрыОтбора);
		Если НЕ СтруктураВСД = Неопределено Тогда 
			Если СтруктураВСД.Свойство("КоличествоНайденныхВСД") Тогда
				//Стр.Статус = "Ошибка. Количество наденных ВСД "+СтруктураВСД.КоличествоНайденныхВСД +" шт. Требуется ручной подбор ВСД.";
			Иначе	
				Стр.НомерВСД =  СтруктураВСД.НомерВСД;
				Стр.КоличествоВСД =  СтруктураВСД.КоличествоВСД;
				
				Если Стр.Ссылка.Товары.Количество() = 1 Тогда
					Попытка
						ДокументОбъект = Стр.Ссылка.ПолучитьОбъект();
						Для каждого СтрокаТ из ДокументОбъект.Товары Цикл
							СтрокаТ.НомерВСД = СтруктураВСД.НомерВСД;
							КоличествоШтук = СтруктураВСД.КоличествоВСД;
							Если НЕ КоличествоШтук = Неопределено Тогда
								СтрокаТ.МВ_КоличествоВСД = КоличествоШтук;
							КонецЕсли;
						КонецЦикла;	
	                    ДокументОбъект.Записать();
					Исключение
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
						//ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
					КонецПопытки;
				Иначе
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = НСтр("ru = 'Ошибка. В документе  %1 количество сток в ТЧ Товары не соответсвует.'");
					Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%1", ДокументОбъект.Ссылка);
					Сообщение.Сообщить();
				КонецЕсли;

			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;	

КонецПроцедуры

&НаСервере
Функция АвтоПодборВСДНаСервере(ПараметрыОтбора)
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокументВСД.Ссылка КАК Ссылка,
		|	СтатусыВСДСрезПоследних.СтатусВСД КАК СтатусВСД,
		|	ДокументВСД.GUID_Меркурий КАК GUID_Меркурий,
		|	ВложенныйЗапрос.КоличествоУпаковок КАК КоличествоУпаковок
		|ИЗ
		|	РегистрСведений.СтатусыВСД.СрезПоследних КАК СтатусыВСДСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВСД КАК ДокументВСД
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ВСДСписокФизическихУпаковок.Ссылка КАК ВСД,
		|				МАКСИМУМ(ВСДСписокФизическихУпаковок.КоличествоУпаковок) КАК КоличествоУпаковок
		|			ИЗ
		|				Документ.ВСД.СписокФизическихУпаковок КАК ВСДСписокФизическихУпаковок
		|			ГДЕ
		|				ВСДСписокФизическихУпаковок.УровеньУпаковки = ЗНАЧЕНИЕ(Справочник.УровниУпаковок.ПотребительскийУровень)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ВСДСписокФизическихУпаковок.Ссылка) КАК ВложенныйЗапрос
		|			ПО ДокументВСД.Ссылка = ВложенныйЗапрос.ВСД
		|		ПО СтатусыВСДСрезПоследних.ВСД = ДокументВСД.Ссылка
		|ГДЕ
		|	ДокументВСД.ВидВСД = ЗНАЧЕНИЕ(Перечисление.ВидыВСД.Производственный)
		|	И (СтатусыВСДСрезПоследних.СтатусВСД В (ЗНАЧЕНИЕ(Справочник.СтатусыВСД.Оформлен))
		|			ИЛИ СтатусыВСДСрезПоследних.СтатусВСД В (ЗНАЧЕНИЕ(Справочник.СтатусыВСД.Погашен)))
		|	И ДокументВСД.ДатаВыработкиНачало = &ДатаВыработкиНачало
		|	И &НомерПартии
		|	И ДокументВСД.Организация = &Организация
		|	И ДокументВСД.Продукция.GTIN = &GTIN";
	Запрос.УстановитьПараметр("Организация",ПараметрыОтбора.Организация) ;
	Запрос.УстановитьПараметр("GTIN",ПараметрыОтбора.GTIN);
	Запрос.УстановитьПараметр("ДатаВыработкиНачало",ПараметрыОтбора.ДатаВыработкиНачало);
	
	Если ПараметрыОтбора.Свойство("НомерПартии") и ЗначениеЗаполнено(ПараметрыОтбора.НомерПартии) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&НомерПартии", "ДокументВСД.НомерПартии = &НомерПартии");	
		Запрос.УстановитьПараметр("НомерПартии",ПараметрыОтбора.НомерПартии);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&НомерПартии", "Истина");	
	КонецЕсли;	

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СтруктураВСД = Новый Структура;
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	КоличествоНайденныхВСД = РезультатЗапроса.Выгрузить().Количество();
	Если КоличествоНайденныхВСД > 1 Тогда
		СтруктураВСД.Вставить("КоличествоНайденныхВСД",КоличествоНайденныхВСД);
		Возврат СтруктураВСД;
	КонецЕсли;
 
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтруктураВСД.Вставить("НомерВСД", ВыборкаДетальныеЗаписи.GUID_Меркурий);
		СтруктураВСД.Вставить("КоличествоВСД", ВыборкаДетальныеЗаписи.КоличествоУпаковок);

		Возврат	СтруктураВСД;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


КонецФункции // АвтоПодборВСДНаСервере()

//++ МВ:Овчинников 22.06.2021  •0
// ПолучитиьОрганизациюМеркурияПоХамелеону пренесли в общий модуль МВ_ОбщийМодуль_НаСервере_ХамелеонЦРПТ
&НаСервере
Функция ПолучитиьОрганизациюМеркурияПоХамелеону(СправочникДокументХамелеона)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СопоставлениеСправочниковДокументов_ХамелеонЦРПТ.СправочникДокумент_Меркурия КАК СправочникДокумент_Меркурия
		|ИЗ
		|	РегистрСведений.СопоставлениеСправочниковДокументов_ХамелеонЦРПТ КАК СопоставлениеСправочниковДокументов_ХамелеонЦРПТ
		|ГДЕ
		|	СопоставлениеСправочниковДокументов_ХамелеонЦРПТ.Справочник_Документ = &Справочник_Документ";
	
	Запрос.УстановитьПараметр("Справочник_Документ", СправочникДокументХамелеона);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ОсновнаяОрганизация = РегистрыСведений.МВ_ДополнительныеНастройки.ПолучитьЗначения(ПланыВидовХарактеристик.МВ_ПереченьДополнительныхНастроек.ОсновнаяОрганизация, ТекущаяДатаСеанса());	
		Если ОсновнаяОрганизация = Неопределено Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru = 'Предупреждение. Не заполнена Основная Организация в доп. настрйоках. Не заполнено сопоставление организации Хамелеона с организацией УВС Меркурия %1'");
			Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%1", СправочникДокументХамелеона);
			Сообщение.Сообщить();
			
		Иначе
			Возврат ОсновнаяОрганизация;
		КонецЕсли;	
	КонецЕсли;	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СправочникДокумент_Меркурия = Неопределено;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СправочникДокумент_Меркурия =  ВыборкаДетальныеЗаписи.СправочникДокумент_Меркурия;
	КонецЦикла;
	
	Возврат СправочникДокумент_Меркурия;	

КонецФункции // ПолучитиьОрганизациюМеркурияПоХамелеону() //-- МВ:Овчинников 22.06.2021

&НаКлиенте
Процедура АвтоПодборВСД(Команда)
	НачатьПодборВСДНаСервере();
КонецПроцедуры

#Область ОбработкаКомандФормы


&НаКлиенте
Процедура ОтправитьВЦРПТОтчетОНанесении(Команда)
	ОбновитьДанныеТаблицыОтчетовОНанесенииДляОформления();
	// Вставить содержимое обработчика.
	Для Каждого Стр Из ОтчетыДляОформления Цикл
		Если НЕ ЗначениеЗаполнено(Стр.НомерВСД) Тогда
			//Стр.Статус = "Ошибка. ВСД не заполнен. В ЦРПТ не отправлен.";
			Продолжить;
		КонецЕсли;	
		Форм=ПолучитьФорму("Документ.ВводВОборот_ХамелеонЦРПТ.Форма.ФормаДокумента",Новый Структура(
		"Ключ",Стр.Ссылка));
		Форм.ОтправитьЗаявку(Команда);
	КонецциклА;
	
	ОбновитьДанныеТаблицыОтчетовОНанесенииДляОформления();
	
	Элементы.ОтчетыДляОформления.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВЦРПТВводВОборот(Команда)
	// Вставить содержимое обработчика.
	Для Каждого Стр Из ВводВОборотДляОтправки Цикл
		Если НЕ ЗначениеЗаполнено(Стр.НомерВСД) Тогда
			//Стр.Статус = "Ошибка. ВСД не заполнен. В ЦРПТ не отправлен.";
			Продолжить;
		КонецЕсли;	
		Форм=ПолучитьФорму("Документ.ВводВОборот_ХамелеонЦРПТ.Форма.ФормаДокумента",Новый Структура(
		"Ключ",Стр.Ссылка));
		Форм.ОтправитьЗаявку(Команда);
	КонецциклА;
	Элементы.ВводВОборотДляОтправки.Обновить();

КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеТаблицыОтчетовОНанесенииДляОформления()
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВводВОборот_ХамелеонЦРПТ.Ссылка КАК Ссылка,
		|	ВводВОборот_ХамелеонЦРПТ.Номер КАК Номер,
		|	ВводВОборот_ХамелеонЦРПТ.Дата КАК Дата,
		|	ВводВОборот_ХамелеонЦРПТ.Статус КАК Статус,
		|	ВводВОборот_ХамелеонЦРПТ.КоличествоКМ КАК КоличествоКМДокумента,
		|	ВводВОборот_ХамелеонЦРПТ.ТипДокумента КАК ТипДокумента,
		|	ВводВОборот_ХамелеонЦРПТ.ДатаПроизводства КАК ДатаПроизводства,
		|	ЕСТЬNULL(ДанныеТЧ.КоличествоКМ, 0) КАК КоличествоКМ,
		|	ЕСТЬNULL(ДанныеТЧ.GTIN, """") КАК Продукция,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеТЧ.GTINGTIN КАК ЧИСЛО(15, 0)), 0) КАК GTIN,
		|	ЕСТЬNULL(ДанныеТЧ.КодТНВЭД, """") КАК КодТНВЭД,
		|	ЕСТЬNULL(ДанныеТЧ.НомерВСД, """") КАК НомерВСД,
		|	ЕСТЬNULL(ДанныеТЧ.КоличествоТоваров, 0) КАК КоличествоТоваров,
		|	ЕСТЬNULL(ДанныеТЧ.Годендо, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ГоденДо,
		|	ЕСТЬNULL(ДанныеТЧ.КоличествоВСД, 0) КАК КоличествоВСД,
		|	ВЫБОР
		|		КОГДА ВводВОборот_ХамелеонЦРПТ.ДокОснование = ЗНАЧЕНИЕ(Документ.ВводВОборот_ХамелеонЦРПТ.ПустаяСсылка)
		|			ТОГДА ДубликатыНаОсновании.СсылкаВВодВоборот
		|		ИНАЧЕ ВводВОборот_ХамелеонЦРПТ.ДокОснование
		|	КОНЕЦ КАК ДокОснование,
		|	ВводВОборот_ХамелеонЦРПТ.Комментарий КАК Комментарий,
		|	ВводВОборот_ХамелеонЦРПТ.НомерПартии КАК НомерПартии,
		|	ДанныеТЧ.GTINКодВУчетнойСистеме КАК КодВУчетнойСистеме,
		|	ВводВОборот_ХамелеонЦРПТ.ТекущийПользователь КАК ТекущийПользователь,
		|	ДубликатыНаОсновании.СсылкаВВодВоборот КАК СсылкаВВодВоборот
		|ИЗ
		|	Документ.ВводВОборот_ХамелеонЦРПТ КАК ВводВОборот_ХамелеонЦРПТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Товары.Ссылка КАК ВВодВоборот,
		|			МАКСИМУМ(Товары.GTIN) КАК GTIN,
		|			МАКСИМУМ(Товары.GTIN.GTIN) КАК GTINGTIN,
		|			МАКСИМУМ(Товары.КодТНВЭД) КАК КодТНВЭД,
		|			СУММА(Товары.КоличествоКМ) КАК КоличествоКМ,
		|			МАКСИМУМ(Товары.НомерВСД) КАК НомерВСД,
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.GTIN) КАК КоличествоТоваров,
		|			МАКСИМУМ(Товары.Годендо) КАК Годендо,
		|			СУММА(Товары.МВ_КоличествоВСД) КАК КоличествоВСД,
		|			МАКСИМУМ(Товары.GTIN.КодВУчетнойСистеме) КАК GTINКодВУчетнойСистеме
		|		ИЗ
		|			Документ.ВводВОборот_ХамелеонЦРПТ.Товары КАК Товары
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Товары.Ссылка) КАК ДанныеТЧ
		|		ПО ВводВОборот_ХамелеонЦРПТ.Ссылка = ДанныеТЧ.ВВодВоборот
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			МАКСИМУМ(ХН_СоответствиеОперациямВводВОборот.ВводВОборот) КАК СсылкаВВодВоборот,
		|			ВводВОборот_ХамелеонЦРПТ.Ссылка КАК Ссылка
		|		ИЗ
		|			РегистрСведений.ХН_СоответствиеОперациямВводВОборот КАК ХН_СоответствиеОперациямВводВОборот
		|				ПОЛНОЕ СОЕДИНЕНИЕ Документ.ВводВОборот_ХамелеонЦРПТ КАК ВводВОборот_ХамелеонЦРПТ
		|				ПО ХН_СоответствиеОперациямВводВОборот.ОтчетОбИспользовании = ВводВОборот_ХамелеонЦРПТ.Ссылка
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВводВОборот_ХамелеонЦРПТ.Ссылка) КАК ДубликатыНаОсновании
		|		ПО ВводВОборот_ХамелеонЦРПТ.Ссылка = ДубликатыНаОсновании.Ссылка
		|ГДЕ
		|	ВводВОборот_ХамелеонЦРПТ.ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ОтчетОбИспользовании)
		|	И НЕ ВводВОборот_ХамелеонЦРПТ.ПометкаУдаления
		|	И ВводВОборот_ХамелеонЦРПТ.Ссылка В(&МассивДокументов)";
	
	МассивДокументов = ОтчетыДляОформления.Выгрузить(,"Ссылка");

	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//НоваяСтрока = ОтчетыДляОформления.Добавить();
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Ссылка",ВыборкаДетальныеЗаписи.ССылка);
		НайденныеСтроки = ОтчетыДляОформления.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() = 1 Тогда
			ЗаполнитьЗначенияСвойств(НайденныеСтроки[0],ВыборкаДетальныеЗаписи);
		Иначе
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru = 'Для документа %1 не смогли обновить данные в табличной части'");
			Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%1", ВыборкаДетальныеЗаписи.Ссылка);
			Сообщение.Сообщить();
		КонецЕсли;	
	КонецЦикла;
	
	//Элементы.СтраницаОтчеты.Заголовок = "Отчеты для оформления " + "("+ОтчетыДляОформления.Количество()+")";

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецПроцедуры


&НаСервере
Функция ПолучитьGTIN(ПродукцияХамелеон)
	Возврат  Формат(ПродукцияХамелеон.GTIN,"ЧГ=0");
КонецФункции // ПолучитьGTIN() //-- МВ:Овчинников 23.06.2021

&НаСервере
Функция ПолучитьПараметрыОтбораВСД(ВводВОборотСсылка)
	ОрганизацияМеркурия = ПолучитиьОрганизациюМеркурияПоХамелеону(ВводВОборотСсылка.Организация);
	GTIN = ПолучитьGTIN(ВводВОборотСсылка.Товары.Получить(0).GTIN);
	ДатаПроизводства =  ВводВОборотСсылка.Товары.Получить(0).ДатаПроизводства;

	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Организация"           , ОрганизацияМеркурия);
	ПараметрыОтбора.Вставить("ТипДокумента"          , ПредопределенноеЗначение("Справочник.ТипыДокументов.ЭлектронныйДокумент"));
	НомерПартии = СокрЛП(ВводВОборотСсылка.НомерПартии);
	Если ЗначениеЗаполнено(НомерПартии) И СтрДлина(НомерПартии) > 10 ТОгда 
		ДлинаСтроки = СтрДлина(НомерПартии)-7;
		ПартияАрлы = Сред(НомерПартии,8,ДлинаСтроки);
		ПараметрыОтбора.Вставить("НомерПартии", ПартияАрлы);
	КонецЕсли;	
	ПараметрыОтбора.Вставить("ВидВСД"                , ПредопределенноеЗначение("Перечисление.ВидыВСД.Производственный"));
	ПараметрыОтбора.Вставить("GTIN"           		, GTIN);	
	Если  ЗначениеЗаполнено(ДатаПроизводства) и ДатаПроизводства <> Дата(1,1,1) Тогда
		ПараметрыОтбора.Вставить("ДатаВыработкиНачало", ДатаПроизводства);
	КонецЕсли;	
	
	Возврат ПараметрыОтбора;
КонецФункции

&НаКлиенте
//++ МВ:Овчинников 22.06.2021  •0
Процедура НачатьПодборВСД(ВводВОборотСсылка, ЗаписатьИзменения = Ложь) 

	//ТекПользователь = ВводВОборотСсылка.ТекущийПользователь;
	//МВ_ОбщийМодуль_НаСервере_ХамелеонЦРПТ пренесли в общий модуль
	ПараметрыОтбора = ПолучитьПараметрыОтбораВСД(ВводВОборотСсылка);	
	ПараметрыФормы  = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", ПараметрыОтбора);
	ПараметрыФормы.Вставить("Заголовок", "Ветеринарно-сопроводительные документы (производственные ВСД)");
	
	ДопПараметр = Новый Структура;
	ДопПараметр.Вставить("ЗаписатьИзменения", ЗаписатьИзменения);

	Оповещение = Новый ОписаниеОповещения("ВыборВСДЗавершение", ЭтотОбъект, ДопПараметр);
	
	ОткрытьФорму("Документ.ВСД.ФормаВыбора", ПараметрыФормы, , ЭтотОбъект,,, Оповещение);
	

КонецПроцедуры//-- МВ:Овчинников 22.06.2021

&НаКлиенте
Процедура ВыбратьВСД_ПоСтроке(Команда)
	//Если Элементы.ОтчетыДляОформления.ВыделенныеСтроки.Количество() > 1 Тогда
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = НСтр("ru = 'Необходимо выделить только одну строку для подбора ВСД'");
	//	//Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%1", Ответ);
	//	Сообщение.Сообщить();
	//Иначе	
		//Стр = Элементы.ОтчетыДляОформления.ВыделенныеСтроки[0];
		Стр = Элементы.ОтчетыДляОформления.ТекущиеДанные.Ссылка ;
		Если ЗначениеЗаполнено(СокрЛП(Элементы.ОтчетыДляОформления.ТекущиеДанные.НомерВСД)) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru = 'Номер ВСД для документа %1 уже заполнен, для изменения откройте документ для Выбора ВСД'");
			Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%1", Стр);
			Сообщение.Сообщить();
			Возврат;
		Иначе
			НачатьПодборВСД(Стр,Истина);
		КонецЕсли;
	//КонецЕсли;
	Элементы.ОтчетыДляОформления.Обновить(); //Не имеет смысла, обновлять нужно после завершения выбора ВСД
	//ОтчетыДляОформления.
КонецПроцедуры


//++ МВ:Овчинников 22.06.2021  •0
&НаКлиенте
Процедура ВыборВСДЗавершение(ВСД, ДополнительныеПараметры) Экспорт
	
	Если ВСД = Неопределено Тогда
		Возврат;
	КонецЕсли;
	//ВводВОборотСсылка = Элементы.ОтчетыДляОформления.ТекущиеДанные.Ссылка ;
	ИтентификаторСтроки = Элементы.ОтчетыДляОформления.ТекущиеДанные.ПолучитьИдентификатор();
	ВыборВСДЗавершениеНаСервере(ВСД,ДополнительныеПараметры,ИтентификаторСтроки);
	
КонецПроцедуры //-- МВ:Овчинников 22.06.2021

//++ МВ:Овчинников 22.06.2021  •0
&НаСервере
Процедура ВыборВСДЗавершениеНаСервере(ВСД,ДополнительныеПараметры,ИтентификаторСтроки)
	ТекСтрока = ОтчетыДляОформления.Получить(ИтентификаторСтроки);
	ВводВОборотСсылка = ТекСтрока.Ссылка;
	Если ЗначениеЗаполнено(СокрЛП(ВводВОборотСсылка.Товары.Получить(0).НомерВСД)) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Номер ВСД для документа %1 уже заполнен, для изменения откройте документ для Выбора ВСД'");
		Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%1", ВводВОборотСсылка);
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	ДокументОбъект = ВводВОборотСсылка.ПолучитьОбъект();
	//НомерВСД = ТоварыНомерВСДПривидениекФорматуМеркурия(ВСД.GUID_Меркурий);
	НомерВСД = ВСД.GUID_Меркурий;
	Если ДокументОбъект.Товары.Количество() = 1 Тогда
		Для каждого СтрокаТ из ДокументОбъект.Товары Цикл
			//ДокументОбъект.ЗаполнитьДокументПоДаннымВСД(ВСД);
			СтрокаТ.НомерВСД = НомерВСД;
			//КоличествоШтук = ФТО_ВызовСервера.КоличечтвоШтукВСД(ВСД);
			//Uncommit
			//КоличествоШтук = ФТО_ВызовСервера.КоличечтвоШтукУпаковокВСД(ВСД);
			КоличествоШтук = 0;
			Если НЕ КоличествоШтук = Неопределено Тогда
				СтрокаТ.МВ_КоличествоВСД = КоличествоШтук;
			КонецЕсли;
		КонецЦикла;	
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Ошибка. В документе  %1 количество сток в ТЧ Товары не соответсвует.'");
		Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%1", ДокументОбъект.Ссылка);
		Сообщение.Сообщить();
	КонецЕсли;
//	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
//	Модифицированность = Истина;
	Если ДополнительныеПараметры.Свойство("ЗаписатьИзменения") И ДополнительныеПараметры.ЗаписатьИзменения ТОгда
		Попытка
			ДокументОбъект.Записать();	
			ТекСтрока.НомерВСД = НомерВСД;
			ТекСтрока.КоличествоВСД =  ?(КоличествоШтук = Неопределено,0,КоличествоШтук);

		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			//ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		КонецПопытки;	
	КонецЕсли;	

КонецПроцедуры //-- МВ:Овчинников 22.06.2021

&НаКлиенте
Процедура СоздатьВводВОборотJSON(Команда)
		// Вставить содержимое обработчика.
	Перем Файл;
	ВклЗаг = 0;
	//ДанныеЛиста.Очистить();
	Режим=РежимДиалогаВыбораФайла.Открытие;
	нДиалог= НОвый ДиалогВыбораФайла(Режим);
	//Фильтр="Файл xls/txt/xml|*.xls;*.xlsx;*.txt;*.xml|Файл txt|*.txt|Файл xls|*.xls;*.xlsx|Файл xml|*.xml";
	Фильтр="Файл json|*.json";
	нДиалог.МножественныйВыбор=Истина;
	нДиалог.Фильтр=Фильтр;
	нДиалог.Заголовок="Выберите файл для загрузки..." ;
	нДиалог.Показать(Новый ОписаниеОповещения("ПослеВыбораФайла_ВводВОБОРОТ_ХамелеонЦРПТJSON",ЭтаФорма,Ложь));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФайла_ВводВОБОРОТ_ХамелеонЦРПТJSON(РР,ДД) Экспорт
	МассивАгрегация=Новый Массив;
	МассивАгрегация.Очистить();
	Если РР<>Неопределено тогда
		Для Каждого Стр_Ф Из РР Цикл
			Если ТипЗнч(Стр_Ф) = Тип("Файл") Тогда
				ИмяФайла = Стр_Ф.Имя;
				ДвоичнДанные=Новый ДвоичныеДанные(Стр_Ф.ПолноеИмя);
			Иначе			
				ВыбФайл = Новый Файл(Стр_Ф);
				ИмяФайла = ВыбФайл.Имя;
				ДвоичнДанные=Новый ДвоичныеДанные(Стр_Ф); 
			КонецЕсли;
			
			СтруктураПараметров = Новый Структура("ИмяФайла",ИмяФайла );
			СоздатьАгрегацииПоФайлуJSON(ДвоичнДанные,МассивАгрегация,СтруктураПараметров);
			
		Конеццикла;
		
		Если дД=Истина Тогда
			
			Для Каждого Стр_1 Из МассивАгрегация Цикл
				Форм=ПолучитьФорму("Документ.ВводВОборот_ХамелеонЦРПТ.Форма.ФормаДокумента",Новый Структура(
				"Ключ",Стр_1));
				Форм.ОтправитьЗаявку(ДД);
				
			Конеццикла;
			
		КонецЕслИ;
	КонецЕсли;
	
	Элементы.ОтчетыДляОформления.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФайла_ЗагрузитьОтчетыОнанеченииИзАрхиваНаКлиенте(Результат, ПараметрыВыполнения) Экспорт
	Если Результат<>Неопределено тогда
		Для Каждого ИмяАрхивногоФайла Из Результат Цикл
	
			Сообщить("Распаковка файла - " + ИмяАрхивногоФайла);
			Сейчас = ТекущаяДата();
			
			// Откроем файл для чтения
			ЧтениеZIP = Новый ЧтениеZipФайла(ИмяАрхивногоФайла,);
			
			Каталог = ПолучитьИмяВременногоФайла();
			СоздатьКаталог(Каталог);
			ПапкаНазначения = Каталог + "\";
						
			// Распакуем все файлы из архива
			ЧтениеZIP.ИзвлечьВсе(ПапкаНазначения, РежимВосстановленияПутейФайловZIP.НеВосстанавливать);
			
			// Распакуем файлы по одиночке
			Для Каждого Элемент Из ЧтениеZIP.Элементы Цикл
				//Сообщить("Распаковка файла:" + Элемент.ПолноеИмя);
				ЧтениеZIP.Извлечь(Элемент,
				ПапкаНазначения,
				РежимВосстановленияПутейФайловZIP.Восстанавливать, 
				? (Элемент.Зашифрован, "", ""));
			КонецЦикла;
			
			ЧтениеZIP.Закрыть();
			
			// Сообщим время, потребовавшееся для работы
			Сообщить("Распаковка заняла " + (ТекущаяДата() - Сейчас) + " секунд(ы)");
		КонецЦикла;
	КонецЕсли;
	
	МассивФайлов = НайтиФайлы(ПапкаНазначения,"*.json");
	ОтправитьЗаявку = Ложь;
	ПослеВыбораФайла_ВводВОБОРОТ_ХамелеонЦРПТJSON(МассивФайлов,ОтправитьЗаявку);

	Попытка
		УдалитьФайлы(ПапкаНазначения);
	Исключение
		Заголовок = НСтр("ru = 'Удаление файла'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ИнформационныйТекст = ИнформацияОбОшибке().Описание ;
		ДобавитьЗаписьЖурналаРегистрации(Заголовок, ИнформационныйТекст, Истина);

	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОтчетыОнанеченииИзАрхива(Команда)
	//ЗвгрузитьОтчетыОнанеченииИзАрхиваНаСервере();
	Перем Файл;
	ВклЗаг = 0;
	//ДанныеЛиста.Очистить();
	Режим=РежимДиалогаВыбораФайла.Открытие;
	нДиалог= НОвый ДиалогВыбораФайла(Режим);
	//Фильтр="Файл xls/txt/xml|*.xls;*.xlsx;*.txt;*.xml|Файл txt|*.txt|Файл xls|*.xls;*.xlsx|Файл xml|*.xml";
	Фильтр="Файл zip|*.zip";
	нДиалог.МножественныйВыбор = Ложь;
	нДиалог.Фильтр=Фильтр;
	нДиалог.Заголовок="Выберите архив для загрузки..." ;
	нДиалог.Показать(Новый ОписаниеОповещения("ПослеВыбораФайла_ЗагрузитьОтчетыОнанеченииИзАрхиваНаКлиенте",ЭтаФорма,Ложь));
	

	
КонецПроцедуры

Процедура СоздатьАгрегацииПоФайлуJSON(ДвоичнДанные,МассивАгрегация,СтруктураПараметров)
	
	Пользователь=ХранилищеСистемныхНастроек.Загрузить("ТекущийПользователь_ХамелеонЦРПТ","ТекущийПользователь_ХамелеонЦРПТ");
	СтруктураПараметров.Вставить("Пользователь",Пользователь);
	Если ЗначениеЗаполнено(Пользователь) И типЗнч(Пользователь)=Тип("СправочникСсылка.Пользователи_ХамелеонЦРПТ") тогда
		МВ_ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗагрузитьВводВоборотJSON(ДвоичнДанные,МассивАгрегация,СтруктураПараметров);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка. Пользователь не определен");
	КонецЕсли;
	
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусыВыделенныхСтрокОтчетаОНанесении(Команда)
	// Вставить содержимое обработчика.
	
	МассивВ=Новый Массив;
	Для Каждого СтрокаСписка Из ОбновитьСтатус Цикл	
	//Для Каждого СТр_11 Из Элементы.ОтчетыДляОформления.ВыделенныеСтроки Цикл
		   МассивВ.Добавить(СтрокаСписка.ССылка);
	КонецЦикла;
	Если МассивВ.Количество()>0 Тогда
		Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма",);
		Форм.ОбновитьСтатусыДокументов(Команда,,,МассивВ);
	КонецЕсли;
	Элементы.ОтчетыДляОформления.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеТаблицыОтчетовОНанесенииДляОформленияНаКлиенте(Команда)
	ОбновитьДанныеТаблицыОтчетовОНанесенииДляОформления();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНаОснвоании(Команда)
	ОбновитьДанныеТаблицыОтчетовОНанесенииДляОформления();

	МассивОтчетаОНанесении=Новый Массив;
	Для Каждого СтрокаСписка Из ОтчетыДляОформления Цикл		
		//ПараметрыФормы = Новый Структура("ЗначениеЗаполнения ", СтрокаСписка);
		//ОткрытьФорму("Документ.ВводВОборот_ХамелеонЦРПТ.Форма.ФормаДокумента", ПараметрыФормы);
		Если НЕ ЗначениеЗаполнено(СтрокаСписка.НомерВСД) Тогда
			//СтрокаСписка.Статус = "Ошибка. ВСД не заполнен. Ввод в оборот не создан.";
			Продолжить;
		КонецЕсли;	
		Если НЕ ЗначениеЗаполнено(СтрокаСписка.Статус)
			ИЛИ СтрокаСписка.Статус = ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ") Тогда  
		//	СтрокаСписка.Статус = "Ошибка. На основании уже создан ввод в оборот.";
			Продолжить;
		КонецЕсли;	

		Если ЗначениеЗаполнено(СтрокаСписка.ДокОснование) Тогда
		//	СтрокаСписка.Статус = "Ошибка. На основании уже создан ввод в оборот.";
			Продолжить;
		КонецЕсли;	

		НовыйДокСсылка = СоздатьНаОснвоанииНаСервере(СтрокаСписка.Ссылка);
		Если  НовыйДокСсылка <> Неопределено Тогда
			
			СтрокаСписка.ДокОснование =  НовыйДокСсылка;
			
			//Отрыть форму документа
			//	ОткрытьЗначение(НовыйДокСсылка);
		КонецЕсли;
	Конеццикла;
		
	ЗаполнитьНаСервереВВодВОборотДляОформления();

	ОбновитьДанныеТаблицыОтчетовОНанесенииДляОформления();

	Элементы.ОтчетыДляОформления.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьтаблицуСпискаСтатусов(Команда)
	ОбновитьСтатус.Очистить();
	ЗаполнитьНаСервереОбновитьСтатусВводаВОборот();
КонецПроцедуры

//++ МВ:Овчинников 29.06.2021  •0
&НаСервереБезКонтекста
Процедура ДобавитьЗаписьЖурналаРегистрации(Заголовок, ИнформационныйТекст, Ошибка = Ложь)
	
	ЗаписьЖурналаРегистрации(
	Заголовок,
	?(Ошибка = Истина, УровеньЖурналаРегистрации.Ошибка, УровеньЖурналаРегистрации.Информация),
	,
	,
	ИнформационныйТекст);


КонецПроцедуры
//-- МВ:Овчинников 29.06.2021

&НаСервере
Функция  СоздатьНаОснвоанииНаСервере(ОтчетОбИспользованииСсылка)
	ДатаДокумента = ТекущаяДатаСеанса();
	
	Если  ОтчетОбИспользованииСсылка.ТипДокумента = ПредопределенноеЗначение("Перечисление.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ОтчетОбИспользовании") Тогда
		ДокументОбъект = Документы.ВводВОборот_ХамелеонЦРПТ.СоздатьДокумент();
		ДокументОбъект = ОтчетОбИспользованииСсылка.Скопировать();
		ДокументОбъект.ДокОснование = ОтчетОбИспользованииСсылка;
		ДокументОбъект.Дата = ДатаДокумента;
		ДокументОбъект.Комментарий = "Создано на основаниии " + ОтчетОбИспользованииСсылка;
		Попытка
			ДокументОбъект.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			Возврат Неопределено;
			//ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		КонецПопытки;
		//Попытка
		//	ОтчетОбИспользованииОбъект  = ОтчетОбИспользованииСсылка.ПолучитьОбъект();
		//	ОтчетОбИспользованииОбъект.ДокОснование = ДокументОбъект.Ссылка();
		//	ОтчетОбИспользованииОбъект.Записать();
		//Исключение
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		//	//ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		//КонецПопытки;
			
		Возврат ДокументОбъект.Ссылка;
		//ДокументОбъект.ПолучитьФорму("ФормаДокумента",ДокументОбъект).Открыть();
	КонецЕсли;
	Возврат Неопределено;
КонецФункции;




//&НаСервере
//Функция ПолучитьGTIN(ПродукцияХамелеон)
//	Возврат  Формат(ПродукцияХамелеон.GTIN,"ЧГ=0");
//КонецФункции // ПолучитьGTIN() //-- МВ:Овчинников 23.06.2021

#КонецОбласти