Функция ПолучитьИзПользователя()
	Если Объект.Организация.ИНН=ТекущийПользователь.Организация.ИНН 
		И Объект.ТекущийПользователь.СайтыВходаВСистему=ТекущийПользователь.СайтыВходаВСистему Тогда
		Возврат Обработки._Запуск_ХамелеонЦРПТ.ПолучитьИзПользователя(Текущийпользователь);
	ИначеЕсли Объект.ТекущийПользователь.ПометкаУдаления=Ложь Тогда
		
		Возврат Обработки._Запуск_ХамелеонЦРПТ.ПолучитьИзПользователя(Текущийпользователь);
	Иначе
		
			//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи_ХамелеонЦРПТ.Ссылка
		|ИЗ
		|	Справочник.Пользователи_ХамелеонЦРПТ КАК Пользователи_ХамелеонЦРПТ
		|ГДЕ
		|	Пользователи_ХамелеонЦРПТ.Организация.ИНН = &Организация
		|	И Пользователи_ХамелеонЦРПТ.СайтыВходаВСистему = &СайтыВходаВСистему
		|	И НЕ Пользователи_ХамелеонЦРПТ.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация.ИНН);
	Запрос.УстановитьПараметр("СайтыВходаВСистему", Объект.ТекущийПользователь.СайтыВходаВСистему);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	НайтиПольз=Неопределено;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		                      НайтиПольз=ВыборкаДетальныеЗаписи.Ссылка
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

		
		//НайтиПольз=Справочники.Пользователи_ХамелеонЦРПТ.НайтиПоРеквизиту("Организация",Объект.Организация);
		Если ЗначениеЗаполнено(НайтиПольз) Тогда
			Возврат Обработки._Запуск_ХамелеонЦРПТ.ПолучитьИзПользователя(НайтиПольз);
		КонецЕсли;
		
	КонецЕслИ;
	Возврат Неопределено;
КонецФункции

Процедура ЗапишемВРегистр_Ответ(ТекстДокумент)
	РегДв=РегистрыСведений.ОтправленныеПолученные_ХамелеонЦРПТ.СоздатьНаборЗаписей();
	РегДв.Отбор.Документ.Установить(Объект.Ссылка);
	РегДв.Отбор.Вид.Установить("Получили ответ");
	Добав=РегДв.Добавить();
	Добав.Документ=ОБъект.Ссылка;
	Добав.Вид="Получили ответ";
	Добав.Файл=Новый ХранилищеЗначения(ТекстДокумент,Новый СжатиеДанных(9));
	РегДв.Записать(Истина);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОчиститьТокенСрегистра(ТТ)
	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаписатьТокенВРегистр(ТТ,"")
КонецПроцедуры

Функция ЗагрузканаСервереОтправкаВЦРПТ(Thumbprint_1,СРегистра,УжеОтправили,Тело)
Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
	
		HTTPЗапрос=Новый HTTPЗапрос("/api/v3/lk/documents/km/cancellation/create");
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
	Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	Если 	ЗаписыватьДанныеПриОтправкеЗаказа тогда
		ЗапишемВРегистр_Ответ(Текст1);
	КонецЕсли;
		
	
	
	Если Ответ.КодСостояния=202 ИЛИ Ответ.КодСостояния=200 
		ИЛИ Ответ.КодСостояния=201 
		Тогда
			Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отправлен");
			Объект._Order_ID=Текст1;
			
	ИначеЕсли Ответ.КодСостояния=401 		ИЛИ Ответ.КодСостояния=502    Тогда
			Если УжеОтправили=Истина Тогда
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
			Иначе
				Возврат Ложь;
			КонецЕсли
	Иначе
		//	Если УжеОтправили=Истина Тогда
				Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ");
					Попытка
						ЧтениеJSON = Новый ЧтениеJSON;
						ЧтениеJSON.УстановитьСтроку(Текст1);
						NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
						попытка
							
							Объект.ОшибкаОтправки=NNN.error_message;
						Исключение
							Попытка
								Объект.ОшибкаОтправки=NNN.error_description;
								Если NNN.error="access_denied" Тогда
									Сообщить(NNN.error_description+" "+" сайт ЦРПТ не доступен. Повторите отправку позже");
								КонецЕсли;
							Исключение
							КонецПопытки;
							
						КонецПопытки;
						
					Исключение
					КонецПопытки;
		//	Иначе
		//		ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,ЭтаФорма,"ПодписатьФайлПослеПолученияТокена");
		//		ОтправитьЗаявку(Команда,Истина)			
		//	КонецЕсли
	КонецЕсли;
	
	Возврат Истина
КонецФункции

Функция НаСервереФормируемЗаказ_Шины(Thumbprint_1)
		Чтен=Новый  ЗаписьJSON;
		Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
		Чтен.ЗаписатьНачалоОбъекта();
		
		Чтен.ЗаписатьИмяСвойства("dropoutReason");
		
		Чтен.ЗаписатьЗначение(xmlString(Объект.ТипСписанияСУЗ));
		
		
		Чтен.ЗаписатьИмяСвойства("sntins");
		Чтен.ЗаписатьНачалоМассива();
		
		Для Каждого Стр Из Объект.СерийныеНомера Цикл
			
				
				НомерКМ="";		
				
					//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	НомераКМ_ХамелеонЦРПТ.НомерКМ
					|ИЗ
					|	РегистрСведений.НомераКМ_ХамелеонЦРПТ КАК НомераКМ_ХамелеонЦРПТ
					|ГДЕ
					|	НомераКМ_ХамелеонЦРПТ.НомерКМ_Короткий = &НомерКМ_Короткий";
				
				Запрос.УстановитьПараметр("НомерКМ_Короткий", Стр.cis);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Нашли=ЛожЬ;
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					НомерКМ=ВыборкаДетальныеЗаписи.НомерКМ;
					НомерКМ=РаскодироватьСтроку(НомерКМ,СпособКодированияСтроки.КодировкаURL);
			
					
				КонецЦикла;
				Если Не ЗначениеЗАполнено(НомерКМ) Тогда
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
						
						
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор
					|ИЗ
					|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Обороты(, , Регистратор, СерийныйНомер = &cis) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты
					|ГДЕ
					|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор ССЫЛКА Документ.ЗаказМарок_ХамелеонЦРПТ
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	ОстаткиКМНеобходимоВвестиОтчетомОбИспользовании_ХамелеонЦРПТОбороты.Регистратор
					|ИЗ
					|	РегистрНакопления.ОстаткиКМНеобходимоВвестиОтчетомОбИспользовании_ХамелеонЦРПТ.Обороты(, , Регистратор, СерийныйНомер = &cis) КАК ОстаткиКМНеобходимоВвестиОтчетомОбИспользовании_ХамелеонЦРПТОбороты
					|ГДЕ
					|	ОстаткиКМНеобходимоВвестиОтчетомОбИспользовании_ХамелеонЦРПТОбороты.Регистратор ССЫЛКА Документ.ЗаказМарок_ХамелеонЦРПТ";
				
				Запрос.УстановитьПараметр("cis", Стр.cis);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				РРР=КодироватьСтроку(Стр.cis,СпособКодированияСТроки.КодировкаURL);
				НомерКМ=Стр.cis;
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				

				
				Если ВыборкаДетальныеЗаписи.Следующий() Тогда
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					Для Каждого Стр_111 Из  ВыборкаДетальныеЗаписи.Регистратор.КМИзAPI Цикл
						Если Найти(Стр_111.НомерКМ,РРР)=1 Тогда
							НомерКМ=Стр_111.НомерКМ;
							НомерКМ=РаскодироватьСтроку(НомерКМ,СпособКодированияСтроки.КодировкаURL);
			
				Нашли=Истина;
							
							Прервать;
						КонецЕсли;
						
					Конеццикла;
					
					
				КонецЕсли;
				Иначе
					Нашли=Истина;
				КонецЕсли ;
				
				Если Не Нашли Тогда
					
					Если Найти(НомерКМ,"%1D")>0 Тогда
						НомерКМ=РаскодироватьСтроку(НомерКМ,СпособКодированияСтроки.КодировкаURL);
					КонецЕсли;
					
				Конецесли;
					
					
					cis=НомерКМ;
					
			

					чтен.ЗаписатьЗначение(cis)
				
				Конеццикла;
				Чтен.ЗаписатьКонецМассива();
		Чтен.ЗаписатьИмяСвойства("sourceDocNum");
		
		Чтен.ЗаписатьЗначение(Объект.Номер);
		
		Чтен.ЗаписатьИмяСвойства("sourceDocDate");
		
		Чтен.ЗаписатьЗначение(Формат(Объект.Дата,"ДФ=""гггг-ММ-дд"""));
		Если Объект.ТипПродукции=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Табак")
			
			ИЛИ
			 Объект.ТипПродукции=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак")
			
			Тогда
			
			Чтен.ЗаписатьИмяСвойства("address");
			
			Чтен.ЗаписатьЗначение(Объект.Организация.АдресМестонахождения);
			
			
			Чтен.ЗаписатьИмяСвойства("withChild");
			
			Чтен.ЗаписатьЗначение("false");
			Чтен.ЗаписатьИмяСвойства("participantId");
			
			Чтен.ЗаписатьЗначение(Объект.Организация.ИНН);
			Чтен.ЗаписатьИмяСвойства("productionOrderId");
			
			Чтен.ЗаписатьЗначение(xmlString(Объект.Ссылка.УникальныйИдентификатор()));
			Чтен.ЗаписатьИмяСвойства("productionLineId");
			
			Чтен.ЗаписатьЗначение("1");
			
		Конецесли;
			
//		Чтен.ЗаписатьКонецМассива();
		Чтен.ЗаписатьКонецОбъекта();
					
		
		
		Текст=Чтен.Закрыть();
	
	
	Возврат Текст;
Конецфункции


Функция ЗагрузканаСервереОтправитьЗаявка_Шины(Thumbprint_1,Тело,Адрес,Порт,Защищ)
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Адрес,Порт,,,Прокси,Thumbprint_1.Таймаут,Защищ);
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Адрес,Порт,,,,Thumbprint_1.Таймаут,Защищ);
			КонецЕсли;
			
	
		HTTPЗапрос=Новый HTTPЗапрос("api/v2/"+Thumbprint_1.СайтКСУЗ+"/dropout?omsId="+Thumbprint_1.ИдентификаторСУЗ);
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
																			ТокенСУЗ=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПодключениеКСУЗ_ХамелеонЦРПТ(Thumbprint_1);

	HTTPЗапрос.Заголовки.Вставить("clientToken",ТокенСУЗ);
	HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
	Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	
	Если 	ЗаписыватьДанныеПриОтправкеЗаказа тогда
		ЗапишемВРегистр_Ответ(Текст1);
	КонецЕсли;
	
	
	Если Ответ.КодСостояния=202 Тогда
			Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отправлен");
				//ЧтениеJSON = Новый ЧтениеJSON;
				//ЧтениеJSON.УстановитьСтроку(Текст1);
				NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
			Объект._Order_ID=NNN.order_id;
	
	ИначеЕсли Ответ.КодСостояния=200 Тогда
			Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отправлен");
				//ЧтениеJSON = Новый ЧтениеJSON;
				//ЧтениеJSON.УстановитьСтроку(Текст1);
				NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
			Объект._Order_ID=NNN.orderId;
			
	ИначеЕсли Ответ.КодСостояния=401 		ИЛИ Ответ.КодСостояния=502    Тогда
	Иначе
		//	Если УжеОтправили=Истина Тогда
				Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ");
					Попытка
						//ЧтениеJSON = Новый ЧтениеJSON;
						//ЧтениеJSON.УстановитьСтроку(Текст1);
						NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
						попытка
							
							Объект.ОшибкаОтправки=NNN.error_message;
						Исключение
							Попытка
								Объект.ОшибкаОтправки=NNN.error_description;
								Если NNN.error="access_denied" Тогда
									Сообщить(NNN.error_description+" "+" сайт ЦРПТ не доступен. Повторите отправку позже");
								КонецЕсли;
							Исключение
							КонецПопытки;
							
						КонецПопытки;
						
					Исключение
					КонецПопытки;
		//	Иначе
		//		ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,ЭтаФорма,"ПодписатьФайлПослеПолученияТокена");
		//		ОтправитьЗаявку(Команда,Истина)			
		//	КонецЕсли
	КонецЕсли;
	//Если Ответ.КодСостояния<>200 Тогда
	//	
	//	Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ");
	//	  Текст1=Ответ.ПолучитьТелоКакСтроку();
	//		Попытка
	//			ЧтениеJSON = Новый ЧтениеJSON;
	//			ЧтениеJSON.УстановитьСтроку(Текст1);
	//			NNN=ПрочитатьJSON(ЧтениеJSON);
	//			Объект.ОшибкаОтправки=NNN.error_message;
	//			
	//		Исключение
	//		КонецПопытки;
	//	Иначе
	//		Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.ОжидаетОтвета");
	//			ЧтениеJSON = Новый ЧтениеJSON;
	//			ЧтениеJSON.УстановитьСтроку(Текст1);
	//			NNN=ПрочитатьJSON(ЧтениеJSON);
	//		Объект._Order_ID=NNN.order_id;
	//КонецЕсли;

	
	Возврат Истина;
КонецФункции


&НаКлиенте
Процедура ОтпрваитьШины()
	
	Thumbprint_1=ПолучитьИзПользователя();	
	Если Не ЗначениеЗаполнено(Thumbprint_1) Тогда
		Возврат;
	КонецЕслИ;
	
	СформироватьФайлДляОтправки=НаСервереФормируемЗаказ_Шины(Thumbprint_1);
//	НеПрошлаПроверка21(СформироватьФайлДляОтправки);
		СформироватьФайлДляОтправки=СтрЗаменить(СформироватьФайлДляОтправки,Символы.ПС,"");
		СформироватьФайлДляОтправки=СтрЗаменить(СформироватьФайлДляОтправки,Символы.ВК,"");
	
	//Подписанный="";
	//ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ПодписатьФайл(Thumbprint_1.Внешняя,СформироватьФайлДляОтправки,Thumbprint_1.Thumbprint_1,Подписанный,Истина);
	
	//Подписанный=base64Строка(ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьДвоичныеДанныеИзСтроки_Сервер(
	//Подписанный,КодировкаТекста.UTF8,Ложь));
	
	//			Подписанный=СтрЗаменить(Подписанный,Символы.ПС,"\r\n");
	//		Подписанный=СтрЗаменить(Подписанный,Символы.ВК,"\r\n");
	//		Подписанный=СтрЗаменить(Подписанный,"\r\n","");
	
	
	//Добав=base64Строка(ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьДвоичныеДанныеИзСтроки_Сервер(
	//СформироватьФайлДляОтправки,КодировкаТекста.UTF8,Ложь));
	//			Добав=СтрЗаменить(Добав,Символы.ПС,"\r\n");
	//		Добав=СтрЗаменить(Добав,Символы.ВК,"\r\n");
	//		Добав=СтрЗаменить(Добав,"\r\n","");

	Тело=СформироватьФайлДляОтправки;
		АдресРаздробить=Thumbprint_1.АдресСУЗ;
		Адрес=Сред(АдресРаздробить,Найти(АдресРаздробить,"://")+3);
		Адрес=Сред(Адрес,1,Найти(Адрес,":")-1);
		Порт=Сред(АдресРаздробить,Найти(АдресРаздробить,"://")+3);
		Порт=Сред(Порт,Найти(Порт,":")+1);
		
		ТекстСохранить=Адрес;
		Попытка
			Порт=число(Порт);
			ТекстСохранить=ТекстСохранить+":"+ФОрмат(ПОрт,"ЧГ=");
		Исключение
			Порт=Неопределено;
		КонецПопытки;
		
				Если Не ЗначениеЗаполнено(Адрес) Тогда
			
			ПоказатьПредупреждение(,"В пользователе не заполнен адрес СУЗ");
			Возврат;
			
		КонецЕсли;
		Если Найти(АдресРаздробить,"https")=1 Тогда
			ТекстСохранить="https://"+ТекстСохранить;
				Защищ=Новый ЗащищенноеСоединениеopenSSL();
			Иначе
			ТекстСохранить="http://"+ТекстСохранить;
				Защищ=Неопределено;
			КонецЕсли;

			ТекстСохранить="POST "+ТекстСохранить+"/";
	
	
	Если ОбработкаWEBНаСервере Тогда
		ЗагрузканаСервереОтправитьЗаявка_Шины(Thumbprint_1,Тело,Адрес,Порт,Защищ);
		
		
	Иначе
	
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Адрес,Порт,,,Прокси,Thumbprint_1.Таймаут,Защищ);
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Адрес,Порт,,,,Thumbprint_1.Таймаут,Защищ);
			КонецЕсли;
			
			
			Что=Thumbprint_1.Что;
		HTTPЗапрос=Новый HTTPЗапрос("api/v2/"+Thumbprint_1.СайтКСУЗ+"/dropout?omsId="+Thumbprint_1.ИдентификаторСУЗ);
					ТекстСохранить=ТекстСохранить+"api/v2/"+Thumbprint_1.СайтКСУЗ+"/dropout?omsId="+Thumbprint_1.ИдентификаторСУЗ;

					ТекстСохранить=ТекстСохранить+Символы.ПС+"Заголовки";
		
					ТекстСохранить=ТекстСохранить+Символы.ПС+"Content-Type:application/json;charset=UTF-8";
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
																			ТокенСУЗ=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ПодключениеКСУЗ_ХамелеонЦРПТ(Thumbprint_1);

					ТекстСохранить=ТекстСохранить+Символы.ПС+"clientToken:"+ТокенСУЗ;
	HTTPЗапрос.Заголовки.Вставить("clientToken",ТокенСУЗ);
					ТекстСохранить=ТекстСохранить+Символы.ПС+"Тело запрсоа";
	HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
					ТекстСохранить=ТекстСохранить+Символы.ПС+Тело;
	
	
	
	Если 	ЗаписыватьДанныеПриОтправкеЗаказа тогда
		ЗапишемВРегистр(ТекстСохранить);
	КонецЕсли;
	
	
	Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	
	Если 	ЗаписыватьДанныеПриОтправкеЗаказа тогда
		ЗапишемВРегистр_Ответ(Текст1);
	КонецЕсли;
	
	
	Если Ответ.КодСостояния=202 Тогда
			Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отправлен");
				//ЧтениеJSON = Новый ЧтениеJSON;
				//ЧтениеJSON.УстановитьСтроку(Текст1);
				NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
			Объект._Order_ID=NNN.order_id;
	
	ИначеЕсли Ответ.КодСостояния=200 Тогда
			Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отправлен");
				//ЧтениеJSON = Новый ЧтениеJSON;
				//ЧтениеJSON.УстановитьСтроку(Текст1);
				NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
				Объект._Order_ID=NNN.reportId;
			
	ИначеЕсли Ответ.КодСостояния=401 		ИЛИ Ответ.КодСостояния=502    Тогда
	Иначе
		//	Если УжеОтправили=Истина Тогда
				Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ");
					Попытка
						//ЧтениеJSON = Новый ЧтениеJSON;
						//ЧтениеJSON.УстановитьСтроку(Текст1);
						NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
						попытка
							
							Объект.ОшибкаОтправки=NNN.error_message;
						Исключение
							Попытка
								Объект.ОшибкаОтправки=NNN.error_description;
								Если NNN.error="access_denied" Тогда
									Сообщить(NNN.error_description+" "+" сайт ЦРПТ не доступен. Повторите отправку позже");
								КонецЕсли;
							Исключение
								Сообщить(Текст1);
							КонецПопытки;
							
						КонецПопытки;
						
					Исключение
					КонецПопытки;
		//	Иначе
		//		ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,ЭтаФорма,"ПодписатьФайлПослеПолученияТокена");
		//		ОтправитьЗаявку(Команда,Истина)			
		//	КонецЕсли
	КонецЕсли;
	//Если Ответ.КодСостояния<>200 Тогда
	//	
	//	Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ");
	//	  Текст1=Ответ.ПолучитьТелоКакСтроку();
	//		Попытка
	//			ЧтениеJSON = Новый ЧтениеJSON;
	//			ЧтениеJSON.УстановитьСтроку(Текст1);
	//			NNN=ПрочитатьJSON(ЧтениеJSON);
	//			Объект.ОшибкаОтправки=NNN.error_message;
	//			
	//		Исключение
	//		КонецПопытки;
	//	Иначе
	//		Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.ОжидаетОтвета");
	//			ЧтениеJSON = Новый ЧтениеJSON;
	//			ЧтениеJSON.УстановитьСтроку(Текст1);
	//			NNN=ПрочитатьJSON(ЧтениеJSON);
	//		Объект._Order_ID=NNN.order_id;
	//КонецЕсли;
	КонецЕсли;
	ЭтаФорма.Записать();
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВЦРПТ(Команда,УжеОтправили=Ложь)     Экспорт
	// Вставить содержимое обработчика.
	
	
	
	ЭтаФорма.Записать();
	
	Если //Объект.ТипПродукции=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Шины")
		//Объект.ТипПродукции=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Молоко") 
		//ИЛИ Объект.ТипПродукции=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Свет")
		//ИЛИ Объект.ТипПродукции=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Одежда")
		Объект.ЧерезСУЗ ИЛИ
		Объект.ТипПродукции=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Табак")
		ИЛИ Объект.ТипПродукции=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак")
		
		ИЛИ Объект.ТипПродукции=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Фармацевтика")
//		ИЛИ Объект.ТипПродукции=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Фото")
			
		//ИЛИ Объект.ТипПродукции=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Парфюм")
		Тогда
		ОтпрваитьШины();
		
		Возврат;
		
	КонецЕсли;
		
	
	
	
	Thumbprint_1=ПолучитьИзПользователя();	
	Если Не ЗначениеЗаполнено(Thumbprint_1) Тогда
		Возврат;
	КонецЕслИ;
	
	СРегистра=Thumbprint_1.ТокенПоОтпечатку;
	Если Не ЗначениеЗаполнено(СРегистра) тогда
		Попытка
			СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);	
		исключение
			СРегистра=Неопределено;
		КонецПопытки;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СРегистра) Тогда
		ПоказатьПредупреждение(,"Не удалось получить токен по организации");
		Возврат;
	Конецесли;
	
	
		СформироватьФайлДляОтправки=СформироватьXmlФайлИмпорт();
		Попытка
//			Если НеПрошлаПроверкаИмпорт(СформироватьФайлДляОтправки) Тогда
//				Объект.ОшибкаОтправки="Проверка документа не прошла по схеме xsd";
				//ПоказатьПредупреждение("");
//				Возврат;
				
//			КонецЕсли;
			
			
		Исключение
		КонецПопытки;
		
	Подписанный="";
	СформироватьФайлДляОтправки=СтрЗаменить(СформироватьФайлДляОтправки,Символы.ПС,"");
	СформироватьФайлДляОтправки=СтрЗаменить(СформироватьФайлДляОтправки,Символы.ВК,"");
		
		
	Подписанный="";
	ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ПодписатьФайл(Thumbprint_1.Внешняя,СформироватьФайлДляОтправки,Thumbprint_1,Подписанный,Истина);
	
	//Подписанный=base64Строка(ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьДвоичныеДанныеИзСтроки_Сервер(
	//Подписанный,КодировкаТекста.UTF8,Ложь));
	
				Подписанный=СтрЗаменить(Подписанный,Символы.ПС,"\r\n");
			Подписанный=СтрЗаменить(Подписанный,Символы.ВК,"\r\n");
			Подписанный=СтрЗаменить(Подписанный,"\r\n","");
	
	
	Добав=base64Строка(ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьДвоичныеДанныеИзСтроки_Сервер(
	СформироватьФайлДляОтправки,КодировкаТекста.UTF8,Ложь));
				Добав=СтрЗаменить(Добав,Символы.ПС,"\r\n");
			Добав=СтрЗаменить(Добав,Символы.ВК,"\r\n");
			Добав=СтрЗаменить(Добав,"\r\n","");

			Тип="LK_KM_CANCELLATION";
			Если Объект.ВидСписания=ПредопределенноеЗначение("Перечисление.ВидДокументаСписания_ХамелеонЦРПТ.СИсКМНанесенныйНаТоварБезВыводаИзОборота")
				//ИЛИ Объект.ТипПродукции=ПредопределенноеЗначение("Перечисление.ТипПродукции_ХамелеонЦРПТ.Молоко") 
				Тогда
				Тип="LK_APPLIED_KM_CANCELLATION";
			КонецЕсли;
			
	Тело="{
	|""product_document"":"""+Добав+""",
	|""document_format"": ""MANUAL"",
	|""signature"":"""+Подписанный+""",
	|""type"":"""+Тип+"""}";
	
	
	Что=Thumbprint_1.Что;
		 	Если ОбработкаWEBНаСервере Тогда
		Если НЕ ЗагрузканаСервереОтправкаВЦРПТ(Thumbprint_1,СРегистра,УжеОтправили,Тело) Тогда
				Если УжеОтправили=Истина Тогда
				//ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
			Иначе
				ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
				ОтправитьВЦРПТ(Команда,Истина)			
		КонецЕсли
		
		КонецЕсли;
		
		
	Иначе
		Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
			Если Объект.ВидСписания=ПредопределенноеЗначение("Перечисление.ВидДокументаСписания_ХамелеонЦРПТ.СИсКМНанесенныйНаТоварБезВыводаИзОборота") Тогда
			HTTPЗапрос=Новый HTTPЗапрос("/api/v3/lk/documents/create?pg="+Что);
			Иначе
			HTTPЗапрос=Новый HTTPЗапрос("/api/v3/lk/documents/create?pg="+Что);
		КонецЕсли;
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
	Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	Если 	ЗаписыватьДанныеПриОтправкеЗаказа тогда
		ЗапишемВРегистр_Ответ(Текст1);
	КонецЕсли;
		
	
	
	Если Ответ.КодСостояния=202 ИЛИ Ответ.КодСостояния=200 
		ИЛИ Ответ.КодСостояния=201 
		Тогда
			Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отправлен");
			Объект._Order_ID=Текст1;
			
	ИначеЕсли Ответ.КодСостояния=401 		ИЛИ Ответ.КодСостояния=502    Тогда
			Если УжеОтправили=Истина Тогда
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
			Иначе
				ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
				ОтправитьВЦРПТ(Команда,Истина)			
			КонецЕсли
	Иначе
		//	Если УжеОтправили=Истина Тогда
				Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ");
					Попытка
						ЧтениеJSON = Новый ЧтениеJSON;
						ЧтениеJSON.УстановитьСтроку(Текст1);
						NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
						попытка
							
							Объект.ОшибкаОтправки=NNN.error_message;
						Исключение
							Попытка
								Объект.ОшибкаОтправки=NNN.error_description;
								Если NNN.error="access_denied" Тогда
									Сообщить(NNN.error_description+" "+" сайт ЦРПТ не доступен. Повторите отправку позже");
								КонецЕсли;
							Исключение
							КонецПопытки;
							
						КонецПопытки;
						
					Исключение
					КонецПопытки;
		//	Иначе
		//		ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,ЭтаФорма,"ПодписатьФайлПослеПолученияТокена");
		//		ОтправитьЗаявку(Команда,Истина)			
		//	КонецЕсли
	КонецЕсли;
	           КонецЕсли;
	ЭтаФорма.Записать();
КонецПроцедуры

Функция НеПрошлаПроверкаИмпорт(Файл_1) Экспорт
	//	Возврат Ложь;
	КаталогВременногоФайла=КаталогВременныхФайлов()+"new_maket_V21\";
	СоздатьКаталог(КаталогВременногоФайла);
		
	//Файл=ПолучитьИмяВременногоФайла("xml");
	Файл=ПолучитьИмяВременногоФайла("xml");
	Файл=СтрЗаменить(Файл,КаталогВременныхФайлов(),КаталогВременногоФайла);
	
	
	Файл_2=Новый ТекстовыйДокумент;
	Файл_2.ДобавитьСтроку(Файл_1);
	Файл_2.Записать(Файл,КодировкаТекста.UTF8);
	
	//ИмяВремен=ПолучитьИмяВременногоФайла("xsd");
	//МакетXDTO.Записать(ИмяВремен,КодировкаТекста.ANSI);
	//dictionary_v20=ПолучитьИмяВременногоФайла("xsd");
	//dictionary_v20=КаталогВременногоФайла+"dictionary_v21.xsd";
	
	dictionary_v20=ПолучитьИмяВременногоФайла("xsd");
	dictionary_v20=СтрЗаменить(dictionary_v20,КаталогВременныхФайлов(),КаталогВременногоФайла);
	
	
	Текст=Документы.СписаниеКМНанесенныхНеНанесенныхНаТовар_ХамелеонЦРПТ.ПолучитьМакет("Отгрузка");
	Текст.Записать(dictionary_v20,КодировкаТекста.UTF8);
	
	
	
	XMLDoc = New COMObject("Msxml2.DOMDocument.6.0");
    XMLDoc.Async = false;
    XMLDoc.ValidateOnParse = true;
    SchemaCache = New COMObject("Msxml2.XMLSchemaCache.6.0");
	SchemaCache.Add("",dictionary_v20);
	
	XMLDoc.Schemas = SchemaCache;
    XMLDoc.SetProperty("MultipleErrorMessages", true);
    XMLDoc.Load(Файл);
    ErrObj = XMLDoc.ParseError;
	Ошибка="";
    If ErrObj.ErrorCode <> 0 Then
        For Each ErrItem In ErrObj.AllErrors Do 
            //Message("Ошибка : " + ErrItem.Reason + " " + ErrItem.SrcText);
			Ошибка=Ошибка+"В строке № "+Erritem.line+" в колонке № "++Erritem.linepos+" ошибка: "+ErrItem.Reason+" "+ErrItem.SrcText+Символы.ПС+Символы.ПС;
		EndDo;
//		УдалитьФайлы(ИмяВремен);
		Сообщить(Ошибка);
		Возврат Истина;
    EndIf;
	УдалитьФайлы(Файл);
	УдалитьФайлы(dictionary_v20);
	
	Возврат Ложь;
КонецФункции



Функция СформироватьXmlФайлИмпорт()
	Чтен=Новый  ЗаписьJSON;
	Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
	Чтен.ЗаписатьНачалоОбъекта();

	Чтен.ЗаписатьИмяСвойства("cancellation_doc_date");
	Чтен.ЗаписатьЗначение(Формат(Объект.Дата,"ДФ=""гггг-ММ-ддTЧЧ:мм:сс""")+".000Z");
	Чтен.ЗаписатьИмяСвойства("cancellation_doc_number");
	Чтен.ЗаписатьЗначение(Объект.Номер);
	Чтен.ЗаписатьИмяСвойства("cancellation_reason");
	Чтен.ЗаписатьЗначение(xmlString(Объект.ПричинаСписания));
	

	Чтен.ЗаписатьИмяСвойства("km_list");	
	Чтен.ЗаписатьНачалоМассива();
	Для Каждого Стр Из Объект.СерийныеНомера Цикл
		Чтен.ЗаписатьНачалоОбъекта();
		Чтен.ЗаписатьИмяСвойства("cancellation_reason");
		Чтен.ЗаписатьЗначение(xmlString(Объект.ПричинаСписания));
		Если СтрДлина(Стр.cis)=18 Тогда
			Чтен.ЗаписатьИмяСвойства("uitu");
		Иначе
			Чтен.ЗаписатьИмяСвойства("uit");
		КонецЕсли;
		Чтен.ЗаписатьЗначение(Стр.cis);
		//Чтен.ЗаписатьИмяСвойства("uit");
		//Чтен.ЗаписатьЗначение(Стр.cis);
		Чтен.ЗаписатьКонецОбъекта();
		
	Конеццикла;
	Чтен.ЗаписатьКонецМассива();
	Чтен.ЗаписатьИмяСвойства("trade_participant_inn");
	Чтен.ЗаписатьЗначение(Объект.Организация.ИНН);
	
	Чтен.ЗаписатьКонецОбъекта();
	
	Текст=Чтен.Закрыть();
		
	Если 	ЗаписыватьДанныеПриОтправкеЗаказа тогда
		ЗапишемВРегистр(Текст);
	КонецЕсли;
	
	Возврат Текст;
	
	Текст="<km_cancellation action_id=""14"" version=""2"">
	|<trade_participant_inn>"+Объект.Организация.ИНН+"</trade_participant_inn>";
	Если ЗначениеЗаполнено(Объект.ПричинаСписания) тогда
		Текст=Текст+"		
		|<cancellation_reason>"+xmlString(Объект.ПричинаСписания)+"</cancellation_reason>";
	КонецЕсли;
	
	Текст=Текст+"		
	|<cancellation_doc_date>"+Формат(Объект.Дата,"ДФ=""дд.ММ.гггг""")+"</cancellation_doc_date>  
	|<cancellation_doc_number>"+Объект.Номер+"</cancellation_doc_number>  
	|<km_list>";
	Для Каждого Стр Из Объект.СерийныеНомера Цикл
		
		НСтр=Объект.Товары.НайтиСтроки(Новый Структура("НомерСтрокиСвязи",Стр.НомерСтрокиСвязи));
		НСтр=НСтр[0];
		
	    Текст=Текст+"
		|<km>
		|<uit>"+Стр.cis+"</uit>";
		Если ЗначениеЗаполнено(Стр.ПричинаСписанияКМ) тогда
			Текст=Текст+"		
			|<cancellation_reason>"+xmlString(Стр.ПричинаСписанияКМ)+"</cancellation_reason>";
			
		Иначе
			Текст=Текст+"		
			|<cancellation_reason>"+xmlString(Объект.ПричинаСписания)+"</cancellation_reason>";
			
		КонецЕсли;
			Текст=Текст+"		
		|</km>";
		
		
	КонецЦикла;
	    Текст=Текст+"
		|</km_list>
		|</km_cancellation>
		|";

		
	Если 	ЗаписыватьДанныеПриОтправкеЗаказа тогда
		ЗапишемВРегистр(Текст);
	КонецЕсли;
	
Возврат Текст 	
КонецФункции


Процедура ЗапишемВРегистр(ТекстДокумент)
	
	РегДв=РегистрыСведений.ОтправленныеПолученные_ХамелеонЦРПТ.СоздатьНаборЗаписей();
	РегДв.Отбор.Документ.Установить(Объект.Ссылка);
	РегДв.Отбор.Вид.Установить("Отправлен заказ");
	Добав=РегДв.Добавить();
	Добав.Документ=ОБъект.Ссылка;
	Добав.Вид="Отправлен заказ";
	Добав.Файл=Новый ХранилищеЗначения(ТекстДокумент,Новый СжатиеДанных(9));
	РегДв.Записать(Истина);
КонецПроцедуры



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
									   ОбработкаWEBНаСервере=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ОбработкаWEBНаСервере();
	ЗаписыватьДанныеПриОтправкеЗаказа=РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().ЗаписыватьДанныеПриОтправкеЗаказа;
	ПроверкаНаСимволКриллицы=	РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().ПроверкаНаСимволКриллицы;
	Орг=Неопределено;
	Параметры.Свойство("Организация",Орг);
	Если ЗначениеЗаполнено(Орг) Тогда
		Объект.Организация=Орг;
	КонецЕсли;
	Поль=Неопределено;
	Параметры.Свойство("Пользовтаель",Поль);
	Если ЗначениеЗаполнено(Поль) Тогда
		Объект.ТекущийПользователь=Поль;
	КонецЕсли;
	
	
	ИзменитьВидимость();	
Текущийпользователь=Объект.ТекущийПользователь;	
	МодульПриСозданииДокументов_ХамелеонЦРПТ.СписаниеКМНанесенныхНеНанесенныхНаТовар_ХамелеонЦРПТ_ПриСозданииНаСервере(ЭтаФорма,Отказ,СтандартнаяОбработка);
	
КонецПроцедуры

Функция ЕстьКириллица(ИсходнаяСтрока) Экспорт
	ЕстьКириллица=ложь;
	ИсходнаяСтрока=СокрЛП(ИсходнаяСтрока);
	Если СтрДлина(ИсходнаяСтрока)>0 Тогда
		Для Сч=1 по СтрДлина(ИсходнаяСтрока) Цикл
			Символ = НРег(Сред(ИсходнаяСтрока, Сч, 1));
			Если Найти("абвгдеёжзийклмнопрстуфхцчшщъыьэюя", Символ) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Возврат Ложь;
КонецФункции



Процедура ЗаполнитьИнфуПоШтриху(Стр_1=Неопределено)
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если Стр_1<>Неопределено Тогда
		стр=Объект.СерийныеНомера.НайтиПоИдентификатору(Стр_1);
		ШтрихКод=Стр.cis;
	КонецЕсли;
	
	Если ПроверкаНаСимволКриллицы И ЕстьКириллица(ШтрихКод) тогда
		Сообщить("В строке "+ШтрихКод+" присутствует символ кириллицы!!");
		Возврат;
	Конецесли;
	
	
	
	КоличествоСтрокБыло=Объект.СерийныеНомера.Количество();
	
	Если СтрДлина(Штрихкод)=20 Тогда
		Штрихкод=Сред(Штрихкод,3);
	КонецЕсли;
	
Если Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование<>"Табак"
		И Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование<>"Альтернативный табак" ТОгда 
	ШтрихКод_1=(ШтрихКод);
	
	//ШтрихКод_1=КодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	//штрихКод=СтрЗаменить(ШтрихКод_1,"%1D","");
	ШтрихКод=Сред(ШтрихКод,1,38);
	//штрихКод_1=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
					Если Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фото" Тогда
								ШтрихКод=Сред(ШтрихКод,1,38);
			ИначеЕсли Сред(штрихКод_1,32,3)<>"240" Тогда
								ШтрихКод=Сред(ШтрихКод,1,31);
								//ШтрихКод=Сред(штрихКод_1,1,Найти(штрихКод_1,"%1D")-1);
								//ШтрихКод=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
							Иначе
								
								           ШтрихКод=штрихКод_1;
							
							КонецЕсли;
							
							
							Если Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фармацевтика" Тогда
		Если Сред(ШтрихКод,1,2)="01" Тогда
			ШтрихКод=Сред(ШтрихКод,3,14)+Сред(ШтрихКод,19);
		КонецЕсли;
								
							КОнецЕсли;
				КонецЕсли;
							
	Если СтрДлина(ШтрихКод)>50 Тогда
		ШтрихКод=Сред(ШтрихКод,1,35);
	КонецЕсли;
	ШтрихКод_1=(ШтрихКод);
	
	//ШтрихКод_1=КодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	//штрихКод=СтрЗаменить(ШтрихКод_1,"%1D","");
	ШтрихКод=Сред(ШтрихКод,1,38);
	//штрихКод_1=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	Если Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фото" Тогда
		        				ШтрихКод=Сред(ШтрихКод,1,38);
				
		ИначеЕсли Сред(штрихКод_1,32,3)<>"240" Тогда
								ШтрихКод=Сред(ШтрихКод,1,31);
								//ШтрихКод=Сред(штрихКод_1,1,Найти(штрихКод_1,"%1D")-1);
								//ШтрихКод=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
							Иначе
								
								           ШтрихКод=штрихКод_1;
							
							КонецЕсли;

							
	Если Стр_1=Неопределено Тогда
		Если Объект.СерийныеНомера.НайтиСтроки(Новый Структура("cis",ШтрихКод)).Количество()>0 Тогда
			Сообщить("CiS "+ШтрихКод+" уже присутствует в документе");
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	Если Объект.ВидСписания=Перечисления.ВидДокументаСписания_ХамелеонЦРПТ.СИсКМНанесенныйНаТоварБезВыводаИзОборота Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОстаткиКМ_в_Обороте_ХамелеонЦРПТОстатки.Продукция
			|ИЗ
			|	РегистрНакопления.ОстаткиКМ_в_Обороте_ХамелеонЦРПТ.Остатки(
			|			,
			|			Организация = &Организация
			|				И СерийныйНомер = &СерийныйНомер) КАК ОстаткиКМ_в_Обороте_ХамелеонЦРПТОстатки";
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция
			|ИЗ
			|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Остатки(
			|			,
			|			Организация = &Организация
			|				И СерийныйНомер = &СерийныйНомер) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки";
		
		
	Конецесли;		
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("СерийныйНомер", ШтрихКод);
		
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		Продукция=ВыборкаДетальныеЗаписи.Продукция;
		Если Стр=Неопределено тогда
			Добав=Объект.СерийныеНомера.Добавить();
		Иначе
			Добав=Стр;
		КонецЕсли;
		Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
		Добав.НаименованиеТовара=Продукция;
		Добав.cis=ШтрихКод;
		
		
		ППП=Объект.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
		Если ППП.Количество()=0 Тогда
			Добав_1=Объект.Товары.Добавить();
			Добав_1.GTIN=Продукция;
			Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
			
			
			//Добав_1.СпособВыпускаТоваров="";
			Добав_1.НомерСтрокиСвязи=Добав_1.ПолучитьИдентификатор();
			Добав_1.КоличествоКМ=1;
		Иначе
			Добав_1=ППП[0];
			Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
			
		КонецЕсли;
		Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
		
	КонецЦикла;
	
		Если КоличествоСтрокБыло=Объект.СерийныеНомера.Количество() Тогда
			Если РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().ПриЗаполненииОтгрузкиНеУчитыватьОстаток Тогда
				Продукция=Справочники.Продукция_ХамелеонЦРПТ.ПустаяСсылка();
				Добав=Объект.СерийныеНомера.Добавить();
				Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
				//Добав.НаименованиеТовара=Продукция;
				Добав.cis=ШтрихКод;
				
				
					Добав_1=Объект.Товары.Добавить();
	//				Добав_1.ЕдиницаИзмерения=Объект.ТекущийПользователь.ОсновнаяЕдиницаИзмерения;
					
		//			Добав_1.СпособВыпускаТоваров="";
					Добав_1.НомерСтрокиСвязи=Добав_1.ПолучитьИдентификатор();
				Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
				Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
				
			
				

			Иначе
				Сообщить("КМ "+Строка(Штрихкод)+" не добавлена");
			КонецЕсли
		Конецесли;

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецПроцедуры


&НаСервереБезКонтекста
Функция дополнитьСтроку(Ср)
	ВОзврат Обработки._Запуск_ХамелеонЦРПТ.ДополнитьСтроку_11(Ср,14,"0");
	
Конецфункции



&НаКлиенте
Процедура ШтрихПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ЗаполнитьИнфуПоШтриху();
	ПодключитьОбработчикОЖидания("аа",0.1,Истина);
	ПересчетСуммыДокмента();
КонецПроцедуры

&НаКлиенте
Процедура аа() Экспорт
	ШтрихКод="";
	ЭтаФорма.ТекущийЭлемент=Элементы.ШтрихКод;
КонецПроцедуры


&НаКлиенте
Процедура ШтрихКодАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Если СтрДлина(Текст)>=31 Тогда
		       СтандартнаяОбработка=Ложь;
			   ШтрихКод=Текст;
			  ЗаполнитьИнфуПоШтриху(); 
	ПодключитьОбработчикОЖидания("аа",0.1,Истина);
	ПересчетСуммыДокмента()
			  КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СчитатьОтветНаСервере()
	// Вставить содержимое обработчика.
	Хр=РегистрыСведений.ОтправленныеПолученные_ХамелеонЦРПТ.Получить(Новый Структура("Документ,Вид",Объект.Ссылка,"Получили ответ")).Файл;
	Если Хр<>Неопределено тогда
		ОтветОтЦРПТ=Хр.Получить();
	Конецесли;
КонецПроцедуры

&НаКлиенте
Процедура СчитатьОтвет(Команда)
	СчитатьОтветНаСервере();
КонецПроцедуры

&НаСервере
Процедура СчитатьОтправкуНаСервере()
	// Вставить содержимое обработчика.
	Хр=РегистрыСведений.ОтправленныеПолученные_ХамелеонЦРПТ.Получить(Новый Структура("Документ,Вид",Объект.Ссылка,"Отправлен заказ")).Файл;
	Если Хр<>Неопределено тогда
		Отправка=Хр.Получить();
	Конецесли;
КонецПроцедуры

&НаКлиенте
Процедура СчитатьОтправку(Команда)
	СчитатьОтправкуНаСервере();
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ОбновитьСтатусДокумента_Отгрузка(Ссылка,Статус,Ошибка,Заказ=неопределено)
	
	Если Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.Отказ Тогда
		Если Ссылка.Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.ОжидаетОтвета
			ИЛИ Ссылка.Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.ВнутреннийПромежуточныйСтатус
			ИЛИ Ссылка.Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.КМЧастичноЭмитированы
			ИЛИ Ссылка.Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.КМЭмитирован Тогда
			Возврат;
		КонецЕсли;
			
		
	КонецЕсли;
	
	Добб=Ссылка.ПолучитьОбъект();
	Добб.ОшибкаОтправки=Ошибка;
	Добб.Статус=Статус;
	
	
	
	Добб.Записать();
	Если Добб.Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.ОжидаетОтвета  
		ИЛИ Добб.Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.Обработан
		Тогда
		Попытка
			Добб.Записать(РежимЗаписиДокумента.Проведение) 
		Исключение
		КонецПопытки;
	ИначеЕсли Добб.статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.Отказ Тогда
		Добб.ПометкаУдаления=Истина;
		Если Добб.Проведен Тогда
			Добб.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Иначе
			Добб.Записать(РежимЗаписиДокумента.Запись);
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


Функция ЗагрузканаСервереОтклонить(Thumbprint_1,СРегистра,УжеОтправили)
Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
		Прокси=Новый ИнтернетПрокси;
		Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
	
		HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
	Иначе
		HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
	КонецЕсли;

 			что=Thumbprint_1.что;
	
	
	HTTPЗапрос=Новый HTTPЗапрос("api/v4/facade/doc/"+Объект._Order_ID+"/body?pg="+Что+"&limit=2147483647");
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
		Если Ответ.КодСостояния=202 ИЛИ Ответ.КодСостояния=200 Тогда
					//ЧтениеJSON = Новый ЧтениеJSON;
					//ЧтениеJSON.УстановитьСтроку(Текст1);
					NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
					Если NNN.status="CHECKED_NOT_OK" Тогда
						ОбновитьСтатусДокумента_Отгрузка(Объект.Ссылка,ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ"),NNN.downloadDesc);
					ИначеЕсли 	NNN.status="WAIT_ACCEPTANCE" Тогда
						ОбновитьСтатусДокумента_Отгрузка(Объект.Ссылка,ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.ОжидаетОтветаОтКлиента"),NNN.downloadDesc);
					ИначеЕсли 	NNN.status="CANCELLED" Тогда
						ОбновитьСтатусДокумента_Отгрузка(Объект.Ссылка,ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ"),"");
					КонецЕсли;
				
				
		ИначеЕсли Ответ.КодСостояния=401 ИЛИ Ответ.КодСостояния=502    Тогда
				Если УжеОтправили=Истина Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
				Иначе
					Возврат ЛожЬ;
				КонецЕсли
			ИначеЕсли Ответ.КодСостояния=301 Тогда
				
				    ОшибкаОтправки="";
			//Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ");
				Попытка
					//ЧтениеJSON = Новый ЧтениеJSON;
					//ЧтениеJSON.УстановитьСтроку(Текст1);
					NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
					ОшибкаОтправки=NNN.error_message;
					
				Исключение
				КонецПопытки;
			ОбновитьСтатусДокумента_Отгрузка(Объект.Ссылка,ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ"),"301 код ошибки");
		

		КонецЕсли;
		
		ЭтаФорма.Прочитать();
		Если Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.ОжидаетОтветаОтКлиента") Тогда

			
			СформироватьФайлДляОтправки=ОтказТекст();
			

	//	Попытка
	//		Если НеПрошлаПроверкаИмпорт(СформироватьФайлДляОтправки) Тогда
	//			Объект.ОшибкаОтправки="Проверка документа не прошла по схеме xsd";
	//			//ПоказатьПредупреждение("");
	////			Возврат;
	//			
	//		КонецЕсли;
	//		
	//		
	//	Исключение
	//	КонецПопытки;
		
		
		
	Подписанный="";
	СформироватьФайлДляОтправки=СтрЗаменить(СформироватьФайлДляОтправки,Символы.ПС,"");
	СформироватьФайлДляОтправки=СтрЗаменить(СформироватьФайлДляОтправки,Символы.ВК,"");
		
		
	Подписанный="";
	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПодписатьФайл(Thumbprint_1.Внешняя,СформироватьФайлДляОтправки,Thumbprint_1,Подписанный,Истина);
	
	//Подписанный=base64Строка(ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьДвоичныеДанныеИзСтроки_Сервер(
	//Подписанный,КодировкаТекста.UTF8,Ложь));
	
				Подписанный=СтрЗаменить(Подписанный,Символы.ПС,"\r\n");
			Подписанный=СтрЗаменить(Подписанный,Символы.ВК,"\r\n");
			Подписанный=СтрЗаменить(Подписанный,"\r\n","");
	
	
	Добав=base64Строка(ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьДвоичныеДанныеИзСтроки_Сервер(
	СформироватьФайлДляОтправки,КодировкаТекста.UTF8,Ложь));
				Добав=СтрЗаменить(Добав,Символы.ПС,"\r\n");
			Добав=СтрЗаменить(Добав,Символы.ВК,"\r\n");
			Добав=СтрЗаменить(Добав,"\r\n","");

	Тело="{
	|""product_document"":"""+Добав+""",
	|""document_format"": ""XML"",
	|""signature"":"""+Подписанный+"""}";
	
	
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
	
		HTTPЗапрос=Новый HTTPЗапрос("api/v3/lk/documents/shipment/cancel");
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
	Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
 			что=Thumbprint_1.что;
	
	HTTPЗапрос=Новый HTTPЗапрос("api/v4/facade/doc/"+Объект._Order_ID+"/body?pg="+Что+"&limit=2147483647");
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
		Если Ответ.КодСостояния=202 ИЛИ Ответ.КодСостояния=200 Тогда
					//ЧтениеJSON = Новый ЧтениеJSON;
					//ЧтениеJSON.УстановитьСтроку(Текст1);
					NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
					Если NNN.status="CHECKED_NOT_OK" Тогда
						ОбновитьСтатусДокумента_Отгрузка(Объект.Ссылка,ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ"),NNN.downloadDesc);
					ИначеЕсли 	NNN.status="WAIT_ACCEPTANCE" Тогда
						ОбновитьСтатусДокумента_Отгрузка(Объект.Ссылка,ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.ОжидаетОтветаОтКлиента"),NNN.downloadDesc);
					ИначеЕсли 	NNN.status="CANCELLED" Тогда
						ОбновитьСтатусДокумента_Отгрузка(Объект.Ссылка,ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ"),"");
					КонецЕсли;
				
				
		ИначеЕсли Ответ.КодСостояния=401 ИЛИ Ответ.КодСостояния=502    Тогда
				Если УжеОтправили=Истина Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
				Иначе
					Возврат ЛожЬ;
				КонецЕсли
			ИначеЕсли Ответ.КодСостояния=301 Тогда
				
				    ОшибкаОтправки="";
			//Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ");
				Попытка
					//ЧтениеJSON = Новый ЧтениеJSON;
					//ЧтениеJSON.УстановитьСтроку(Текст1);
					NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
					ОшибкаОтправки=NNN.error_message;
					
				Исключение
				КонецПопытки;
			ОбновитьСтатусДокумента_Отгрузка(Объект.Ссылка,ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ"),"301 код ошибки");
		

		КонецЕсли;
		
	КонецЕсли;	
	Возврат истина
КонецФункции

&НаКлиенте
Процедура ОтменаОтгрузки(Команда,УжеОтправили=Ложь)  ЭКспорт
	// Вставить содержимое обработчика.
		ЭтаФорма.Записать();
	Thumbprint_1=ПолучитьИзПользователя();	
	Если Не ЗначениеЗаполнено(Thumbprint_1) Тогда
		Возврат;
	КонецЕслИ;
	
	СРегистра=Thumbprint_1.ТокенПоОтпечатку;
	Если Не ЗначениеЗаполнено(СРегистра) тогда
		Попытка
			СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);	
		исключение
			СРегистра=Неопределено;
		КонецПопытки;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СРегистра) Тогда
		ПоказатьПредупреждение(,"Не удалось получить токен по организации");
		Возврат;
	Конецесли;
	
	// Вставить содержимое обработчика.
	 	Если ОбработкаWEBНаСервере Тогда
		Если НЕ ЗагрузканаСервереОтклонить(Thumbprint_1,СРегистра,УжеОтправили) Тогда
				Если УжеОтправили=Истина Тогда
				//ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
			Иначе
				ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
				ОтменаОтгрузки(Команда,Истина)			
		КонецЕсли
		
		КонецЕсли;
		
		
	Иначе
	
	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
		Прокси=Новый ИнтернетПрокси;
		Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
	
		HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
	Иначе
		HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
	КонецЕсли;

 			что=Thumbprint_1.что;
	
	
	HTTPЗапрос=Новый HTTPЗапрос("api/v4/facade/doc/"+Объект._Order_ID+"/body?pg="+Что+"&limit=2147483647");
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
		Если Ответ.КодСостояния=202 ИЛИ Ответ.КодСостояния=200 Тогда
					//ЧтениеJSON = Новый ЧтениеJSON;
					//ЧтениеJSON.УстановитьСтроку(Текст1);
					NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
					Если NNN.status="CHECKED_NOT_OK" Тогда
						ОбновитьСтатусДокумента_Отгрузка(Объект.Ссылка,ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ"),NNN.downloadDesc);
					ИначеЕсли 	NNN.status="WAIT_ACCEPTANCE" Тогда
						ОбновитьСтатусДокумента_Отгрузка(Объект.Ссылка,ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.ОжидаетОтветаОтКлиента"),NNN.downloadDesc);
					ИначеЕсли 	NNN.status="CANCELLED" Тогда
						ОбновитьСтатусДокумента_Отгрузка(Объект.Ссылка,ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ"),"");
					КонецЕсли;
				
				
		ИначеЕсли Ответ.КодСостояния=401 ИЛИ Ответ.КодСостояния=502    Тогда
				Если УжеОтправили=Истина Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
				Иначе
					ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
					ОтменаОтгрузки(Команда,Истина)			
				КонецЕсли
			ИначеЕсли Ответ.КодСостояния=301 Тогда
				
				    ОшибкаОтправки="";
			//Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ");
				Попытка
					//ЧтениеJSON = Новый ЧтениеJSON;
					//ЧтениеJSON.УстановитьСтроку(Текст1);
					NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
					ОшибкаОтправки=NNN.error_message;
					
				Исключение
				КонецПопытки;
			ОбновитьСтатусДокумента_Отгрузка(Объект.Ссылка,ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ"),"301 код ошибки");
		

		КонецЕсли;
		
		ЭтаФорма.Прочитать();
		Если Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.ОжидаетОтветаОтКлиента") Тогда

			
			СформироватьФайлДляОтправки=ОтказТекст();
			

	//	Попытка
	//		Если НеПрошлаПроверкаИмпорт(СформироватьФайлДляОтправки) Тогда
	//			Объект.ОшибкаОтправки="Проверка документа не прошла по схеме xsd";
	//			//ПоказатьПредупреждение("");
	////			Возврат;
	//			
	//		КонецЕсли;
	//		
	//		
	//	Исключение
	//	КонецПопытки;
		
		
		
	Подписанный="";
	СформироватьФайлДляОтправки=СтрЗаменить(СформироватьФайлДляОтправки,Символы.ПС,"");
	СформироватьФайлДляОтправки=СтрЗаменить(СформироватьФайлДляОтправки,Символы.ВК,"");
		
		
	Подписанный="";
	ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ПодписатьФайл(Thumbprint_1.Внешняя,СформироватьФайлДляОтправки,Thumbprint_1,Подписанный,Истина);
	
	//Подписанный=base64Строка(ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьДвоичныеДанныеИзСтроки_Сервер(
	//Подписанный,КодировкаТекста.UTF8,Ложь));
	
				Подписанный=СтрЗаменить(Подписанный,Символы.ПС,"\r\n");
			Подписанный=СтрЗаменить(Подписанный,Символы.ВК,"\r\n");
			Подписанный=СтрЗаменить(Подписанный,"\r\n","");
	
	
	Добав=base64Строка(ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьДвоичныеДанныеИзСтроки_Сервер(
	СформироватьФайлДляОтправки,КодировкаТекста.UTF8,Ложь));
				Добав=СтрЗаменить(Добав,Символы.ПС,"\r\n");
			Добав=СтрЗаменить(Добав,Символы.ВК,"\r\n");
			Добав=СтрЗаменить(Добав,"\r\n","");

	Тело="{
	|""product_document"":"""+Добав+""",
	|""document_format"": ""XML"",
	|""signature"":"""+Подписанный+"""}";
	
	
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
	
		HTTPЗапрос=Новый HTTPЗапрос("api/v3/lk/documents/shipment/cancel");
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
	Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
 			что=Thumbprint_1.что;
	
	
	
	HTTPЗапрос=Новый HTTPЗапрос("api/v4/facade/doc/"+Объект._Order_ID+"/body?pg="+Что+"&limit=2147483647");
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
		Если Ответ.КодСостояния=202 ИЛИ Ответ.КодСостояния=200 Тогда
					//ЧтениеJSON = Новый ЧтениеJSON;
					//ЧтениеJSON.УстановитьСтроку(Текст1);
					NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
					Если NNN.status="CHECKED_NOT_OK" Тогда
						ОбновитьСтатусДокумента_Отгрузка(Объект.Ссылка,ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ"),NNN.downloadDesc);
					ИначеЕсли 	NNN.status="WAIT_ACCEPTANCE" Тогда
						ОбновитьСтатусДокумента_Отгрузка(Объект.Ссылка,ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.ОжидаетОтветаОтКлиента"),NNN.downloadDesc);
					ИначеЕсли 	NNN.status="CANCELLED" Тогда
						ОбновитьСтатусДокумента_Отгрузка(Объект.Ссылка,ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ"),"");
					КонецЕсли;
				
				
		ИначеЕсли Ответ.КодСостояния=401 ИЛИ Ответ.КодСостояния=502    Тогда
				Если УжеОтправили=Истина Тогда
					ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
				Иначе
					ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
					ОтменаОтгрузки(Команда,Истина)			
				КонецЕсли
			ИначеЕсли Ответ.КодСостояния=301 Тогда
				
				    ОшибкаОтправки="";
			//Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ");
				Попытка
					//ЧтениеJSON = Новый ЧтениеJSON;
					//ЧтениеJSON.УстановитьСтроку(Текст1);
					NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
					ОшибкаОтправки=NNN.error_message;
					
				Исключение
				КонецПопытки;
			ОбновитьСтатусДокумента_Отгрузка(Объект.Ссылка,ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ"),"301 код ошибки");
		

		КонецЕсли;
		
	КонецЕсли;
	КонецЕсли;
		ЭтаФорма.Прочитать();
КонецПроцедуры

Функция ОтказТекст()
		Возврат "<cancel_shipment_signs action_id=""12"">
	|<shipment_number>"+Объект._Order_ID+"</shipment_number>  
	|<participant_inn>"+Объект.Организация.ИНН+"</participant_inn>  
		|</cancel_shipment_signs >
		|";
	
	КонецФункции

&НаСервере
Функция ТоварыGTINПриИзмененииНаСервере(Товар)
	// Вставить содержимое обработчика.    
	Возврат Новый Структура("КодТНВЭД",Товар.КодТНВЭД);
Конецфункции

&НаКлиенте
Процедура ТоварыGTINПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ТекД=Элементы.Товары.ТекущиеДанные;
	ЗаполнитьЗначенияСвойств(ТекД,ТоварыGTINПриИзмененииНаСервере(ТекД.GTIN));
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	// Вставить содержимое обработчика.
	Если Копирование=Ложь тОгда
		Отказ=Истина;
		Если Элемент.ТекущиеДанные<>Неопределено Тогда
			РРР=Элемент.ТекущиеДанные.GTIN;
		Иначе
			РРР=Неопределено;
		КонецЕсли;
		ОткрытьФорму("Документ.ВводВОборот_ХамелеонЦРПТ.Форма.ФормаВыбораКМ",
		Новый структура("Организация,ТекущаяСтрока",Объект.Организация,РРР),,,,,
		Новый ОписаниеОповещения("ПослеВыбораПродукции",ЭтаФорма,Элемент));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораПродукции(РР,ДД) Экспорт
	Если РР<>Неопределено Тогда
		Для Каждого Стр Из РР ЦИкл
			ШтрихКод=Стр;
			ЗаполнитьИнфуПоШтриху();
			ПересчетСуммыДокмента();
		Конеццикла;
		ШтрихКод="";
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерийныеНомераПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	// Вставить содержимое обработчика.
		Отказ=Истина;
		Если Элемент.ТекущиеДанные<>Неопределено Тогда
			РРР=Элемент.ТекущиеДанные.GTIN;
		Иначе
			РРР=Неопределено;
		КонецЕсли;
		ОткрытьФорму("Документ.ВводВОборот_ХамелеонЦРПТ.Форма.ФормаВыбораКМ",
		Новый структура("Организация,ТекущаяСтрока",Объект.Организация,РРР),,,,,
		Новый ОписаниеОповещения("ПослеВыбораПродукции",ЭтаФорма,Элемент));

КонецПроцедуры

&НаКлиенте
Процедура СерийныеНомераПередУдалением(Элемент, Отказ)
		// Вставить содержимое обработчика.
	

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
		ТекД=Элементы.Товары.ТекущиеДанные;
	НН=Объект.СерийныеНомера.НайтиСтроки(Новый Структура("НомерСтрокиСвязи",ТекД.ПолучитьИдентификатор()));
	Для Каждого Стр_1 Из НН Цикл
		Объект.СерийныеНомера.Удалить(Стр_1);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	// Вставить содержимое обработчика.
	ПересчетСуммыДокмента();
КонецПроцедуры

&НаКлиенте
Процедура ПересчетСуммыДокмента()
	
КонецПроцедуры

&НаКлиенте
Процедура Подсчитать(Команда)
	// Вставить содержимое обработчика.
	Thumbprint_1=ПолучитьИзПользователя();	
	Если Не ЗначениеЗаполнено(Thumbprint_1) Тогда
		Возврат;
	КонецЕслИ;
	
СтруктураНастроек=Неопределено;                                                    СерийныйНомер="";
	СРегистра=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьТокенСрегистра(Thumbprint_1.Thumbprint_1,СтруктураНастроек);
			СерийныйНомер=СтруктураНастроек.СерийныйНомер;
	
		Если Не ЗначениеЗаполнено(СРегистра)  Тогда
			СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
		Иначе
		   
				Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
					Прокси=Новый ИнтернетПрокси;
					Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
				
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				Иначе
				
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				КонецЕсли;
				
				HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/balance/all");
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
				HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
				//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
				///Константин           
				Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
				//Текст1=Ответ.ПолучитьТелоКакСтроку();
				Если Ответ.КодСостояния<>200 Тогда
					СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
				КонецЕсли;
					
		КонецЕсли;
		
		Если не ЗначениеЗаполнено(Срегистра) тогда
			Возврат;
		Конецесли;
		
	Для Каждого Стр Из Объект.Товары Цикл
		Стр.КоличествоНомеровКМ=0;
		Нстр=ОБъект.СерийныеНомера.НайтиСтроки(Новый Структура("НаименованиеТовара",Стр.GTIN));
		
		Для Каждого Стр_М Из НСТр Цикл
			Если СтрДлина(Стр_М.cis)=18 Тогда
				
				РекурсияУпаковки(Стр_М,Стр.КоличествоНомеровКМ,Thumbprint_1,СРегистра);
				
				
			Иначе
				Стр.КоличествоНомеровКМ=Стр.КоличествоНомеровКМ+1;
			КонецЕсли;
			
		КонецциклА;
		
		
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура РекурсияУпаковки(Строк,Количество,Thumbprint_1,СРегистра)
	
	
	Если Не ЗначениеЗаполнено(СРегистра) Тогда
		Сообщить("Не удалось получить токен по организации");
		Возврат;
	Конецесли;
	
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
			
			
	ММ= ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(Строк.cis);
			
	HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/identifytools/"+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(ММ)+"?cis="+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(ММ));
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	Ответ=HTTPСервисЗапрос.Получить (HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	//ЧтениеJSON = Новый ЧтениеJSON;
	//ЧтениеJSON.УстановитьСтроку(Текст1);
	NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
	
	Для Каждого Стр_1 Из NNN.children Цикл
		Если СтрДлина(Стр_1.cis)=18 Тогда
			РекурсияУпаковки(Стр_1 ,Количество,Thumbprint_1,СРегистра)
		Иначе
			Количество=Количество+1;
		КонецеслИ;
	КонецЦиклА;
	
КонецПроцедуры

&НаКлиенте
Процедура ВУпаковке(Команда)
	// Вставить содержимое обработчика.
	Thumbprint_1=ПолучитьИзПользователя();	
	Если Не ЗначениеЗаполнено(Thumbprint_1) Тогда
		Возврат;
	КонецЕслИ;
	
СтруктураНастроек=Неопределено;                                                    СерийныйНомер="";
	СРегистра=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьТокенСрегистра(Thumbprint_1.Thumbprint_1,СтруктураНастроек);
			СерийныйНомер=СтруктураНастроек.СерийныйНомер;
	
		Если Не ЗначениеЗаполнено(СРегистра)  Тогда
			СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
		Иначе
		   
				Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
					Прокси=Новый ИнтернетПрокси;
					Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
				
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				Иначе
				
					HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресДляПолученияТокена,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
				КонецЕсли;
				
				HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/balance/all");
				HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
				HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
				//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
				///Константин           
				Ответ=HTTPСервисЗапрос.ВызватьHTTPМетод("GET",HTTPЗапрос);
				//Текст1=Ответ.ПолучитьТелоКакСтроку();
				Если Ответ.КодСостояния<>200 Тогда
					СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,СерийныйНомер);	
				КонецЕсли;
					
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Срегистра) тогда
			Возврат;
		Конецесли;
		            	Если ОбработкаWEBНаСервере Тогда
		НаСервереВыд(СРегистра,Thumbprint_1);
			
		
	Иначе
	Для Каждого Стр_1 Из Элементы.Товары.ВыделенныеСтроки Цикл
		Стр=Объект.Товары.НайтиПоИдентификатору(Стр_1);
		Стр.КоличествоНомеровКМ=0;
		Нстр=ОБъект.СерийныеНомера.НайтиСтроки(Новый Структура("НаименованиеТовара",Стр.GTIN));
		
		Для Каждого Стр_М Из НСТр Цикл
			Если СтрДлина(Стр_М.cis)=18 Тогда
				
				РекурсияУпаковки(Стр_М,Стр.КоличествоНомеровКМ,Thumbprint_1,СРегистра);
				
				
			Иначе
				Стр.КоличествоНомеровКМ=Стр.КоличествоНомеровКМ+1;
			КонецЕсли;
			
		КонецциклА;
		
		
		
	КонецЦикла;
	          КонецЕсли;
КонецПроцедуры


Процедура РекурсияУпаковкиСервер(Строк,Количество,Thumbprint_1,СРегистра)
	
	
	Если Не ЗначениеЗаполнено(СРегистра) Тогда
		Сообщить("Не удалось получить токен по организации");
		Возврат;
	Конецесли;
	
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
			
				ММ= Строк.cis;

	HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/identifytools/"+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(ММ)+"?cis="+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(ММ));
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	Ответ=HTTPСервисЗапрос.Получить (HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	//ЧтениеJSON = Новый ЧтениеJSON;
	//ЧтениеJSON.УстановитьСтроку(Текст1);
	NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);
	
	Для Каждого Стр_1 Из NNN.children Цикл
		Если СтрДлина(Стр_1.cis)=18 Тогда
			РекурсияУпаковкиСервер(Стр_1 ,Количество,Thumbprint_1,СРегистра)
		Иначе
			Количество=Количество+1;
		КонецеслИ;
	КонецЦиклА;
	
КонецПроцедуры

Процедура   НаСервереВыд(СРегистра,Thumbprint_1)
Для Каждого Стр_1 Из Элементы.Товары.ВыделенныеСтроки Цикл
			Стр=Объект.Товары.НайтиПоИдентификатору(Стр_1);
			Стр.КоличествоНомеровКМ=0;
			Нстр=ОБъект.СерийныеНомера.НайтиСтроки(Новый Структура("НаименованиеТовара",Стр.GTIN));
			
			Для Каждого Стр_М Из НСТр Цикл
				Если СтрДлина(Стр_М.cis)=18 Тогда
					
					РекурсияУпаковкиСервер(Стр_М,Стр.КоличествоНомеровКМ,Thumbprint_1,СРегистра);
					
					
				Иначе
					Стр.КоличествоНомеровКМ=Стр.КоличествоНомеровКМ+1;
				КонецЕсли;
				
			КонецциклА;
			
			
			
		КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	Если Не ЗначениеЗаполнено(Текущийпользователь) Тогда
		Форм=ОткрытьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
		Текущийпользователь=Форм.Пользователь;
		ЭтаФорма.Активизировать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущийПользовательПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ТекущийПользователь=Объект.ТекущийПользователь;
	
	ИзменитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ЗагруитьИзФайла(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
		// Вставить содержимое обработчика.
	МассивКМ=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ВернутьКМИзФайлов();
		
	Для Каждого ШтрихОбраб Из МассивКМ Цикл
		//ШтрихОбраб=ТекстовыйД.ПолучитьСтроку(Сч);
	
		ШтрихКод68=ШтрихОбраб;
		шТРИХкОД=ШтрихКод68;
		шТРИХкОД=СтрЗаменить(шТРИХкОД,Символ(29),"");
		ЗаполнитьИнфуПоШтриху();

		
	КонецЦикла;

	ПодключитьОбработчикОЖидания("аа",0.1,Истина);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЧерезСУЗПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	      ИзменитьВидимость()
КонецПроцедуры

Процедура ИзменитьВидимость()
	Если Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Шины" Тогда
		Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Шины;
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Молоко" Тогда
		Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Молоко;
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Одежда" Тогда
		Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Одежда;
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Свет" Тогда
		Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Свет;
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Табак" Тогда
		Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Табак;
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Альтернативный табак" Тогда
		Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак;
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фармацевтика" Тогда
		Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Фармацевтика;
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фото" Тогда
		Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Фото;
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Парфюм" Тогда
		Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Парфюм;
	
	Иначе
		Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Обувь
	КонецЕсли;
	
	
	Если 
		//Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Шины 
		//	Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Молоко
//		ИЛИ Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Свет
//		ИЛИ Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Одежда
		Объект.ЧерезСУЗ ИЛИ 
		Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак
		
		ИЛИ Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Табак
		
		ИЛИ Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Фармацевтика
//		ИЛИ Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Фото
//		ИЛИ Объект.ТипПродукции=Перечисления.ТипПродукции_ХамелеонЦРПТ.Парфюм
			
			Тогда
			Элементы.ПричинаСписания.Видимость=Ложь;
			Элементы.ТипСписанияСУЗ.Видимость=Истина;
		Иначе
			Элементы.ПричинаСписания.Видимость=Истина;
			Элементы.ТипСписанияСУЗ.Видимость=Ложь;
			
		КонецЕсли;
КонецПроцедуры