&НаКлиенте
Процедура ОткрытьВнешниеОбработки(Команда)
	// Вставить содержимое обработчика.
	ОткрытьФорму("Справочник.ВнешниеОбработки_ХамелеонЦРПТ.Форма.ФормаСписка",
	Новый структура("Тип",
		ТипДокумента()));
КонецПроцедуры


Функция ТипДокумента()
	Возврат Метаданные.НайтиПоТипу(ТипЗнч(Объект.Ссылка)).ПолноеИмя()
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Параметры.Свойство("ЗагрузитьИОтправить",ЗагрузитьИОтправить);
	
	Орг=Неопределено;
	Параметры.Свойство("Организация",Орг);
	Если ЗначениеЗаполнено(Орг) Тогда
		Объект.Организация=Орг;
	КонецЕсли;
	ОбновитьВнешниеКнопки();
	ИспользоватьСайтGS1ПоМаркировке=РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().ИспользоватьСайтGS1ПоМаркировке;
	
	
	
КонецПроцедуры

Процедура ОбновитьВнешниеКнопки()
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВнешниеОбработки_ХамелеонЦРПТ.ИмяВнешнейОБработки,
		|	ВнешниеОбработки_ХамелеонЦРПТ.НаименованиеКнопки,
		|	ВнешниеОбработки_ХамелеонЦРПТ.Код
		|ИЗ
		|	Справочник.ВнешниеОбработки_ХамелеонЦРПТ КАК ВнешниеОбработки_ХамелеонЦРПТ
		|ГДЕ
		|	ВнешниеОбработки_ХамелеонЦРПТ.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Метаданные.НайтиПоТипу(ТипЗнч(Объект.Ссылка)).ПолноеИмя());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		ИмяКоманды="Команда"+ВыборкаДетальныеЗаписи.Код;
		Попытка
		КомандаФормы = Команды.Добавить(ИмяКоманды);
		КомандаФормы.Действие = "Подключаемый_ВыполнитьКомандуВнешняя";
		КомандаФормы.Заголовок = ВыборкаДетальныеЗаписи.ИмяВнешнейОБработки;
		КомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
		КомандаФормы.Отображение = ОтображениеКнопки.Текст;
		
		//ОписаниеКомандыПечати.ИмяКомандыНаФорме = ИмяКоманды;
		
		НовыйЭлемент = Элементы.Добавить("ГруппаКнопокВнешняя" + ИмяКоманды, Тип("КнопкаФормы"), Элементы.ГруппаКнопокВнешняя);
		НовыйЭлемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		НовыйЭлемент.Заголовок=ВыборкаДетальныеЗаписи.НаименованиеКнопки;
		НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	Исключение
		КонецПопытки;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры


&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуВнешняя(Команда)
	
	// Вставить содержимое обработчика.	// Вставить содержимое обработчика.
	Попытка
		
		ВернДв=ВернутьИмяФайла(Команда.Имя);
		Если Тип("ДвоичныеДанные")=ТипЗнч(ВернДв) Тогда
			ДвоичныеДанные=ВернДв;
		Иначе
			ДвоичныеДанные=Новый ДвоичныеДанные(ВернДв);
		Конецесли;
		ОбработкаИмя=ПолучитьИмяВнешней(Двоичныеданные);
		ОткрытьФорму("ВнешняяОбработка."+ОбработкаИмя+".Форма",,ЭтаФорма);
	Исключение
			Попытка
#Если ТолстыйКлиентОбычноеПриложение  Тогда
		ВернДв=ВернутьИмяФайла(Команда.Имя);
		Если Тип("ДвоичныеДанные")=ТипЗнч(ВернДв) Тогда
			//ДвоичныеДанные=ВернДв;
			ДвоичныеДанные=ПолучитьИмяВременногоФайла();
			ВернДв.Записать(ДвоичныеДанные);
			
		Иначе
			ДвоичныеДанные=ВернДв;
		Конецесли;
				ВернутьВн(ДвоичныеДанные);
				Если Тип("ДвоичныеДанные")=ТипЗнч(ВернДв) Тогда
					УдалитьФайлы(ДвоичныеДанные);
				КонецЕсли;
#Иначе
				
			Сообщить("Не удалось выполнить внешнюю обработку");
#КонецЕсли
			Исключение
				Сообщить("Не удалось выполнить внешнюю обработку");
			КонецПопытки;
		//	
	//	
	КонецПопытки;

	//УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры


#Если ТолстыйКлиентОбычноеПриложение  Тогда
&НаКлиенте
Процедура ВернутьВн(ДвоичныеДанные)
	//ИмяВременФ=ПолучитьИмяВременногоФайла();
	//ДвоичныеДанные.Записать(ИмяВременФ);
	ВнешняяОбработка=ВнешниеОбработки.Создать(ДвоичныеДанные);
	Фоорма=ВнешняяОбработка.ПолучитьФорму(,ЭтаФорма);
	Попытка
		Фоорма.УФ=ЭтаФорма;
	Исключение
	КонецПопытки;
	Фоорма.Открыть();
Конецпроцедуры      	
#КонецЕсли



Функция ВернутьИмяФайла(Команда)
//	Если РегистрыСведений.НастройкиПрограммыЦРПТ.Получить().ЗагружатьВнешниеОбработкиИзХранилища Тогда
		Возврат Справочники.ВнешниеОбработки_ХамелеонЦРПТ.НайтиПоКоду(Сред(Команда,8)).Хранилище.Получить();
//	Иначе
//		СпрВн=Справочники.ВнешниеОбработки_ХамелеонЦРПТ.НайтиПоКоду(Сред(Команда,8));
//	Конецесли;
	
//	Возврат СпрВн.ИмяВнешнейОБработки
	//НаимСправочника=Метаданные.НайтиПоТипу(ТипЗнч(Объект.Ссылка)).ПолноеИмя();
	//Спр=Справочники.ВнешниеОбработки_ХамелеонЦРПТ.НайтиПоНаименованию(НаимСправочника,Истина);
	//Если Спр<>Справочники.ВнешниеОбработки_ХамелеонЦРПТ.ПустаяСсылка() Тогда
	//	Возврат Спр.ИмяВнешнейОБработки;
	//Конецесли;
	
КонецФункции

Функция ПолучитьИмяВнешней(ИмяФайла)
    АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ИмяФайла);
    ИмяОбр = ВнешниеОбработки.Подключить(АдресВоВременномХранилище,,Ложь);
    Возврат ИмяОбр;
КонецФункции


&НаКлиенте
Процедура ЗагрузитьИзXLS(Команда)
	// Вставить содержимое обработчика.
	ДиалогФыбораФайла								=	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогФыбораФайла.Фильтр="Файл xls/xlsx|*.xls;*.xlsx|Файл xlsx (*.xlsx)|*.xlsx|Файл xls (*.xls)|*.xls";
	ДиалогФыбораФайла.Заголовок						=	"Выберите загружаемый файл с данными";
	ДиалогФыбораФайла.ПредварительныйПросмотр		=	Ложь;
	ДиалогФыбораФайла.Расширение					=	"xls";
	ДиалогФыбораФайла.ИндексФильтра					=	0;
	ДиалогФыбораФайла.ПолноеИмяФайла				=	"";
	ДиалогФыбораФайла.ПроверятьСуществованиеФайла	=	Истина;
	
	Подразделение=НеопределенО;
	
	ДиалогФыбораФайла.Показать(Новый ОписаниеОповещения("ВыборФайла",ЭтаФорма));
	
КонецПроцедуры

&наКлиенте
Процедура ВыборФайла(ВыборЗагрExcel,РР) Экспорт
	Если ЗначениеЗАполнено(ВыборЗагрExcel)
		И ВыборЗагрExcel.Количество()>0  тогда
		AAA=Новый Файл(ВыборЗагрExcel[0]);
		
		
		НачатьПолучениеКаталогаВременныхФайлов(Новый ОписаниеОповещения("ПослеПолученияКаталогаВр",ЭтаФорма,Новый Структура("AAA,В",AAA,ВыборЗагрExcel[0])));
		
		//Каталог = КаталогВременныхФайлов();
		//ИмяФайла = Строка(Новый УникальныйИдентификатор) + AAA.Расширение;
		//ВремФ = Каталог + ИмяФайла;
		//
		////ВремФ=ПолучитьИмяВременногоФайла(AAA.Расширение);
		//Объект.ИмяФайла=AAA.Имя;
		//НачатьКопированиеФайла(Новый ОписаниеОповещения("КопированиеФайла",ЭтаФорма,AAA),ВыборЗагрExcel[0],ВремФ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеПолученияКаталогаВр(Каталог,ДД) Экспорт
	AAA=ДД.AAA;
		ИмяФайла = Строка(Новый УникальныйИдентификатор) + AAA.Расширение;
		ВремФ = Каталог + ИмяФайла;
		
		//ВремФ=ПолучитьИмяВременногоФайла(AAA.Расширение);
		Объект.ИмяФайла=AAA.Имя;
		НачатьКопированиеФайла(Новый ОписаниеОповещения("КопированиеФайла",ЭтаФорма,AAA),ДД.В,ВремФ);
КонецПроцедуры
&НаКлиенте
Процедура КопированиеФайла(РР,ДД_1) Экспорт
	ДД=ДД_1.Имя;
		ДовичнДанные=Новый ДвоичныеДанные(РР);
		НачатьУдалениеФайлов(Новый ОписаниеОповещения("УдаленияФайла",ЭтаФорма),РР);
		АдресВр=ПоместитьВоВременноеХранилище(ДовичнДанные);
		ЗагрузитьФайл(АдресВр,ДД,ДД_1.Расширение);
		Если ЗагрузитьИОтправить Тогда
			ОтправитьВGS46(РР);
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдаленияФайла(РР) Экспорт
КонецПроцедуры


Процедура ЗагрузитьФайл(АдресВр,ИмяФ,Расширение)
	Обработки._Запуск_ХамелеонЦРПТ.ОбработкаЗагрузкиДокумента(Объект,АдресВр,Расширение);
	//Если Прав(ИмяФ,4)="xlsx" Тогда
	//	ИмяВр=ПолучитьИмяВременногоФайла("xlsx");
	//Иначе
	//	ИмяВр=ПолучитьИмяВременногоФайла("xls");
	//	
	//КонецЕсли;
	//ДовичнДанные=ПолучитьИзВременногоХранилища(АдресВр);
	//ДовичнДанные.Записать(ИмяВр);
	//ОбластьФайла = Новый ТабличныйДокумент;
	//Попытка
	//	// Выполняется долго на больших файлах.
	//	ОбластьФайла.Прочитать(ИмяВр, СпособЧтенияЗначенийТабличногоДокумента.Значение);
	//	УдалитьФайлы(ИмяВр);
	//Исключение
	//	Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
	//	УдалитьФайлы(ИмяВр);
	//	Возврат;
	//КонецПопытки;
	//
	//КолСтр = ОбластьФайла.ВысотаТаблицы;
	//КолКолонок = ОбластьФайла.ШиринаТаблицы;
	//
	//ТаблицаРезультат = Новый ТаблицаЗначений;
	//
	//ТаблицаРезультат.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№", 4);
	//ТаблицаРезультат.Колонки.Добавить("Сопоставлено", Новый ОписаниеТипов("Булево"), "Сопоставлено", 1);
	//
	//Для Сч = 1 ПО КолКолонок Цикл
	//	нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
	//	ИмяКолонки = "N" + нКолонка;
	//	ТаблицаРезультат.Колонки.Добавить(ИмяКолонки);
	//КонецЦикла;
	//
	//// 1-я строка. Заголовки.
	//НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
	//НоваяСтрокаТФ.НомерСтроки = 1;
	//Для Сч=1 ПО КолКолонок Цикл
	//	нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
	//	ИмяКолонки = "N" + нКолонка;
	//	НоваяСтрокаТФ[ИмяКолонки] = ОбластьФайла.ПолучитьОбласть("R1" + "C"+нКолонка).ТекущаяОбласть.Текст;
	//	
	//	// Используется при формировании таблицы на форме обработки.
	//	ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
	//	ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
	//	ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
	//КонецЦикла;
	//
	//НачСтрока = ?(Не ЗначениеЗаполнено(НачСтрока), 2, НачСтрока);
	//КонСтрока = ?(Не ЗначениеЗаполнено(КонСтрока), КолСтр, КонСтрока);
	//
	//Для нСтрокаТФ = НачСтрока ПО КонСтрока Цикл
	//	НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
	//	НоваяСтрокаТФ[0] = нСтрокаТФ;
	//	нСтрока = СтрЗаменить(нСтрокаТФ, Символы.НПП, "");
	//	Для Колонка = 1 ПО КолКолонок Цикл
	//		нКолонка = СтрЗаменить(Колонка, Символы.НПП, "");
	//		Область = ОбластьФайла.ПолучитьОбласть("R"+нСтрока+"C"+нКолонка);
	//		ТекущаяОбласть = Область.ТекущаяОбласть;
	//		Если Колонка=2 Тогда
	//			ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
	//			Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
	//				ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
	//			Иначе
	//				ЗначениеЯчейки = Неопределено;
	//			КонецЕсли;
	//		Иначе
	//			Попытка
	//				ЗначениеЯчейки = xmlString(ТекущаяОбласть.Значение);        // Число, Дата.
	//			Исключение
	//				ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
	//				Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
	//					ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
	//				Иначе
	//					ЗначениеЯчейки = Неопределено;
	//				КонецЕсли;
	//			КонецПопытки;
	//		КонецЕсли;
	//		ИмяКолонки = "N" + нКолонка;
	//		НоваяСтрокаТФ[ИмяКолонки] = ЗначениеЯчейки;
	//		
	//		// Используется при формировании таблицы на форме обработки.
	//		ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
	//		ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
	//		ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
	//	КонецЦикла;
	//КонецЦикла;
	//
	//// Юзабилити. Удалить пустые колонки.
	// 
	//	//	Возврат ТаблицаРезультат;	

	//Для Каждого Стр Из ТаблицаРезультат Цикл
	//	Попытка
	//		ГТИНЧисло=Число(Стр.N2);
	//		
	//		Если ГТИНЧисло<=1000000 Тогда
	//			Продолжить;
	//		КонецЕсли;
	//	Исключение
	//		Продолжить;
	//	КонецПопытки;
	//	Пояснение=xmlString(Стр.N1);
	//	V_PROD_COVER_GTIN=Число(Стр.N2);
	//	V_ID_IS=xmlString(Стр.N3);
	//	V_MANUFACTURER_CODE=xmlString(Стр.N4);
	//	V_PUBLICATION_DATE=xmlString(Стр.N5);
	//	V_PROD_DESC_RU=xmlString(Стр.N6);
	//	V_PROD_NAME_RU=xmlString(Стр.N7);
	//	V_WEB_90000626=xmlString(Стр.N8);///ИНН
	//	V_WEB_90000187=xmlString(Стр.N9);///страна
	//	V_WEB_90001683=xmlString(Стр.N10);///Вид обуви
	//	V_WEB_90001685=xmlString(Стр.N11);///Материал вверха
	//	V_WEB_90001686=xmlString(Стр.N12);///Материал подладки
	//	V_WEB_90001687=xmlString(Стр.N13);///Материал низа
	//	V_WEB_90001688=xmlString(Стр.N14);///Цвет
	//	V_WEB_90001690=xmlString(Стр.N15);///Размер
	//	Попытка
	//		РезультатОбработки=xmlString(Стр.N16);
	//	Исключение
	//	КонецПопытки;
	//	СпрОб=Справочники.Обувь_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",V_PROD_COVER_GTIN);
	//	Если Спроб=Справочники.Обувь_ХамелеонЦРПТ.ПустаяСсылка() Тогда
	//		Спроб=Справочники.Обувь_ХамелеонЦРПТ.СоздатьЭлемент();
	//		
	//	Иначе
	//		СпрОб=СпрОб.ПолучитьОбъект();
	//		
	//	КонецЕсли;
	//	СпрОб.GTIN=V_PROD_COVER_GTIN;
	//	СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
	//	Спроб.БрендТорговаяМарка=V_PROD_NAME_RU;
	//	СпрОб.ВидОбуви=ВидОбуви_ХамелеонЦРПТ(V_WEB_90001683);
	//	СпрОб.ИННПроизводителяИмпортёра=ВернутьПроизводителя(V_WEB_90000626);
	//	СпрОб.КодВУчетнойСистеме=V_ID_IS;
	//	СпрОб.МатериалВерха=V_WEB_90001685;
	//	СпрОб.МатериалНиза=V_WEB_90001687;
	//	СпрОб.МатериалПодкладки=V_WEB_90001686;
	//	СпрОб.МодельПроизводителяАртикул=V_MANUFACTURER_CODE;
	//	СпрОб.Наименование=Спроб.НаименованиеТовара;
	//	СпрОб.СтранаПроизводства=ВернутьСтрану(V_WEB_90000187);
	//	СпрОб.Цвет=V_WEB_90001688;
	//	СпрОб.Записать();
	//	Если Объект.GS1.НайтиСтроки(Новый Структура("GTIN",V_PROD_COVER_GTIN)).Количество()=0 Тогда
	//		ДобавСтр=Объект.GS1.Добавить();
	//		ДобавСтр.Пояснение=Пояснение;
	//		ЗаполнитьЗначенияСвойств(ДобавСтр,Спроб);
	//		ДобавСтр.РазмерВШтихмассовойСистеме=V_WEB_90001690;
	//		ДобавСтр.НаименованиеТовараНаЭтикетке=Спроб.НаименованиеТовара;
	//		Попытка
	//			Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,1,4),Сред(V_PUBLICATION_DATE,6,2),Сред(V_PUBLICATION_DATE,9,2));
	//		Исключение
	//		КонецПопытки;
	//	КонецЕсли;
	//			
	//	
	//Конеццикла;	
	
КонецПроцедуры

Функция ВернутьПроизводителя(V_WEB_90000626,НаимТовара="")
	СпрПр=Справочники.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.НайтиПоРеквизиту("ИНН",V_WEB_90000626);
	Если СпрПр=Справочники.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		СпрПр=Справочники.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.СоздатьЭлемент();
		СпрПр.ИНН=V_WEB_90000626;
		Если ЗначениеЗаполнено(НаимТовара) тогда
			СпрПр.Наименование=НаимТовара;
		Иначе
			СпрПр.Наименование=V_WEB_90000626;
		Конецесли;
		СпрПр.Записать();
		Возврат СпрПр.Ссылка
		
	Иначе
		Возврат СпрПр.Ссылка
	Конецесли;
	
КонецФункции

Функция ВернутьСтрану(V_WEB_90000187)
	 КодВида_1=Сред(V_WEB_90000187,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",КодВида);
	 Если СпрВидОбуви=Справочники.СтранаПроизводства_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.СтранаПроизводства_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Альфа2=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	КонецЕсли;
КонецФункции
Функция ВидОбуви_ХамелеонЦРПТ(V_WEB_90001683)
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ВидОбуви_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ВидОбуви_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ВидОбуви_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура СохранитьВXLS(Команда)
	// Вставить содержимое обработчика.
	Табл=Новый ТабличныйДокумент;
	ВывестиТабличнД(Табл);
	
	ДиалогФыбораФайла								=	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогФыбораФайла.Фильтр="Файл xlsx (*.xlsx)|*.xlsx";
	ДиалогФыбораФайла.Заголовок						=	"Выберите загружаемый файл с данными";
	ДиалогФыбораФайла.ПредварительныйПросмотр		=	Ложь;
	ДиалогФыбораФайла.Расширение					=	"xlsx";
	ДиалогФыбораФайла.ИндексФильтра					=	0;
	ДиалогФыбораФайла.ПолноеИмяФайла				=	"";
	ДиалогФыбораФайла.ПроверятьСуществованиеФайла	=	Истина;
	
	Подразделение=НеопределенО;
	ДиалогФыбораФайла.Показать(Новый ОписаниеОповещения("ВыборФайлаСохранить",ЭтаФорма,Табл));
	
КонецПроцедуры

&наКлиенте
Процедура ВыборФайлаСохранить(ВыборЗагрExcel,РР) Экспорт
	Если ЗначениеЗАполнено(ВыборЗагрExcel)
		И ВыборЗагрExcel.Количество()>0  тогда
	
		ИмяФ=ВыборЗагрExcel[0];
		РР.НачатьЗапись(,ИмяФ,ТипФайлаТабличногоДокумента.XLSX);
		РР.НачатьЗапись(,Сред(ИмяФ,1,СтрДлина(ИмяФ)-1),ТипФайлаТабличногоДокумента.XLS)
		
	КонецЕсли
	
КонецПроцедуры
	


Процедура ВывестиТабличнД(Табл,ВернутьАдресХр=Неопределено,Возвращаем=ложь,Boundary="",ИмяВр_1="",РазмерФайла=0 )
	
	 Если Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Альтернативный табак" Тогда
		


			Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("АльтернатиныйТабак");
			
		ОблШ=Мак.ПолучитьОбласть("Шапка");
		ОблС=Мак.ПолучитьОбласть("строка");
		Табл.Вывести(ОблШ);
		Для Каждого Стр Из ОБъект.АльтернативныйТабакGS Цикл
			ОблС.Параметры.Заполнить(Стр);
			Если ЗначениеЗаполнено(Стр.GTIN) Тогда
				ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
			Иначе
				ОблС.Параметры.GTIN="";
				
			КонецЕсли;
			
			ОблС.Параметры.КоличествоВПотребительскойУпаковке=
			"<"+Стр.КоличествоВПотребительскойУпаковке.Код+"> "+Стр.КоличествоВПотребительскойУпаковке.Наименование;
			//СтКоличествоВПотребительскойУпаковке_ЕдиницаИзмерения
			
			ОблС.Параметры.КодТНВЭД="<"+СокрЛП(Стр.КодТНВЭД.Код)+"> "+СокрЛП(Стр.КодТНВЭД.Наименование);
			ОблС.Параметры.УровеньИерархии="<"+СокРЛП(Стр.УровеньИерархии.Код)+"> "+СокрЛП(Стр.УровеньИерархии.Наименование);
			ОблС.Параметры.ТипУпаковки="<"+Стр.ТипУпаковки.Код+"> "+Стр.ТипУпаковки.Наименование;
			
			ОблС.Параметры.МатериалУпаковки="<"+Стр.МатериалУпаковки.Код+"> "+Стр.МатериалУпаковки.Наименование;
			ОблС.Параметры.КодВидаПодакцизныхТоваров="<"+Стр.КодВидаПодакцизныхТоваров.Код+"> "+Стр.КодВидаПодакцизныхТоваров.Наименование;
			
			ОблС.Параметры.СтранаПроизводства=Стр.СтранаПроизводства.Альфа2;
			
			ОблС.Параметры.ОКПД2="<"+Стр.ОКПД2.Код+"> "+Стр.ОКПД2.Наименование;
			
			Если ЗначениеЗАполнено(Стр.Сертификат) Тогда
				ОблС.Параметры.НомерСертифката=Стр.Сертификат.Наименование;
				ОблС.Параметры.ДатаДекларации=Стр.Сертификат.ДатаНачалаДействия;
				ОблС.Параметры.ВидСертификата="<"+Стр.Сертификат.ВидСертификатаGSI.Код+"> "+Стр.Сертификат.ВидСертификатаGSI.Наименование;
			Иначе
				ОблС.Параметры.НомерСертифката="нет";
				ОблС.Параметры.ДатаДекларации="нет";
				
			КонецЕсли;
			
			
			
			Табл.Вывести(ОблС);
		КонецЦикла;
		Если Возвращаем Тогда
				 
		ВремФ=ПолучитьИмяВременногоФайла("xlsx");
				//ФайлЗапроса = Новый Файл(ВремФ);
				
				//Каталог = КаталогВременныхФайлов();
				ИмяВр = ВремФ;
		

				Табл.Записать(ИмяВр,ТипФайлаТабличногоДокумента.XLSX);
				
				
				//Каталог = КаталогВременныхФайлов();
				//ИмяФайла = Строка(Новый УникальныйИдентификатор) + "1.txt";
				ИмяФайлаОтправкиНачало = ПолучитьИмяВременногоФайла("txt");
				
				
			    ФайлОтправкиНачало = Новый ЗаписьТекста(ИмяФайлаОтправкиНачало, КодировкаТекста.ANSI, Символы.ПС, Ложь);

				ФайлОтправкиНачало.ЗаписатьСтроку("--" + Boundary); 
				Если ЗначениеЗаполнено(ИмяВр_1) Тогда
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +ИмяВр_1+ """"); 				
				Иначе
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +Объект.ИмяФайла+ """"); 				
				КонецЕсли;
				ФайлОтправкиНачало.ЗаписатьСтроку("Content-Type: application/octet-stream"); 				
			    ФайлОтправкиНачало.ЗаписатьСтроку("");
			    ФайлОтправкиНачало.Закрыть();
				МассивФайловДляОбъединения = Новый Массив;
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиНачало);

			    МассивФайловДляОбъединения.Добавить(ИмяВр);
				
				//Каталог = КаталогВременныхФайлов();
				///ИмяФайла = Строка(Новый УникальныйИдентификатор) + "2.txt";
				//ИмяФайлаОтправкиКонец = Каталог + ИмяФайла;

			    ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
			    ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.ANSI, Символы.ПС, Ложь);

			    //Завершение раздела двоичных данных
			    //Завершение сообщения для сервера
				
				ФайлОтправкиКонец.ЗаписатьСтроку("");
			    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary + "--");
			    ФайлОтправкиКонец.Закрыть();
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец); // !!! 3 добавление в массив
				
				
				ИмяФайлаОтправки = ПолучитьИмяВременногоФайла("tmp");//КаталогВременныхФайлов() + "post.txt";
				
				
			    ОбъединитьФайлы(МассивФайловДляОбъединения, ИмяФайлаОтправки);
				
				ДвоичнД=Новый ДвоичныеДанные(ИмяФайлаОтправки);
				РазмерФайла=ДвоичнД.Размер();
				
				ВернутьАдресХр=ПоместитьВоВременноеХранилище(ДвоичнД,ЭтаФорма.УникальныйИдентификатор);
		   КонецЕсли;
		
			 	
		ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фото" Тогда
		


			Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("Фото");
			
		ОблШ=Мак.ПолучитьОбласть("Шапка");
		ОблС=Мак.ПолучитьОбласть("строка");
		Табл.Вывести(ОблШ);
		Для Каждого Стр Из ОБъект.ФотоGS Цикл
			ОблС.Параметры.Заполнить(Стр);
			Если ЗначениеЗаполнено(Стр.GTIN) Тогда
				ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
			Иначе
				ОблС.Параметры.GTIN="";
				
			КонецЕсли;
			
			
			ОблС.Параметры.КодТНВЭД="<"+Стр.КодТНВЭД.Код+"> "+Стр.КодТНВЭД.Наименование;
			ОблС.Параметры.ТипИзделия="<"+Стр.ТипИзделия.Код+"> "+Стр.ТипИзделия.Наименование;
			
			ОблС.Параметры.СтранаПроизводства=Стр.СтранаПроизводства.Альфа2;
			
			Если Стр.НомерРегламента004=Истина Тогда
				ОблС.Параметры.НомерРегламента004="ДА";
			Иначе
				ОблС.Параметры.НомерРегламента004="НЕТ";
				
			Конецесли;
			Если Стр.НомерРегламента037=Истина Тогда
				ОблС.Параметры.НомерРегламента037="ДА";
			Иначе
				ОблС.Параметры.НомерРегламента037="НЕТ";
				
			Конецесли;
			Если Стр.НомерРегламента005=Истина Тогда
				ОблС.Параметры.НомерРегламента005="ДА";
			Иначе
				ОблС.Параметры.НомерРегламента005="НЕТ";
				
			Конецесли;
			
			Если Стр.НомерРегламента012=Истина Тогда
				ОблС.Параметры.НомерРегламента012="ДА";
			Иначе
				ОблС.Параметры.НомерРегламента012="НЕТ";
				
			Конецесли;
			
			Если Стр.НомерРегламента020=Истина Тогда
				ОблС.Параметры.НомерРегламента020="ДА";
			Иначе
				ОблС.Параметры.НомерРегламента020="НЕТ";
				
			Конецесли;
			Если Стр.БезРегламента=Истина Тогда
				ОблС.Параметры.БезРегламента="ДА";
			Иначе
				ОблС.Параметры.БезРегламента="НЕТ";
				
			Конецесли;
			Если Стр.Комплект=Истина Тогда
				ОблС.Параметры.Комплект="ДА";
			Иначе
				ОблС.Параметры.Комплект="НЕТ";
				
			Конецесли;
			
			Табл.Вывести(ОблС);
		КонецЦикла;
		Если Возвращаем Тогда
				 
		ВремФ=ПолучитьИмяВременногоФайла("xlsx");
				//ФайлЗапроса = Новый Файл(ВремФ);
				
				//Каталог = КаталогВременныхФайлов();
				ИмяВр = ВремФ;
		

				Табл.Записать(ИмяВр,ТипФайлаТабличногоДокумента.XLSX);
				
				
				//Каталог = КаталогВременныхФайлов();
				//ИмяФайла = Строка(Новый УникальныйИдентификатор) + "1.txt";
				ИмяФайлаОтправкиНачало = ПолучитьИмяВременногоФайла("txt");
				
				
			    ФайлОтправкиНачало = Новый ЗаписьТекста(ИмяФайлаОтправкиНачало, КодировкаТекста.ANSI, Символы.ПС, Ложь);

				ФайлОтправкиНачало.ЗаписатьСтроку("--" + Boundary); 
				Если ЗначениеЗаполнено(ИмяВр_1) Тогда
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +ИмяВр_1+ """"); 				
				Иначе
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +Объект.ИмяФайла+ """"); 				
				КонецЕсли;
				ФайлОтправкиНачало.ЗаписатьСтроку("Content-Type: application/octet-stream"); 				
			    ФайлОтправкиНачало.ЗаписатьСтроку("");
			    ФайлОтправкиНачало.Закрыть();
				МассивФайловДляОбъединения = Новый Массив;
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиНачало);

			    МассивФайловДляОбъединения.Добавить(ИмяВр);
				
				//Каталог = КаталогВременныхФайлов();
				///ИмяФайла = Строка(Новый УникальныйИдентификатор) + "2.txt";
				//ИмяФайлаОтправкиКонец = Каталог + ИмяФайла;

			    ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
			    ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.ANSI, Символы.ПС, Ложь);

			    //Завершение раздела двоичных данных
			    //Завершение сообщения для сервера
				
				ФайлОтправкиКонец.ЗаписатьСтроку("");
			    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary + "--");
			    ФайлОтправкиКонец.Закрыть();
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец); // !!! 3 добавление в массив
				
				
				ИмяФайлаОтправки = ПолучитьИмяВременногоФайла("tmp");//КаталогВременныхФайлов() + "post.txt";
				
				
			    ОбъединитьФайлы(МассивФайловДляОбъединения, ИмяФайлаОтправки);
				
				ДвоичнД=Новый ДвоичныеДанные(ИмяФайлаОтправки);
				РазмерФайла=ДвоичнД.Размер();
				
				ВернутьАдресХр=ПоместитьВоВременноеХранилище(ДвоичнД,ЭтаФорма.УникальныйИдентификатор);
		   КонецЕсли;
		
		

ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Одежда" Тогда
		

	Если Объект.ВторойВариант=1 Тогда
			Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("Белье");
			
		ОблШ=Мак.ПолучитьОбласть("Шапка");
		ОблС=Мак.ПолучитьОбласть("строка");
		Табл.Вывести(ОблШ);
		Для Каждого Стр Из ОБъект.БельеGS Цикл
			ОблС.Параметры.Заполнить(Стр);
			Если ЗначениеЗаполнено(Стр.GTIN) Тогда
				ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
			Иначе
				ОблС.Параметры.GTIN="";
				
			КонецЕсли;
			
			//ОблС.Параметры.СтранаПроизводства="<"+Стр.СтранаПроизводства.Альфа2+"> "+Стр.СтранаПроизводства.Наименование;
			ОблС.Параметры.СтранаПроизводства=Стр.СтранаПроизводства.Альфа2;
			
			
			ОблС.Параметры.КодТНВЭД="<"+Стр.КодТНВЭД.Код+"> "+Стр.КодТНВЭД.Наименование;
			ОблС.Параметры.ВидИзделия="<"+Стр.ВидИзделия.Код+"> "+Стр.ВидИзделия.Наименование;
			//ОблС.Параметры.РазмерИзделия="<"+Стр.РазмерИзделияГОСТ.Код+"> "+Стр.РазмерИзделияГОСТ.Наименование;
			
			//ОблС.Параметры.ЦелевойПол="<"+Стр.ЦелевойПол.Код+"> "+Стр.ЦелевойПол.Наименование;
			ОблС.Параметры.ВозрастнаяКатегория="<"+Стр.ВозрастПотребителя.Код+"> "+Стр.ВозрастПотребителя.Наименование;
			ОблС.Параметры.ВидМатериала="<"+Стр.ВидМатериала.Код+"> "+Стр.ВидМатериала.Наименование;
			
			
			
			//Если ЗначениеЗаполнено(Стр.ИННПроизводителяСтрокой) Тогда
//				ОблС.Параметры.ИННПроизводителяИмпортёра=Стр.ИННПроизводителяСтрокой;
				
//			Иначе
				ОблС.Параметры.ИННПроизводителяИмпортёра=Стр.ИННПроизводства;
//			КонецЕсли;
			

			//Если ЗначениеЗаполнено(Стр.НаименованиеПроизводителяИмпортёра) Тогда
				ОблС.Параметры.НаименованиеПроизводителяИмпортёра=Стр.ИННПроизводителяСтрокой;
				
			//Иначе
			//	ОблС.Параметры.ИННПроизводителяИмпортёра=Стр.ИННПроизводства;
			//КонецЕсли;
			Если Стр.Комплект=Истина Тогда
				ОблС.Параметры.Комплект="ДА";
			Иначе
				ОблС.Параметры.Комплект="НЕТ";
				
			Конецесли;
			
			Если Стр.НомерРегламента007=Истина Тогда
				ОблС.Параметры.НомерРегламента007="ДА";
			Иначе
				ОблС.Параметры.НомерРегламента007="НЕТ";
				
			Конецесли;
			Если Стр.НомерРегламента017=Истина Тогда
				ОблС.Параметры.НомерРегламента017="ДА";
			Иначе
				ОблС.Параметры.НомерРегламента017="НЕТ";
				
			Конецесли;
			
			Если Стр.НомерРегламента005=Истина Тогда
				ОблС.Параметры.НомерРегламента005="ДА";
			Иначе
				ОблС.Параметры.НомерРегламента005="НЕТ";
				
			Конецесли;
			
			Если Стр.БезРегламента=Истина Тогда
				ОблС.Параметры.БезРегламента="ДА";
			Иначе
				ОблС.Параметры.БезРегламента="НЕТ";
				
			Конецесли;
			
			Табл.Вывести(ОблС);
		КонецЦикла;

	Иначе
			Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("Одежда");
			
		ОблШ=Мак.ПолучитьОбласть("Шапка");
		ОблС=Мак.ПолучитьОбласть("строка");
		Табл.Вывести(ОблШ);
		Для Каждого Стр Из ОБъект.ОдеждаGS Цикл
			ОблС.Параметры.Заполнить(Стр);
			Если ЗначениеЗаполнено(Стр.GTIN) Тогда
				ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
			Иначе
				ОблС.Параметры.GTIN="";
				
			КонецЕсли;
			
			//ОблС.Параметры.СтранаПроизводства="<"+Стр.СтранаПроизводства.Альфа2+"> "+Стр.СтранаПроизводства.Наименование;
			ОблС.Параметры.СтранаПроизводства=Стр.СтранаПроизводства.Альфа2;
			
			ОблС.Параметры.КодТНВЭД="<"+Стр.КодТНВЭД.Код+"> "+Стр.КодТНВЭД.Наименование;
			ОблС.Параметры.ВидИзделия="<"+Стр.ВидИзделия.Код+"> "+Стр.ВидИзделия.Наименование;
			ОблС.Параметры.РазмерИзделияГОСТ="<"+Стр.РазмерИзделияГОСТ.Код+"> "+Стр.РазмерИзделияГОСТ.Наименование;
			
			ОблС.Параметры.ЦелевойПол="<"+Стр.ЦелевойПол.Код+"> "+Стр.ЦелевойПол.Наименование;
			
			
			Если Стр.НомерРегламента007=Истина Тогда
				ОблС.Параметры.НомерРегламента007="ДА";
			Иначе
				ОблС.Параметры.НомерРегламента007="НЕТ";
				
			Конецесли;
			Если Стр.НомерРегламента017=Истина Тогда
				ОблС.Параметры.НомерРегламента017="ДА";
			Иначе
				ОблС.Параметры.НомерРегламента017="НЕТ";
				
			Конецесли;
			Если Стр.НомерРегламента019=Истина Тогда
				ОблС.Параметры.НомерРегламента019="ДА";
			Иначе
				ОблС.Параметры.НомерРегламента019="НЕТ";
				
			Конецесли;
			
			Если Стр.НомерРегламента005=Истина Тогда
				ОблС.Параметры.НомерРегламента005="ДА";
			Иначе
				ОблС.Параметры.НомерРегламента005="НЕТ";
				
			Конецесли;
			
			Если Стр.БезРегламента=Истина Тогда
				ОблС.Параметры.БезРегламента="ДА";
			Иначе
				ОблС.Параметры.БезРегламента="НЕТ";
				
			Конецесли;
			
			Табл.Вывести(ОблС);
		КонецЦикла;
	КонецЕсли;
		Если Возвращаем Тогда
				 
		ВремФ=ПолучитьИмяВременногоФайла("xlsx");
				//ФайлЗапроса = Новый Файл(ВремФ);
				
				//Каталог = КаталогВременныхФайлов();
				ИмяВр = ВремФ;
		

				Табл.Записать(ИмяВр,ТипФайлаТабличногоДокумента.XLSX);
				
				
				//Каталог = КаталогВременныхФайлов();
				//ИмяФайла = Строка(Новый УникальныйИдентификатор) + "1.txt";
				ИмяФайлаОтправкиНачало = ПолучитьИмяВременногоФайла("txt");
				
				
			    ФайлОтправкиНачало = Новый ЗаписьТекста(ИмяФайлаОтправкиНачало, КодировкаТекста.ANSI, Символы.ПС, Ложь);

				ФайлОтправкиНачало.ЗаписатьСтроку("--" + Boundary); 
				Если ЗначениеЗаполнено(ИмяВр_1) Тогда
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +ИмяВр_1+ """"); 				
				Иначе
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +Объект.ИмяФайла+ """"); 				
				КонецЕсли;
				ФайлОтправкиНачало.ЗаписатьСтроку("Content-Type: application/octet-stream"); 				
			    ФайлОтправкиНачало.ЗаписатьСтроку("");
			    ФайлОтправкиНачало.Закрыть();
				МассивФайловДляОбъединения = Новый Массив;
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиНачало);

			    МассивФайловДляОбъединения.Добавить(ИмяВр);
				
				//Каталог = КаталогВременныхФайлов();
				///ИмяФайла = Строка(Новый УникальныйИдентификатор) + "2.txt";
				//ИмяФайлаОтправкиКонец = Каталог + ИмяФайла;

			    ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
			    ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.ANSI, Символы.ПС, Ложь);

			    //Завершение раздела двоичных данных
			    //Завершение сообщения для сервера
				
				ФайлОтправкиКонец.ЗаписатьСтроку("");
			    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary + "--");
			    ФайлОтправкиКонец.Закрыть();
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец); // !!! 3 добавление в массив
				
				
				ИмяФайлаОтправки = ПолучитьИмяВременногоФайла("tmp");//КаталогВременныхФайлов() + "post.txt";
				
				
			    ОбъединитьФайлы(МассивФайловДляОбъединения, ИмяФайлаОтправки);
				
				ДвоичнД=Новый ДвоичныеДанные(ИмяФайлаОтправки);
				РазмерФайла=ДвоичнД.Размер();
				
				ВернутьАдресХр=ПоместитьВоВременноеХранилище(ДвоичнД,ЭтаФорма.УникальныйИдентификатор);
		   КонецЕсли;
		
		
	 ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Кресла-коляски" Тогда
		   	 Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("Коляски");
					
				ОблШ=Мак.ПолучитьОбласть("Шапка");
				ОблС=Мак.ПолучитьОбласть("строка");
				Табл.Вывести(ОблШ);
				Для Каждого Стр Из ОБъект.РамыGS Цикл
					ОблС.Параметры.Заполнить(Стр);
					Если ЗначениеЗаполнено(Стр.GTIN) Тогда
						ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
					Иначе
						ОблС.Параметры.GTIN="";
						
					КонецЕсли;
					
					
					ОблС.Параметры.КодТНВЭД="<"+Стр.КодТНВЭД.Код+"> "+Стр.КодТНВЭД.Наименование;
					ОблС.Параметры.ВидТоварв="<"+Стр.ВидТоварв.Код+"> "+Стр.ВидТоварв.Наименование;
					ОблС.Параметры.ТипПриводаВДвижении="<"+Стр.ТипПриводаВДвижении.Код+"> "+Стр.ТипПриводаВДвижении.Наименование;
					
					
					ОблС.Параметры.ЕдиницаИзмеренияГлубины="<"+Стр.ЕдиницаИзмеренияГлубины.Код+"> "+Стр.ЕдиницаИзмеренияГлубины.Наименование;
					
					ОблС.Параметры.ЕдиницаИзмеренияШирины="<"+Стр.ЕдиницаИзмеренияШирины.Код+"> "+Стр.ЕдиницаИзмеренияШирины.Наименование;
					ОблС.Параметры.ЕдиницаИзмеренияВысоты="<"+Стр.ЕдиницаИзмеренияВысоты.Код+"> "+Стр.ЕдиницаИзмеренияВысоты.Наименование;
					ОблС.Параметры.ЕдиницаИзмреенияВысотыСпинки="<"+Стр.ЕдиницаИзмреенияВысотыСпинки.Код+"> "+Стр.ЕдиницаИзмреенияВысотыСпинки.Наименование;
					
					
					ОблС.Параметры.СтранаПроизводства=Стр.СтранаПроизводства.Альфа2;
						Табл.Вывести(ОблС);
				КонецЦикла;

		     Если Возвращаем Тогда
				 
		ВремФ=ПолучитьИмяВременногоФайла("xlsx");
				//ФайлЗапроса = Новый Файл(ВремФ);
				
				//Каталог = КаталогВременныхФайлов();
				ИмяВр = ВремФ;
		

				Табл.Записать(ИмяВр,ТипФайлаТабличногоДокумента.XLSX);
				
				
				//Каталог = КаталогВременныхФайлов();
				//ИмяФайла = Строка(Новый УникальныйИдентификатор) + "1.txt";
				ИмяФайлаОтправкиНачало = ПолучитьИмяВременногоФайла("txt");
				
				
			    ФайлОтправкиНачало = Новый ЗаписьТекста(ИмяФайлаОтправкиНачало, КодировкаТекста.ANSI, Символы.ПС, Ложь);

				ФайлОтправкиНачало.ЗаписатьСтроку("--" + Boundary); 
				Если ЗначениеЗаполнено(ИмяВр_1) Тогда
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +ИмяВр_1+ """"); 				
				Иначе
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +Объект.ИмяФайла+ """"); 				
				КонецЕсли;
				ФайлОтправкиНачало.ЗаписатьСтроку("Content-Type: application/octet-stream"); 				
			    ФайлОтправкиНачало.ЗаписатьСтроку("");
			    ФайлОтправкиНачало.Закрыть();
				МассивФайловДляОбъединения = Новый Массив;
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиНачало);

			    МассивФайловДляОбъединения.Добавить(ИмяВр);
				
				//Каталог = КаталогВременныхФайлов();
				///ИмяФайла = Строка(Новый УникальныйИдентификатор) + "2.txt";
				//ИмяФайлаОтправкиКонец = Каталог + ИмяФайла;

			    ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
			    ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.ANSI, Символы.ПС, Ложь);

			    //Завершение раздела двоичных данных
			    //Завершение сообщения для сервера
				
				ФайлОтправкиКонец.ЗаписатьСтроку("");
			    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary + "--");
			    ФайлОтправкиКонец.Закрыть();
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец); // !!! 3 добавление в массив
				
				
				ИмяФайлаОтправки = ПолучитьИмяВременногоФайла("tmp");//КаталогВременныхФайлов() + "post.txt";
				
				
			    ОбъединитьФайлы(МассивФайловДляОбъединения, ИмяФайлаОтправки);
				
				ДвоичнД=Новый ДвоичныеДанные(ИмяФайлаОтправки);
				РазмерФайла=ДвоичнД.Размер();
				
				ВернутьАдресХр=ПоместитьВоВременноеХранилище(ДвоичнД,ЭтаФорма.УникальныйИдентификатор);
		   КонецЕсли;
		
		 
	 ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Велосипеды" Тогда
		

		 Если Объект.ВторойВариант=1 Тогда
			 Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("Рамы");
					
				ОблШ=Мак.ПолучитьОбласть("Шапка");
				ОблС=Мак.ПолучитьОбласть("строка");
				Табл.Вывести(ОблШ);
				Для Каждого Стр Из ОБъект.РамыGS Цикл
					ОблС.Параметры.Заполнить(Стр);
					Если ЗначениеЗаполнено(Стр.GTIN) Тогда
						ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
					Иначе
						ОблС.Параметры.GTIN="";
						
					КонецЕсли;
					
					
					ОблС.Параметры.КодТНВЭД="<"+Стр.КодТНВЭД.Код+"> "+Стр.КодТНВЭД.Наименование;
					ОблС.Параметры.ТипРамы="<"+Стр.ТипВелосипеда.Код+"> "+Стр.ТипВелосипеда.Наименование;
					ОблС.Параметры.ГодПроизводства="<"+Стр.ГодПроизводства.Код+"> "+Стр.ГодПроизводства.Наименование;
					
					ОблС.Параметры.РазмерРамы="<"+Стр.РазмерРамы.Код+"> "+Стр.РазмерРамы.Наименование;
					ОблС.Параметры.ЕдиницаИзмеренияРазмераРамы="<"+Стр.ЕдиницаИзмеренияРазмераРамы.Код+"> "+Стр.ЕдиницаИзмеренияРазмераРамы.Наименование;
					ОблС.Параметры.МатериалРамы="<"+Стр.МатериалРамы.Код+"> "+Стр.МатериалРамы.Наименование;
					
					ОблС.Параметры.ТипПереднейВилки="<"+Стр.ТипПереднейВилки.Код+"> "+Стр.ТипПереднейВилки.Наименование;
					
					ОблС.Параметры.СтранаПроизводства=Стр.СтранаПроизводства.Альфа2;
					//ОблС.Параметры.ИННПредприятия=Объект.Организация.ИНН;
					
					
					Если Стр.НомерРегламента007=Истина Тогда
						ОблС.Параметры.НомерРегламента007="ДА";
					Иначе
						ОблС.Параметры.НомерРегламента007="НЕТ";
						
					Конецесли;
					Если Стр.НомерРегламента010=Истина Тогда
						ОблС.Параметры.НомерРегламента010="ДА";
					Иначе
						ОблС.Параметры.НомерРегламента010="НЕТ";
						
					Конецесли;
					Если Стр.НомерРегламента012=Истина Тогда
						ОблС.Параметры.НомерРегламента012="ДА";
					Иначе
						ОблС.Параметры.НомерРегламента012="НЕТ";
						
					Конецесли;
					
					
					Если Стр.НомерРегламента005=Истина Тогда
						ОблС.Параметры.НомерРегламента005="ДА";
					Иначе
						ОблС.Параметры.НомерРегламента005="НЕТ";
						
					Конецесли;
					
					Табл.Вывести(ОблС);
				КонецЦикла;
		Иначе
				 
				Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("Велосипед");
					
				ОблШ=Мак.ПолучитьОбласть("Шапка");
				ОблС=Мак.ПолучитьОбласть("строка");
				Табл.Вывести(ОблШ);
				Для Каждого Стр Из ОБъект.ВелосипедыGS Цикл
					ОблС.Параметры.Заполнить(Стр);
					Если ЗначениеЗаполнено(Стр.GTIN) Тогда
						ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
					Иначе
						ОблС.Параметры.GTIN="";
						
					КонецЕсли;
					
					
					ОблС.Параметры.КодТНВЭД="<"+Стр.КодТНВЭД.Код+"> "+Стр.КодТНВЭД.Наименование;
					ОблС.Параметры.ТипВелосипеда="<"+Стр.ТипВелосипеда.Код+"> "+Стр.ТипВелосипеда.Наименование;
					ОблС.Параметры.ГодПроизводства="<"+Стр.ГодПроизводства.Код+"> "+Стр.ГодПроизводства.Наименование;
					
					Если Стр.НаличиеДвигателя=Истина Тогда
						ОблС.Параметры.НаличиеДвигателя="ДА";
					Иначе
						ОблС.Параметры.НаличиеДвигателя="НЕТ";
					КонецЕсли;
					
					ОблС.Параметры.ТипДвигателя="<"+Стр.ТипДвигателя.Код+"> "+Стр.ТипДвигателя.Наименование;
					ОблС.Параметры.ЕдиницаИзмеренияМощности="<"+Стр.ЕдиницаИзмеренияМощности.Код+"> "+Стр.ЕдиницаИзмеренияМощности.Наименование;
					ОблС.Параметры.РазмерРамы="<"+Стр.РазмерРамы.Код+"> "+Стр.РазмерРамы.Наименование;
					ОблС.Параметры.ЕдиницаИзмеренияРазмераРамы="<"+Стр.ЕдиницаИзмеренияРазмераРамы.Код+"> "+Стр.ЕдиницаИзмеренияРазмераРамы.Наименование;
					ОблС.Параметры.МатериалРамы="<"+Стр.МатериалРамы.Код+"> "+Стр.МатериалРамы.Наименование;
					
					
					ОблС.Параметры.ШиринаПрофиля="<"+Стр.ШиринаПрофиляШины.Код+"> "+Стр.ШиринаПрофиляШины.Наименование;
					ОблС.Параметры.ТипТормознойСистемы="<"+Стр.ТипТормознойСистемы.Код+"> "+Стр.ТипТормознойСистемы.Наименование;
					ОблС.Параметры.ТипПереднейВилки="<"+Стр.ТипПереднейВилки.Код+"> "+Стр.ТипПереднейВилки.Наименование;
					
					ОблС.Параметры.СтранаПроизводства=Стр.СтранаПроизводства.Альфа2;
					//ОблС.Параметры.ИННПредприятия=Объект.Организация.ИНН;
					
					
					Если Стр.НомерРегламента007=Истина Тогда
						ОблС.Параметры.НомерРегламента007="ДА";
					Иначе
						ОблС.Параметры.НомерРегламента007="НЕТ";
						
					Конецесли;
					Если Стр.НомерРегламента010=Истина Тогда
						ОблС.Параметры.НомерРегламента010="ДА";
					Иначе
						ОблС.Параметры.НомерРегламента010="НЕТ";
						
					Конецесли;
					Если Стр.НомерРегламента012=Истина Тогда
						ОблС.Параметры.НомерРегламента012="ДА";
					Иначе
						ОблС.Параметры.НомерРегламента012="НЕТ";
						
					Конецесли;
					
					Если Стр.НомерРегламента018=Истина Тогда
						ОблС.Параметры.НомерРегламента018="ДА";
					Иначе
						ОблС.Параметры.НомерРегламента018="НЕТ";
						
					Конецесли;
					
					Если Стр.НомерРегламента005=Истина Тогда
						ОблС.Параметры.НомерРегламента005="ДА";
					Иначе
						ОблС.Параметры.НомерРегламента005="НЕТ";
						
					Конецесли;
					
					Табл.Вывести(ОблС);
				КонецЦикла;
			КонецЕсли;
		Если Возвращаем Тогда
				 
		ВремФ=ПолучитьИмяВременногоФайла("xlsx");
				//ФайлЗапроса = Новый Файл(ВремФ);
				
				//Каталог = КаталогВременныхФайлов();
				ИмяВр = ВремФ;
		

				Табл.Записать(ИмяВр,ТипФайлаТабличногоДокумента.XLSX);
				
				
				//Каталог = КаталогВременныхФайлов();
				//ИмяФайла = Строка(Новый УникальныйИдентификатор) + "1.txt";
				ИмяФайлаОтправкиНачало = ПолучитьИмяВременногоФайла("txt");
				
				
			    ФайлОтправкиНачало = Новый ЗаписьТекста(ИмяФайлаОтправкиНачало, КодировкаТекста.ANSI, Символы.ПС, Ложь);

				ФайлОтправкиНачало.ЗаписатьСтроку("--" + Boundary); 
				Если ЗначениеЗаполнено(ИмяВр_1) Тогда
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +ИмяВр_1+ """"); 				
				Иначе
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +Объект.ИмяФайла+ """"); 				
				КонецЕсли;
				ФайлОтправкиНачало.ЗаписатьСтроку("Content-Type: application/octet-stream"); 				
			    ФайлОтправкиНачало.ЗаписатьСтроку("");
			    ФайлОтправкиНачало.Закрыть();
				МассивФайловДляОбъединения = Новый Массив;
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиНачало);

			    МассивФайловДляОбъединения.Добавить(ИмяВр);
				
				//Каталог = КаталогВременныхФайлов();
				///ИмяФайла = Строка(Новый УникальныйИдентификатор) + "2.txt";
				//ИмяФайлаОтправкиКонец = Каталог + ИмяФайла;

			    ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
			    ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.ANSI, Символы.ПС, Ложь);

			    //Завершение раздела двоичных данных
			    //Завершение сообщения для сервера
				
				ФайлОтправкиКонец.ЗаписатьСтроку("");
			    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary + "--");
			    ФайлОтправкиКонец.Закрыть();
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец); // !!! 3 добавление в массив
				
				
				ИмяФайлаОтправки = ПолучитьИмяВременногоФайла("tmp");//КаталогВременныхФайлов() + "post.txt";
				
				
			    ОбъединитьФайлы(МассивФайловДляОбъединения, ИмяФайлаОтправки);
				
				ДвоичнД=Новый ДвоичныеДанные(ИмяФайлаОтправки);
				РазмерФайла=ДвоичнД.Размер();
				
				ВернутьАдресХр=ПоместитьВоВременноеХранилище(ДвоичнД,ЭтаФорма.УникальныйИдентификатор);
		   КонецЕсли;
		
		

ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Парфюм" Тогда
		


			Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("Парфюм");
			
		ОблШ=Мак.ПолучитьОбласть("Шапка");
		ОблС=Мак.ПолучитьОбласть("строка");
		Табл.Вывести(ОблШ);
		Для Каждого Стр Из ОБъект.ПарфюмGS Цикл
			ОблС.Параметры.Заполнить(Стр);
			Если ЗначениеЗаполнено(Стр.GTIN) Тогда
				ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
			Иначе
				ОблС.Параметры.GTIN="";
				
			КонецЕсли;
			
			
			ОблС.Параметры.КодТНВЭД="<"+Стр.КодТНВЭД.Код+"> "+Стр.КодТНВЭД.Наименование;
			ОблС.Параметры.ЕдиницаИзмеренияОбъема="<"+Стр.ЕдиницаИзмеренияОбъема.Код+"> "+Стр.ЕдиницаИзмеренияОбъема.Наименование;
			ОблС.Параметры.ТипПарфюмерии="<"+Стр.ТипПарфюмерии.Код+"> "+Стр.ТипПарфюмерии.Наименование;
			ОблС.Параметры.ТипУпаковки="<"+Стр.ТипУпаковки.Код+"> "+Стр.ТипУпаковки.Наименование;
			ОблС.Параметры.МатериалУпаковки="<"+Стр.МатериалУпаковки.Код+"> "+Стр.МатериалУпаковки.Наименование;
			
			ОблС.Параметры.СтранаПроизводства=Стр.СтранаПроизводства.Альфа2;
			ОблС.Параметры.ИННПредприятия=Объект.Организация.ИНН;
			
			
			Если Стр.НомерРегламента009=Истина Тогда
				ОблС.Параметры.НомерРегламента009="ДА";
			Иначе
				ОблС.Параметры.НомерРегламента009="НЕТ";
				
			Конецесли;
			Если Стр.НомерРегламента005=Истина Тогда
				ОблС.Параметры.НомерРегламента005="ДА";
			Иначе
				ОблС.Параметры.НомерРегламента005="НЕТ";
				
			Конецесли;
			Если Стр.НомерРегламента029=Истина Тогда
				ОблС.Параметры.НомерРегламента029="ДА";
			Иначе
				ОблС.Параметры.НомерРегламента029="НЕТ";
				
			Конецесли;
			Если ЗначениеЗАполнено(Стр.Сертификат) Тогда
				ОблС.Параметры.НомерСертифката=Стр.Сертификат.Наименование;
				ОблС.Параметры.ДатаДекларации=Стр.Сертификат.ДатаНачалаДействия;
				Если ЗначениеЗаполнено(Стр.Сертификат.ВидСертификатаGSI) тогда
					ОблС.Параметры.ВидСертификата="<"+Стр.Сертификат.ВидСертификатаGSI.Код+"> "+Стр.Сертификат.ВидСертификатаGSI.Наименование;
				КонецЕсли;
			Иначе
				ОблС.Параметры.НомерСертифката="нет";
				ОблС.Параметры.ДатаДекларации="нет";
				
			КонецЕсли;
			
			
			Табл.Вывести(ОблС);
		КонецЦикла;
		Если Возвращаем Тогда
				 
		ВремФ=ПолучитьИмяВременногоФайла("xlsx");
				//ФайлЗапроса = Новый Файл(ВремФ);
				
				//Каталог = КаталогВременныхФайлов();
				ИмяВр = ВремФ;
		

				Табл.Записать(ИмяВр,ТипФайлаТабличногоДокумента.XLSX);
				
				
				//Каталог = КаталогВременныхФайлов();
				//ИмяФайла = Строка(Новый УникальныйИдентификатор) + "1.txt";
				ИмяФайлаОтправкиНачало = ПолучитьИмяВременногоФайла("txt");
				
				
			    ФайлОтправкиНачало = Новый ЗаписьТекста(ИмяФайлаОтправкиНачало, КодировкаТекста.ANSI, Символы.ПС, Ложь);

				ФайлОтправкиНачало.ЗаписатьСтроку("--" + Boundary); 
				Если ЗначениеЗаполнено(ИмяВр_1) Тогда
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +ИмяВр_1+ """"); 				
				Иначе
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +Объект.ИмяФайла+ """"); 				
				КонецЕсли;
				ФайлОтправкиНачало.ЗаписатьСтроку("Content-Type: application/octet-stream"); 				
			    ФайлОтправкиНачало.ЗаписатьСтроку("");
			    ФайлОтправкиНачало.Закрыть();
				МассивФайловДляОбъединения = Новый Массив;
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиНачало);

			    МассивФайловДляОбъединения.Добавить(ИмяВр);
				
				//Каталог = КаталогВременныхФайлов();
				///ИмяФайла = Строка(Новый УникальныйИдентификатор) + "2.txt";
				//ИмяФайлаОтправкиКонец = Каталог + ИмяФайла;

			    ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
			    ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.ANSI, Символы.ПС, Ложь);

			    //Завершение раздела двоичных данных
			    //Завершение сообщения для сервера
				
				ФайлОтправкиКонец.ЗаписатьСтроку("");
			    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary + "--");
			    ФайлОтправкиКонец.Закрыть();
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец); // !!! 3 добавление в массив
				
				
				ИмяФайлаОтправки = ПолучитьИмяВременногоФайла("tmp");//КаталогВременныхФайлов() + "post.txt";
				
				
			    ОбъединитьФайлы(МассивФайловДляОбъединения, ИмяФайлаОтправки);
				
				ДвоичнД=Новый ДвоичныеДанные(ИмяФайлаОтправки);
				РазмерФайла=ДвоичнД.Размер();
				
				ВернутьАдресХр=ПоместитьВоВременноеХранилище(ДвоичнД,ЭтаФорма.УникальныйИдентификатор);
		   КонецЕсли;
		
		
	
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Молоко" Тогда
		


			Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("Молоко");
			
		ОблШ=Мак.ПолучитьОбласть("Шапка");
		ОблС=Мак.ПолучитьОбласть("строка");
		Табл.Вывести(ОблШ);
		Для Каждого Стр Из ОБъект.МолокоGS Цикл
			ОблС.Параметры.Заполнить(Стр);
			Если ЗначениеЗаполнено(Стр.GTIN) Тогда
				ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
			Иначе
				ОблС.Параметры.GTIN="";
				
			КонецЕсли;
			
			
			ОблС.Параметры.КодТНВЭД="<"+Стр.КодТНВЭД.Код+"> "+Стр.КодТНВЭД.Наименование;
			ОблС.Параметры.ЕдиницаОбъема="<"+Стр.ЕдиницаОбъема.Код+"> "+Стр.ЕдиницаОбъема.Наименование;
			ОблС.Параметры.ТипПродукта="<"+Стр.ТипПродукта.Код+"> "+Стр.ТипПродукта.Наименование;
//			Если Стр.ТоварВесовой=Истина Тогда
//				ОблС.Параметры.ТоварВесовой="ДА";
//			Иначе
//				ОблС.Параметры.ТоварВесовой="НЕТ";
//			КонецЕсли;
			ОблС.Параметры.ТипУпаковки="<"+Стр.ТипУпаковки.Код+"> "+Стр.ТипУпаковки.Наименование;
			ОблС.Параметры.МатериалУпаковки="<"+Стр.МатериалУпаковки.Код+"> "+Стр.МатериалУпаковки.Наименование;
			ОблС.Параметры.ПроисхождениеСырья="<"+Стр.ПроисхождениеСырья.Код+"> "+Стр.ПроисхождениеСырья.Наименование;
			ОблС.Параметры.ПродукцияДляДетскогоПитания="<"+Стр.ПродукцияДляДетскогоПитания.Код+"> "+Стр.ПродукцияДляДетскогоПитания.Наименование;
			ОблС.Параметры.СтранаПроизводства=Стр.СтранаПроизводства.Альфа2;
			ОблС.Параметры.ИННПредприятия=Объект.Организация.ИНН;
			Если Стр.ПодлежитВетеринарномуКонтролю=Истина Тогда
				ОблС.Параметры.ПодлежитВетеринарномуКонтролю="ДА";
			Иначе
				ОблС.Параметры.ПодлежитВетеринарномуКонтролю="НЕТ";
				
			Конецесли;
			Если ЗначениеЗАполнено(Стр.Сертификат) Тогда
				ОблС.Параметры.НомерСертифката=Стр.Сертификат.Наименование;
				ОблС.Параметры.ДатаДекларации=Стр.Сертификат.ДатаНачалаДействия;
				ОблС.Параметры.ВидСертификата="<"+Стр.Сертификат.ВидСертификатаGSI.Код+"> "+Стр.Сертификат.ВидСертификатаGSI.Наименование;
			Иначе
				ОблС.Параметры.НомерСертифката="нет";
				ОблС.Параметры.ДатаДекларации="нет";
				
			КонецЕсли;
			
			
			Табл.Вывести(ОблС);
		КонецЦикла;
		Если Возвращаем Тогда
				 
		ВремФ=ПолучитьИмяВременногоФайла("xlsx");
				//ФайлЗапроса = Новый Файл(ВремФ);
				
				//Каталог = КаталогВременныхФайлов();
				ИмяВр = ВремФ;
		

				Табл.Записать(ИмяВр,ТипФайлаТабличногоДокумента.XLSX);
				
				
				//Каталог = КаталогВременныхФайлов();
				//ИмяФайла = Строка(Новый УникальныйИдентификатор) + "1.txt";
				ИмяФайлаОтправкиНачало = ПолучитьИмяВременногоФайла("txt");
				
				
			    ФайлОтправкиНачало = Новый ЗаписьТекста(ИмяФайлаОтправкиНачало, КодировкаТекста.ANSI, Символы.ПС, Ложь);

				ФайлОтправкиНачало.ЗаписатьСтроку("--" + Boundary); 
				Если ЗначениеЗаполнено(ИмяВр_1) Тогда
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +ИмяВр_1+ """"); 				
				Иначе
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +Объект.ИмяФайла+ """"); 				
				КонецЕсли;
				ФайлОтправкиНачало.ЗаписатьСтроку("Content-Type: application/octet-stream"); 				
			    ФайлОтправкиНачало.ЗаписатьСтроку("");
			    ФайлОтправкиНачало.Закрыть();
				МассивФайловДляОбъединения = Новый Массив;
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиНачало);

			    МассивФайловДляОбъединения.Добавить(ИмяВр);
				
				//Каталог = КаталогВременныхФайлов();
				///ИмяФайла = Строка(Новый УникальныйИдентификатор) + "2.txt";
				//ИмяФайлаОтправкиКонец = Каталог + ИмяФайла;

			    ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
			    ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.ANSI, Символы.ПС, Ложь);

			    //Завершение раздела двоичных данных
			    //Завершение сообщения для сервера
				
				ФайлОтправкиКонец.ЗаписатьСтроку("");
			    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary + "--");
			    ФайлОтправкиКонец.Закрыть();
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец); // !!! 3 добавление в массив
				
				
				ИмяФайлаОтправки = ПолучитьИмяВременногоФайла("tmp");//КаталогВременныхФайлов() + "post.txt";
				
				
			    ОбъединитьФайлы(МассивФайловДляОбъединения, ИмяФайлаОтправки);
				
				ДвоичнД=Новый ДвоичныеДанные(ИмяФайлаОтправки);
				РазмерФайла=ДвоичнД.Размер();
				
				ВернутьАдресХр=ПоместитьВоВременноеХранилище(ДвоичнД,ЭтаФорма.УникальныйИдентификатор);
		   КонецЕсли;
		
		   
		   
	  ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Питьевая вода" Тогда
		


			Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("ПитьеваяВода");
			
		ОблШ=Мак.ПолучитьОбласть("Шапка");
		ОблС=Мак.ПолучитьОбласть("строка");
		Табл.Вывести(ОблШ);
		Для Каждого Стр Из ОБъект.ПитьеваяВодаGS Цикл
			ОблС.Параметры.Заполнить(Стр);
			Если ЗначениеЗаполнено(Стр.GTIN) Тогда
				ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
			Иначе
				ОблС.Параметры.GTIN="";
				
			КонецЕсли;
			
			
			ОблС.Параметры.КодТНВЭД="<"+Стр.КодТНВЭД.Код+"> "+Стр.КодТНВЭД.Наименование;
			ОблС.Параметры.ЕдиницаОбъема="<"+Стр.ЕдиницаОбъема.Код+"> "+Стр.ЕдиницаОбъема.Наименование;
			ОблС.Параметры.ТипПродукта="<"+Стр.ТипПродукта.Код+"> "+Стр.ТипПродукта.Наименование;
//			Если Стр.ТоварВесовой=Истина Тогда
//				ОблС.Параметры.ТоварВесовой="ДА";
//			Иначе
//				ОблС.Параметры.ТоварВесовой="НЕТ";
//			КонецЕсли;
			ОблС.Параметры.ТипУпаковки="<"+Стр.ТипУпаковки.Код+"> "+Стр.ТипУпаковки.Наименование;
			ОблС.Параметры.МатериалУпаковки="<"+Стр.МатериалУпаковки.Код+"> "+Стр.МатериалУпаковки.Наименование;
			ОблС.Параметры.ЕдиницаИзмеренияМинерализации="<"+Стр.ЕдиницаИзмеренияМинерализации.Код+"> "+Стр.ЕдиницаИзмеренияМинерализации.Наименование;
			ОблС.Параметры.МетодГазирования="<"+Стр.МетодГазирования.Код+"> "+Стр.МетодГазирования.Наименование;
			ОблС.Параметры.ПродукцияДляДетскогоПитания="<"+Стр.ПродукцияДляДетскогоПитания.Код+"> "+Стр.ПродукцияДляДетскогоПитания.Наименование;
			ОблС.Параметры.СтранаПроизводства=Стр.СтранаПроизводства.Альфа2;
//			ОблС.Параметры.ИННПредприятия=Объект.Организация.ИНН;
			Если ЗначениеЗАполнено(Стр.Сертификат) Тогда
				ОблС.Параметры.НомерСертифката=Стр.Сертификат.Наименование;
				 ОблС.Параметры.ДатаДекларации=Стр.Сертификат.ДатаНачалаДействия;
				ОблС.Параметры.ВидСертификата="<"+Стр.Сертификат.ВидСертификатаGSI.Код+"> "+Стр.Сертификат.ВидСертификатаGSI.Наименование;
			Иначе
				ОблС.Параметры.НомерСертифката="нет";
				ОблС.Параметры.ДатаДекларации="нет";
				
			КонецЕсли;
			
			
			Табл.Вывести(ОблС);
		КонецЦикла;
		Если Возвращаем Тогда
				 
		ВремФ=ПолучитьИмяВременногоФайла("xlsx");
				//ФайлЗапроса = Новый Файл(ВремФ);
				
				//Каталог = КаталогВременныхФайлов();
				ИмяВр = ВремФ;
		

				Табл.Записать(ИмяВр,ТипФайлаТабличногоДокумента.XLSX);
				
				
				//Каталог = КаталогВременныхФайлов();
				//ИмяФайла = Строка(Новый УникальныйИдентификатор) + "1.txt";
				ИмяФайлаОтправкиНачало = ПолучитьИмяВременногоФайла("txt");
				
				
			    ФайлОтправкиНачало = Новый ЗаписьТекста(ИмяФайлаОтправкиНачало, КодировкаТекста.ANSI, Символы.ПС, Ложь);

				ФайлОтправкиНачало.ЗаписатьСтроку("--" + Boundary); 
				Если ЗначениеЗаполнено(ИмяВр_1) Тогда
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +ИмяВр_1+ """"); 				
				Иначе
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +Объект.ИмяФайла+ """"); 				
				КонецЕсли;
				ФайлОтправкиНачало.ЗаписатьСтроку("Content-Type: application/octet-stream"); 				
			    ФайлОтправкиНачало.ЗаписатьСтроку("");
			    ФайлОтправкиНачало.Закрыть();
				МассивФайловДляОбъединения = Новый Массив;
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиНачало);

			    МассивФайловДляОбъединения.Добавить(ИмяВр);
				
				//Каталог = КаталогВременныхФайлов();
				///ИмяФайла = Строка(Новый УникальныйИдентификатор) + "2.txt";
				//ИмяФайлаОтправкиКонец = Каталог + ИмяФайла;

			    ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
			    ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.ANSI, Символы.ПС, Ложь);

			    //Завершение раздела двоичных данных
			    //Завершение сообщения для сервера
				
				ФайлОтправкиКонец.ЗаписатьСтроку("");
			    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary + "--");
			    ФайлОтправкиКонец.Закрыть();
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец); // !!! 3 добавление в массив
				
				
				ИмяФайлаОтправки = ПолучитьИмяВременногоФайла("tmp");//КаталогВременныхФайлов() + "post.txt";
				
				
			    ОбъединитьФайлы(МассивФайловДляОбъединения, ИмяФайлаОтправки);
				
				ДвоичнД=Новый ДвоичныеДанные(ИмяФайлаОтправки);
				РазмерФайла=ДвоичнД.Размер();
				
				ВернутьАдресХр=ПоместитьВоВременноеХранилище(ДвоичнД,ЭтаФорма.УникальныйИдентификатор);
		   КонецЕсли;
		
		

	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Шины" Тогда
		
		
		

			Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("Шины");
			
		ОблШ=Мак.ПолучитьОбласть("Шапка");
		ОблС=Мак.ПолучитьОбласть("строка");
		Табл.Вывести(ОблШ);
		Для Каждого Стр Из ОБъект.Шины Цикл
			ОблС.Параметры.Заполнить(Стр);
			Если ЗначениеЗаполнено(Стр.GTIN) Тогда
				ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
			Иначе
				ОблС.Параметры.GTIN="";
				
			КонецЕсли;
			
			
			ОблС.Параметры.КодТНВЭД="<"+Стр.КодТНВЭД.Код+"> "+Стр.КодТНВЭД.Наименование;
			ОблС.Параметры.ЕдиницаИзмерения="<"+Стр.ЕдиницаИзмерения.Код+"> "+Стр.ЕдиницаИзмерения.Наименование;
			ОблС.Параметры.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине="<"+Стр.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине.Код+"> "+Стр.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине.Наименование;
			ОблС.Параметры.ТипКонструкцииКаркасаШины="<"+Стр.ТипКонструкцииКаркасаШины.Код+"> "+Стр.ТипКонструкцииКаркасаШины.Наименование;
			ОблС.Параметры.ИндексНагрузкиНаШину="<"+Стр.ИндексНагрузкиНаШину.Код+"> "+Стр.ИндексНагрузкиНаШину.Наименование;
			ОблС.Параметры.КатегорияСкорости="<"+Стр.КатегорияСкорости.Код+"> "+Стр.КатегорияСкорости.Наименование;
			ОблС.Параметры.Сезонность="<"+Стр.Сезонность.Код+"> "+Стр.Сезонность.Наименование;
			ОблС.Параметры.ТипШиныПоСпособуГерметизации="<"+Стр.ТипШиныПоСпособуГерметизации.Код+"> "+Стр.ТипШиныПоСпособуГерметизации.Наименование;
			
			
			Табл.Вывести(ОблС);
		КонецЦикла;
		Если Возвращаем Тогда
				 
		ВремФ=ПолучитьИмяВременногоФайла("xlsx");
				//ФайлЗапроса = Новый Файл(ВремФ);
				
				//Каталог = КаталогВременныхФайлов();
				ИмяВр = ВремФ;
		

				Табл.Записать(ИмяВр,ТипФайлаТабличногоДокумента.XLSX);
				
				
				//Каталог = КаталогВременныхФайлов();
				//ИмяФайла = Строка(Новый УникальныйИдентификатор) + "1.txt";
				ИмяФайлаОтправкиНачало = ПолучитьИмяВременногоФайла("txt");
				
				
			    ФайлОтправкиНачало = Новый ЗаписьТекста(ИмяФайлаОтправкиНачало, КодировкаТекста.ANSI, Символы.ПС, Ложь);

				ФайлОтправкиНачало.ЗаписатьСтроку("--" + Boundary); 
				Если ЗначениеЗаполнено(ИмяВр_1) Тогда
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +ИмяВр_1+ """"); 				
				Иначе
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +Объект.ИмяФайла+ """"); 				
				КонецЕсли;
				ФайлОтправкиНачало.ЗаписатьСтроку("Content-Type: application/octet-stream"); 				
			    ФайлОтправкиНачало.ЗаписатьСтроку("");
			    ФайлОтправкиНачало.Закрыть();
				МассивФайловДляОбъединения = Новый Массив;
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиНачало);

			    МассивФайловДляОбъединения.Добавить(ИмяВр);
				
				//Каталог = КаталогВременныхФайлов();
				///ИмяФайла = Строка(Новый УникальныйИдентификатор) + "2.txt";
				//ИмяФайлаОтправкиКонец = Каталог + ИмяФайла;

			    ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
			    ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.ANSI, Символы.ПС, Ложь);

			    //Завершение раздела двоичных данных
			    //Завершение сообщения для сервера
				
				ФайлОтправкиКонец.ЗаписатьСтроку("");
			    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary + "--");
			    ФайлОтправкиКонец.Закрыть();
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец); // !!! 3 добавление в массив
				
				
				ИмяФайлаОтправки = ПолучитьИмяВременногоФайла("tmp");//КаталогВременныхФайлов() + "post.txt";
				
				
			    ОбъединитьФайлы(МассивФайловДляОбъединения, ИмяФайлаОтправки);
				
				ДвоичнД=Новый ДвоичныеДанные(ИмяФайлаОтправки);
				РазмерФайла=ДвоичнД.Размер();
				
				ВернутьАдресХр=ПоместитьВоВременноеХранилище(ДвоичнД,ЭтаФорма.УникальныйИдентификатор);
		   КонецЕсли;
		
		
	Иначе	
		
		

		Если Объект.НовыйФормат Тогда
			//ИЛИ РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().ИспользоватьСайтGS1ПоМаркировке Тогда
			Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("Макет");
		Иначе
			Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("Макет1");
			
		КонецЕсли;
		
		ОблШ=Мак.ПолучитьОбласть("Шапка");
		ОблС=Мак.ПолучитьОбласть("строка");
		Табл.Вывести(ОблШ);
		Для Каждого Стр Из ОБъект.GS1 Цикл
			ОблС.Параметры.Заполнить(Стр);
			Если ЗначениеЗаполнено(Стр.GTIN) Тогда
				ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
			Иначе
				ОблС.Параметры.GTIN="";
				
			КонецЕсли;
			
			
			//ОблС.Параметры.ИННПроизводителяИмпортёра=Стр.ИННПроизводителяИмпортёра.ИНН;
			Если ЗначениеЗаполнено(Стр.ИННПроизводителяСтрокой) Тогда
				ОблС.Параметры.ИННПроизводителяИмпортёра=Стр.ИННПроизводителяСтрокой;
				
			Иначе
				ОблС.Параметры.ИННПроизводителяИмпортёра=Стр.ИННПроизводителяИмпортёра.ИНН;
			КонецЕсли;
			ОблС.Параметры.ТНВЭД="<"+Стр.КодТНВЭД.Код+"> "+Стр.КодТНВЭД.Наименование;
			Если ОБъект.НовыйФормат Тогда
			Если ЗначениеЗАполнено(Стр.Сертификат) Тогда
				ОблС.Параметры.НомерСертифката=Стр.Сертификат.Наименование;
				ОблС.Параметры.ДатаДекларации=Стр.Сертификат.ДатаНачалаДействия;
				ОблС.Параметры.ВидСертификата="<"+Стр.Сертификат.ВидСертификатаGSI.Код+"> "+Стр.Сертификат.ВидСертификатаGSI.Наименование;
			Иначе
				ОблС.Параметры.НомерСертифката="нет";
				ОблС.Параметры.ДатаДекларации="нет";
				
			КонецЕсли;
		Иначе
			
			КонецЕсли;
			ОблС.Параметры.ВидОбуви="<"+Стр.ВидОбуви.Код+"> "+Стр.ВидОбуви.Наименование;
			//ОблС.Параметры.СтранаПроизводства="<"+Стр.СтранаПроизводства.Альфа2+"> "+Стр.СтранаПроизводства.Наименование;
			ОблС.Параметры.СтранаПроизводства=Стр.СтранаПроизводства.Альфа2;
			
			Если ЗначениеЗаполнено(Стр.РазмерВШтихмассовойСистеме) Тогда
				ОблС.Параметры.РазмерВШтихмассовойСистеме="<"+Стр.РазмерВШтихмассовойСистеме.Код+"> "+Стр.РазмерВШтихмассовойСистеме.Наименование;
			Иначе
				ОблС.Параметры.РазмерВШтихмассовойСистеме="";
				
			КонецЕсли;
			
			Табл.Вывести(ОблС);
		КонецЦикла;
		Если Возвращаем Тогда
				 
		ВремФ=ПолучитьИмяВременногоФайла("xlsx");
				//ФайлЗапроса = Новый Файл(ВремФ);
				
				//Каталог = КаталогВременныхФайлов();
				ИмяВр = ВремФ;
		

				Табл.Записать(ИмяВр,ТипФайлаТабличногоДокумента.XLSX);
				
				
				//Каталог = КаталогВременныхФайлов();
				//ИмяФайла = Строка(Новый УникальныйИдентификатор) + "1.txt";
				ИмяФайлаОтправкиНачало = ПолучитьИмяВременногоФайла("txt");
				
				
			    ФайлОтправкиНачало = Новый ЗаписьТекста(ИмяФайлаОтправкиНачало, КодировкаТекста.ANSI, Символы.ПС, Ложь);

				ФайлОтправкиНачало.ЗаписатьСтроку("--" + Boundary); 
				Если ЗначениеЗаполнено(ИмяВр_1) Тогда
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +ИмяВр_1+ """"); 				
				Иначе
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +Объект.ИмяФайла+ """"); 				
				КонецЕсли;
				ФайлОтправкиНачало.ЗаписатьСтроку("Content-Type: application/octet-stream"); 				
			    ФайлОтправкиНачало.ЗаписатьСтроку("");
			    ФайлОтправкиНачало.Закрыть();
				МассивФайловДляОбъединения = Новый Массив;
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиНачало);

			    МассивФайловДляОбъединения.Добавить(ИмяВр);
				
				//Каталог = КаталогВременныхФайлов();
				///ИмяФайла = Строка(Новый УникальныйИдентификатор) + "2.txt";
				//ИмяФайлаОтправкиКонец = Каталог + ИмяФайла;

			    ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
			    ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.ANSI, Символы.ПС, Ложь);

			    //Завершение раздела двоичных данных
			    //Завершение сообщения для сервера
				
				ФайлОтправкиКонец.ЗаписатьСтроку("");
			    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary + "--");
			    ФайлОтправкиКонец.Закрыть();
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец); // !!! 3 добавление в массив
				
				
				ИмяФайлаОтправки = ПолучитьИмяВременногоФайла("tmp");//КаталогВременныхФайлов() + "post.txt";
				
				
			    ОбъединитьФайлы(МассивФайловДляОбъединения, ИмяФайлаОтправки);
				
				ДвоичнД=Новый ДвоичныеДанные(ИмяФайлаОтправки);
				РазмерФайла=ДвоичнД.Размер();
				
				ВернутьАдресХр=ПоместитьВоВременноеХранилище(ДвоичнД,ЭтаФорма.УникальныйИдентификатор);
		   КонецЕсли;
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура GS1НаименованиеТовараНаЭтикеткеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.GS1.ТекущиеДанные.Товар),Элемент);
КонецПроцедуры

&НаКлиенте
Процедура GS1НаименованиеТовараНаЭтикеткеОткрытие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаОбъекта",Новый Структура("Ключ",Элементы.GS1.ТекущиеДанные.Товар));
	
КонецПроцедуры

&НаКлиенте
Процедура GS1ИННПроизводителяИмпортёраНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.GS1.ТекущиеДанные.ИННПроизводителяИмпортёра),,,,,
	Новый ОписаниеОповещения("ПослевыбораПроизводителя",ЭтаФорма,Элементы.GS1.ТекущиеДанные));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьИНН(РР)
	Возврат РР.ИНН
КонецФункции
&НаКлиенте
Процедура ПослевыбораПроизводителя(РР,ДД) Экспорт
	Если РР<>Неопределено Тогда
		ДД.ИННПроизводителяСтрокой=ВернутьИНН(РР);
	КонецЕсли;
конецПроцедуры
&НаКлиенте
Процедура GS1ИННПроизводителяИмпортёраОткрытие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.ФормаОбъекта",Новый Структура("Ключ",Элементы.GS1.ТекущиеДанные.ИННПроизводителяИмпортёра));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВGS46(Команда) Экспорт
	// Вставить содержимое обработчика.
//	Табл=Новый ТабличныйДокумент;
//	ВернемХр="";
//				Boundary = СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", "");
//		Каталог = КаталогВременныхФайлов();
		
		
		НачатьПолучениеКаталогаВременныхФайлов(Новый ОписаниеОповещения("ПослеПолученияКаталогаВр_ОтправитьвGS",ЭтаФорма));
КонецПроцедуры
	
&НаКлиенте
Процедура ПослеПолученияКаталогаВр_ОтправитьвGS(Каталог,ДД) Экспорт
		
	Табл=Новый ТабличныйДокумент;
	ВернемХр="";
				Boundary = СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", "");
		
		ИмяФайла = Строка(Новый УникальныйИдентификатор) + ".xlsx";
		ИмяВр = Каталог + ИмяФайла;
РазмерФайла=0;
	ВывестиТабличнД(Табл,ВернемХр,истина,Boundary,ИмяФайла,РазмерФайла );
	//Если ЗначениеЗаполнено(Объект.ИмяФайла) Тогда
	//	ИмяВр=Объект.ИмяФайла;
	//Иначе
	
		//ИмяВр=ПолучитьИмяВременногоФайла("xlsx");
		ФФФ=Новый Файл(ИмяВр);
		Если Не ЗначениеЗаполнено(Объект.НазваниеДокумента) тогда
			//Объект.НазваниеДокумента=ФФФ.Имя;
			Объект.ИмяФайла=ФФФ.Имя;
			ЭтаФорма.Записать();
		КонецЕслИ;
	//КонецЕслИ;
	//Табл.НачатьЗапись(Новый ОписаниеОповещения("ОтправитьФайл",ЭтаФорма,ИмяВр),ИмяВр,ТипФайлаТабличногоДокумента.XLSX)
	  ОтправитьФайл(Табл,ФФФ.Имя,ВернемХр,Boundary,РазмерФайла );
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписиВФайлДв(ДД) Экспорт
ИмяФайлаОтправки=ДД.ИмяФайлаОтправки;
ИмяВВ=ДД.ИмяВВ;
Boundary=ДД.Boundary;
РазмерФайла=ДД.РазмерФайла;
Форм=ДД.Форм;
Если ИспользоватьСайтGS1ПоМаркировке ИЛИ ОБъект.Шины.Количество()>0 
	ИЛИ объект.МолокоGS.Количество()>0
	ИЛИ Объект.ПарфюмGS.Количество()>0
	ИЛИ Объект.ВелосипедыGS.Количество()>0
	ИЛИ Объект.ОдеждаGS.Количество()>0
	ИЛИ Объект.ФотоGS.Количество()>0
	ИЛИ Объект.РамыGS.Количество()>0
	ИЛИ Объект.БельеGS.Количество()>0
	
	ИЛИ Объект.КоляскиGS.Количество()>0
	ИЛИ Объект.АльтернативныйТабакGS.Количество()>0
	ИЛИ Объект.ПитьеваяВодаGS.Количество()>0
	
	Тогда
	

						ПараметрыДлякилента=Неопределено;
			Если Форм.НаКлиенте(ПараметрыДлякилента) Тогда
			
				Если ЗначениеЗАполнено(ПараметрыДлякилента.АдресПрокси) Тогда
					Прокси=Новый ИнтернетПрокси;
					Прокси.Установить("http",ПараметрыДлякилента.АдресПрокси,ПараметрыДлякилента.ПортПрокси,ПараметрыДлякилента.ПользовательПрокси,ПараметрыДлякилента.ПарольПрокси);
				
					Форм.HTTPСервисЗапрос= Новый HTTPСоединение("srs.gs1ru.org",,,,Прокси,ПараметрыДлякилента.Таймаут,Новый ЗащищенноеСоединениеOpenSSL());
				Иначе
					Форм.HTTPСервисЗапрос=Новый HTTPСоединение("srs.gs1ru.org",,,,,ПараметрыДлякилента.Таймаут,Новый ЗащищенноеСоединениеOpenSSL());
				КонецЕсли;
					HTTPЗапрос = Новый HTTPЗапрос("io/");
					Ответ=Форм.HTTPСервисЗапрос.Получить(HTTPЗапрос);
							
					ВсеКУки=Ответ.Заголовки["Set-Cookie"];
					Если   ВсеКУки=Неопределено тогда
						ВсеКУки=Ответ.Заголовки["set-cookie"];
						
					Конецесли;
					
					ВсеКуки=СтрЗаменитЬ(ВсеКуки,",",Символы.ПС);
		 			
					
				//	Oracle="717d81046d26723fb1eeb82b13dca94babe8ee96";
				    Oracle="";
				
					Кэш_3="";
					JSESSIONID="";
					Если ЗначениеЗАполнено(ВсеКУки) тогда
						Для Сч_1=1 По СтрЧислоСтрок(ВсеКуки) Цикл
							
							ПолучитьСтроку=СтрПолучитьСтроку(ВсеКуки,Сч_1);
							//Если Найти(ПолучитьСтроку,"Set-Cookie")=1 
							//	Тогда
							Если ЗначениеЗаполнено(Кэш_3) Тогда
								Кэш_3=Кэш_3+";";
							Конецесли;
								//КэшТ=КэшТ+ПолучитьСтроку;
								Коок=ПолучитьСтроку;
								Коок=Сред(Коок,1,Найти(Коок,";")-1);
								Кэш_3=Кэш_3+Коок;
								Если Найти(ПолучитьСтроку,"X-Oracle-BMC-LBS-Route")>0 Тогда
									//ПродолжитЬ;
									Oracle=Коок;
								Конецесли;
								Если Найти(КооК,"JSESSIONID")>0 Тогда
									JSESSIONID=Коок;
								Конецесли;
							
						КонецЦикла;
					
						
					КонецЕсли;
					
					

					
					HTTPЗапрос = Новый HTTPЗапрос("io/login/perform_login");
					HTTPЗапрос.Заголовки.Вставить("Cookie", Кэш_3);
				
					HTTPЗапрос.Заголовки.Вставить("Accept", " text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3");
					HTTPЗапрос.Заголовки.Вставить("Accept-Language", "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7");
					HTTPЗапрос.Заголовки.Вставить("Cache-Control", "max-age=0");
					HTTPЗапрос.Заголовки.Вставить("Connection", "keep-alive");
					HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
					HTTPЗапрос.Заголовки.Вставить("Host", "srs.gs1ru.org");
					HTTPЗапрос.Заголовки.Вставить("Origin", "http://srs.gs1ru.org");
					HTTPЗапрос.Заголовки.Вставить("Referer", "http://srs.gs1ru.org/login?error=true");
					HTTPЗапрос.Заголовки.Вставить("Upgrade-Insecure-Requests", "1");
					HTTPЗапрос.Заголовки.Вставить("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36");
					Тело="j_character_encoding=UTF-8&username="+ПараметрыДлякилента.Пользователь+"&password="+ПараметрыДлякилента.Пароль;
					HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
					Ответ=Форм.HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
					
					ВсеКуки=Ответ.Заголовки["Set-Cookie"];
					Если Не ЗначениеЗаполнено(ВсеКуки) Тогда
						ВсеКуки=Ответ.Заголовки["set-cookie"];
					Конецесли;
					ВсеКуки=СтрЗаменитЬ(ВсеКуки,",",Символы.ПС);
					
					//СтруктураКук=СтрРазделить(ВсеКуки,";") ;
					
					Кэш_Т=Oracle;
					
					Если Найти(ВсеКуки,"JSESSIONID")>0 Тогда
						JSESSIONID="";
					Конецесли;
					Если ЗначениеЗАполнено(ВсеКУки) тогда
						Для Сч_1=1 По СтрЧислоСтрок(ВсеКуки) Цикл
							
							ПолучитьСтроку=СтрПолучитьСтроку(ВсеКуки,Сч_1);
							
							Если Найти(ПолучитьСтроку,"=")=0 Тогда
								Продолжить;
							Конецесли;
							
								Если Найти(ПолучитьСтроку,"X-Oracle-BMC-LBS-Route")>0 Тогда
									Продолжить;
								Конецесли;
							
							//Если Найти(ПолучитьСтроку,"Set-Cookie")=1 
							//	Тогда
							Если ЗначениеЗаполнено(Кэш_Т) Тогда
								Кэш_Т=Кэш_Т+";";
							Конецесли;
								//КэшТ=КэшТ+ПолучитьСтроку;
								Коок=ПолучитьСтроку;
								Коок=Сред(Коок,1,Найти(Коок,";")-1);
								Кэш_Т=Кэш_Т+Коок;
								Если Найти(КооК,"JSESSIONID")>0 Тогда
									JSESSIONID=Коок;
								Конецесли;
								
								
								//Request.SetRequestHeader("Cookie",Коок);
							//КонецЕсли;
						КонецЦикла;
					
						
					КонецЕсли;


					
					
					
					
					
					
					HTTPЗапрос = Новый HTTPЗапрос("io/");
					HTTPЗапрос.Заголовки.Вставить("Cookie", Кэш_Т);
					
					HTTPЗапрос.Заголовки.Вставить("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3");
					//HTTPСервисЗапрос.SetRequestHeader("Accept-Encoding","gzip, deflate");
					HTTPЗапрос.Заголовки.Вставить("Accept-Language", "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7");
					HTTPЗапрос.Заголовки.Вставить("Cache-Control", "max-age=0");
					HTTPЗапрос.Заголовки.Вставить("Connection", "keep-alive");
					HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
					HTTPЗапрос.Заголовки.Вставить("Host", "srs.gs1ru.org");
					HTTPЗапрос.Заголовки.Вставить("Origin", "http://srs.gs1ru.org");
					HTTPЗапрос.Заголовки.Вставить("Referer", "http://srs.gs1ru.org/login?error=true");
//					HTTPЗапрос.Заголовки.Вставить("Upgrade-Insecure-Requests", "1");
					HTTPЗапрос.Заголовки.Вставить("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36");
					
					Ответ=Форм.HTTPСервисЗапрос.Получить(HTTPЗапрос);
					//Кэш_Т=Ответ.Заголовки["Set-Cookie"];
					Ответ=Ответ.ПолучитьТелоКакСтроку();
					
					HTTPЗапрос = Новый HTTPЗапрос("io/ui/upload_file");
					HTTPЗапрос.Заголовки.Вставить("Cookie", Кэш_Т);
					
//				    ФайлОтправки = Новый Файл(ИмяФайлаОтправки);
//	    			РазмерФайлаОтправки = XMLСтрока(ФайлОтправки.Размер());
					HTTPЗапрос.Заголовки.Вставить("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3");
					//HTTPСервисЗапрос.SetRequestHeader("Accept-Encoding","gzip, deflate");
					HTTPЗапрос.Заголовки.Вставить("Accept-Language", "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7");
					//HTTPЗапрос.Заголовки.Вставить("Cache-Control", "max-age=0");
	    			HTTPЗапрос.Заголовки.Вставить("Content-Type", "multipart/form-data; boundary=" + Boundary);
	    			HTTPЗапрос.Заголовки.Вставить("Content-Length", Формат(РазмерФайла,"ЧГ="));
					HTTPЗапрос.Заголовки.Вставить("Connection", "keep-alive");
					HTTPЗапрос.Заголовки.Вставить("Host", "srs.gs1ru.org");
					HTTPЗапрос.Заголовки.Вставить("Origin", "http://srs.gs1ru.org");
					HTTPЗапрос.Заголовки.Вставить("Referer", "http://srs.gs1ru.org/io/");
					//HTTPЗапрос.Заголовки.Вставить("Upgrade-Insecure-Requests", "1");
					HTTPЗапрос.Заголовки.Вставить("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36");
					HTTPЗапрос.УстановитьИмяФайлаТела(ИмяФайлаОтправки);
					Ответ=Форм.HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
					//Кэш_Т=Ответ.Заголовки["Set-Cookie"];
					Ответ=Ответ.ПолучитьТелоКакСтроку();
					
					//Объект.ИмяФайла=
					Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отправлен");
					ЭтаФорма.Записать();
					Сообщить("Файл по дкоументу "+Строка(Объект.Ссылка)+" отправлен");				
			КонецЕсли;
		
	
Иначе

						ПараметрыДлякилента=Неопределено;
			Если Форм.НаКлиенте(ПараметрыДлякилента) Тогда
			
				Если ЗначениеЗАполнено(ПараметрыДлякилента.АдресПрокси) Тогда
					Прокси=Новый ИнтернетПрокси;
					Прокси.Установить("http",ПараметрыДлякилента.АдресПрокси,ПараметрыДлякилента.ПортПрокси,ПараметрыДлякилента.ПользовательПрокси,ПараметрыДлякилента.ПарольПрокси);
				
					Форм.HTTPСервисЗапрос= Новый HTTPСоединение("srs.gs1ru.org",,,,Прокси,ПараметрыДлякилента.Таймаут);
				Иначе
					Форм.HTTPСервисЗапрос=Новый HTTPСоединение("srs.gs1ru.org",,,,,ПараметрыДлякилента.Таймаут);
				КонецЕсли;
					HTTPЗапрос = Новый HTTPЗапрос("mdo/");
					Ответ=Форм.HTTPСервисЗапрос.Получить(HTTPЗапрос);
					
					Кэш_3=Ответ.Заголовки["Set-Cookie"];
					Если Кэш_3=Неопределено тогда
						Кэш_3=Ответ.Заголовки["set-cookie"];
					Конецесли;
					
					HTTPЗапрос = Новый HTTPЗапрос("mdo/j_security_check");
					HTTPЗапрос.Заголовки.Вставить("Cookie", Кэш_3);
				
					HTTPЗапрос.Заголовки.Вставить("Accept", " text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3");
					HTTPЗапрос.Заголовки.Вставить("Accept-Language", "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7");
					HTTPЗапрос.Заголовки.Вставить("Cache-Control", "max-age=0");
					HTTPЗапрос.Заголовки.Вставить("Connection", "keep-alive");
					HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
					HTTPЗапрос.Заголовки.Вставить("Host", "srs.gs1ru.org");
					HTTPЗапрос.Заголовки.Вставить("Origin", "http://srs.gs1ru.org");
					HTTPЗапрос.Заголовки.Вставить("Referer", "http://srs.gs1ru.org/login?error=true");
					HTTPЗапрос.Заголовки.Вставить("Upgrade-Insecure-Requests", "1");
					HTTPЗапрос.Заголовки.Вставить("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36");
					Тело="j_character_encoding=UTF-8&j_username="+ПараметрыДлякилента.Пользователь+"&j_password="+ПараметрыДлякилента.Пароль;
					HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
					Ответ=Форм.HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
					Кэш_Т=Ответ.Заголовки["Set-Cookie"];
					Если Кэш_Т=Неопределено Тогда
						 Кэш_Т=Ответ.Заголовки["set-cookie"];
					Конецесли;
					
					HTTPЗапрос = Новый HTTPЗапрос("mdo/");
					HTTPЗапрос.Заголовки.Вставить("Cookie", Кэш_Т);
					
					HTTPЗапрос.Заголовки.Вставить("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3");
					//HTTPСервисЗапрос.SetRequestHeader("Accept-Encoding","gzip, deflate");
					HTTPЗапрос.Заголовки.Вставить("Accept-Language", "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7");
					HTTPЗапрос.Заголовки.Вставить("Cache-Control", "max-age=0");
					HTTPЗапрос.Заголовки.Вставить("Connection", "keep-alive");
					HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
					HTTPЗапрос.Заголовки.Вставить("Host", "srs.gs1ru.org");
					HTTPЗапрос.Заголовки.Вставить("Origin", "http://srs.gs1ru.org");
					HTTPЗапрос.Заголовки.Вставить("Referer", "http://srs.gs1ru.org/login?error=true");
					HTTPЗапрос.Заголовки.Вставить("Upgrade-Insecure-Requests", "1");
					HTTPЗапрос.Заголовки.Вставить("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36");
					
					Ответ=Форм.HTTPСервисЗапрос.Получить(HTTPЗапрос);
					//Кэш_Т=Ответ.Заголовки["Set-Cookie"];
					Ответ=Ответ.ПолучитьТелоКакСтроку();
					
					HTTPЗапрос = Новый HTTPЗапрос("mdo/upload_file");
					HTTPЗапрос.Заголовки.Вставить("Cookie", Кэш_Т);
					
//				    ФайлОтправки = Новый Файл(ИмяФайлаОтправки);
//	    			РазмерФайлаОтправки = XMLСтрока(ФайлОтправки.Размер());
					HTTPЗапрос.Заголовки.Вставить("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3");
					//HTTPСервисЗапрос.SetRequestHeader("Accept-Encoding","gzip, deflate");
					HTTPЗапрос.Заголовки.Вставить("Accept-Language", "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7");
					HTTPЗапрос.Заголовки.Вставить("Cache-Control", "max-age=0");
	    			HTTPЗапрос.Заголовки.Вставить("Content-Type", "multipart/form-data; boundary=" + Boundary);
	    			//HTTPЗапрос.Заголовки.Вставить("Content-Length", РазмерФайлаОтправки);
					HTTPЗапрос.Заголовки.Вставить("Connection", "keep-alive");
					HTTPЗапрос.Заголовки.Вставить("Host", "srs.gs1ru.org");
					HTTPЗапрос.Заголовки.Вставить("Origin", "http://srs.gs1ru.org");
					HTTPЗапрос.Заголовки.Вставить("Referer", "http://srs.gs1ru.org/login?error=true");
					HTTPЗапрос.Заголовки.Вставить("Upgrade-Insecure-Requests", "1");
					HTTPЗапрос.Заголовки.Вставить("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36");
					HTTPЗапрос.УстановитьИмяФайлаТела(ИмяФайлаОтправки);
					Ответ=Форм.HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
					//Кэш_Т=Ответ.Заголовки["Set-Cookie"];
					Ответ=Ответ.ПолучитьТелоКакСтроку();
					
					//Объект.ИмяФайла=
					Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отправлен");
					ЭтаФорма.Записать();
					ПоказатьПредупреждение(,"Файл отправлен");				
			КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

&НасервереБезКонтекста
Функция СравнениеОрганизаций(Т,П)
	Возврат Т.Организация<>П.Организация
КонецФункции

&НаКлиенте
Процедура ОтправитьФайл(РР,ИмяВВ,ВернемХр,Boundary,РазмерФайла ) Экспорт
	//Если РР Тогда
		Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
		Если СравнениеОрганизаций(Объект.ТекущийПользователь,Форм.Пользователь)=Истина Тогда
			Форм.Пользователь=Объект.ТекущийПользователь;
		Конецесли;
		
		Форм.Подключиться("",Истина);
		                     							 
							 
		Если Форм.Организации.Количество()>0 Тогда
			
			
			
			//АдресПоместитьВоВремХр=ПоместитьВоВременноеХранилище(ДД);



			//ПолучитьАдрес=ОбъединитьФайылВернуть(РР,ИмяВВ,Boundary);
			
		НачатьПолучениеКаталогаВременныхФайлов(Новый ОписаниеОповещения("ПослеПолученияКаталогаВр_ОтправитьФайл",ЭтаФорма,Новый Структура("ИмяВВ,Boundary,Форм,ВернемХр,РазмерФайла",ИмяВВ,Boundary,Форм,ВернемХр,РазмерФайла)));
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПослеПолученияКаталогаВр_ОтправитьФайл(Каталог,ДД) Экспорт
			ВернемХр=ДД.ВернемХр;
			ИмяФайла = Строка(Новый УникальныйИдентификатор) + "2.txt";
			ИмяФайлаОтправки = Каталог + ИмяФайла;
			ДвоичнД=ПолучитьИзВременногоХранилища(ВернемХр);
			ДД.Вставить("ИмяФайлаОтправки",ИмяФайлаОтправки);
			ДвоичнД.НачатьЗапись(Новый ОписаниеОпоВещения("ПослеЗаписиВФайлДв",ЭтаФорма,ДД),ИмяФайлаОтправки);
			
							//Иначе
	//	ПоказатьПредупреждение(,"Не удалось сохранить xlsx файл");
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	
	Если Не Значениезаполнено(Объект.ТекущийПользователь) тогда
		Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
		Если Не Форм.Открыта() Тогда
			Форм.Открыть();
			
		КонецЕсли;
		Объект.ТекущийПользователь=Форм.Пользователь;
		ЭтаФорма.Активизировать();
		
		
	КонецЕсли;
	ТекущийПользовательПриИзмененииНаСервере();
	
	Если ЗагрузитьИОтправить Тогда
		ЗагрузитьИзXLS(Отказ)
	КонецЕсли;
	НачатьПолучениеКаталогаВременныхФайлов(Новый ОписаниеОповещения("КаталогВ",ЭтаФорма))
КонецПроцедуры


&НаКлиенте
Процедура КаталогВ(РР,ДД) Экспорт
	КаталогВременныхФайов=РР;
КонецПроцедуры
&НаКлиенте
Процедура GS1ИННПроизводителяИмпортёраПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаОшибкиТакаяУпаковкаУжеЕстьНаСервере()
	// Вставить содержимое обработчика.
	//табличнаяЧастьДляИсправления=Объект.GS1;
	
	ОбработкаОшибки(Объект.GS1);
	
	ОбработкаОшибки(Объект.МолокоGS);
	ОбработкаОшибки(Объект.Шины);
	ОбработкаОшибки(Объект.ПарфюмGS);
	ОбработкаОшибки(Объект.ВелосипедыGS);
	ОбработкаОшибки(Объект.ОдеждаGS);
	ОбработкаОшибки(Объект.ФотоGS);
	ОбработкаОшибки(Объект.БельеGS);
	ОбработкаОшибки(Объект.РамыGS);
	ОбработкаОшибки(Объект.КоляскиGS);
	ОбработкаОшибки(Объект.АльтернативныйТабакGS);
	ОбработкаОшибки(Объект.ПитьеваяВодаGS);
	
КонецПроцедуры

Процедура ОбработкаОшибки(табличнаяЧастьДляИсправления)
			
	Для Каждого Стр_1 Из табличнаяЧастьДляИсправления Цикл
			Если Найти(Стр_1.РезультатОбработкиДанныхВGS46,"Такая упаковка уже есть")>0 Тогда
				
				GTIN=Сред(Стр_1.РезультатОбработкиДанныхВGS46,26);
				GTIN=СокрЛП(Сред(GTIN,Найти(GTIN," ")));
				GTIN=Сред(GTIN,1,Найти(GTIN," ")-1);
				
				Если СтрДлина(GTIN)<13 Тогда
					
					GTIN=Сред(Стр_1.РезультатОбработкиДанныхВGS46,39);
					GTIN=СокрЛП(Сред(GTIN,Найти(GTIN," ")+1));
					GTIN=Сред(GTIN,Найти(GTIN," ")+1);
					GTIN=Сред(GTIN,1,Найти(GTIN," ")-1);
					
					
				Конецесли;
				
				
				Попытка
					GTIN=Число(GTIN);
				Исключение
					
					
					GTIN=Сред(Стр_1.РезультатОбработкиДанныхВGS46,найти(Стр_1.РезультатОбработкиДанныхВGS46,":"));
					
					GTIN=СокрЛП(Сред(GTIN,Найти(GTIN," ")+1));
					GTIN=Сред(GTIN,Найти(GTIN," ")+1);
					GTIN=Сред(GTIN,1,Найти(GTIN," ")-1);
					
					
				КонецПопытки;
							
				Попытка
					GTIN=Число(GTIN);
					Если Не ЗначениеЗаполнено(GTIN) Тогда
						Продолжить;
					КонецЕсли;
						
					СпрОб=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(GTIN));
					Если Спроб=Справочники.Продукция_ХамелеонЦРПТ.ПустаяСсылка() Тогда
						Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
						
					Иначе
						СпрОб=СпрОб.ПолучитьОбъект();
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(СпрОб,Стр_1);
					//СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Обувь;
					СпрОб.GTIN=GTIN;
					СпрОб.Наименование=Стр_1.НаименованиеТовараНаЭтикетке;
					СпрОб.НаименованиеТовара=Стр_1.НаименованиеТовараНаЭтикетке;
					
					//СпрОб.Размер=Стр_1.РазмерВШтихмассовойСистеме;
					
					
					СпрОб.Записать();
					Стр_1.GTIN=GTIN;
					Стр_1.Товар=СпрОб.Ссылка;
						
				Исключение
					Продолжить;
				КонецПопытки;
			КонецЕсли;
			
		Конеццикла;
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОшибкиТакаяУпаковкаУжеЕсть(Команда)
	ОбработкаОшибкиТакаяУпаковкаУжеЕстьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусы(Команда)
	// Вставить содержимое обработчика.
		Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
		Форм.Элементы.Основная.ТекущаяСтраница=Форм.Элементы.Документы;
		Форм.Подключиться("",Истина);
		
		Если Форм.Организации.Количество()>0 Тогда
			
			Форм.ОбновитьСтатусыДокументов(Команда);
		КонецЕсли;
	ЭтаФорма.Прочитать();
КонецПроцедуры

&НаСервере
Процедура ТекущийПользовательПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
	Объект.Организация=Объект.ТекущийПользователь.Организация;
	Элементы.ВторойВариант.Видимость=ложь;
	Элементы.ВторойВариант_Одежда.Видимость=ложь;
	Элементы.GS1.Видимость=Ложь;
	Элементы.Шины.Видимость=Ложь;
	Элементы.Молоко.Видимость=Ложь;
	Элементы.ПарфюмGS.Видимость=Ложь;
	Элементы.ВелосипедыGS.Видимость=Ложь;
	Элементы.ОдеждаGS.Видимость=Ложь;
	Элементы.ФотоGS.Видимость=Ложь;
	Элементы.БльеGS.Видимость=Ложь;
	Элементы.РамыGS.Видимость=Ложь;
	Элементы.ТаблицаКоляскиGS.Видимость=Ложь;
	Элементы.АльтернативныйТабакGS.Видимость=Ложь;
	Элементы.ПитьеваяВодаGS.Видимость=Ложь;
	
	Если Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Альтернативный табак" 
		ИЛИ Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Табак" 
		Тогда
	
		Элементы.АльтернативныйТабакGS.Видимость=Истина;
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Питьевая вода" Тогда
	
		Элементы.ПитьеваяВодаGS.Видимость=Истина;
	
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Кресла-коляски" Тогда
	
		Элементы.ТаблицаКоляскиGS.Видимость=Истина;
	
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фото" Тогда
		Элементы.GS1.Видимость=Ложь;
		Элементы.Шины.Видимость=Ложь;
		Элементы.Молоко.Видимость=Ложь;
		Элементы.ПарфюмGS.Видимость=Ложь;
		Элементы.ВелосипедыGS.Видимость=Ложь;
		Элементы.ОдеждаGS.Видимость=Ложь;
		Элементы.ФотоGS.Видимость=Истина;
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Одежда" Тогда
		Элементы.GS1.Видимость=Ложь;
		Элементы.Шины.Видимость=Ложь;
		Элементы.Молоко.Видимость=Ложь;
		Элементы.ПарфюмGS.Видимость=Ложь;
		Элементы.ВелосипедыGS.Видимость=Ложь;
		
		Если Объект.ВторойВариант=1 Тогда
			Элементы.БльеGS.Видимость=Истина;
		Иначе
			Элементы.ОдеждаGS.Видимость=Истина;
		Конецесли;
		Элементы.ФотоGS.Видимость=Ложь;
		Элементы.ВторойВариант_Одежда.Видимость=Истина;

	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Велосипеды" Тогда
		Элементы.GS1.Видимость=Ложь;
		Элементы.Шины.Видимость=Ложь;
		Элементы.Молоко.Видимость=Ложь;
		Элементы.ПарфюмGS.Видимость=Ложь;
		Если ОБъект.ВторойВариант=1 Тогда
			Элементы.РамыGS.Видимость=Истина;
		Иначе
			Элементы.ВелосипедыGS.Видимость=Истина;
		КонецЕсли;
		Элементы.ОдеждаGS.Видимость=Ложь;
		Элементы.ФотоGS.Видимость=Ложь;
		Элементы.ВторойВариант.Видимость=Истина;
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Парфюм" Тогда
		Элементы.GS1.Видимость=Ложь;
		Элементы.Шины.Видимость=Ложь;
		Элементы.Молоко.Видимость=Ложь;
		Элементы.ПарфюмGS.Видимость=Истина;
		Элементы.ВелосипедыGS.Видимость=Ложь;
		
		Элементы.ОдеждаGS.Видимость=Ложь;
		Элементы.ФотоGS.Видимость=Ложь;
		
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Молоко" Тогда
		Элементы.GS1.Видимость=Ложь;
		Элементы.Шины.Видимость=Ложь;
		Элементы.Молоко.Видимость=Истина;
		Элементы.ПарфюмGS.Видимость=Ложь;
		Элементы.ВелосипедыGS.Видимость=Ложь;
		
		Элементы.ОдеждаGS.Видимость=Ложь;
		Элементы.ФотоGS.Видимость=Ложь;
	
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Шины" Тогда
		Элементы.GS1.Видимость=Ложь;
		Элементы.Шины.Видимость=Истина;
		Элементы.Молоко.Видимость=Ложь;
		Элементы.ПарфюмGS.Видимость=Ложь;
		Элементы.ВелосипедыGS.Видимость=Ложь;
		Элементы.ОдеждаGS.Видимость=Ложь;
		Элементы.ФотоGS.Видимость=Ложь;
	Иначе
		Элементы.GS1.Видимость=Истина;
		Элементы.Шины.Видимость=Ложь;
		Элементы.Молоко.Видимость=Ложь;
		Элементы.ПарфюмGS.Видимость=Ложь;
		Элементы.ВелосипедыGS.Видимость=Ложь;
		Элементы.ОдеждаGS.Видимость=Ложь;
		Элементы.ФотоGS.Видимость=Ложь;
	КонецЕсли;
	
	ЭтаФорма.Заголовок="GS1 "+Строка(Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование)+" Хамелеон ЦРПТ";
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущийПользовательПриИзменении(Элемент)
	ТекущийПользовательПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTINНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаОбъекта",Новый Структура("Ключ",Элементы.Молоко.ТекущиеДанные.Товар));

КонецПроцедуры

&НаКлиенте
Процедура Таблица2GTINОткрытие(Элемент, СтандартнаяОбработка)
		// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаОбъекта",Новый Структура("Ключ",Элементы.Шины.ТекущиеДанные.Товар));
	

КонецПроцедуры

&НаКлиенте
Процедура Таблица2GTINНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.Шины.ТекущиеДанные.Товар),Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTINОткрытие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаОбъекта",Новый Структура("Ключ",Элементы.Молоко.ТекущиеДанные.Товар));
	
КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTIN1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаОбъекта",Новый Структура("Ключ",Элементы.ПарфюмGS.ТекущиеДанные.Товар));
	
КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTIN1Открытие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаОбъекта",Новый Структура("Ключ",Элементы.ПарфюмGS.ТекущиеДанные.Товар));
	
КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTIN2ПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.ВелосипедыGS.ТекущиеДанные.Товар),Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTIN2Открытие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаОбъекта",Новый Структура("Ключ",Элементы.ВелосипедыGS.ТекущиеДанные.Товар));
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОдеждаGSGTINНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.ОдеждаGS.ТекущиеДанные.Товар),Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОдеждаGSGTINОткрытие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаОбъекта",Новый Структура("Ключ",Элементы.ОдеждаGS.ТекущиеДанные.Товар));
	
	
КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTIN3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.ФотоGS.ТекущиеДанные.Товар),Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTIN3Открытие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаОбъекта",Новый Структура("Ключ",Элементы.ФотоGS.ТекущиеДанные.Товар));
	
КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTIN5НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.РамыGS.ТекущиеДанные.Товар),Элемент);

КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTIN4НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.БльеGS.ТекущиеДанные.Товар),Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTIN4Открытие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаОбъекта",Новый Структура("Ключ",Элементы.БльеGS.ТекущиеДанные.Товар));
	
КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTIN5Открытие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаОбъекта",Новый Структура("Ключ",Элементы.РамыGS.ТекущиеДанные.Товар));
	
КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTIN6ПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.ТаблицаКоляскиGS.ТекущиеДанные.Товар),Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTIN6Открытие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаОбъекта",Новый Структура("Ключ",Элементы.ТаблицаКоляскиGS.ТекущиеДанные.Товар));
	
КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTIN7НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.АльтернативныйТабакGS.ТекущиеДанные.Товар),Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTIN7Открытие(Элемент, СтандартнаяОбработка)
		СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаОбъекта",Новый Структура("Ключ",Элементы.АльтернативныйТабакGS.ТекущиеДанные.Товар));
	

КонецПроцедуры

&НаКлиенте
Процедура СохранитьВертикальный(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	Табл=Новый ТабличныйДокумент;
	ВывестиТабличнД_В(Табл);
	
	ДиалогФыбораФайла								=	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогФыбораФайла.Фильтр="Файл xlsx (*.xlsx)|*.xlsx";
	ДиалогФыбораФайла.Заголовок						=	"Выберите загружаемый файл с данными";
	ДиалогФыбораФайла.ПредварительныйПросмотр		=	Ложь;
	ДиалогФыбораФайла.Расширение					=	"xlsx";
	ДиалогФыбораФайла.ИндексФильтра					=	0;
	ДиалогФыбораФайла.ПолноеИмяФайла				=	"";
	ДиалогФыбораФайла.ПроверятьСуществованиеФайла	=	Истина;
	
	Подразделение=НеопределенО;
	ДиалогФыбораФайла.Показать(Новый ОписаниеОповещения("ВыборФайлаСохранить_D",ЭтаФорма,Табл));
	
КонецПроцедуры

&наКлиенте
Процедура ВыборФайлаСохранить_D(ВыборЗагрExcel,РР) Экспорт
	Если ЗначениеЗАполнено(ВыборЗагрExcel)
		И ВыборЗагрExcel.Количество()>0  тогда
	
		ИмяФ=ВыборЗагрExcel[0];
		РР.НачатьЗапись(,ИмяФ,ТипФайлаТабличногоДокумента.XLSX);
		РР.НачатьЗапись(Новый ОписаниеОповещения("ПослеЗаписиXLS",ЭтаФорма,Сред(ИмяФ,1,СтрДлина(ИмяФ)-1)),Сред(ИмяФ,1,СтрДлина(ИмяФ)-1),ТипФайлаТабличногоДокумента.XLS)
		
	КонецЕсли
	
	
КонецПроцедуры



Процедура ВывестиТабличнД_В(Табл,ВернутьАдресХр=Неопределено,Возвращаем=ложь,Boundary="",ИмяВр_1="",РазмерФайла=0 )

Если Объект.АльтернативныйТабакGS.Количество()>0 Тогда


	Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("ОбщийДляGS1");
	
//ОблШ=Мак.ПолучитьОбласть("Шапка");
ОблС=Мак.ПолучитьОбласть("строка");

//Табл.Вывести(ОблШ);
Для Каждого Стр Из ОБъект.АльтернативныйТабакGS Цикл
	
	ОблС.Параметры.Заполнить(Стр);
	ОблС.Параметры.ТекущаяДата=ТекущаяДата();
	Облс.Параметры.Организация=Объект.Организация.Наименование;
	
	
	Если ЗначениеЗаполнено(Стр.GTIN) Тогда
		ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
	Иначе
		ОблС.Параметры.GTIN="";
		
	КонецЕсли;
	
	ОблС.Параметры.КоличествоВПотребительскойУпаковке=
	Стр.КоличествоВПотребительскойУпаковке_ЕдиницаИзмерения.Наименование+" <"+Стр.КоличествоВПотребительскойУпаковке_ЕдиницаИзмерения.Код+">";
	//СтКоличествоВПотребительскойУпаковке_ЕдиницаИзмерения
	
	//ОблС.Параметры.КодТНВЭД="<"+Стр.КодТНВЭД.Код+"> "+Стр.КодТНВЭД.Наименование;
	//ОблС.Параметры.УровеньИерархии="<"+Стр.УровеньИерархии.Код+"> "+Стр.УровеньИерархии.Наименование;
	ОблС.Параметры.ТипУпаковки=Стр.ТипУпаковки.Наименование+" <"+Стр.ТипУпаковки.Код+">";
	
	ОблС.Параметры.МатериалУпаковки=Стр.МатериалУпаковки.Наименование+" <"+Стр.МатериалУпаковки.Код+">";
	//ОблС.Параметры.КодВидаПодакцизныхТоваров="<"+Стр.КодВидаПодакцизныхТоваров.Код+"> "+Стр.КодВидаПодакцизныхТоваров.Наименование;
	
	//ОблС.Параметры.СтранаПроизводства=Стр.СтранаПроизводства.Альфа2;
	
	//ОблС.Параметры.ОКПД2="<"+Стр.ОКПД2.Код+"> "+Стр.ОКПД2.Наименование;
	
	//Если ЗначениеЗАполнено(Стр.Сертификат) Тогда
	//	ОблС.Параметры.НомерСертифката=Стр.Сертификат.Наименование;
	//	ОблС.Параметры.ДатаДекларации=Стр.Сертификат.ДатаНачалаДействия;
	//	ОблС.Параметры.ВидСертификата="<"+Стр.Сертификат.ВидСертификатаGSI.Код+"> "+Стр.Сертификат.ВидСертификатаGSI.Наименование;
	//Иначе
	//	ОблС.Параметры.НомерСертифката="нет";
	//	ОблС.Параметры.ДатаДекларации="нет";
	//	
	//КонецЕсли;
	
	
	
	Табл.Вывести(ОблС);
КонецЦикла;
ИначеЕсли Объект.ОдеждаGS.Количество()>0 И Объект.ВторойВариант=0 Тогда
	
	
		Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("ОбщийДляGS1БЮСТГАЛЬТЕРЫ");
	
//ОблШ=Мак.ПолучитьОбласть("Шапка");
ОблС=Мак.ПолучитьОбласть("строка");

//Табл.Вывести(ОблШ);
Для Каждого Стр Из ОБъект.ОдеждаGS Цикл
	
	Если Стр.ВидИзделияДругое<>"БЮСТГАЛЬТЕР" Тогда
		Продолжить;
	Конецесли;
	
	ОблС.Параметры.Заполнить(Стр);
	ОблС.Параметры.ТекущаяДата=ТекущаяДата();
	Облс.Параметры.Организация=Объект.Организация.Наименование;
	
	
	Если ЗначениеЗаполнено(Стр.GTIN) Тогда
		ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
	Иначе
		ОблС.Параметры.GTIN="";
		
	КонецЕсли;
	
	//ОблС.Параметры.КоличествоВПотребительскойУпаковке=
	//Стр.КоличествоВПотребительскойУпаковке_ЕдиницаИзмерения.Наименование+" <"+Стр.КоличествоВПотребительскойУпаковке_ЕдиницаИзмерения.Код+">";
	//СтКоличествоВПотребительскойУпаковке_ЕдиницаИзмерения
	
	//ОблС.Параметры.КодТНВЭД="<"+Стр.КодТНВЭД.Код+"> "+Стр.КодТНВЭД.Наименование;
	//ОблС.Параметры.УровеньИерархии="<"+Стр.УровеньИерархии.Код+"> "+Стр.УровеньИерархии.Наименование;
	//ОблС.Параметры.ТипУпаковки=Стр.ТипУпаковки.Наименование+" <"+Стр.ТипУпаковки.Код+">";
	
	//ОблС.Параметры.МатериалУпаковки=Стр.МатериалУпаковки.Наименование+" <"+Стр.МатериалУпаковки.Код+">";
	//ОблС.Параметры.КодВидаПодакцизныхТоваров="<"+Стр.КодВидаПодакцизныхТоваров.Код+"> "+Стр.КодВидаПодакцизныхТоваров.Наименование;
	
	//ОблС.Параметры.СтранаПроизводства=Стр.СтранаПроизводства.Альфа2;
	
	//ОблС.Параметры.ОКПД2="<"+Стр.ОКПД2.Код+"> "+Стр.ОКПД2.Наименование;
	
	//Если ЗначениеЗАполнено(Стр.Сертификат) Тогда
	//	ОблС.Параметры.НомерСертифката=Стр.Сертификат.Наименование;
	//	ОблС.Параметры.ДатаДекларации=Стр.Сертификат.ДатаНачалаДействия;
	//	ОблС.Параметры.ВидСертификата="<"+Стр.Сертификат.ВидСертификатаGSI.Код+"> "+Стр.Сертификат.ВидСертификатаGSI.Наименование;
	//Иначе
	//	ОблС.Параметры.НомерСертифката="нет";
	//	ОблС.Параметры.ДатаДекларации="нет";
	//	
	//КонецЕсли;
	
	
	Облс.Параметры.ВидИзделия="БЮСТГАЛЬТЕР <49>";
	ОблС.Параметры.РазмерГОСТСправочник="РОССИЯ <1764000029>";
	ОблС.Параметры.Регламент="ТР ТС 017/2011 ""О БЕЗОПАСНОСТИ ПРОДУКЦИИ ЛЕГКОЙ ПРОМЫШЛЕННОСТИ""";
	
	Табл.Вывести(ОблС);
КонецЦикла;

	
Конецесли;
Если Возвращаем Тогда
		 
ВремФ=ПолучитьИмяВременногоФайла("xlsx");
		//ФайлЗапроса = Новый Файл(ВремФ);
		
		//Каталог = КаталогВременныхФайлов();
		ИмяВр = ВремФ;


		Табл.Записать(ИмяВр,ТипФайлаТабличногоДокумента.XLSX);
		
		
		//Каталог = КаталогВременныхФайлов();
		//ИмяФайла = Строка(Новый УникальныйИдентификатор) + "1.txt";
		ИмяФайлаОтправкиНачало = ПолучитьИмяВременногоФайла("txt");
		
		
	    ФайлОтправкиНачало = Новый ЗаписьТекста(ИмяФайлаОтправкиНачало, КодировкаТекста.ANSI, Символы.ПС, Ложь);

		ФайлОтправкиНачало.ЗаписатьСтроку("--" + Boundary); 
		Если ЗначениеЗаполнено(ИмяВр_1) Тогда
			ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +ИмяВр_1+ """"); 				
		Иначе
			ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +Объект.ИмяФайла+ """"); 				
		КонецЕсли;
		ФайлОтправкиНачало.ЗаписатьСтроку("Content-Type: application/octet-stream"); 				
	    ФайлОтправкиНачало.ЗаписатьСтроку("");
	    ФайлОтправкиНачало.Закрыть();
		МассивФайловДляОбъединения = Новый Массив;
	    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиНачало);

	    МассивФайловДляОбъединения.Добавить(ИмяВр);
		
		//Каталог = КаталогВременныхФайлов();
		///ИмяФайла = Строка(Новый УникальныйИдентификатор) + "2.txt";
		//ИмяФайлаОтправкиКонец = Каталог + ИмяФайла;

	    ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
	    ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.ANSI, Символы.ПС, Ложь);

	    //Завершение раздела двоичных данных
	    //Завершение сообщения для сервера
		
		ФайлОтправкиКонец.ЗаписатьСтроку("");
	    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary + "--");
	    ФайлОтправкиКонец.Закрыть();
	    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец); // !!! 3 добавление в массив
		
		
		ИмяФайлаОтправки = ПолучитьИмяВременногоФайла("tmp");//КаталогВременныхФайлов() + "post.txt";
		
		
	    ОбъединитьФайлы(МассивФайловДляОбъединения, ИмяФайлаОтправки);
		
		ДвоичнД=Новый ДвоичныеДанные(ИмяФайлаОтправки);
		РазмерФайла=ДвоичнД.Размер();
		
		ВернутьАдресХр=ПоместитьВоВременноеХранилище(ДвоичнД,ЭтаФорма.УникальныйИдентификатор);
   КонецЕсли;

	 	

КонецПроцедуры


&НаКлиенте
Процедура ОтправитьВGS(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	Табл=Новый ТабличныйДокумент;
	сч=0;
	
	
	
	
		Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
		
		Форм.Подключиться("",Истина);
		
		Если Форм.Организации.Количество()>0 Тогда
	
	
	
	

	ПараметрыДлякилента=Неопределено;
	Если Форм.НаКлиенте(ПараметрыДлякилента) Тогда
	
	
	Если ЗначениеЗАполнено(ПараметрыДлякилента.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",ПараметрыДлякилента.АдресПрокси,ПараметрыДлякилента.ПортПрокси,ПараметрыДлякилента.ПользовательПрокси,ПараметрыДлякилента.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение("srs.gs1ru.org",,,,Прокси,ПараметрыДлякилента.Таймаут,Новый ЗащищенноеСоединениеOpenSSL);
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение("srs.gs1ru.org",,,,,ПараметрыДлякилента.Таймаут,Новый ЗащищенноеСоединениеOpenSSL);
			КонецЕсли;
			HTTPЗапрос = Новый HTTPЗапрос("login");
			HTTPЗапрос.Заголовки.Вставить("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36");
			//HTTPЗапрос.Заголовки.Вставить("Cookie", "X-Oracle-BMC-LBS-Route=717d81046d26723fb1eeb82b13dca94babe8ee96");
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			
			
			
			ВсеКУки=Ответ.Заголовки["Set-Cookie"];
			Если   ВсеКУки=Неопределено тогда
				ВсеКУки=Ответ.Заголовки["set-cookie"];
				
			Конецесли;
			ВсеКуки=СтрЗаменитЬ(ВсеКуки,",",Символы.ПС);
 			
			
		//	Oracle="717d81046d26723fb1eeb82b13dca94babe8ee96";
		    Oracle="";
		
			Кэш_3="";
			JSESSIONID="";
			Если ЗначениеЗАполнено(ВсеКУки) тогда
				Для Сч_1=1 По СтрЧислоСтрок(ВсеКуки) Цикл
					
					ПолучитьСтроку=СтрПолучитьСтроку(ВсеКуки,Сч_1);
					//Если Найти(ПолучитьСтроку,"Set-Cookie")=1 
					//	Тогда
					Если ЗначениеЗаполнено(Кэш_3) Тогда
						Кэш_3=Кэш_3+";";
					Конецесли;
						//КэшТ=КэшТ+ПолучитьСтроку;
						Коок=ПолучитьСтроку;
						Коок=Сред(Коок,1,Найти(Коок,";")-1);
						Кэш_3=Кэш_3+Коок;
						Если Найти(ПолучитьСтроку,"X-Oracle-BMC-LBS-Route")>0 Тогда
							//ПродолжитЬ;
							Oracle=Коок;
						Конецесли;
						Если Найти(КооК,"JSESSIONID")>0 Тогда
							JSESSIONID=Коок;
						Конецесли;
					
				КонецЦикла;
			
				
			КонецЕсли;
			
			Если Ответ.КодСостояния<>200 Тогда
				
					Если ЗначениеЗАполнено(ПараметрыДлякилента.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",ПараметрыДлякилента.АдресПрокси,ПараметрыДлякилента.ПортПрокси,ПараметрыДлякилента.ПользовательПрокси,ПараметрыДлякилента.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение("srs.gs1ru.org",,,,Прокси,ПараметрыДлякилента.Таймаут,Новый ЗащищенноеСоединениеOpenSSL);
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение("srs.gs1ru.org",,,,,ПараметрыДлякилента.Таймаут,Новый ЗащищенноеСоединениеOpenSSL);
			КонецЕсли;
			HTTPЗапрос = Новый HTTPЗапрос("login");
			HTTPЗапрос.Заголовки.Вставить("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36");
			HTTPЗапрос.Заголовки.Вставить("Cookie", Кэш_3);
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			
			
			
			ВсеКУки=Ответ.Заголовки["Set-Cookie"];
			Если   ВсеКУки=неопределено тогда
			ВсеКУки=Ответ.Заголовки["set-cookie"];
				
				
			Конецесли;
			ВсеКуки=СтрЗаменитЬ(ВсеКуки,",",Символы.ПС);
 			
			
		//	Oracle="717d81046d26723fb1eeb82b13dca94babe8ee96";
		    Oracle="";
		
			Кэш_3="";
			JSESSIONID="";
			Если ЗначениеЗАполнено(ВсеКУки) тогда
				Для Сч_1=1 По СтрЧислоСтрок(ВсеКуки) Цикл
					
					ПолучитьСтроку=СтрПолучитьСтроку(ВсеКуки,Сч_1);
					//Если Найти(ПолучитьСтроку,"Set-Cookie")=1 
					//	Тогда
					Если ЗначениеЗаполнено(Кэш_3) Тогда
						Кэш_3=Кэш_3+";";
					Конецесли;
						//КэшТ=КэшТ+ПолучитьСтроку;
						Коок=ПолучитьСтроку;
						Коок=Сред(Коок,1,Найти(Коок,";")-1);
						Кэш_3=Кэш_3+Коок;
						Если Найти(ПолучитьСтроку,"X-Oracle-BMC-LBS-Route")>0 Тогда
							//ПродолжитЬ;
							Oracle=Коок;
						Конецесли;
						Если Найти(КооК,"JSESSIONID")>0 Тогда
							JSESSIONID=Коок;
						Конецесли;
					
				КонецЦикла;
			
				
			КонецЕсли;
			

				
				
				
			КонецеслИ;

			
	//

//			HTTPСервисЗапрос.Open("POST", "https://srs.gs1ru.org/login", 0);
			//Обработки._Запуск_ХамелеонЦРПТ.УстановитьПрокси(HTTPСервисЗапрос);
			HTTPЗапрос = Новый HTTPЗапрос("login");
			HTTPЗапрос.Заголовки.Вставить("Cookie", Кэш_3);
		  	Тело="j_character_encoding=UTF-8&username="+ПараметрыДлякилента.Пользователь+"&password="+ПараметрыДлякилента.Пароль;
		
			HTTPЗапрос.Заголовки.Вставить("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3");
			//HTTPСервисЗапрос.SetRequestHeader("Accept-Encoding","gzip, deflate");
			HTTPЗапрос.Заголовки.Вставить("Accept-Language", "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7");
			//HTTPЗапрос.Заголовки.Вставить("Cache-Control", "max-age=0");
			HTTPЗапрос.Заголовки.Вставить("Connection", "keep-alive");
			HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
			HTTPЗапрос.Заголовки.Вставить("Host", "srs.gs1ru.org");
			HTTPЗапрос.Заголовки.Вставить("Origin", "https://srs.gs1ru.org");
			HTTPЗапрос.Заголовки.Вставить("Content-Length", Формат(СтрДлина(Тело),"ЧГ="));
			HTTPЗапрос.Заголовки.Вставить("Referer", "https://srs.gs1ru.org/login");
			HTTPЗапрос.Заголовки.Вставить("Upgrade-Insecure-Requests", "1");
			HTTPЗапрос.Заголовки.Вставить("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36");
//			Заголовки.Вставить("User-Agent", "Mozilla/5.0 (Windows NT 6.1; Trident/7.0; rv:11.0) like Gecko");
			//HTTPСервисЗапрос.SetRequestHeader("Connection" ,"Keep-Alive");
			//HTTPСервисЗапрос.SetRequestHeader("Host" ,"mercury.vetrf.ru");
			//HTTPЗапрос = Новый HTTPЗапрос("hs/",Заголовки);
//			Ответ=HTTPСервисЗапрос_Merc.Получить(HTTPЗапрос);

														#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
					#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
																		#КонецЕсли

			Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
			ВсеКуки=Ответ.Заголовки["Set-Cookie"];
			Если   ВсеКуки=Неопределено тогда
			ВсеКуки=Ответ.Заголовки["set-cookie"];
				
				
			Конецесли;
			ВсеКуки=СтрЗаменитЬ(ВсеКуки,",",Символы.ПС);
			
			//СтруктураКук=СтрРазделить(ВсеКуки,";") ;
			
			Кэш_Т=Oracle;
			
			Если Найти(ВсеКуки,"JSESSIONID")>0 Тогда
				JSESSIONID="";
			Конецесли;
			Если ЗначениеЗАполнено(ВсеКУки) тогда
				Для Сч_1=1 По СтрЧислоСтрок(ВсеКуки) Цикл
					
					ПолучитьСтроку=СтрПолучитьСтроку(ВсеКуки,Сч_1);
					
					Если Найти(ПолучитьСтроку,"=")=0 Тогда
						Продолжить;
					Конецесли;
					
						Если Найти(ПолучитьСтроку,"X-Oracle-BMC-LBS-Route")>0 Тогда
							Продолжить;
						Конецесли;
					
					//Если Найти(ПолучитьСтроку,"Set-Cookie")=1 
					//	Тогда
					Если ЗначениеЗаполнено(Кэш_Т) Тогда
						Кэш_Т=Кэш_Т+";";
					Конецесли;
						//КэшТ=КэшТ+ПолучитьСтроку;
						Коок=ПолучитьСтроку;
						Коок=Сред(Коок,1,Найти(Коок,";")-1);
						Кэш_Т=Кэш_Т+Коок;
						Если Найти(КооК,"JSESSIONID")>0 Тогда
							JSESSIONID=Коок;
						Конецесли;
						
						
						//Request.SetRequestHeader("Cookie",Коок);
					//КонецЕсли;
				КонецЦикла;
			
				
			КонецЕсли;
	//
			
			HTTPЗапрос = Новый HTTPЗапрос("index.jsp");
			HTTPЗапрос.Заголовки.Вставить("Cookie", Кэш_Т);
			
			HTTPЗапрос.Заголовки.Вставить("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3");
			//HTTPСервисЗапрос.SetRequestHeader("Accept-Encoding","gzip, deflate");
			HTTPЗапрос.Заголовки.Вставить("Accept-Language", "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7");
			HTTPЗапрос.Заголовки.Вставить("Cache-Control", "max-age=0");
			HTTPЗапрос.Заголовки.Вставить("Connection", "keep-alive");
			HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
			HTTPЗапрос.Заголовки.Вставить("Host", "srs.gs1ru.org");
			//HTTPЗапрос.Заголовки.Вставить("Origin", "https://srs.gs1ru.org");
			HTTPЗапрос.Заголовки.Вставить("Referer", "https://srs.gs1ru.org/login");
			HTTPЗапрос.Заголовки.Вставить("Upgrade-Insecure-Requests", "1");
			HTTPЗапрос.Заголовки.Вставить("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36");
			
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			//Кэш_Т=Ответ.Заголовки["Set-Cookie"];
			XORACLEAPMCSREQUESTID=Ответ.Заголовки["X-ORACLE-APMCS-REQUEST-ID"];
			Кэш_Т=Ответ.Заголовки["Set-Cookie"];
			Если Кэш_Т=Неопределено Тогда
				Кэш_Т=Ответ.Заголовки["set-cookie"];
				
				
			Конецесли;
			Ответ=Ответ.ПолучитьТелоКакСтроку();
			Подключились=Ложь;
	
			//Организации.Очистить();
			Если Найти(Ответ,"Единый язык")>0 Тогда
					ВсеКуки=СтрЗаменитЬ(Кэш_Т,",",Символы.ПС);
		//		
		//		//СтруктураКук=СтрРазделить(ВсеКуки,";") ;
		//	
		
					Кэш_Т=Oracle+";"+JSESSIONID;
		
				Если ЗначениеЗАполнено(ВсеКУки) тогда
					Для Сч_1=1 По СтрЧислоСтрок(ВсеКуки) Цикл
						Если Найти(ПолучитьСтроку,"=")=0 Тогда
							Продолжить;
						Конецесли;
					    Если Найти(ПолучитьСтроку,"X-Oracle-BMC-LBS-Route")>0 Тогда
							Продолжить;
						Конецесли;
						

						Если Найти(ПолучитьСтроку,"JSESSIONID")>0 Тогда
							Продолжить;
						Конецесли;
						
						ПолучитьСтроку=СтрПолучитьСтроку(ВсеКуки,Сч_1);
						//Если Найти(ПолучитьСтроку,"Set-Cookie")=1 
						//	Тогда
						Если ЗначениеЗаполнено(Кэш_Т) Тогда
							Кэш_Т=Кэш_Т+";";
						Конецесли;
							//КэшТ=КэшТ+ПолучитьСтроку;
							Коок=ПолучитьСтроку;
							Коок=Сред(Коок,1,Найти(Коок,";")-1);
							Кэш_Т=Кэш_Т+Коок;
							//Если Найти(КооК,"JSESSIONID")>0 Тогда
							//	JSESSIONID=Коок;
							//Конецесли;
							
							//Request.SetRequestHeader("Cookie",Коок);
						//КонецЕсли;
					КонецЦикла;
		//		
		//			
				КонецЕсли;
		////
		//		Кэш_Т=Кэш_Т+";"+JSESSIONID; 

				
				
				
				Подключились=Истина;
				

				
				HTTPЗапрос = Новый HTTPЗапрос("Ui/Ui.nocache.js?ui_ver=3.0.446-SNAPSHOT");
				HTTPЗапрос.Заголовки.Вставить("Referer", "http://srs.gs1ru.org/index.jsp");
				HTTPЗапрос.Заголовки.Вставить("Cookie", Кэш_Т);
				HTTPЗапрос.Заголовки.Вставить("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36");
				
				Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
				//Кэш_Т=Ответ.Заголовки["Set-Cookie"];
				Ответ=Ответ.ПолучитьТелоКакСтроку();
				Если Найти(Ответ,"nc='")>0 Тогда
					qr=Сред(Ответ,Найти(Ответ,"nc='")+4);
					qr=Сред(qr,1,Найти(qr,"'")-1);
					
					
					HTTPЗапрос = Новый HTTPЗапрос("Ui/"+qr+".cache.js");
					HTTPЗапрос.Заголовки.Вставить("Cookie", Кэш_Т);
					HTTPЗапрос.Заголовки.Вставить("Referer", "http://srs.gs1ru.org/index.jsp");
					HTTPЗапрос.Заголовки.Вставить("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36");
					
					Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
					//Кэш_Т=Ответ.Заголовки["Set-Cookie"];
					Ответ=Ответ.ПолучитьТелоКакСтроку();
					Если Найти(Ответ,"springGwtServices/importService','")>0 Тогда
						setupService=Сред(Ответ,Найти(Ответ,"springGwtServices/importService','")+34);
						setupService=Сред(setupService,1,Найти(setupService,"'")-1);
					КонецЕсли;	
						
				КонецЕсли;											
				
				
				
				Сч=1;
				Если Объект.АльтернативныйТабакGS.Количество()>0 Тогда
					ТаблЧ=Объект.АльтернативныйТабакGS;
				Иначе
					ТаблЧ=Объект.ОдеждаGS;
					
				Конецесли;
				
				Для Каждого Стр_1 Из ТаблЧ ЦикЛ 
					
					
						Если Объект.АльтернативныйТабакGS.Количество()=0  И Стр_1.ВидИзделияДругое<>"БЮСТГАЛЬТЕР" Тогда
		Продолжить;
	Конецесли;
	

		Адр=Неопределено;
		ВывестиТабличнД_В_1(Табл,Адр,Стр_1.ПолучитьИдентификатор());
		Адр.Записать(КаталогВременныхФайов+Формат(Сч,"ЧГ=")+".xls");
		ПослеЗаписиXLS(КаталогВременныхФайов+Формат(Сч,"ЧГ=")+".xls","");
		
		Адр=Новый ДвоичныеДанные(КаталогВременныхФайов+Формат(Сч)+".xls");
		РазмерФайла=0;
		Boundary="";
		ВернутьАдресХр=Неопределено;
		ВернутьТоЧтоОтправитьПоСайту(ВернутьАдресХр,Адр,Boundary,Формат(Сч)+".xls",РазмерФайла);
		
		ДвоичнД=ПолучитьИзВременногоХранилища(ВернутьАдресХр);
		//ДД.Вставить("ИмяФайлаОтправки",ИмяФайлаОтправки);
		//ДвоичнД.НачатьЗапись(Новый ОписаниеОпоВещения("ПослеЗаписиВФайлДв",ЭтаФорма,ДД),ИмяФайлаОтправки);
		ИмяФайлаОтправки=КаталогВременныхФайов+Формат(Сч,"ЧГ=");
		ДвоичнД.Записать(ИмяФайлаОтправки);
		
		
		
		HTTPЗапрос = Новый HTTPЗапрос("handler/import");
		HTTPЗапрос.Заголовки.Вставить("Cookie", Кэш_Т);
		
		HTTPЗапрос.Заголовки.Вставить("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3");
		//HTTPСервисЗапрос.SetRequestHeader("Accept-Encoding","gzip, deflate");
		HTTPЗапрос.Заголовки.Вставить("Accept-Language", "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7");
		HTTPЗапрос.Заголовки.Вставить("Cache-Control", "max-age=0");
		HTTPЗапрос.Заголовки.Вставить("Content-Type", "multipart/form-data; boundary=" + Boundary);
		HTTPЗапрос.Заголовки.Вставить("Content-Length", Формат(РазмерФайла,"ЧГ="));
		HTTPЗапрос.Заголовки.Вставить("Connection", "keep-alive");
		HTTPЗапрос.Заголовки.Вставить("Host", "srs.gs1ru.org");
		HTTPЗапрос.Заголовки.Вставить("Origin", "http://srs.gs1ru.org");
		HTTPЗапрос.Заголовки.Вставить("Referer", "http://srs.gs1ru.org/login?error=true");
		HTTPЗапрос.Заголовки.Вставить("Upgrade-Insecure-Requests", "1");
		HTTPЗапрос.Заголовки.Вставить("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36");
		
		
		
		HTTPЗапрос.УстановитьИмяФайлаТела(ИмяФайлаОтправки);
		Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
		//Кэш_Т=Ответ.Заголовки["Set-Cookie"];
		Текст=Ответ.ПолучитьТелоКакСтроку();
		NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст);
		Если Ответ.КодСостояния=200 И NNN<>Неопределено 
			И  NNN.ok=истина Тогда
			            СчЗацикливания=10000;
			Пока Истина Цикл
				
				СчЗацикливания=СчЗацикливания-1;
				Если          СчЗацикливания<=0  Тогда
					ПрерватЬ;
					
				КонецЕсли;
				HTTPЗапрос = Новый HTTPЗапрос("Ui/springGwtServices/importService");
						
						HTTPЗапрос.Заголовки.Вставить("Cookie", Кэш_Т);
						HTTPЗапрос.Заголовки.Вставить("X-GWT-Permutation", qr);
						HTTPЗапрос.Заголовки.Вставить("X-GWT-Module-Base", "http://srs.gs1ru.org/Ui/");
						
						
						HTTPЗапрос.Заголовки.Вставить("Accept", "*/*");
						//HTTPСервисЗапрос.SetRequestHeader("Accept-Encoding","gzip, deflate");
						HTTPЗапрос.Заголовки.Вставить("Accept-Language", "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7");
						HTTPЗапрос.Заголовки.Вставить("Connection", "keep-alive");
		//				HTTPЗапрос.Заголовки.Вставить("Content-Length", "128");
						HTTPЗапрос.Заголовки.Вставить("Content-Type", "text/x-gwt-rpc; charset=UTF-8");
						HTTPЗапрос.Заголовки.Вставить("Host", "srs.gs1ru.org");
						HTTPЗапрос.Заголовки.Вставить("Origin", "http://srs.gs1ru.org");
						HTTPЗапрос.Заголовки.Вставить("Referer", "http://srs.gs1ru.org/index.jsp");
						//HTTPЗапрос.Заголовки.Вставить("Upgrade-Insecure-Requests", "1");
						HTTPЗапрос.Заголовки.Вставить("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36");
						
						HTTPЗапрос.УстановитьТелоИзСтроки(
						
						"7|0|4|http://srs.gs1ru.org/Ui/|"+setupService+"|com.gs46.api.client.service.ImportService|getProgress|1|2|3|4|0|",
						
						
						//HTTPЗапрос.УстановитьТелоИзСтроки("7|0|4|http://srs.gs1ru.org/Ui/|"+setupService+"|com.gs46.api.client.service.SetupService|getInitialData|1|2|3|4|0|",
						КодировкаТекста.ANSI);
						//HTTPЗапрос.УстановитьИмяФайлаТела(ИмяФайлаОтправкиКонец);
		 				Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
						//Кэш_Т=Ответ.Заголовки["Set-Cookie"];
												//НачатьУдалениеФайлов(Новый Описа,ИмяФайлаОтправкиКонец);
						//НачатьУдалениеФайлов(Новый ОписаниеОповещения("УдаленияФайла",ЭтаФорма),ИмяФайлаОтправкиКонец);
						//Если 
					РезультатОК="";
													
						Текст1=Ответ.ПолучитьТелоКакСтроку();
						Если Сред(текст1,1,4)="//OK" Тогда
							NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(
							Сред(Текст1,5));
							
							Удачно=Ложь;
							Для Каждого Стр_М Из NNN Цикл
								
								Если ТипЗнч(Стр_М)=Тип("Массив") Тогда
									Для каждого Стр_2_М Из Стр_М Цикл
										Если
											Найти(Стр_2_М,"Новая упаковка")=1 И
											Найти(Стр_2_М,"(")>0 
											И Найти(Стр_2_М,")")=СтрДлина(Стр_2_М) Тогда
											Удачно=Истина;
											
											ГТИН=Сред(Стр_2_М,Найти(Стр_2_М,"(")+1);
											ГТИН=Сред(ГТИН,1,Найти(ГТИН,")")-1);
											
											Прервать;
										КонецЕсли;
										
										Если Сред(Стр_2_М,1,3)="com" Тогда
											Продолжить;
										КонецЕсли;
										Если Сред(Стр_2_М,1,4)="java" Тогда
											Продолжить;
										КонецЕсли;
										Если ЗначениеЗаполнено(РезультатОК) Тогда
											РезультатОК=РезультатОК+". ";
										КонецЕсли;
										РезультатОК=РезультатОК+Стр_2_М;
										
										
									Конеццикла;
									
									
									Прервать;
								КонецЕсли;
								
							Конеццикла;
							
							Если Удачно=Истина Тогда
								Прервать;
							КонецЕсли;
							Если Найти(РезультатОК,"Processing")<>1
								И Найти(РезультатОК,"progress")<>1
								Тогда
								
								Если Найти(РезультатОК,"Такая упаковка уже есть") Тогда
									ГТИН=Сред(РезультатОК,Найти(РезультатОК,"Такая упаковка уже есть")+25);
									ГТИН=Сред(ГТИН,Найти(ГТИН," ")+1);
									Удачно=Истина;
									ГТИН=Сред(ГТИН,1,Найти(ГТИН," ")-1);
									
								КонецЕсли;
								
								Прервать;
							КонецЕсли;
							
							
							ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Задержка_Номральная(2);
							
						КонецЕсли;
					Конеццикла;
					Если Удачно=Истина Тогда
						Стр_1.GTIN=ГТИН;
						ЗаписатьПродукцию(Стр_1.ПолучитьИдентификатор(),ГТИН);
						Стр_1.РезультатОбработкиДанныхВGS46="ОК"
					Иначе
						Стр_1.РезультатОбработкиДанныхВGS46=РезультатОК
						
						
					Конецесли;
								
		Конецесли;
		
		
			
		
		сч=Сч+1;
	Конеццикла;
	
КонецЕсли;
КонецЕсли;
КонецЕсли;

	//Если ЗначениеЗАполнено(ВыборЗагрExcel)
	//	И ВыборЗагрExcel.Количество()>0  тогда
	//
	//	ИмяФ=ВыборЗагрExcel[0];
	//	РР.НачатьЗапись(,ИмяФ,ТипФайлаТабличногоДокумента.XLSX);
	//	РР.НачатьЗапись(Новый ОписаниеОповещения("ПослеЗаписиXLS",ЭтаФорма,Сред(ИмяФ,1,СтрДлина(ИмяФ)-1)),Сред(ИмяФ,1,СтрДлина(ИмяФ)-1),ТипФайлаТабличногоДокумента.XLS)
	//	
	//КонецЕсли
	
	
КонецПроцедуры

Процедура ЗаписатьПродукцию(ПолучитьИдентификатор,ГТИН)
	
	Стр_1=Объект.АльтернативныйТабакGS.НайтиПоИдентификатору(ПолучитьИдентификатор);
	
					СпрОб=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(ГТИН));
				Если ЗначениеЗаполнено(Спроб) Тогда
					СпрОб=СпрОб.ПолучитьОбъект();
				Иначе
					Спроб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак;
				СпрОб.GTIN=ГТИН;
				
				СпрОб.НаименованиеТовара=Стр_1.НаименованиеТовараНаЭтикетке;
				СпрОб.Наименование=Стр_1.НаименованиеТовараНаЭтикетке;
				Спроб.БрендТорговаяМарка=Стр_1.БрендТорговаяМарка;
				
				//СпрОб.СтранаПроизводства=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",Стр_1.СтранаПроизводства.Альфа2);
				
				Если ЗначениеЗаполнено(Стр_1.КодВУчетнойСистеме) Тогда
					СпрОб.КодВУчетнойСистеме=Стр_1.КодВУчетнойСистеме;
				КонецЕсли;
				

				//
				ДопРеквизиты=Спроб.ДополнительныйРеквизитАльтернативныйТабак;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_АльтернативныйТабак_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизитыОбщие=Спроб.ДополнительныйРеквизитОбщиеНК;
				Если ЗначениеЗаполненО(ДопРеквизитыОбщие) тогда
					ДопРеквизитыОбщие=ДопРеквизитыОбщие.ПолучитьОбъект();
				Иначе
					ДопРеквизитыОбщие=Справочники.ДополинтельныеРеквизиты_ДругиеНК_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
			
				
				ДопРеквизиты.УровеньИерархии=Стр_1.УровеньИерархии;
				ДопРеквизиты.СсылкаНаИдентификаторВложенойУпаковки=Стр_1.СсылкаНаИдентификаторВложенойУпаковки;
				//СпрОб.Наименование=СпрОб.Наименование;
				//СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
				//СпрОб.БрендТорговаяМарка=V_PROD_NAME_RU;
				ДопРеквизиты.КоличествоВложений=Стр_1.КоличествоВложений;
				ДопРеквизиты.КоличествоВПотребительскойУпаковкеЕдиницаИзмерения=Стр_1.КоличествоВПотребительскойУпаковке_ЕдиницаИзмерения;;
				
				ДопРеквизитыОбщие.ТипУпаковки=Стр_1.ТипУпаковки;
				ДопРеквизитыОбщие.МатериалУпаковки=Стр_1.МатериалУпаковки;
				ДопРеквизиты.КодВидаПодакцизныхТоваров=Стр_1.КодВидаПодакцизныхТоваров;
				
				СпрОб.СтранаПроизводства=Стр_1.СтранаПроизводства;
				ДопРеквизиты.ОКПД2=Стр_1.ОКПД2;

				
				Сертификат=Стр_1.Сертификат;
				 
				ДопРеквизитыОбщие.Записать();
				
				
				ДопРеквизиты.Записать();
				Спроб.ДополнительныйРеквизитАльтернативныйТабак=ДопРеквизиты.Ссылка;
				СпрОб.ДополнительныйРеквизитОбщиеНК=ДопРеквизитыОбщие.Ссылка;
				

				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=Стр_1.КодТНВЭД;
				//КонецЕсли;
				//	//ДобавСтр.Сертификат=Сертификат.Ссылка;

		 
				
		//	Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб.Записать();
				Стр_1.Товар=СпрОб.Ссылка;
								Стр_1.GTIN=Стр_1.Товар.GTIN;

		//	КонецЕсли;	
КонецПроцедуры

Функция ВернутьТоЧтоОтправитьПоСайту(ВернутьАдресХр,Адр,Boundary,ИмяВр_1,РазмерФайла)
	Boundary=xmlString(Объект.Ссылка.УникальныйИдентификатор());
	
	ВремФ=ПолучитьИмяВременногоФайла("xls");
				//ФайлЗапроса = Новый Файл(ВремФ);
				
				//Каталог = КаталогВременныхФайлов();
				ИмяВр = ВремФ;
		

				//Табл.Записать(ИмяВр,ТипФайлаТабличногоДокумента.XLSX);
				
				Адр.Записать(ВремФ);
				
				//Каталог = КаталогВременныхФайлов();
				//ИмяФайла = Строка(Новый УникальныйИдентификатор) + "1.txt";
				ИмяФайлаОтправкиНачало = ПолучитьИмяВременногоФайла("txt");
				
				
			    ФайлОтправкиНачало = Новый ЗаписьТекста(ИмяФайлаОтправкиНачало, КодировкаТекста.ANSI, Символы.ПС, Ложь);

				ФайлОтправкиНачало.ЗаписатьСтроку("--" + Boundary); 
					ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" +ИмяВр_1+ """"); 				
				ФайлОтправкиНачало.ЗаписатьСтроку("Content-Type: application/octet-stream"); 				
			    ФайлОтправкиНачало.ЗаписатьСтроку("");
			    ФайлОтправкиНачало.Закрыть();
				МассивФайловДляОбъединения = Новый Массив;
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиНачало);

			    МассивФайловДляОбъединения.Добавить(ИмяВр);
				
				//Каталог = КаталогВременныхФайлов();
				///ИмяФайла = Строка(Новый УникальныйИдентификатор) + "2.txt";
				//ИмяФайлаОтправкиКонец = Каталог + ИмяФайла;

			    ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
			    ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.ANSI, Символы.ПС, Ложь);

			    //Завершение раздела двоичных данных
			    //Завершение сообщения для сервера
				
				ФайлОтправкиКонец.ЗаписатьСтроку("");
			    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary + "--");
			    ФайлОтправкиКонец.Закрыть();
			    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец); // !!! 3 добавление в массив
				
				
				ИмяФайлаОтправки = ПолучитьИмяВременногоФайла("tmp");//КаталогВременныхФайлов() + "post.txt";
				
				
			    ОбъединитьФайлы(МассивФайловДляОбъединения, ИмяФайлаОтправки);
				
				ДвоичнД=Новый ДвоичныеДанные(ИмяФайлаОтправки);
				РазмерФайла=ДвоичнД.Размер();
				
				ВернутьАдресХр=ПоместитьВоВременноеХранилище(ДвоичнД,ЭтаФорма.УникальныйИдентификатор);
КонецФункции


Процедура ВывестиТабличнД_В_1(Табл,ВернутьАдресХр,ИдентификаторСтроки)

	Табл.Очистить();
	Если Объект.АльтернативныйТабакGS.Количество()>0 Тогда
		Стр=Объект.АльтернативныйТабакGS.НайтиПоИдентификатору(ИдентификаторСтроки);
	Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("ОбщийДляGS1");
	
//ОблШ=Мак.ПолучитьОбласть("Шапка");
ОблС=Мак.ПолучитьОбласть("строка");

//Табл.Вывести(ОблШ);
	
	ОблС.Параметры.Заполнить(Стр);
	ОблС.Параметры.ТекущаяДата=ТекущаяДата();
	Облс.Параметры.Организация=Объект.Организация.Наименование;
	
	
	Если ЗначениеЗаполнено(Стр.GTIN) Тогда
		ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
	Иначе
		ОблС.Параметры.GTIN="";
		
	КонецЕсли;
	
	ОблС.Параметры.КоличествоВПотребительскойУпаковке=
	Стр.КоличествоВПотребительскойУпаковке_ЕдиницаИзмерения.Наименование+" <"+Стр.КоличествоВПотребительскойУпаковке_ЕдиницаИзмерения.Код+">";
	//СтКоличествоВПотребительскойУпаковке_ЕдиницаИзмерения
	
	//ОблС.Параметры.КодТНВЭД="<"+Стр.КодТНВЭД.Код+"> "+Стр.КодТНВЭД.Наименование;
	//ОблС.Параметры.УровеньИерархии="<"+Стр.УровеньИерархии.Код+"> "+Стр.УровеньИерархии.Наименование;
	ОблС.Параметры.ТипУпаковки=Стр.ТипУпаковки.Наименование+" <"+Стр.ТипУпаковки.Код+">";
	
	ОблС.Параметры.МатериалУпаковки=Стр.МатериалУпаковки.Наименование+" <"+Стр.МатериалУпаковки.Код+">";
	//ОблС.Параметры.КодВидаПодакцизныхТоваров="<"+Стр.КодВидаПодакцизныхТоваров.Код+"> "+Стр.КодВидаПодакцизныхТоваров.Наименование;
	
	//ОблС.Параметры.СтранаПроизводства=Стр.СтранаПроизводства.Альфа2;
	
	//ОблС.Параметры.ОКПД2="<"+Стр.ОКПД2.Код+"> "+Стр.ОКПД2.Наименование;
	
	//Если ЗначениеЗАполнено(Стр.Сертификат) Тогда
	//	ОблС.Параметры.НомерСертифката=Стр.Сертификат.Наименование;
	//	ОблС.Параметры.ДатаДекларации=Стр.Сертификат.ДатаНачалаДействия;
	//	ОблС.Параметры.ВидСертификата="<"+Стр.Сертификат.ВидСертификатаGSI.Код+"> "+Стр.Сертификат.ВидСертификатаGSI.Наименование;
	//Иначе
	//	ОблС.Параметры.НомерСертифката="нет";
	//	ОблС.Параметры.ДатаДекларации="нет";
	//	
	//КонецЕсли;
	
	
	
	Табл.Вывести(ОблС);
	Иначе
		Стр=Объект.ОдеждаGS.НайтиПоИдентификатору(ИдентификаторСтроки);
	Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("ОбщийДляGS1БЮСТГАЛЬТЕРЫ");
	
//ОблШ=Мак.ПолучитьОбласть("Шапка");
ОблС=Мак.ПолучитьОбласть("строка");

//Табл.Вывести(ОблШ);
	
	ОблС.Параметры.Заполнить(Стр);
	ОблС.Параметры.ТекущаяДата=ТекущаяДата();
	Облс.Параметры.Организация=Объект.Организация.Наименование;
	
	
	Если ЗначениеЗаполнено(Стр.GTIN) Тогда
		ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
	Иначе
		ОблС.Параметры.GTIN="";
		
	КонецЕсли;
	
	//ОблС.Параметры.КоличествоВПотребительскойУпаковке=
	//Стр.КоличествоВПотребительскойУпаковке_ЕдиницаИзмерения.Наименование+" <"+Стр.КоличествоВПотребительскойУпаковке_ЕдиницаИзмерения.Код+">";
	//СтКоличествоВПотребительскойУпаковке_ЕдиницаИзмерения
	
	//ОблС.Параметры.КодТНВЭД="<"+Стр.КодТНВЭД.Код+"> "+Стр.КодТНВЭД.Наименование;
	//ОблС.Параметры.УровеньИерархии="<"+Стр.УровеньИерархии.Код+"> "+Стр.УровеньИерархии.Наименование;
	//ОблС.Параметры.ТипУпаковки=Стр.ТипУпаковки.Наименование+" <"+Стр.ТипУпаковки.Код+">";
	
	//ОблС.Параметры.МатериалУпаковки=Стр.МатериалУпаковки.Наименование+" <"+Стр.МатериалУпаковки.Код+">";
	//ОблС.Параметры.КодВидаПодакцизныхТоваров="<"+Стр.КодВидаПодакцизныхТоваров.Код+"> "+Стр.КодВидаПодакцизныхТоваров.Наименование;
	
	//ОблС.Параметры.СтранаПроизводства=Стр.СтранаПроизводства.Альфа2;
	
	//ОблС.Параметры.ОКПД2="<"+Стр.ОКПД2.Код+"> "+Стр.ОКПД2.Наименование;
	
	//Если ЗначениеЗАполнено(Стр.Сертификат) Тогда
	//	ОблС.Параметры.НомерСертифката=Стр.Сертификат.Наименование;
	//	ОблС.Параметры.ДатаДекларации=Стр.Сертификат.ДатаНачалаДействия;
	//	ОблС.Параметры.ВидСертификата="<"+Стр.Сертификат.ВидСертификатаGSI.Код+"> "+Стр.Сертификат.ВидСертификатаGSI.Наименование;
	//Иначе
	//	ОблС.Параметры.НомерСертифката="нет";
	//	ОблС.Параметры.ДатаДекларации="нет";
	//	
	//КонецЕсли;
	
	
	Облс.Параметры.ВидИзделия="БЮСТГАЛЬТЕР <49>";
	ОблС.Параметры.РазмерГОСТСправочник="РОССИЯ <1764000029>";
	ОблС.Параметры.Регламент="ТР ТС 017/2011 ""О БЕЗОПАСНОСТИ ПРОДУКЦИИ ЛЕГКОЙ ПРОМЫШЛЕННОСТИ""";
	
	Табл.Вывести(ОблС);


	
Конецесли;

//Табл.Очистить();


//	Мак=Документы.GS1_Обувь_ХамелеонЦРПТ.ПолучитьМакет("ОбщийДляGS1");
//	
////ОблШ=Мак.ПолучитьОбласть("Шапка");
//ОблС=Мак.ПолучитьОбласть("строка");

////Табл.Вывести(ОблШ);
////Стр=СтрДля Каждого Стр Из ОБъект.АльтернативныйТабакGS Цикл
//	     Стр=ОБъект.АльтернативныйТабакGS.НайтиПоИдентификатору(ИдентификаторСтроки);
//	ОблС.Параметры.Заполнить(Стр);
//	ОблС.Параметры.ТекущаяДата=ТекущаяДата();
//	Облс.Параметры.Организация=Объект.Организация.Наименование;
//	
//	
//	Если ЗначениеЗаполнено(Стр.GTIN) Тогда
//		ОблС.Параметры.GTIN=xmlString(Стр.GTIN);
//	Иначе
//		ОблС.Параметры.GTIN="";
//		
//	КонецЕсли;
//	
//	ОблС.Параметры.КоличествоВПотребительскойУпаковке=
//	Стр.КоличествоВПотребительскойУпаковке_ЕдиницаИзмерения.Наименование+" <"+Стр.КоличествоВПотребительскойУпаковке_ЕдиницаИзмерения.Код+">";
//	//СтКоличествоВПотребительскойУпаковке_ЕдиницаИзмерения
//	
//	//ОблС.Параметры.КодТНВЭД="<"+Стр.КодТНВЭД.Код+"> "+Стр.КодТНВЭД.Наименование;
//	//ОблС.Параметры.УровеньИерархии="<"+Стр.УровеньИерархии.Код+"> "+Стр.УровеньИерархии.Наименование;
//	ОблС.Параметры.ТипУпаковки=Стр.ТипУпаковки.Наименование+" <"+Стр.ТипУпаковки.Код+">";
//	
//	ОблС.Параметры.МатериалУпаковки=Стр.МатериалУпаковки.Наименование+" <"+Стр.МатериалУпаковки.Код+">";
//	
//	
//	Табл.Вывести(ОблС);
//	
//		 
	ВремФ=ПолучитьИмяВременногоФайла("xlsx");
		//ФайлЗапроса = Новый Файл(ВремФ);
		
		//Каталог = КаталогВременныхФайлов();
		ИмяВр = ВремФ;


		Табл.Записать(ИмяВр,ТипФайлаТабличногоДокумента.XLS);
		
		ВернутьАдресХр=Новый ДвоичныеДанные(ИмяВр);
		//ВернутьАдресХр=ПоместитьВоВременноеХранилище(ДвоичнД
		

КонецПроцедуры



&НаКлиенте
Процедура ПослеЗаписиXLS(РР,ДД) Экспорт
	

Excel = Новый COMОбъект("Excel.Application");
Excel.WorkBooks.Open(РР); 
Excel.Visible = 0;

Excel.ActiveWindow.DisplayWorkbookTabs = 1; 
Excel.ActiveWindow.TabRatio = 0.6;         

Excel.Sheets(1).Name="Данные";
FullName = Excel.ActiveWorkbook.FullName;            
Excel.DisplayAlerts = false;
Excel.ActiveWorkbook.SaveAs(FullName, 18); // 18 - xls 97-2003; 51 - xlsx 2007-2013

//Excel.Visible = 1;       // если нужно поработать дальше с книгой
Excel.Application.Quit() // если просто выходим 

	
КонецПроцедуры


&НаКлиенте
Процедура ВторойВариант_ОдеждаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Если Объект.ВторойВариант=1 Тогда
		Элементы.ОдеждаGS.Видимость=Ложь;
		Элементы.БльеGS.Видимость=Истина;
	Иначе
		Элементы.ОдеждаGS.Видимость=Истина;
		Элементы.БльеGS.Видимость=Ложь;
	Конецесли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОтправитьВНК(Команда) Экспорт
	// Вставить содержимое обработчика.
	
	
	КарточкиДляОтправкиВНК=СоздатьОбновитьКарточкиПроудкции();
	
	Для Каждого Стр_1 Из  КарточкиДляОтправкиВНК Цикл
		Форм=ПолучитьФорму("Справочник.Продукция_ХамелеонЦРПТ.Форма.ФормаЭлемента",Новый структура("Ключ",Стр_1));
		Форм.ЗарегистрироватьВКаталогеТоваров(Команда);
		Форм.ОтправитьНаМодерацию(Команда);
	Конеццикла;
	
	
//	
	НаСервереОбновитьГТИН();
	
	ЭтаФорма.Записать();
	Этаформа.Прочитать();
КонецПроцедуры

Процедура НаСервереОбновитьГТИН()
НаСервереОбновитьГТИНТаблица(Объект.GS1)	;
НаСервереОбновитьГТИНТаблица(Объект.АльтернативныйТабакGS)	;
НаСервереОбновитьГТИНТаблица(Объект.БельеGS)	;
НаСервереОбновитьГТИНТаблица(Объект.ВелосипедыGS)	;
НаСервереОбновитьГТИНТаблица(Объект.КоляскиGS)	;
НаСервереОбновитьГТИНТаблица(Объект.МолокоGS)	;
НаСервереОбновитьГТИНТаблица(Объект.ОдеждаGS)	;
НаСервереОбновитьГТИНТаблица(Объект.ПарфюмGS)	;
НаСервереОбновитьГТИНТаблица(Объект.РамыGS)	;
НаСервереОбновитьГТИНТаблица(Объект.ФотоGS)	;
НаСервереОбновитьГТИНТаблица(Объект.Шины)	;
НаСервереОбновитьГТИНТаблица(Объект.ПитьеваяВодаGS)	;
КонецПроцедуры

Процедура НаСервереОбновитьГТИНТаблица(Таблл)
	Для Каждого Стр_1 Из Таблл Цикл
		Стр_1.GTIN=Стр_1.Товар.GTIN
	Конеццикла;
	
КонецПроцедуры

Функция СоздатьОбновитьКарточкиПроудкции()
	
	НаимСайтВхода=Объект.ТекущийПользователь.СайтыВходаВСистему.наименование;
		
	Если НаимСайтВхода="Одежда" И Объект.ВторойВариант=1 Тогда
		НаимСайтВхода="Белье";
			
	ИначеЕсли НаимСайтВхода="Велосипеды" И Объект.ВторойВариант=1 Тогда
		НаимСайтВхода="Рамы";
			
	КонецЕсли;

	МассивВернутьПродукцию=Новый Массив;
	
	Если НаимСайтВхода="Шины" Тогда
		Для Каждого Стр_1 Из объект.Шины Цикл
				Если ЗначениеЗаполнено(Стр_1.Товар) Тогда
					СпрОб=Стр_1.Товар.ПолучитьОбъект();
				Иначе
					СпрОб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
					СпрОб.GTIN=Стр_1.GTIN;;

				Конецесли;
		
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Шины;;
				СпрОб.НаименованиеТовара=Стр_1.НаименованиеТовараНаЭтикетке;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=Стр_1.БрендТорговаяМарка;
				Если ЗначениеЗаполнено(Стр_1.КодВУчетнойСистеме) Тогда
					СпрОб.КодВУчетнойСистеме=Стр_1.КодВУчетнойСистеме;
				КонецЕсли;
				Если ЗначениеЗаполнено(Стр_1.МодельПроизводителяАртикул) Тогда
					СпрОб.МодельПроизводителяАртикул=Стр_1.МодельПроизводителяАртикул;
				КонецЕсли;
				

				
				ДопРеквизиты=Спроб.ДополнительныйРеквизитШины;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_Шины_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизиты.МодельШины=Стр_1.МодельШины;
				ДопРеквизиты.ШиринаПрофиляШины=Стр_1.ШиринаПрофиляШины;
				ДопРеквизиты.ЕдиницаИзмерения=Стр_1.ЕдиницаИзмерения;
				ДопРеквизиты.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине=Стр_1.НоминальноеОтношениеВысотыПрофиляШиныКЕгоШирине;
				ДопРеквизиты.ТипКонструкцииКаркасаШины=Стр_1.ТипКонструкцииКаркасаШины;
				ДопРеквизиты.ПосадочныйДиамтерОбода=Стр_1.НоминальныйПосадочныйДиаметрОбода;
				
				ДопРеквизиты.ИндексНагрузкиНаШину=Стр_1.ИндексНагрузкиНаШину;
				ДопРеквизиты.ИндексНагрузкиНаШинуДругое=Стр_1.ИндексНагрузкиНаШинуДругое;
				ДопРеквизиты.КатегорияСкорости=Стр_1.КатегорияСкорости;
				ДопРеквизиты.Сезонность=Стр_1.Сезонность;
				ДопРеквизиты.ТипШиныПоСпособуГерметизации=Стр_1.ТипШиныПоСпособуГерметизации;
				ДопРеквизиты.Записать();
				Спроб.ДополнительныйРеквизитШины=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=Стр_1.КодТНВЭД;
				;//КонецЕсли;
		 
				
				СпрОб.Записать();
								
						Стр_1.Товар=СпрОб.Ссылка;
								Стр_1.GTIN=Стр_1.Товар.GTIN;

				МассивВернутьПродукцию.Добавить(СпрОб.Ссылка);
			
	
		Конеццикла;	
		
		
	ИначеЕсли НаимСайтВхода="Альтернативный табак" Тогда
		
	
		Для Каждого Стр_1 Из Объект.АльтернативныйТабакGS Цикл
				Если ЗначениеЗаполнено(Стр_1.Товар) Тогда
					СпрОб=Стр_1.Товар.ПолучитьОбъект();
				Иначе
					СпрОб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
					СпрОб.GTIN=Стр_1.GTIN;;

				Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.АльтернативныйТабак;
			//	СпрОб.GTIN=V_PROD_COVER_GTIN;
				СпрОб.НаименованиеТовара=Стр_1.НаименованиеТовараНаЭтикетке;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=Стр_1.БрендТорговаяМарка;
				
				СпрОб.СтранаПроизводства=Стр_1.СтранаПроизводства;
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				
				//СпрОб.ИННПроизводителяИмпортёра=ВернутьПроизводителя(V_WEB_90000626,V_MANUFACTURER_NAME);
				
								
				
				Если ЗначениеЗаполнено(Стр_1.КодВУчетнойСистеме) Тогда
					СпрОб.КодВУчетнойСистеме=Стр_1.КодВУчетнойСистеме;
				КонецЕсли;
				

				//
				ДопРеквизиты=Спроб.ДополнительныйРеквизитАльтернативныйТабак;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_АльтернативныйТабак_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизитыОбщие=Спроб.ДополнительныйРеквизитОбщиеНК;
				Если ЗначениеЗаполненО(ДопРеквизитыОбщие) тогда
					ДопРеквизитыОбщие=ДопРеквизитыОбщие.ПолучитьОбъект();
				Иначе
					ДопРеквизитыОбщие=Справочники.ДополинтельныеРеквизиты_ДругиеНК_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
			
				
				ДопРеквизиты.УровеньИерархии=Стр_1.УровеньИерархии;
				ДопРеквизиты.СсылкаНаИдентификаторВложенойУпаковки=Стр_1.СсылкаНаИдентификаторВложенойУпаковки;
				СпрОб.Наименование=Стр_1.НаименованиеТовараНаЭтикетке;
				СпрОб.НаименованиеТовара=Стр_1.НаименованиеТовараНаЭтикетке;
				СпрОб.БрендТорговаяМарка=Стр_1.БрендТорговаяМарка;
				Если Не ЗначениеЗАполненО(Спроб.ИННПроизводителяИмпортёра) ТОгда
					Спроб.ИННПроизводителяИмпортёра=
					ВернутьПроизводителя(Объект.Организация.ИНН,Объект.Организация.Наименование);
					//Докум.Организация;
				КонецЕсли;
					
			//	Если Сред(КодТнВЭД,1,4)="2403" Тогда
			//		ДопРеквизиты.вес=V_PROD_COUNT;
					
				//Иначе
					ДопРеквизиты.КоличествоВложений=Стр_1.КоличествоВложений;
				//КонецЕсли;
				ДопРеквизиты.КоличествоВПотребительскойУпаковкеЕдиницаИзмерения=Стр_1.КоличествоВПотребительскойУпаковке;
				
				ДопРеквизитыОбщие.ТипУпаковки=Стр_1.ТипУпаковки;
				ДопРеквизитыОбщие.МатериалУпаковки=Стр_1.МатериалУпаковки;
				ДопРеквизиты.КодВидаПодакцизныхТоваров=Стр_1.КодВидаПодакцизныхТоваров;
				
				СпрОб.СтранаПроизводства=Стр_1.СтранаПроизводства;
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				ДопРеквизиты.ОКПД2=Стр_1.ОКПД2;

				
				Сертификат=Стр_1.Сертификат;
				
				ДатаВыдачи=Стр_1.Сертификат.ДатаНачалаДействия;
				
				

				

				 ДопРеквизитыОбщие.Записать();
				
				
				ДопРеквизиты.Записать();
				Спроб.ДополнительныйРеквизитАльтернативныйТабак=ДопРеквизиты.Ссылка;
				СпрОб.ДополнительныйРеквизитОбщиеНК=ДопРеквизитыОбщие.Ссылка;
				

				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=Стр_1.КодТНВЭД
				;//КонецЕсли;
				//	//ДобавСтр.Сертификат=Сертификат.Ссылка;


		 


				
				СпрОб.Записать();
					РегСв=РегистрыСведений.ПодтверждающиеДокументы_ХамелеонЦРПТ.СоздатьНаборЗаписей();
						РегСв.Отбор.Продукция.Установить(СпрОб.Ссылка);
						РегСв.Отбор.Период.Установить(ДатаВыдачи);
						Добав=РегСв.Добавить();
						Добав.Период=ДатаВыдачи;
						Добав.Продукция=СпрОб.Ссылка;
						Добав.Документ=Сертификат;
						Регсв.Записать(Истина);
							

							
				
				Стр_1.Товар=СпрОб.Ссылка;
								Стр_1.GTIN=Стр_1.Товар.GTIN;

				МассивВернутьПродукцию.Добавить(СпрОб.Ссылка);
			
		 Конеццикла;
		 
	ИначеЕсли НаимСайтВхода="Кресла-коляски" Тогда
		
	
		Для Каждого Стр_1 Из Объект.КоляскиGS Цикл
				Если ЗначениеЗаполнено(Стр_1.Товар) Тогда
					СпрОб=Стр_1.Товар.ПолучитьОбъект();
				Иначе
					СпрОб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
					СпрОб.GTIN=Стр_1.GTIN;;

				Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.КреслаКоляски;
				//СпрОб.GTIN=V_PROD_COVER_GTIN;
				СпрОб.НаименованиеТовара=Стр_1.НаименованиеТовараНаЭтикетке;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=Стр_1.БрендТорговаяМарка;
				Если ЗначениеЗаполнено(Стр_1.КодВУчетнойСистеме) Тогда
					СпрОб.КодВУчетнойСистеме=Стр_1.КодВУчетнойСистеме;
				КонецЕсли;
				Если ЗначениеЗаполнено(Стр_1.МодельПроизводителяАртикул) Тогда
					СпрОб.МодельПроизводителяАртикул=Стр_1.МодельПроизводителяАртикул;
				КонецЕсли;
				

				
				ДопРеквизиты=Спроб.ДополнительныйРеквизитКоляски;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_Кресла_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизиты.ВидТовара=Стр_1.ВидТоварв;
				ДопРеквизиты.ТипПриводаВДвижении=Стр_1.ТипПриводаВДвижении;
				ДопРеквизиты.МассаИзделия=Стр_1.МассаИзделия;
				ДопРеквизиты.МаксимальнаяНагрузка=Стр_1.МаксимальнаяНагрузка;
				ДопРеквизиты.ГлубинаСидения=Стр_1.ГлубинаСидения;
				ДопРеквизиты.ЕдиницаИзмеренияГлубины=Стр_1.ЕдиницаИзмеренияГлубины;
				ДопРеквизиты.ШиринаСидения=Стр_1.ШиринаСидения;
				ДопРеквизиты.ЕдиницаИзмеренияШирины=Стр_1.ЕдиницаИзмеренияШирины;
				ДопРеквизиты.ВысотаСидения=Стр_1.ВысотаСидения;
				ДопРеквизиты.ЕдиницаИзмеренияВысоты=Стр_1.ЕдиницаИзмеренияВысоты;
				ДопРеквизиты.ВысотаСпинки=Стр_1.ВысотаСпинки;
				ДопРеквизиты.ЕдиницаИзмреенияВысотыСпинки=Стр_1.ЕдиницаИзмреенияВысотыСпинки;
				ДопРеквизиты.Модель=Стр_1.Модель;
				ДопРеквизиты.КодТСР=Стр_1.КодТСР;
				//
				СпрОб.СтранаПроизводства=Стр_1.СтранаПроизводства;
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				ДопРеквизиты.Записать();
				Спроб.ДополнительныйРеквизитКоляски=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=Стр_1.КодТНВЭД;
				//КонецЕсли;
					//ДобавСтр.Сертификат=Сертификат.Ссылка;

		 


				
				СпрОб.Записать();
				
							
				
				Стр_1.Товар=СпрОб.Ссылка;
								Стр_1.GTIN=Стр_1.Товар.GTIN;

				МассивВернутьПродукцию.Добавить(СпрОб.Ссылка);
			
		 Конеццикла;
		 
	 ИначеЕсли НаимСайтВхода="Рамы" Тогда
		
	
		Для Каждого Стр_1 Из Объект.РамыGS Цикл
				Если ЗначениеЗаполнено(Стр_1.Товар) Тогда
					СпрОб=Стр_1.Товар.ПолучитьОбъект();
				Иначе
					СпрОб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
					СпрОб.GTIN=Стр_1.GTIN;;

				Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Рамы;
				СпрОб.НаименованиеТовара=Стр_1.НаименованиеТовараНаЭтикетке;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=Стр_1.БрендТорговаяМарка;
				Если ЗначениеЗаполнено(Стр_1.КодВУчетнойСистеме) Тогда
					СпрОб.КодВУчетнойСистеме=Стр_1.КодВУчетнойСистеме;
				КонецЕсли;
				Если ЗначениеЗаполнено(Стр_1.МодельПроизводителяАртикул) Тогда
					СпрОб.МодельПроизводителяАртикул=Стр_1.МодельПроизводителяАртикул;
				КонецЕсли;
				

				
				ДопРеквизиты=Спроб.ДополнительныйРеквизитРамы;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_Рамы_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизиты.ТипРамы=Стр_1.ТипРамы;
				ДопРеквизиты.Модель=Стр_1.Модель;
				
				
				
				
				ДопРеквизиты.ГодПроизводства=Стр_1.ГодПроизводства;
				
				ДопРеквизиты.РазмерРамы=Стр_1.РазмерРамы;
				ДопРеквизиты.ЕдиницаИзмеренияРазмераРамы=Стр_1.ЕдиницаИзмеренияРазмераРамы;
				ДопРеквизиты.Цвет=Стр_1.Цвет;
				ДопРеквизиты.МатериалРамы=Стр_1.МатериалРамы;
				ДопРеквизиты.ТипПереднейВилки=Стр_1.ТипПереднейВилки;
				ДопРеквизиты.КонструктивнаяМасса=Стр_1.КонструктивнаяМасса;
				
				СпрОб.СтранаПроизводства=Стр_1.СтранаПроизводства;
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				
					ДопРеквизиты.НомерРегламента007=Стр_1.НомерРегламента007;
				
				
					ДопРеквизиты.НомерРегламента010=Стр_1.НомерРегламента010;
				
					ДопРеквизиты.НомерРегламента018=Стр_1.НомерРегламента018;
				
					ДопРеквизиты.НомерРегламента005=Стр_1.НомерРегламента005;
				
				
				ДопРеквизиты.Записать();
				Спроб.ДополнительныйРеквизитРамы=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=Стр_1.КодТНВЭД
				;//КонецЕсли;
					//ДобавСтр.Сертификат=Сертификат.Ссылка;

		 

				
				СпрОб.Записать();
				
							
				
				Стр_1.Товар=СпрОб.Ссылка;
								Стр_1.GTIN=Стр_1.Товар.GTIN;

				МассивВернутьПродукцию.Добавить(СпрОб.Ссылка);
			
		Конеццикла;	
		
	ИначеЕсли НаимСайтВхода="Фото" Тогда
		
	
		Для Каждого Стр_1 Из Объект.ФотоGS Цикл
				Если ЗначениеЗаполнено(Стр_1.Товар) Тогда
					СпрОб=Стр_1.Товар.ПолучитьОбъект();
				Иначе
					СпрОб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
					СпрОб.GTIN=Стр_1.GTIN;;

				Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Фото;
				СпрОб.НаименованиеТовара=стр_1.НаименованиеТовараНаЭтикетке;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=стр_1.БрендТорговаяМарка;
				
				СпрОб.СтранаПроизводства=Стр_1.СтранаПроизводства;
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				
				Если ЗначениеЗаполнено(Стр_1.МодельПроизводителяАртикул) Тогда
					СпрОб.МодельПроизводителяАртикул=Стр_1.МодельПроизводителяАртикул;
				КонецЕсли;
				Если ЗначениеЗаполнено(Стр_1.КодВУчетнойСистеме) Тогда
					СпрОб.КодВУчетнойСистеме=Стр_1.КодВУчетнойСистеме;
				КонецЕсли;
				

				
				ДопРеквизиты=Спроб.ДополнительныеРеквизитФото;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополинительныеРеквизиты_Фото_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;

				ДопРеквизиты.ТипИзделия=Стр_1.ТипИзделия;
				ДопРеквизиты.ТипИзделияДругое=Стр_1.ТипИзделияДругое;
				

					ДопРеквизиты.НомерРегламента004=стр_1.НомерРегламента004;
				
					ДопРеквизиты.НомерРегламента037=Стр_1.НомерРегламента037;
				
					ДопРеквизиты.НомерРегламента005=Стр_1.НомерРегламента005;
				
					ДопРеквизиты.НомерРегламента012=Стр_1.НомерРегламента012;
					ДопРеквизиты.НомерРегламента020=Стр_1.НомерРегламента020;
				
				
				ДопРеквизиты.Записать();
				Спроб.ДополнительныеРеквизитФото=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=Стр_1.КодТНВЭД
				;//КонецЕсли;
					//ДобавСтр.Сертификат=Сертификат.Ссылка;

		 

				
				СпрОб.Записать();
				
							
				
				Стр_1.Товар=СпрОб.Ссылка;
								Стр_1.GTIN=Стр_1.Товар.GTIN;

				МассивВернутьПродукцию.Добавить(СпрОб.Ссылка);
			
		Конеццикла;	
		
	ИначеЕсли НаимСайтВхода="Велосипеды" Тогда
		
	
		Для Каждого Стр_1 Из Объект.ВелосипедыGS Цикл
				Если ЗначениеЗаполнено(Стр_1.Товар) Тогда
					СпрОб=Стр_1.Товар.ПолучитьОбъект();
				Иначе
					СпрОб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
					СпрОб.GTIN=Стр_1.GTIN;;

				Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Велосипеды;
			//	СпрОб.GTIN=V_PROD_COVER_GTIN;
				СпрОб.НаименованиеТовара=Стр_1.НаименованиеТовараНаЭтикетке;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=Стр_1.БрендТорговаяМарка;
				Если ЗначениеЗаполнено(Стр_1.КодВУчетнойСистеме) Тогда
					СпрОб.КодВУчетнойСистеме=Стр_1.КодВУчетнойСистеме;
				КонецЕсли;
				Если ЗначениеЗаполнено(Стр_1.МодельПроизводителяАртикул) Тогда
					СпрОб.МодельПроизводителяАртикул=Стр_1.МодельПроизводителяАртикул;
				КонецЕсли;
				

				
				ДопРеквизиты=Спроб.ДополнительныйРеквизитВелосипед;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_Велосипеды_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизиты.ТипВелосипеда=Стр_1.ТипВелосипеда;
				ДопРеквизиты.Модель=Стр_1.Модель;
				
				
				
				
				ДопРеквизиты.ГодПроизводства=Стр_1.ГодПроизводства;
					ДопРеквизиты.НаличиеДвигателя=Стр_1.НаличиеДвигателя;
				ДопРеквизиты.ТипДвигателя=Стр_1.ТипДвигателя;
				
				ДопРеквизиты.МощностьДвигателя=Стр_1.МощностьДвигателя;
				ДопРеквизиты.ЕдиницаИзмеренияМощности=Стр_1.ЕдиницаИзмеренияМощности;
				ДопРеквизиты.РазмерРамы=Стр_1.РазмерРамы;
				ДопРеквизиты.ЕдиницаИзмеренияРазмераРамы=Стр_1.ЕдиницаИзмеренияРазмераРамы;
				ДопРеквизиты.Цвет=Стр_1.Цвет;
				ДопРеквизиты.МатериалРамы=Стр_1.МатериалРамы;
				ДопРеквизиты.ПосадочныйДиамтерОбода=Стр_1.ПосадочныйДиамтерОбода;
				ДопРеквизиты.ШиринаПрофиляШины=Стр_1.ШиринаПрофиля;
				ДопРеквизиты.ТипТормознойСистемы=Стр_1.ТипТормознойСистемы;
				ДопРеквизиты.ТипПереднейВилки=Стр_1.ТипПереднейВилки;
				ДопРеквизиты.КонструктивнаяМасса=Стр_1.КонструктивнаяМасса;
				
				СпрОб.СтранаПроизводства=Стр_1.СтранаПроизводства;
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				
					ДопРеквизиты.НомерРегламента007=Стр_1.НомерРегламента007;
				
					ДопРеквизиты.НомерРегламента010=Стр_1.НомерРегламента010;
					ДопРеквизиты.НомерРегламента012=Стр_1.НомерРегламента012;
					ДопРеквизиты.НомерРегламента018=Стр_1.НомерРегламента018;
				
					ДопРеквизиты.НомерРегламента005=Стр_1.НомерРегламента005;
				
				
				ДопРеквизиты.Записать();
				Спроб.ДополнительныйРеквизитВелосипед=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=Стр_1.КодТНВЭД
				;//КонецЕсли;
					//ДобавСтр.Сертификат=Сертификат.Ссылка;
	
		 
				
				СпрОб.Записать();
				
							
				
				Стр_1.Товар=СпрОб.Ссылка;
								Стр_1.GTIN=Стр_1.Товар.GTIN;

				МассивВернутьПродукцию.Добавить(СпрОб.Ссылка);
			
		Конеццикла;	
		
	ИначеЕсли НаимСайтВхода="Парфюм" Тогда
		
	
		Для Каждого Стр_1 Из Объект.ПарфюмGS Цикл
				Если ЗначениеЗаполнено(Стр_1.Товар) Тогда
					СпрОб=Стр_1.Товар.ПолучитьОбъект();
				Иначе
					СпрОб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
					СпрОб.GTIN=Стр_1.GTIN;;

				Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Парфюм;
				СпрОб.НаименованиеТовара=Стр_1.НаименованиеТовараНаЭтикетке;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=Стр_1.БрендТорговаяМарка;
				Если ЗначениеЗаполнено(Стр_1.КодВУчетнойСистеме) Тогда
					СпрОб.КодВУчетнойСистеме=Стр_1.КодВУчетнойСистеме;
				КонецЕсли;
				//Если ЗначениеЗаполнено(Стр_1.) Тогда
				//	СпрОб.МодельПроизводителяАртикул=V_MANUFACTURER_CODE;
				//КонецЕсли;
				

				
				ДопРеквизиты=Спроб.ДополнительныйРеквизитПарфюм;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_Парфюмерия_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				
				ДопРеквизиты_Общие=Спроб.ДополнительныйРеквизитОбщиеНК;
				Если ЗначениеЗаполненО(ДопРеквизиты_Общие) тогда
					ДопРеквизиты_Общие=ДопРеквизиты_Общие.ПолучитьОбъект();
				Иначе
					ДопРеквизиты_Общие=Справочники.ДополинтельныеРеквизиты_ДругиеНК_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
							
				
				ДопРеквизиты.ТипПарфюмерии=Стр_1.ТипПарфюмерии;
				ДопРеквизиты.ТипПарфюмерииДругое=Стр_1.ТипПарфюмерииДругое;
				
				ДопРеквизиты.Объем=Стр_1.Объем;
				ДопРеквизиты.ЕдиницаИзмеренияОбъема=Стр_1.ЕдиницаИзмеренияОбъема;
				ДопРеквизиты_Общие.ТипУпаковки=Стр_1.ТипУпаковки;
				ДопРеквизиты_Общие.МатериалУпаковки=Стр_1.МатериалУпаковки;
				ДопРеквизиты.ДополнительноеОписаниеУпаковки=Стр_1.ДополнительноеОписаниеУпаковки;
				СпрОб.СтранаПроизводства=Стр_1.СтранаПроизводства;
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				
					ДопРеквизиты.НомерРегламента009=Стр_1.НомерРегламента009;
				
					ДопРеквизиты.НомерРегламента005=Стр_1.НомерРегламента005;
				
					ДопРеквизиты.НомерРегламента029=Стр_1.НомерРегламента029;
				
				
					Сертификат=Стр_1.Сертификат;
				ДатаВыдачи=Стр_1.Сертификат.ДатаНачалаДействия;
					
					
					
					ДопРеквизиты_Общие.Записать();
				ДопРеквизиты.Записать();
				СпрОб.ДополнительныйРеквизитОбщиеНК=ДопРеквизиты_Общие.Ссылка;
				Спроб.ДополнительныйРеквизитПарфюм=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=Стр_1.КодТНВЭД;
				;//КонецЕсли;
					//ДобавСтр.Сертификат=Сертификат.Ссылка;

					
		 
				
				СпрОб.Записать();
				
			РегСв=РегистрыСведений.ПодтверждающиеДокументы_ХамелеонЦРПТ.СоздатьНаборЗаписей();
						РегСв.Отбор.Продукция.Установить(СпрОб.Ссылка);
						РегСв.Отбор.Период.Установить(ДатаВыдачи);
						Добав=РегСв.Добавить();
						Добав.Период=ДатаВыдачи;
						Добав.Продукция=СпрОб.Ссылка;
						Добав.Документ=Сертификат;
						Регсв.Записать(Истина);
							
				
				Стр_1.Товар=СпрОб.Ссылка;
								Стр_1.GTIN=Стр_1.Товар.GTIN;

				МассивВернутьПродукцию.Добавить(СпрОб.Ссылка);
			
		Конеццикла;	
	ИначеЕсли НаимСайтВхода="Молоко" Тогда
		
	
		Для Каждого Стр_1 Из Объект.МолокоGS Цикл
				Если ЗначениеЗаполнено(Стр_1.Товар) Тогда
					СпрОб=Стр_1.Товар.ПолучитьОбъект();
				Иначе
					СпрОб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
					СпрОб.GTIN=Стр_1.GTIN;;

				Конецесли;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Молоко;
				СпрОб.НаименованиеТовара=Стр_1.НаименованиеТовараНаЭтикетке;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=Стр_1.БрендТорговаяМарка;
				Если ЗначениеЗаполнено(Стр_1.КодВУчетнойСистеме) Тогда
					СпрОб.КодВУчетнойСистеме=Стр_1.КодВУчетнойСистеме;
				КонецЕсли;
				//Если ЗначениеЗаполнено(V_MANUFACTURER_CODE) Тогда
				////	СпрОб.МодельПроизводителяАртикул=V_MANUFACTURER_CODE;
				//КонецЕсли;
				

				ДопРеквизиты_Общиее=Спроб.ДополнительныйРеквизитОбщиеНК;
				Если ЗначениеЗаполненО(ДопРеквизиты_Общиее) тогда
					ДопРеквизиты_Общиее=ДопРеквизиты_Общиее.ПолучитьОбъект();
				Иначе
					ДопРеквизиты_Общиее=Справочники.ДополинтельныеРеквизиты_ДругиеНК_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				
				ДопРеквизиты=Спроб.ДополнительныйРеквизитМолоко;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_Молоко_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизиты.ТипПродукта=Стр_1.ТипПродукта;
				ДопРеквизиты.ТипПродуктаДругое=Стр_1.ТипПродуктаДругое;
				ДопРеквизиты.ТоварВесовой=Стр_1.ТоварВесовой;
				;
				ДопРеквизиты.ДиапазонВеса=Стр_1.ДиапазонВеса;
				ДопРеквизиты.ЗаявленныйОбъемВесНетто=Стр_1.ЗаявленныйОбъемВесНетто;
				ДопРеквизиты.ЕдиницаОбъема=Стр_1.ЕдиницаОбъема;
				ДопРеквизиты_Общиее.ТипУпаковки=Стр_1.ТипУпаковки;
				ДопРеквизиты_Общиее.МатериалУпаковки=Стр_1.МатериалУпаковки;
				ДопРеквизиты.ДополнительноеОписаниеУпаковки=Стр_1.ДополнительноеОписаниеУпаковки;
				ДопРеквизиты.ПроисхождениеСырья=Стр_1.ПроисхождениеСырья;
				ДопРеквизиты.Жирность=Стр_1.Жирность;
				ДопРеквизиты.ПродукцияДляДетскогоПитания =Стр_1.ПродукцияДляДетскогоПитания;
				ДопРеквизиты.Состав=Стр_1.Состав;
				СПрОб.СтранаПроизводства=Стр_1.СтранаПроизводства;
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				ДопРеквизиты.ИдентификаторТовараВФГИСМеркурий=Стр_1.ИдентификаторТовараВФГИСМеркурий;
				//Если Врег(V_WEB_90001813)="ДА" Тогда
					ДопРеквизиты.ПодлежитВетеринарномуКонтролю=Стр_1.ПодлежитВетеринарномуКонтролю;
				//Иначе
				//	ДопРеквизиты.ПодлежитВетеринарномуКонтролю=ложь;
				//КонецЕсли;
				Сертификат=Стр_1.Сертификат;
				ДатаВыдачи=Стр_1.Сертификат.ДатаНачалаДействия;
				 
				
				ДопРеквизиты.Записать();
				
				ДопРеквизиты_Общиее.Записать();
				Спроб.ДополнительныйРеквизитОбщиеНК=ДопРеквизиты_Общиее;
				Спроб.ДополнительныйРеквизитМолоко=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=Стр_1.КодТНВЭД
				;//КонецЕсли;
					//ДобавСтр.Сертификат=Сертификат.Ссылка;

					
					
		 
				
				СпрОб.Записать();
				
				
				
						РегСв=РегистрыСведений.ПодтверждающиеДокументы_ХамелеонЦРПТ.СоздатьНаборЗаписей();
						РегСв.Отбор.Продукция.Установить(СпрОб.Ссылка);
						РегСв.Отбор.Период.Установить(ДатаВыдачи);
						Добав=РегСв.Добавить();
						Добав.Период=ДатаВыдачи;
						Добав.Продукция=СпрОб.Ссылка;
						Добав.Документ=Сертификат;
						Регсв.Записать(Истина);
				
				
				
				
				Стр_1.Товар=СпрОб.Ссылка;
								Стр_1.GTIN=Стр_1.Товар.GTIN;

				МассивВернутьПродукцию.Добавить(СпрОб.Ссылка);
			
		Конеццикла;	
		
	ИначеЕсли НаимСайтВхода="Одежда" Тогда
		
		  Для Каждого Стр_1 Из Объект.ОдеждаGS Цикл
			Если ЗначениеЗаполнено(Стр_1.Товар) Тогда
				СпрОб=Стр_1.Товар.ПолучитьОбъект();
			Иначе
				СпрОб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				СпрОб.GTIN=Стр_1.GTIN;;
			Конецесли;
		
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Одежда;
				СпрОб.НаименованиеТовара=Стр_1.НаименованиеТовараНаЭтикетке;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=Стр_1.БрендТорговаяМарка;
				
				СпрОб.СтранаПроизводства=Стр_1.СтранаПроизводства;
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				
				СпрОб.ИННПроизводителяИмпортёра=Обработки._Запуск_ХамелеонЦРПТ.ВернутьПроизводителя(Стр_1.ИННПроизводства,стр_1.ИННПроизводителяСтрокой);
				
				
				Если ЗначениеЗаполнено(Стр_1.МодельПроизводителяАртикул) Тогда
					СпрОб.МодельПроизводителяАртикул=Стр_1.МодельПроизводителяАртикул;
				КонецЕсли;
				
				//спрОб.Записать();
				
				ДопРеквизиты=Спроб.ДополнительныеРеквизитОдежда;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_ПредметыОдежды_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизиты.ВидИзделия=Стр_1.ВидИзделия;
				ДопРеквизиты.ВидИзделияДругое=Стр_1.ВидИзделияДругое;
				ДопРеквизиты.РазмерИзделияГОСТ=Стр_1.РазмерИзделияГОСТ;
				ДопРеквизиты.РазмерИзделияГОСТДругое=Стр_1.РазмерИзделияГОСТДругое;
				ДопРеквизиты.Цвет=Стр_1.Цвет;
				ДопРеквизиты.Модель=Стр_1.Модель;
				ДопРеквизиты.ЦелевойПол=Стр_1.ЦелевойПол;
				
				ДопРеквизиты.Состав=Стр_1.СоставСырья;
				

					ДопРеквизиты.НомерРегламента007=Стр_1.НомерРегламента007;
				
					ДопРеквизиты.НомерРегламента017=Стр_1.НомерРегламента017;
				
					ДопРеквизиты.НомерРегламента019=Стр_1.НомерРегламента019;
				
					ДопРеквизиты.НомерРегламента005=Стр_1.НомерРегламента005;
				
					ДопРеквизиты.БезРегламента=Стр_1.БезРегламента;
				
				
				ДопРеквизиты.Записать();
				Спроб.ДополнительныеРеквизитОдежда=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=Стр_1.КодТНВЭД;
				;//КонецЕсли;
					//ДобавСтр.Сертификат=Сертификат.Ссылка;

		 
				
				СпрОб.Записать();
				Стр_1.Товар=СпрОб.Ссылка;
								Стр_1.GTIN=Стр_1.Товар.GTIN;

				МассивВернутьПродукцию.Добавить(СпрОб.Ссылка);
				
				
		Конеццикла;	
		
ИначеЕсли НаимСайтВхода="Белье" Тогда
		
	
		Для Каждого Стр_1 Из Объект.БельеGS Цикл
			Если ЗначениеЗаполнено(Стр_1.Товар) Тогда
				СпрОб=Стр_1.Товар.ПолучитьОбъект();
			Иначе
				СпрОб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				СпрОб.GTIN=Стр_1.GTIN;;
			Конецесли;
				//КонецЕслИ;
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Белье;
				СпрОб.НаименованиеТовара=Стр_1.НаименованиеТовараНаЭтикетке;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				Спроб.БрендТорговаяМарка=Стр_1.БрендТорговаяМарка;
				
				СпрОб.СтранаПроизводства=Стр_1.СтранаПроизводства;
				//Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",V_WEB_90001731);
				
				СпрОб.ИННПроизводителяИмпортёра=Обработки._Запуск_ХамелеонЦРПТ.ВернутьПроизводителя(Стр_1.ИННПроизводства,стр_1.ИННПроизводителяСтрокой);
				
								
				
				Если ЗначениеЗаполнено(стр_1.МодельПроизводителяАртикул) Тогда
					СпрОб.МодельПроизводителяАртикул=стр_1.МодельПроизводителяАртикул;
				КонецЕсли;
				

				//
				ДопРеквизиты=Спроб.ДополнительныйРеквизитБелье;
				Если ЗначениеЗаполненО(ДопРеквизиты) тогда
					ДопРеквизиты=ДопРеквизиты.ПолучитьОбъект();
				Иначе
					ДопРеквизиты=Справочники.ДополнительныеРеквизиты_Белье_ХамелеонЦРПТ.СоздатьЭлемент();
				КонецЕсли;
				ДопРеквизиты.ВидИзделия=Стр_1.ВидИзделия;
				ДопРеквизиты.ВидИзделияДругое=Стр_1.ВидИзделияДругое;
				ДопРеквизиты.РазмерИзделия=Стр_1.РазмерИзделия;
				ДопРеквизиты.РазмерШирина=Стр_1.РазмерШирина;
				ДопРеквизиты.РазмерДлина=Стр_1.РазмерДлина;
				ДопРеквизиты.Цвет=Стр_1.Цвет;
				ДопРеквизиты.Модель=Стр_1.Модель;
				ДопРеквизиты.ВидМатериала=Стр_1.ВидМатериала;
				ДопРеквизиты.ВидМатериалаДругое=Стр_1.ВидМатериалаДругое;
				ДопРеквизиты.Состав=Стр_1.Состав;
				ДопРеквизиты.ВозрастПотребителя=Стр_1.ВозрастПотребителя;
				Если Стр_1.Комплект=Истина Тогда
					ДопРеквизиты.Комплект=Истина;
					СпрОб.ТипУпаковки=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.НайтиПоНаименованию("BUNDLE");
					Если Не ЗначениеЗаполнено(СпрОб.ТипУпаковки) тогда
						ПолОб=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.СоздатьЭлемент();
						ПолОб.Наименование="BUNDLE";
						ПолОб.Записать();;
						Спроб.ТипУпаковки=ПолОб.Ссылка;
					КонецЕсли;
					
				Иначе
					ДопРеквизиты.Комплект=Ложь;
					СпрОб.ТипУпаковки=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.НайтиПоНаименованию("UNIT");
					Если Не ЗначениеЗаполнено(СпрОб.ТипУпаковки) тогда
						ПолОб=Справочники.ТипУпаковкиОбщий_ХамелеонЦРПТ.СоздатьЭлемент();
						ПолОб.Наименование="UNIT";
						ПолОб.Записать();;
						Спроб.ТипУпаковки=ПолОб.Ссылка;
					КонецЕсли;
				КонецЕсли;
				ДопРеквизиты.Комплектация=Стр_1.Комплектация;
				ДопРеквизиты.КоличествоЭлементовВнутри=Стр_1.КоличествоЭлементовВнутри;
				
					ДопРеквизиты.НомерРегламента007=Стр_1.НомерРегламента007;
					ДопРеквизиты.НомерРегламента017=Стр_1.НомерРегламента017;
				
					ДопРеквизиты.НомерРегламента005=Стр_1.НомерРегламента005;
					ДопРеквизиты.БезРегламента=Стр_1.БезРегламента;
				ДопРеквизиты.Записать();
				Спроб.ДополнительныйРеквизитБелье=ДопРеквизиты.Ссылка;
				
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=Стр_1.КодТНВЭД;
				//КонецЕсли;
				//	//ДобавСтр.Сертификат=Сертификат.Ссылка;

		 
				
				СпрОб.Записать();
				Стр_1.Товар=СпрОб.Ссылка;
				Стр_1.GTIN=Стр_1.Товар.GTIN;
				
					МассивВернутьПродукцию.Добавить(СпрОб.Ссылка);
					
		Конеццикла;	
		

		
	Иначе //ОБУВЬ
		
		Для Каждого Стр_1 Из Объект.GS1 Цикл
			Если ЗначениеЗаполнено(Стр_1.Товар) Тогда
				СпрОб=Стр_1.Товар.ПолучитьОбъект();
			Иначе
				СпрОб=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				СпрОб.GTIN=Стр_1.GTIN;;
			Конецесли;
			
				СпрОб.Тип=Перечисления.ТипПродукции_ХамелеонЦРПТ.Обувь;
				СпрОб.НаименованиеТовара=Стр_1.НаименованиеТовараНаЭтикетке;
				Спроб.БрендТорговаяМарка=Стр_1.БрендТорговаяМарка;
				СпрОб.ВидОбуви=стр_1.ВидОбуви;
				СпрОб.ИННПроизводителяИмпортёра=Стр_1.ИННПроизводителяИмпортёра;
				Если ЗначениеЗаполнено(Стр_1.КодВУчетнойСистеме) Тогда
					СпрОб.КодВУчетнойСистеме=Стр_1.КодВУчетнойСистеме;
				КонецЕсли;
				СпрОб.МатериалВерха=Стр_1.МатериалВерха;
				СпрОб.МатериалНиза=Стр_1.МатериалНиза;
				СпрОб.МатериалПодкладки=Стр_1.МатериалПодкладки;
				СпрОб.МодельПроизводителяАртикул=Стр_1.МодельПроизводителяАртикул;
				СпрОб.Наименование=Спроб.НаименованиеТовара;
				СпрОб.СтранаПроизводства=Стр_1.СтранаПроизводства;
				СпрОб.Цвет=Стр_1.Цвет;
				//Если Сред(СпрОб.КодТНВЭД.Код,1,4)<>Сред(КодТнВЭД,1,4) Тогда
					СпрОб.КодТНВЭД=Стр_1.КодТНВЭД
				;//КонецЕсли;
		
				СпрОб.Размер=Стр_1.РазмерВШтихмассовойСистеме;
				
				
			//Если ЗначениеЗаполнено(V_PROD_COVER_GTIN) тогда
				СпрОб.Записать();
				Стр_1.Товар=СпрОб.Ссылка;
				Стр_1.GTIN=Стр_1.Товар.GTIN;
				МассивВернутьПродукцию.Добавить(СпрОб.Ссылка);
			//КонецЕсли;	
			///	Если Докум.GS1.НайтиСтроки(Новый Структура("GTIN",V_PROD_COVER_GTIN)).Количество()=0 Тогда
					//	КонецЕсли;
		
		Конеццикла;	
		
			
			
		
	Конецесли;
	
	Возврат МассивВернутьПродукцию
Конецфункции

&НаКлиенте
Процедура ОтправитьНаМодерацию(Команда)  Экспорт
	// Вставить содержимое обработчика.
	
	МассивДляОтправкиНаМодерацию=Новый Массив;
	ОтправитьНаМодерациюДаннуюТабличнуюЧасть(МассивДляОтправкиНаМодерацию);
	Для Каждого Стр Из МассивДляОтправкиНаМодерацию Цикл
		Форм=ПолучитЬФорму("Справочник.Продукция_ХамелеонЦРПТ.Форма.ФормаЭлемента",Новый Структура("Ключ",
		Стр));
		Форм.ОтправитьНаМодерацию(Команда);
	Конеццикла;
	
	ЭтаФорма.Прочитать();;
КонецПроцедуры

&НаСервере
Процедура ОтправитьНаМодерациюДаннуюТабличнуюЧасть(МассивДляОтправкиНаМодерацию)
	Для Каждого Стр Из Объект.GS1 Цикл
		Если ЗначениеЗаполнено(Стр.Товар.GTIN) Тогда
			МассивДляОтправкиНаМодерацию.Добавить(Стр.Товар);
		КонецеслИ;
		
	Конеццикла;
	Для Каждого Стр Из Объект.ПитьеваяВодаGS Цикл
		Если ЗначениеЗаполнено(Стр.Товар.GTIN) Тогда
			МассивДляОтправкиНаМодерацию.Добавить(Стр.Товар);
		КонецеслИ;
		
	Конеццикла;
	Для Каждого Стр Из Объект.АльтернативныйТабакGS Цикл
		Если ЗначениеЗаполнено(Стр.Товар.GTIN) Тогда
			МассивДляОтправкиНаМодерацию.Добавить(Стр.Товар);
		КонецеслИ;
		
	Конеццикла;
	Для Каждого Стр Из Объект.БельеGS Цикл
		Если ЗначениеЗаполнено(Стр.Товар.GTIN) Тогда
			МассивДляОтправкиНаМодерацию.Добавить(Стр.Товар);
		КонецеслИ;
		
	Конеццикла;
	Для Каждого Стр Из Объект.ВелосипедыGS Цикл
		Если ЗначениеЗаполнено(Стр.Товар.GTIN) Тогда
			МассивДляОтправкиНаМодерацию.Добавить(Стр.Товар);
		КонецеслИ;
		
	Конеццикла;
	Для Каждого Стр Из Объект.КоляскиGS Цикл
		Если ЗначениеЗаполнено(Стр.Товар.GTIN) Тогда
			МассивДляОтправкиНаМодерацию.Добавить(Стр.Товар);
		КонецеслИ;
		
	Конеццикла;
	Для Каждого Стр Из Объект.МолокоGS Цикл
		Если ЗначениеЗаполнено(Стр.Товар.GTIN) Тогда
			МассивДляОтправкиНаМодерацию.Добавить(Стр.Товар);
		КонецеслИ;
		
	Конеццикла;
	Для Каждого Стр Из Объект.ОдеждаGS Цикл
		Если ЗначениеЗаполнено(Стр.Товар.GTIN) Тогда
			МассивДляОтправкиНаМодерацию.Добавить(Стр.Товар);
		КонецеслИ;
		
	Конеццикла;
	Для Каждого Стр Из Объект.ПарфюмGS Цикл
		Если ЗначениеЗаполнено(Стр.Товар.GTIN) Тогда
			МассивДляОтправкиНаМодерацию.Добавить(Стр.Товар);
		КонецеслИ;
		
	Конеццикла;
	Для Каждого Стр Из Объект.РамыGS Цикл
		Если ЗначениеЗаполнено(Стр.Товар.GTIN) Тогда
			МассивДляОтправкиНаМодерацию.Добавить(Стр.Товар);
		КонецеслИ;
		
	Конеццикла;
	Для Каждого Стр Из Объект.ФотоGS Цикл
		Если ЗначениеЗаполнено(Стр.Товар.GTIN) Тогда
			МассивДляОтправкиНаМодерацию.Добавить(Стр.Товар);
		КонецеслИ;
		
	Конеццикла;
	Для Каждого Стр Из Объект.Шины Цикл
		Если ЗначениеЗаполнено(Стр.Товар.GTIN) Тогда
			МассивДляОтправкиНаМодерацию.Добавить(Стр.Товар);
		КонецеслИ;
		
	Конеццикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьИОпубликоватьВНК(Команда)
	// Вставить содержимое обработчика.
	МассивДляОтправкиНаМодерацию=Новый Массив;
	ОтправитьНаМодерациюДаннуюТабличнуюЧасть(МассивДляОтправкиНаМодерацию);
	Для Каждого Стр Из МассивДляОтправкиНаМодерацию Цикл
		Форм=ПолучитЬФорму("Справочник.Продукция_ХамелеонЦРПТ.Форма.ФормаЭлемента",Новый Структура("Ключ",
		Стр));
		Форм.ПодписатьИОпубликовать(Команда);
	Конеццикла;
	
	ЭтаФорма.Прочитать();;
	
КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTIN8НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.ПитьеваяВодаGS.ТекущиеДанные.Товар),Элемент);

КонецПроцедуры

&НаКлиенте
Процедура Таблица1GTIN8Открытие(Элемент, СтандартнаяОбработка)
		СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Справочник.Продукция_ХамелеонЦРПТ.ФормаОбъекта",Новый Структура("Ключ",Элементы.ПитьеваяВодаGS.ТекущиеДанные.Товар));

КонецПроцедуры
