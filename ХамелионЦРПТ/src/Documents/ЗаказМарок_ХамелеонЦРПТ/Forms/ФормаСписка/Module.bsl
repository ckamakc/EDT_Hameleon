
&НаКлиенте
Процедура ОтправитьВЦРПТ(Команда)
		// Вставить содержимое обработчика.
	Для Каждого Стр Из Элементы.Список.ВыделенныеСтроки Цикл
		Форм=ПолучитьФорму("Документ.ЗаказМарок_ХамелеонЦРПТ.Форма.ФормаДокумента",Новый Структура(
		"Ключ",Стр));
		Форм.ОтправитьВЦРПТ(Команда);
	КонецциклА;
	Элементы.Список.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЗаявку(Команда)
		// Вставить содержимое обработчика.
	Для Каждого Стр Из Элементы.Список.ВыделенныеСтроки Цикл
		Форм=ПолучитьФорму("Документ.ЗаказМарок_ХамелеонЦРПТ.Форма.ФормаДокумента",Новый Структура(
		"Ключ",Стр));
		Форм.ОтправитьВЦРПТ(Команда);
	КонецциклА;
	Элементы.Список.Обновить();
	

КонецПроцедуры


&НаКлиенте
Процедура ПолучитьКМИзAPI(Команда)
				// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	Для Каждого Стр Из Элементы.Список.ВыделенныеСтроки Цикл
		Форм=ПолучитьФорму("Документ.ЗаказМарок_ХамелеонЦРПТ.Форма.ФормаДокумента",Новый Структура(
		"Ключ",Стр));
		Форм.ПолучитьКМИзAPI(Команда);
	КонецциклА;
	Элементы.Список.Обновить();
	

КонецПроцедуры


&НаКлиенте
Процедура СохранитьВtxtВыделенныеЗаказы(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	ДилогВыбора=Новый ДиалогВыбораФайла(РежимдиалогаВыбораФайла.ВыборКаталога);
	ДилогВыбора.Заголовок="Выберите каталог для сохранения файлов с номерами КМ";
	Если ДилогВыбора.Выбрать() Тогда
		Каталог=ДилогВыбора.Каталог;
		
		Для Каждого Стр_1 Из Элементы.Список.ВыделенныеСтроки Цикл
			
			Номер="";
			ДвоичнД=СохранитьФайлНаДИске(Стр_1,Номер);
			
			ИмяФ=Каталог+"\"+СокрЛП(Номер)+".txt";
			ДвоичнД.Записать(ИмяФ);
		Конеццикла;
		
		
	КонецЕсли;
	
	
отказ=Истина;
	
КонецПроцедуры


Функция СохранитьФайлНаДИске(Ссылка,Номер)
	
	ТекстД=Новый ТекстовыйДокумент;
	Номер=Ссылка.Номер;
	//ТекстД.ДобавитьСтроку(Ссылка.Номер);
	
	
//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НомераКМ_ХамелеонЦРПТ.НомерКМ КАК НомерКМ
		|ИЗ
		|	РегистрСведений.НомераКМ_ХамелеонЦРПТ КАК НомераКМ_ХамелеонЦРПТ
		|ГДЕ
		|	НомераКМ_ХамелеонЦРПТ.ДокументЗаказа = &ДокументЗаказа";
	
	Запрос.УстановитьПараметр("ДокументЗаказа", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДД = РезультатЗапроса.Выбрать();
	
	Если ДД.Количество()=0 Тогда
	
	
	
		Для Каждого ДД ИЗ Ссылка.КМИзAPI Цикл
			РР=РаскодироватьСтроку(ДД.НомерКМ,СпособКодированияСтроки.КодировкаURL);
			ТекстД.ДобавитьСтроку(РР);
		Конеццикла;
	Иначе
		Пока ДД.Следующий() Цикл
			РР=РаскодироватьСтроку(ДД.НомерКМ,СпособКодированияСтроки.КодировкаURL);
			ТекстД.ДобавитьСтроку(РР);
			
		КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	КонецеслИ;
	
	ИмяТекст=ПолучитьИмяВременногоФайла();
	ТекстД.Записать(ИмяТекст,КодировкаТекста.UTF8);
	ДвоичнД=Новый ДвоичныеДанные(ИмяТекст);
    Строка64=Base64Строка(ДвоичнД);
    Строка64=Прав(Строка64,СтрДлина(Строка64)-4);
    ДвоичнД=Base64Значение(Строка64);
	УдалитьФайлы(ИмяТекст);
	Возврат ДвоичнД 
	
КонецФункции


Функция ПолучитьИзПользователя() Экспорт
	Возврат Обработки._Запуск_ХамелеонЦРПТ.ПолучитьИзПользователя(Пользователь);
КонецФункции

&НаКлиенте
Процедура ОбновитьСтатусыЗаявок(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если не Форм.Открыта() Тогда
		Форм.Открыть();
		Этаформа.Активизировать();
	КонецеслИ;
	
	Пользователь=Форм.Пользователь;
	
	Thumbprint_1=ПолучитьИзПользователя();	

	АдресРаздробить=Thumbprint_1.АдресСУЗ;
		Адрес=Сред(АдресРаздробить,Найти(АдресРаздробить,"://")+3);
		Адрес=Сред(Адрес,1,Найти(Адрес,":")-1);
		Порт=Сред(АдресРаздробить,Найти(АдресРаздробить,"://")+3);
		Порт=Сред(Порт,Найти(Порт,":")+1);
		Попытка
			Порт=число(Порт);
		Исключение
			Порт=Неопределено;
		КонецПопытки;
		
	
			Если Найти(АдресРаздробить,"https")=1 Тогда
				Защищ=Новый ЗащищенноеСоединениеopenSSL();
			Иначе
				Защищ=Неопределено;
			КонецЕсли;
	
//	Если ОбработкаWEBНаСервере Тогда
		//ЗагрузканаСервереОтправитьЗаявка_Обувь(Thumbprint_1,Тело,Адрес,Порт,Защищ);
		
		
//	Иначе
		
		
//Thumbprint_1=ПараметрыДлякилента;
			
		//		АдресРаздробить=Thumbprint_1.АдресСУЗ;
		//		Адрес=Сред(АдресРаздробить,Найти(АдресРаздробить,"://")+3);
		//		Адрес=Сред(Адрес,1,Найти(Адрес,":")-1);
		//		Порт=Сред(АдресРаздробить,Найти(АдресРаздробить,"://")+3);
		//		Порт=Сред(Порт,Найти(Порт,":")+1);
		//		Попытка
		//			Порт=число(Порт);
		//		Исключение
		//			Порт=Неопределено;
		//		КонецПопытки;
		//		
		//Если Не ЗначениеЗаполнено(Адрес) Тогда
		//	
		//	ПоказатьПредупреждение(,"В пользователе не заполнен адрес СУЗ");
		//	Возврат;
		//	
		//КонецЕсли;
		//
		//	Если Найти(АдресРаздробить,"https")=1 Тогда
		//		Защищ=Новый ЗащищенноеСоединениеopenSSL();
		//	Иначе
		//		Защищ=Неопределено;
		//	КонецЕсли;
		//
			Срегистра="";
			СерийныйНомер="";
	  	Куки=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ПолучитькукиВСУЗ(Thumbprint_1,,Срегистра,СерийныйНомер);
			
		Если Не ЗначениеЗаполнено(Куки) 
			ИЛИ Не ЗначениеЗаполнено(Срегистра) ИЛИ Не ЗначениеЗаполнено(СерийныйНомер) 
			Тогда
			
		//	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаписатьТокенВРегистр(Thumbprint_1.Thumbprint_1,"");
		//	Если УжеОтправили<>Истина Тогда
		//		 ПолучитьТокенИИД(Команда,Истина)
		//	КонецЕсли;
			Возврат;
			
		КонецЕсли;

		


			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Адрес,Порт,,,Прокси,Thumbprint_1.Таймаут,Защищ);
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Адрес,Порт,,,,Thumbprint_1.Таймаут,Защищ);
			КонецЕсли;

			
			
			
			
			
			HTTPЗапрос = Новый HTTPЗапрос(); //"static/1555676332000/js/main/preload.js");
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
		HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
		
			
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
		Текст1=Ответ.ПолучитьТелоКакСтроку();
	
			Текст=Новый ТекстовыйДОкумент;
			Текст.УстановитьТекст(Текст1);
			Для сч=1 По Текст.КоличествоСтрок() Цикл
				ПолучСтр=Текст.ПолучитьСтроку(сч);
				Если Найти(ПолучСтр,"preload.js")>0 Тогда
					Адрес_1=Сред(получСтр,Найти(получСтр,"src=""/")+6);
					Адрес_1=Сред(Адрес_1,1,Найти(Адрес_1,""">")-1);
					Прервать;
				КонецЕсли;
			Конеццикла;
			
			Если Адрес_1=Неопределено Тогда
				
					HTTPЗапрос = Новый HTTPЗапрос("webapi/v1/orders?limit=1000&skip=0"); //"static/1555676332000/js/main/preload.js");
					HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
				HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
				
					
				Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
				Текст1=Ответ.ПолучитьТелоКакСтроку();
				
				
		Иначе
				HTTPЗапрос = Новый HTTPЗапрос(Адрес_1); //"static/1555676332000/js/main/preload.js");
			
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
			
			Токен=Ответ.ПолучитьТелоКакСтроку();
			Токен=Сред(Токен,Найти(Токен,"'clientToken', """)+16);
			Токен=Сред(Токен,1,Найти(Токен,"""")-1);
			
	
		//businessOrders/list?skip=0&limit=10			
			
				HTTPЗапрос=Новый HTTPЗапрос("businessOrders/list?skip=0&limit=100");
	//	HTTPЗапрос=Новый HTTPЗапрос("api/orders");
		
	HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	Если НЕ НеИспользоватьТокен Тогда
		HTTPЗапрос.Заголовки.Вставить("clientToken",Токен);
	КонецЕсли;
	HTTPЗапрос.Заголовки.Вставить("TE","Trailers");
	HTTPЗапрос.Заголовки.Вставить("User-Agent","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0");
	HTTPЗапрос.Заголовки.Вставить("X-Requested-With","XMLHttpRequest");
	HTTPЗапрос.Заголовки.Вставить("Connection","keep-alive");
	

	

	Адрес11=Адрес;
	Если ЗначениеЗаполнено(Порт) Тогда
		Адрес11=Адрес11+":"+Формат(Порт,"ЧГ=");
	КонецЕслИ;
	HTTPЗапрос.Заголовки.Вставить("Host",Адрес11);
	//HTTPЗапрос.УстановитьТелоИзСтроки(Текст_Подкл);

	Ответ=HTTPСервисЗапрос.Получить(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	
	КонецЕсли;
	NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);	
	ЗаписатьСтатусВДокументЗаявки(NNN);
	
	//КонецЕсли;
		
	
	
	Элементы.Список.Обновить();;
	
	
КонецПроцедуры

Процедура ЗаписатьСтатусВДокументЗаявки(NNN)
	Попытка
		
		Для Каждого Стр_112 Из NNN.orderSummaryInfos Цикл
			ДокумЗаяв=Документы.ЗаказМарок_ХамелеонЦРПТ.НайтиПоРеквизиту("_Order_ID",Стр_112.orderId);
			Если ЗначениеЗаполнено(ДокумЗаяв) Тогда
				Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.ВПроцессе;
				Если Стр_112.orderStatus="CREATED" Тогда
					Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.Отправлен;
				ИначеЕсли Стр_112.orderStatus="READY" Тогда
					Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.ПринятИПереданВПроизводство;
				КонецЕсли;
				
				ДДПр=ДокумЗаяв.ПолучитьОбъект(); 
				ДДПр.Статус=Статус;	
				ДДПр.Записать();
			КонецЕсли;
			
		Конеццикла;
		
	Исключение
	КонецПопытки;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Настройки = РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить();
	НеИспользоватьТокен=Настройки.НеИспользоватьТокен;

КонецПроцедуры

