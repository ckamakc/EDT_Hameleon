&НаКлиенте
Перем ДанныеИзПользователя;


&НаКлиенте
Процедура ОткрытьВнешниеОбработки(Команда)
	// Вставить содержимое обработчика.
	ОткрытьФорму("Справочник.ВнешниеОбработки_ХамелеонЦРПТ.Форма.ФормаСписка",
	Новый структура("Тип",
		ТипДокумента()));
КонецПроцедуры


Функция ТипДокумента()
	Возврат Метаданные.НайтиПоТипу(ТипЗнч(Объект.Ссылка)).ПолноеИмя()
КонецФункции

Процедура ОбновитьВнешниеКнопки()
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВнешниеОбработки_ХамелеонЦРПТ.ИмяВнешнейОБработки,
		|	ВнешниеОбработки_ХамелеонЦРПТ.НаименованиеКнопки,
		|	ВнешниеОбработки_ХамелеонЦРПТ.Код
		|ИЗ
		|	Справочник.ВнешниеОбработки_ХамелеонЦРПТ КАК ВнешниеОбработки_ХамелеонЦРПТ
		|ГДЕ
		|	ВнешниеОбработки_ХамелеонЦРПТ.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Метаданные.НайтиПоТипу(ТипЗнч(Объект.Ссылка)).ПолноеИмя());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		ИмяКоманды="Команда"+ВыборкаДетальныеЗаписи.Код;
		Попытка
		КомандаФормы = Команды.Добавить(ИмяКоманды);
		КомандаФормы.Действие = "Подключаемый_ВыполнитьКомандуВнешняя";
		КомандаФормы.Заголовок = ВыборкаДетальныеЗаписи.ИмяВнешнейОБработки;
		КомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
		КомандаФормы.Отображение = ОтображениеКнопки.Текст;
		
		//ОписаниеКомандыПечати.ИмяКомандыНаФорме = ИмяКоманды;
		
		НовыйЭлемент = Элементы.Добавить("ГруппаКнопокВнешняя" + ИмяКоманды, Тип("КнопкаФормы"), Элементы.ГруппаКнопокВнешняя);
		НовыйЭлемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		НовыйЭлемент.Заголовок=ВыборкаДетальныеЗаписи.НаименованиеКнопки;
		НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	Исключение
		КонецПопытки;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры


&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуВнешняя(Команда)
	
	// Вставить содержимое обработчика.	// Вставить содержимое обработчика.
	Попытка
		
		ВернДв=ВернутьИмяФайла(Команда.Имя);
		Если Тип("ДвоичныеДанные")=ТипЗнч(ВернДв) Тогда
			ДвоичныеДанные=ВернДв;
		Иначе
			ДвоичныеДанные=Новый ДвоичныеДанные(ВернДв);
		Конецесли;
		ОбработкаИмя=ПолучитьИмяВнешней(Двоичныеданные);
		ОткрытьФорму("ВнешняяОбработка."+ОбработкаИмя+".Форма",,ЭтаФорма);
	Исключение
			Попытка
#Если ТолстыйКлиентОбычноеПриложение  Тогда
		ВернДв=ВернутьИмяФайла(Команда.Имя);
		Если Тип("ДвоичныеДанные")=ТипЗнч(ВернДв) Тогда
			//ДвоичныеДанные=ВернДв;
			ДвоичныеДанные=ПолучитьИмяВременногоФайла();
			ВернДв.Записать(ДвоичныеДанные);
			
		Иначе
			ДвоичныеДанные=ВернДв;
		Конецесли;
				ВернутьВн(ДвоичныеДанные);
				Если Тип("ДвоичныеДанные")=ТипЗнч(ВернДв) Тогда
					УдалитьФайлы(ДвоичныеДанные);
				КонецЕсли;
#Иначе
				
			ПоказатьПредупреждение(,"Не удалось выполнить внешнюю обработку");
#КонецЕсли
			Исключение
				ПоказатьПредупреждение(,"Не удалось выполнить внешнюю обработку");
			КонецПопытки;
		//	
	//	
	КонецПопытки;

	//УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры


#Если ТолстыйКлиентОбычноеПриложение  Тогда
&НаКлиенте
Процедура ВернутьВн(ДвоичныеДанные)
	//ИмяВременФ=ПолучитьИмяВременногоФайла();
	//ДвоичныеДанные.Записать(ИмяВременФ);
	ВнешняяОбработка=ВнешниеОбработки.Создать(ДвоичныеДанные);
	Фоорма=ВнешняяОбработка.ПолучитьФорму(,ЭтаФорма);
	Попытка
		Фоорма.УФ=ЭтаФорма;
	Исключение
	КонецПопытки;
	Фоорма.Открыть();
Конецпроцедуры      	
#КонецЕсли



Функция ВернутьИмяФайла(Команда)
//	Если РегистрыСведений.НастройкиПрограммыЦРПТ.Получить().ЗагружатьВнешниеОбработкиИзХранилища Тогда
		Возврат Справочники.ВнешниеОбработки_ХамелеонЦРПТ.НайтиПоКоду(Сред(Команда,8)).Хранилище.Получить();
//	Иначе
//		СпрВн=Справочники.ВнешниеОбработки_ХамелеонЦРПТ.НайтиПоКоду(Сред(Команда,8));
//	Конецесли;
	
//	Возврат СпрВн.ИмяВнешнейОБработки
	//НаимСправочника=Метаданные.НайтиПоТипу(ТипЗнч(Объект.Ссылка)).ПолноеИмя();
	//Спр=Справочники.ВнешниеОбработки_ХамелеонЦРПТ.НайтиПоНаименованию(НаимСправочника,Истина);
	//Если Спр<>Справочники.ВнешниеОбработки_ХамелеонЦРПТ.ПустаяСсылка() Тогда
	//	Возврат Спр.ИмяВнешнейОБработки;
	//Конецесли;
	
КонецФункции

Функция ПолучитьИмяВнешней(ИмяФайла)
    АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ИмяФайла);
    ИмяОбр = ВнешниеОбработки.Подключить(АдресВоВременномХранилище,,Ложь);
    Возврат ИмяОбр;
КонецФункции



&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	ДанныеИзПользователя=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьИзПользователя(Объект.ТекущийПользователь);	
	Если	Не ЗначениеЗаполнено(Объект.ТекущийПользователь) Тогда
		Обр=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
		Объект.ТекущийПользователь=Обр.Пользователь;
		
	Конецесли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихКодАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	Если СтрДлина(Текст)>=18 Тогда
		       СтандартнаяОбработка=Ложь;
			   ШтрихКод=Текст;
	ЗаполнитьИнфуПоШтриху(ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ВернутьИнформациюОКМ(ШтрихКод,ДанныеИзПользователя));
	ПодключитьОбработчикОЖидания("аа",0.1,Истина);
	//ПересчетСуммыДокмента()
			  КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихКодПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	штрихКод=СтрЗаменить(ШтрихКод,Символ(29),"<GS1>");
	//ЗаполнитьИнфуПоШтриху();
	ЗаполнитьИнфуПоШтриху(ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ВернутьИнформациюОКМ(ШтрихКод,ДанныеИзПользователя));
	ПодключитьОбработчикОЖидания("аа",0.1,Истина);
	//sПересчетСуммыДокмента();
КонецПроцедуры

&НаКлиенте
Процедура аа() Экспорт
	ШтрихКод="";
	ЭтаФорма.ТекущийЭлемент=Элементы.ШтрихКод;
КонецПроцедуры

	
Процедура ЗаполнитьИнфуПоШтриху(ТипУпаковки)
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	ДлинныйШтрихкод=Штрихкод;
	
	Если СтрДлина(Штрихкод)=20 Тогда
		Штрихкод=Сред(Штрихкод,3);
	КонецЕсли;
	
	
	Если ТипУпаковки=ЛОжь 
		ИЛИ
		Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Табак"
		ИЛИ Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Альтернативный табак"
		Тогда
		
Если Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование<>"Табак"
		И Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование<>"Альтернативный табак" ТОгда 
	ШтрихКод_1=(ШтрихКод);
	
	//ШтрихКод_1=КодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	//штрихКод=СтрЗаменить(ШтрихКод_1,"%1D","");
	ШтрихКод=Сред(ШтрихКод,1,38);
	//штрихКод_1=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
					Если Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фото" Тогда
								ШтрихКод=Сред(ШтрихКод,1,38);
		ИначеЕсли Сред(штрихКод_1,32,3)<>"240" Тогда
								ШтрихКод=Сред(ШтрихКод,1,31);
								//ШтрихКод=Сред(штрихКод_1,1,Найти(штрихКод_1,"%1D")-1);
								//ШтрихКод=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
							Иначе
								
								           ШтрихКод=штрихКод_1;
							
							КонецЕсли;
							
							
							Если Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фармацевтика" Тогда
		Если Сред(ШтрихКод,1,2)="01" Тогда
			ШтрихКод=Сред(ШтрихКод,3,14)+Сред(ШтрихКод,19);
		КонецЕсли;
								
							КОнецЕсли;
				КонецЕсли;
							
	Если СтрДлина(ШтрихКод)>50 Тогда
		ШтрихКод=Сред(ШтрихКод,1,35);
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Альтернативный табак" Тогда
		Если СтрДлина(ШтрихКод)<>18 И Сред(ШтрихКод,1,2)="01" Тогда
			
ШтрихКод=Сред(ШтрихКод,1,25);
Иначе
ШтрихКод=Сред(ШтрихКод,1,21);

		КонецЕслИ;
		
		
	КонецЕсли;
	КонецЕсли;		
	
	Если Объект.НомераКМ.НайтиСтроки(Новый Структура("КороткийНомер",ШтрихКод)).Количество()=0 Тогда
		добав=ОБъект.НомераКМ.Добавить();
		
		ДлинныйШтрихкод=СтрЗаменить(ДлинныйШтрихкод,"<GS1>",Символ(29));
		
		Добав.НомерКМ=КодироватьСтроку(ДлинныйШтрихкод,СпособКодированияСтроки.КодировкаURL);
		Добав.КороткийНомер=ШтрихКод;
		
	КонецЕсли;
	
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецПроцедуры

&НаСервереБезКонтекста
Функция дополнитьСтроку(Ср)
	ВОзврат Обработки._Запуск_ХамелеонЦРПТ.ДополнитьСтроку_11(Ср,14,"0");
	
Конецфункции

&НаКлиенте
Процедура ПолучитьСтатусыПоКМ(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	
	Thumbprint_1=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьИзПользователя(Объект.ТекущийПользователь);	
	
	Если Thumbprint_1.НаименованиеСтенда="Фармацевтика" Тогда
				
					Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
						Прокси=Новый ИнтернетПрокси;
						Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
					
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
					Иначе
			HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
		КонецЕсли;
		
		
		

				СРегистра="";///Thumbprint_1.Thumbprint_1;
				Если Не ЗначениеЗаполнено(СРегистра) тогда
					Попытка
						СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена_ЛДМП(Thumbprint_1);	
					исключение
						СРегистра=Неопределено;
					КонецПопытки;
				КонецЕсли;
				
				Для каждого Стр_1 Из Объект.НомераКМ Цикл
					Если ЗначениеЗаполнено(Стр_1.КороткийНомер) Тогда
						НомерКМ=Стр_1.КороткийНомер;
					Иначе
						НомерКМ=Стр_1.НомерКМ;
					КонецЕсли;
							Чтен=Новый  ЗаписьJSON;
										Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
										Чтен.ЗаписатьНачалоОбъекта();
										Чтен.ЗаписатьИмяСвойства("start_from");	
										Чтен.ЗаписатьЗначение(0);
										Чтен.ЗаписатьИмяСвойства("count");
										Чтен.ЗаписатьЗначение(20);
										Чтен.ЗаписатьИмяСвойства("filter");
										Чтен.ЗаписатьНачалоОбъекта();
										
										Если СтрДлина(НомерКМ)=18 Тогда
											Чтен.ЗаписатьИмяСвойства("pack3_id");
										Иначе
											Если Сред(НомерКМ,1,2)="01" Тогда
													НомерКМ=Сред(НомерКМ,3,14)+Сред(НомерКМ,19);
		
											Конецесли;
											
											Чтен.ЗаписатьИмяСвойства("sgtin");
										Конецесли;
										Чтен.ЗаписатьЗначение(НомерКМ);
										
										
													       Чтен.ЗаписатьКонецОбъекта();
										
										//Чтен.ЗаписатьЗначение("{}");
													       Чтен.ЗаписатьКонецОбъекта();
													
													Тело=Чтен.Закрыть();//"{""start_from"":0,""count"":20,""filter"":{}}";
										Тело=СтрЗаменить(Тело,Символы.ПС,"");
										Тело=СтрЗаменить(Тело,Символы.ВК,"");
										
						
						
								HTTPЗапрос=Новый HTTPЗапрос("api/v1/reestr/sgtin/filter");
								          HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.ANSI);
								
												//	Иначе
												//	HTTPЗапрос=Новый HTTPЗапрос("documents/"+Стр.document_id+"");
											/////			
													Куки="certSerial="+Thumbprint_1.Thumbprint_1+";lk-auth-token="+Срегистра ;
														
														HTTPЗапрос.Заголовки.Вставить("Cookie",Куки);
														
												//	КонецЕсли;
											HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
											HTTPЗапрос.Заголовки.Вставить("Authorization","token "+СРегистра);
											HTTPЗапрос.Заголовки.Вставить("Content-Length",Формат(СтрДлина(Тело),"ЧГ="));
											//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
											///Константин           
											//HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
											Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
											Текст1=Ответ.ПолучитьТелоКакСтроку();
											
					             NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);
								 entries=Неопределено;
								 Если NNN.Свойство("entries",entries) Тогда
									 
									 	Для Каждого Стр_С Из entries Цикл
				                            Стр_1.Статус=Стр_С.status;
											//Если Стр_С_С["ownerInn"]<>Thumbprint_1.ИНН Тогда
											//	МассивСтруктур.Добавить(Новый Структура("cis,статус",НомерКМ,"КМ принадлежит "+Стр_С_С["ownerInn"]+", "+
											//	Стр_С_С["ownerName"]));
											//Если Стр_С.status="in_realization" Тогда
											//	МассивСтруктур.Добавить(Новый Структура("cis,статус",БылНомерКМ,"Ожидает ответа от клиента по документу "));
											//	//Стр_С_С["lastDocId"]));
											////ИначеЕсли ЗначениеЗаполнено(Стр_С_С["agentInn"]) И Стр_С_С["agentInn"]<>Thumbprint_1.ИНН Тогда
											//	
											////	МассивСтруктур.Добавить(Новый Структура("cis,статус",НомерКМ,"КМ передан на комиссию "+Стр_С_С["agentInn"]+", "+
											////	Стр_С_С["agentName"]));
											//Иначе
											//	МассивСтруктур.Добавить(Новый Структура("cis,статус",БылНомерКМ,Стр_С.status));
											//КонецЕсли;
											
											//МассивСтруктур.Добавить(Новый Структура("cis,статус",Стр_С.cisInfo.requestedCis,Стр_С.cisInfo.status
										Конеццикла;

									 
				                 КонецЕсли;
											
						Конеццикла;
Возврат;				
КонецЕсли;
	
	
	СРегистра=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);	

	Для каждого Стр_1 Из Объект.НомераКМ Цикл
		    Стр_1.Статус=Неопределено;
	   НаСервере=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ОбработкаWEBНаСервере();
				Если ЗначениеЗаполнено(Стр_1.КороткийНомер) Тогда
						НомерКМ=Стр_1.КороткийНомер;
					Иначе
						НомерКМ=Стр_1.НомерКМ;
					КонецЕсли;
		
	   Если НаСервере Тогда
		 Ответ=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучениеУпаковок(Thumbprint_1,СРегистра,Стр_1.НомерКМ);  
		Иначе
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
			
			Если Thumbprint_1.НаименованиеСтенда="Табак" 
				ИЛИ Thumbprint_1.НаименованиеСтенда="Альтернативный табак"  Тогда
				
				
				
		NN=ВернутьТелоЗапросаПодключение(НомерКМ);
						
	
			HTTPЗапрос=Новый HTTPЗапрос("private-office-api/private/v2/cis/status");
			//private-office-api/private/v2/cis/"+КодМаркировки+"/mrp"
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
			//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
			///Константин   
			HTTPЗапрос.УстановитьТелоИзСтроки(NN,КодировкаТекста.UTF8);
			Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
Иначе
	
	ММ= НомерКМ
	;
	
	//HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/identifytools/"+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(ММ)+"?cis="+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(ММ));
	//HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	//HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	
	Что=Thumbprint_1.Что;
	
				МассивКМ=Новый Массив;
			МассивКМ.Добавить(ММ);
					//HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/marked_products/info?cis="+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(Стр_11.Марка)+"&pg="+что);;
				Тело=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьтелоПоcis(МассивКМ);
				//HTTPЗапрос=Новый HTTPЗапрос("api/v4/facade/cis/cis_list?pg="+Что);
			HTTPЗапрос=Новый HTTPЗапрос("api/v4/facade/cis/cis_list?childrenPaging=true&childrenLimit=0&pg="+Что);
				
						
	//HTTPЗапрос=Новый HTTPЗапрос("api/v3/facade/identifytools/"+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(ММ)+"?cis="+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(ММ)+"&pg="+что);
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
				#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли

	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);

//	Ответ=HTTPСервисЗапрос.Получить (HTTPЗапрос);
КонецЕсли;
КонецЕсли;

		Если НаСервере Тогда
			Текст1=Ответ.ПолучитьТелоКакСтроку;
			
		Иначе
			Текст1=Ответ.ПолучитьТелоКакСтроку();
		КонецЕсли;	
		
		Если Thumbprint_1.НаименованиеСтенда="Табак"
			ИЛИ Thumbprint_1.НаименованиеСтенда="Альтернативный табак"
			Тогда
		
			Попытка
		//ЧтениеJSON = Новый ЧтениеJSON;
		//	ЧтениеJSON.УстановитьСтроку(Текст1);
			NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
			Стр_1.Статус=NNN[0].status;
			
			
		Исключение
			Сообщить(ОписаниеОшибки());
			Сообщить(Текст1);
			КонецПопытки;
	
Иначе
//ЧтениеJSON = Новый ЧтениеJSON;
//	ЧтениеJSON.УстановитьСтроку(Текст1);
Попытка
	
		Стр_1.ВладелецИНН="";
				Стр_1.ВладелецНаименование="";
				
				
				//Если Стр_С_С["ownerInn"]<>Thumbprint_1.ИНН Тогда
				//	МассивСтруктур.Добавить(Новый Структура("cis,статус",НомерКМ,"КМ принадлежит "+Стр_С_С["ownerInn"]+", "+
				//	Стр_С_С["ownerName"]));
				//ИначеЕсли Стр_С_С["statusEx"]="WAIT_SHIPMENT" Тогда
				 Стр_1.РасширенныйСтатус="";
				 
				 Стр_1.GUIDПоследнегоДокумента="";
				//	МассивСтруктур.Добавить(Новый Структура("cis,статус",НомерКМ,"Ожидает ответа от клиента по документу "+
				//	Стр_С_С["lastDocId"]));
				//ИначеЕсли ЗначениеЗаполнено(Стр_С_С["agentInn"]) И Стр_С_С["agentInn"]<>Thumbprint_1.ИНН Тогда
				
				Стр_1.АгентИНН=""
				;
				Стр_1.АгентНаименование="";
				
				//	МассивСтруктур.Добавить(Новый Структура("cis,статус",НомерКМ,"КМ передан на комиссию "+Стр_С_С["agentInn"]+", "+
				//	Стр_С_С["agentName"]));
				//Иначе
					//МассивСтруктур.Добавить(Новый Структура("cis,статус",НомерКМ,Стр_С_С["status"]));
				//КонецЕсли;
				
					Стр_1.Статус="";

	Если Ответ.КодСостояния=200 Тогда
			NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON_Соответствие(Ответ.ПолучитьТелоКакСтроку());//ПрочитатьJSON(ЧтениеJSON);
//	NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
//	Стр_1.Статус=NNN.status;

			Для Каждого Стр_С Из NNN Цикл
				
				//Стр_С_С=Стр_С["cisInfo"];
				Стр_1.ВладелецИНН=Стр_С.Значение["ownerInn"];
				Стр_1.ВладелецНаименование=Стр_С.Значение["ownerName"];
				
				
				//Если Стр_С_С["ownerInn"]<>Thumbprint_1.ИНН Тогда
				//	МассивСтруктур.Добавить(Новый Структура("cis,статус",НомерКМ,"КМ принадлежит "+Стр_С_С["ownerInn"]+", "+
				//	Стр_С_С["ownerName"]));
				//ИначеЕсли Стр_С_С["statusEx"]="WAIT_SHIPMENT" Тогда
				 Стр_1.РасширенныйСтатус=Стр_С.Значение["statusEx"];
				 
				 Стр_1.GUIDПоследнегоДокумента=Стр_С.Значение["lastDocId"];
				//	МассивСтруктур.Добавить(Новый Структура("cis,статус",НомерКМ,"Ожидает ответа от клиента по документу "+
				//	Стр_С_С["lastDocId"]));
				//ИначеЕсли ЗначениеЗаполнено(Стр_С_С["agentInn"]) И Стр_С_С["agentInn"]<>Thumbprint_1.ИНН Тогда
				
				Стр_1.АгентИНН=Стр_С.Значение["agentInn"]
				;
				Стр_1.АгентНаименование=Стр_С.Значение["agentName"];
				
				//	МассивСтруктур.Добавить(Новый Структура("cis,статус",НомерКМ,"КМ передан на комиссию "+Стр_С_С["agentInn"]+", "+
				//	Стр_С_С["agentName"]));
				//Иначе
					//МассивСтруктур.Добавить(Новый Структура("cis,статус",НомерКМ,Стр_С_С["status"]));
				//КонецЕсли;
				
					Стр_1.Статус=Стр_С.Значение["status"];
				//МассивСтруктур.Добавить(Новый Структура("cis,статус",Стр_С.cisInfo.requestedCis,Стр_С.cisInfo.status
			Конеццикла;
			
			
	//HTTPЗапрос=Новый HTTPЗапрос("api/v4/facade/identifytools/"+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(ММ)+"?cis="+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(ММ)+"&pg="+что);
			HTTPЗапрос=Новый HTTPЗапрос("api/v4/facade/identifytools/info?cis="+ОбщийМодуль_НаСервере_ХамелеонЦРПТ.КодСтр(ММ)+"&pg="+что);;
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	
	Ответ=HTTPСервисЗапрос.Получить (HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	Стр_1.ТипЭмиссии="Не известен";
	Попытка
		NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
		Стр_1.ТипЭмиссии=NNN.emissionType;
	Исключение
	КонецПопытки;
	
Иначе
		
					Стр_1.Статус=Ответ.КодСостояния;
					Если   Ответ.КодСостояния=404 Тогда
						Стр_1.Статус=Стр_1.Статус+" не найдено в базе"
				КонецЕсли;
		 Сообщить(Текст1);
	КонецЕсли;
	

	
Исключение
	Сообщить(ОписаниеОшибки());
	Сообщить(Текст1);
КонецПопытки;
КонецЕсли;



	Конеццикла;
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ВернутьТелоЗапросаПодключение(cis)
	МассивКодо=Новый Массив;
	          МассивКодо.Добавить(cis);
			ТелоЗапроса = Новый Структура;
			ТелоЗапроса.Вставить("ids", МассивКодо);
			ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, "  ");
			
			ЗаписьJSON = Новый ЗаписьJSON();
			ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
			
			ЗаписатьJSON(ЗаписьJSON, ТелоЗапроса);
			
			Возврат ЗаписьJSON.Закрыть();

КонецФункции


Процедура ОбновитьКороткий()
	
	Для Каждого Стр Из Объект.НомераКМ Цикл
		Если ЗначениеЗаполнено(Стр.КороткийНомер) тогда
			Продолжить;
		Конецесли;
			
		
		
		ШтрихКод=Стр.НомерКМ;
Если СтрДлина(ШтрихКод)>30
		ИЛИ
		Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Табак"
		ИЛИ Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Альтернативный табак"
		Тогда
		
Если Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование<>"Табак"
		И Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование<>"Альтернативный табак" ТОгда 
	ШтрихКод_1=(ШтрихКод);
	
	//ШтрихКод_1=КодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	//штрихКод=СтрЗаменить(ШтрихКод_1,"%1D","");
	ШтрихКод=Сред(ШтрихКод,1,38);
	//штрихКод_1=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
					Если Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фото" Тогда
								ШтрихКод=Сред(ШтрихКод,1,38);
		ИначеЕсли Сред(штрихКод_1,32,3)<>"240" Тогда
								ШтрихКод=Сред(ШтрихКод,1,31);
								//ШтрихКод=Сред(штрихКод_1,1,Найти(штрихКод_1,"%1D")-1);
								//ШтрихКод=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
							Иначе
								
								           ШтрихКод=штрихКод_1;
							
							КонецЕсли;
							
							
							Если Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фармацевтика" Тогда
		Если Сред(ШтрихКод,1,2)="01" Тогда
			ШтрихКод=Сред(ШтрихКод,3,14)+Сред(ШтрихКод,19);
		КонецЕсли;
								
							КОнецЕсли;
				КонецЕсли;
							
	Если СтрДлина(ШтрихКод)>50 Тогда
		ШтрихКод=Сред(ШтрихКод,1,35);
	ИначеЕсли Объект.ТекущийПользователь.СайтыВходаВСистему.Наименование="Альтернативный табак" Тогда
		Если СтрДлина(ШтрихКод)<>18 И Сред(ШтрихКод,1,2)="01" Тогда
			
ШтрихКод=Сред(ШтрихКод,1,25);
Иначе
ШтрихКод=Сред(ШтрихКод,1,21);

		КонецЕслИ;
		
		
	КонецЕсли;
КонецЕсли;

	Стр.КороткийНомер=Штрихкод;
	Конеццикла;
КонецПроцедуры
&НаКлиенте
Процедура ПоказатьИнформацию(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	//Обр=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	//Если Обр.Организации.Количество()=0 Тогда
	//	Обр.ПодключитьсяКЦРПТ(Команда,Ложь);
	//КонецЕсли;
	//Если Обр.Организации.Количество()=0 Тогда
	//	Возврат;
	//КонецЕсли;
	//		
	
	//Если Элементы.СерийныеНомера.ТекущиеДанные<>Неопределено Тогда
	ОбновитьКороткий();
	МассивCis=Новый Массив;
	
	ДеревоКМ.ПолучитьЭлементы().Очистить();
	
	Для Каждого Стр_ иЗ ОБъект.НомераКМ Цикл
		
		
		Если ЗначениеЗАполнено(Стр_.КороткийНомер) Тогда
			МассивCis.Добавить(Стр_.КороткийНомер);
		Иначе
			МассивCis.Добавить(Стр_.НомерКМ);
		КонецЕсли;
	Конеццикла;
	ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ПолучитьИнформациюПоКМ_Массив(ДеревоКМ,МассивCis,Объект.ТекущийПользователь);
	
	
	
	Элементы.Страницы.ТекущаяСтраница=Элементы.ИнформацияОКМ;
	//КонецЕсли;
	
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	ЧислоПараллельныхПотоков = РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().КоличествоЯдерДляГенерацииDataMatrix; 
		ОбновитьВнешниеКнопки();
	СистемнаяИнформация = Новый СистемнаяИнформация;
	
	ВерсияПравильная=Сред(СистемнаяИнформация.ВерсияПриложения,1,6)<>"8.3.6." 
			И Сред(СистемнаяИнформация.ВерсияПриложения,1,6)<>"8.3.7."
			И Сред(СистемнаяИнформация.ВерсияПриложения,1,6)<>"8.3.8."
	 		И Сред(СистемнаяИнформация.ВерсияПриложения,1,6)<>"8.3.9.";

	МодульПриСозданииДокументов_ХамелеонЦРПТ.ПроверкаНомеровКМ_ХамелеонЦРПТ_ПриСозданииНаСервере(ЭтаФорма,Отказ,СтандартнаяОбработка);
КонецПроцедуры


&НаКлиенте
Процедура Команда1(Команда) Экспорт
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполненО(ЧислоПараллельныхПотоков) тогда
			Таб = ПечатьЭти_Функция();
			Таб.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КМ";
			
			Таб.Показать();
			
	Иначе
		Таб=Новый ТабличныйДокумент;
		ПечатьЭти(Таб,Объект.Ссылка);
		Таб.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КМ";
		
		Таб.Показать();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПечатьЭти_Функция()
			Ссылка=Объект.Ссылка;
	НомерТТН=Объект.Номер;
	Таб = Новый ТабличныйДокумент;
	СистемнаяИнформация = Новый СистемнаяИнформация;

	ВерсияПравильная=Сред(СистемнаяИнформация.ВерсияПриложения,1,6)<>"8.3.6." 
			И Сред(СистемнаяИнформация.ВерсияПриложения,1,6)<>"8.3.7."
			И Сред(СистемнаяИнформация.ВерсияПриложения,1,6)<>"8.3.8."
			И Сред(СистемнаяИнформация.ВерсияПриложения,1,6)<>"8.3.9.";
	
	Мак=Документы.ЗаказМарок_ХамелеонЦРПТ.ПолучитьМакет("Макет");
	ОблМ=Мак.ПолучитьОбласть("Строка|Шапка");
	ПервыйРисунок=Истина;
	
	
		
	Если ВерсияПравильная Тогда
		ГенераторМатрицы=Обработки.ГенерацияDataMatrix_ХамелеонЦРПТ.Создать();
		ГенераторМатрицы.Инициализировать();
	КонецЕсли;
	
	
	МассивЗаданий = Новый Массив;
	ЧислоПараллельныхПотоков = РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().КоличествоЯдерДляГенерацииDataMatrix; 
	//ВремПапка = КаталогВременныхФайлов() + Формат(ТекущаяДата(), "ДФ=yyyyMMddHHmmss") + "\";
	
		ВремПапка=ПолучитьИмяВременногоФайла()+"\";	

	СчРисунков = 0;
	
			
		Для Каждого Стр Из Ссылка.НомераКМ Цикл
	ОблМ=Мак.ПолучитьОбласть("Строка|Шапка");
			
			//НСтр=Объект.Товары.НайтиСтроки(Новый Структура("ID",Стр.Order_Id_Line));
			//Если НСтр.Количество()=0  Тогда
			//	Продолжить;
			//Иначе
			//	НСтр=НСтр[0];
			//КонецЕсли;
			
			Если ЗначениеЗаполнено(Стр.КороткийНомер) Тогда
				НомерКМ=Стр.КороткийНомер
			Иначе
				НомерКМ=Стр.НомерКМ
			Конецесли;
			ГТИН=Сред(НомерКМ,3);
			ГТИН=Сред(ГТИН,1,15-1);
			GTIN=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(ГТИН));
			
			ОблМ.Параметры.Марка=GTIN.БрендТорговаяМарка;
			Если ЗначениеЗаполнено(GTIN.Размер) Тогда
				ОблМ.Параметры.Размер=GTIN.Размер;
			Иначе
				ОблМ.Параметры.Размер="--";
			Конецесли;
			ОблМ.Параметры.Артикул=GTIN.МодельПроизводителяАртикул;
			ОблМ.Параметры.Проудкция=GTIN;
			ОблМ.Параметры.Цвет=GTIN.Цвет;
			ОблМ.Параметры.Вверх=GTIN.МатериалВерха;
			ОблМ.Параметры.Подладка=GTIN.МатериалПодкладки;
			ОблМ.Параметры.Стелька=GTIN.Стелька;
			ОблМ.Параметры.Низ=GTIN.МатериалНиза;
			Если ЗначениеЗаполнено(GTIN.Изготовитель) Тогда
				ОблМ.Параметры.Изготовитель=GTIN.Изготовитель	;
			Иначе
				ОблМ.Параметры.Изготовитель=GTIN.ИННПроизводителяИмпортёра;
			КонецЕсли;
			ОблМ.Параметры.страна=GTIN.СтранаПроизводства;
			ОблМ.Параметры.Дата=Формат(GTIN.ДатаПубликации,"ДЛФ=Д");
			ОблМ.Параметры.Сезон=GTIN.Сезон;
			ОблМ.Параметры.Адрес=GTIN.ИННПроизводителяИмпортёра.ЮридическийАдрес;
			
									//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор
		|ИЗ
		|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Обороты(, , Регистратор, СерийныйНомер = &cis) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты
		|ГДЕ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор ССЫЛКА Документ.ЗаказМарок_ХамелеонЦРПТ";
	
	Запрос.УстановитьПараметр("cis", НомерКМ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	РРР=КодироватьСтроку(стр.НомерКМ,СпособКодированияСТроки.КодировкаURL);
	//НомерКМ=стр.НомерКМ;
	Есть=Ложь;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Для Каждого Стр_111 Из  ВыборкаДетальныеЗаписи.Регистратор.КМИзAPI Цикл
			Если Найти(Стр_111.НомерКМ,РРР)=1 Тогда
				НомерКМ=Стр_111.НомерКМ;
				Есть=Истина;Прервать;
			КонецЕсли;
			
		Конеццикла;
		
		
	КонецЕсли;
	

			
			
			
			 Если Есть=Истина Тогда
			
				ООО=РаскодироватьСтроку(НомерКМ,СпособКодированияСтроки.КодировкаURL);
				
			Иначе
				Если ЗначениеЗаполнено(Стр.КороткийНомер) Тогда
					ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
				Иначе
					ООО=Стр.НомерКМ;
				КонецЕсли;
			КонецЕсли;
//ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
			
			
			
			//ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
			CIS="("+Сред(ООО,1,2)+")";
			
			ГТИН=Сред(ООО,3);
			//CIS=CIS+Сред(ГТИН,1,Найти(ГТИН,"21")-1)+Символы.ПС+"(21)";
			//ГТИН=Сред(ГТИН,Найти(ГТИН,"21")+2);
			CIS=CIS+Сред(ГТИН,1,15-1)+Символы.ПС+"(21)";
			ГТИН=Сред(ГТИН,15+2);
			ТутУправляющийСимвол=ГТИН;
	CIS=CIS+Сред(ТутУправляющийСимвол,1,Найти(ТутУправляющийСимвол,Символ(29))-1);
					ТутУправляющийСимвол=КодироватьСтроку(ТутУправляющийСимвол,СпособКодированияСтроки.КодировкаURL);
			ТутУправляющийСимвол=СтрЗАменить(ТутУправляющийСимвол,"%1D","");
			
			Если Сред(ТутУправляющийСимвол,14,3)="240" Тогда
				CIS=CIS+Символы.ПС+"(240)";
		
				ГТИН=Сред(ГТИН,14+3);
			
				ТутУправляющийСимвол=Сред(ГТИН,1,6-1);
				ТутУправляющийСимвол=КодироватьСтроку(ТутУправляющийСимвол,СпособКодированияСтроки.КодировкаURL);
				ТутУправляющийСимвол=СтрЗАменить(ТутУправляющийСимвол,"%1D","");
				CIS=CIS+ТутУправляющийСимвол;
			КонецЕсли;
			//CIS=КодироватьСтроку(CIS,СпособКодированияСтроки.КодировкаURL);
			//CIS=СтрЗаменить(CIS,"%1D","");
			
			//Если           Найти(ГТИН,"91")>0 Тогда
				ГТИН=Сред(ГТИН,6);
			
			ОблМ.Параметры.cis=CIS;
			
			//ГУДИ=Сайт+"/pub/operatorui?_language=ru&_action=showVetDocumentFormByUuid&uuid="+Стр_В.ГУИД;
			
			
			
			ГУДИ=GTIN.КодВУчетнойСистеме;
			//ОблМ.Параметры.ШтрихКод=ГУДИ;
			
			ОблМ.Параметры.ШтрихКод=ГУДИ;
			
			Попытка
			Если ЗначениеЗАполнено(ГУДИ) Тогда
				Если ВерсияПравильная Тогда
				Генератор=Обработки.ГенерацияEAN13_ХамелеонЦРПТ.Создать();
		
			Картинка = Генератор.Сгенерировать(ГУДИ);
		Иначе
						Генератор=Обработки.ГенерацияDataMatrix_8_3_6_ХамелеонЦРПТ.Создать();
		
			Картинка = Генератор.Сгенерировать13(ГУДИ);
Конецесли;
			ОблМ.Рисунки.D2.Картинка=Новый Картинка(Картинка);
			
		КонецЕсли;
		
		
			
			
		Исключение
				Сообщить("Для печати Data Matrix необходим релиз 8.3.9 или выше");
			//	Возврат;
			
			КонецПопытки;
			
			МассивПараметров = Новый Массив;
			МассивПараметров.Добавить(ООО);
			МассивПараметров.Добавить(ВремПапка + СчРисунков + ".bmp");
			МассивПараметров.Добавить(ГенераторМатрицы.ПобитИсклИли);
			
			Задание = ФоновыеЗадания.Выполнить("ОбщийМодуль_НаСервере_ХамелеонЦРПТ.СгенерироватьDataMatrix", МассивПараметров);
			МассивЗаданий.Добавить(Задание);
			
			Если МассивЗаданий.Количество() >= ЧислоПараллельныхПотоков Тогда
				Попытка
					ФоновыеЗадания.ОжидатьЗавершения(МассивЗаданий);
				Исключение
				КонецПопытки;
				МассивЗаданий.Очистить();
			КонецЕсли;
			
			ОблМ.Рисунки.ДатаМ.Имя = "Рис" + СчРисунков;
			СчРисунков = СчРисунков + 1;
		
							
				Если ПервыйРисунок Тогда
					Если НЕ Таб.ПроверитьВывод(ОблМ) Тогда
						Таб.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					Таб.Вывести(ОблМ);
					ПервыйРисунок=ложь;
				Иначе
					Таб.Присоединить(ОблМ);
					
					ПервыйРисунок=Истина;
					
				Конецесли;
			
		КонецЦикла;
	
	Если МассивЗаданий.Количество() > 0 Тогда
		Попытка
			ФоновыеЗадания.ОжидатьЗавершения(МассивЗаданий);
		Исключение
		КонецПопытки;
		МассивЗаданий.Очистить();
	КонецЕсли;
	
	Для Сч = 0 По СчРисунков - 1 Цикл
		ИсходнаяКартинка = Новый Картинка(ВремПапка + Сч + ".bmp");
		Таб.Рисунки["Рис"+Сч].Картинка = ИсходнаяКартинка.Преобразовать(ФорматКартинки.PNG);
	КонецЦикла;
	
	УдалитьФайлы(ВремПапка);
	Возврат Таб;
	
Конецфункции




&НаСервереБезконтекста
Процедура ПечатьЭти(Таб,Ссылка)
		СистемнаяИнформация = Новый СистемнаяИнформация;

	ВерсияПравильная=Сред(СистемнаяИнформация.ВерсияПриложения,1,6)<>"8.3.6." 
			И Сред(СистемнаяИнформация.ВерсияПриложения,1,6)<>"8.3.7."
			И Сред(СистемнаяИнформация.ВерсияПриложения,1,6)<>"8.3.8."
			И Сред(СистемнаяИнформация.ВерсияПриложения,1,6)<>"8.3.9.";
	
	Мак=Документы.ЗаказМарок_ХамелеонЦРПТ.ПолучитьМакет("Макет");
	ОблМ=Мак.ПолучитьОбласть("Строка|Шапка");
	ПервыйРисунок=Истина;
	
	
	Если ВерсияПравильная Тогда
		ГенераторМатрицы=Обработки.ГенерацияDataMatrix_ХамелеонЦРПТ.Создать();
		ГенераторМатрицы.Инициализировать();
	КонецЕсли;
	
			Для Каждого Стр Из Ссылка.НомераКМ Цикл
			
			//НСтр=Объект.Товары.НайтиСтроки(Новый Структура("ID",Стр.Order_Id_Line));
			//Если НСтр.Количество()=0  Тогда
			//	Продолжить;
			//Иначе
			//	НСтр=НСтр[0];
			//КонецЕсли;
			
			Если ЗначениеЗаполнено(Стр.КороткийНомер) Тогда
				НомерКМ=Стр.КороткийНомер
			Иначе
				НомерКМ=Стр.НомерКМ
			Конецесли;
			
			ГТИН=Сред(НомерКМ,3);
			ГТИН=Сред(ГТИН,1,15-1);
			GTIN=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(ГТИН));
			
			ОблМ.Параметры.Марка=GTIN.БрендТорговаяМарка;
			Если ЗначениеЗаполнено(GTIN.Размер) Тогда
				ОблМ.Параметры.Размер=GTIN.Размер;
			Иначе
				ОблМ.Параметры.Размер="--";
			Конецесли;
			ОблМ.Параметры.Артикул=GTIN.МодельПроизводителяАртикул;
			ОблМ.Параметры.Проудкция=GTIN;
			ОблМ.Параметры.Цвет=GTIN.Цвет;
			ОблМ.Параметры.Вверх=GTIN.МатериалВерха;
			ОблМ.Параметры.Подладка=GTIN.МатериалПодкладки;
			ОблМ.Параметры.Стелька=GTIN.Стелька;
			ОблМ.Параметры.Низ=GTIN.МатериалНиза;
			Если ЗначениеЗаполнено(GTIN.Изготовитель) Тогда
				ОблМ.Параметры.Изготовитель=GTIN.Изготовитель	;
			Иначе
				ОблМ.Параметры.Изготовитель=GTIN.ИННПроизводителяИмпортёра;
			КонецЕсли;
			ОблМ.Параметры.страна=GTIN.СтранаПроизводства;
			ОблМ.Параметры.Дата=Формат(GTIN.ДатаПубликации,"ДЛФ=Д");
			ОблМ.Параметры.Сезон=GTIN.Сезон;
			ОблМ.Параметры.Адрес=GTIN.ИННПроизводителяИмпортёра.ЮридическийАдрес;
			
			
			
							//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор
		|ИЗ
		|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Обороты(, , Регистратор, СерийныйНомер = &cis) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты
		|ГДЕ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор ССЫЛКА Документ.ЗаказМарок_ХамелеонЦРПТ";
	
	Запрос.УстановитьПараметр("cis", НомерКМ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	РРР=КодироватьСтроку(стр.НомерКМ,СпособКодированияСТроки.КодировкаURL);
//	НомерКМ=стр.НомерКМ;
	Есть=Ложь;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Для Каждого Стр_111 Из  ВыборкаДетальныеЗаписи.Регистратор.КМИзAPI Цикл
			Если Найти(Стр_111.НомерКМ,РРР)=1 Тогда
				НомерКМ=Стр_111.НомерКМ;
				Есть=Истина;Прервать;
				прервать;
			КонецЕсли;
			
		Конеццикла;
		
		
	КонецЕсли;
	

			
			
			
			 Если Есть=Истина Тогда
			
				ООО=РаскодироватьСтроку(НомерКМ,СпособКодированияСтроки.КодировкаURL);
				
			Иначе	
				Если ЗначениеЗаполнено(Стр.КороткийНомер) Тогда
					ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
				Иначе
					ООО=Стр.НомерКМ
				КонецЕсли;
			КонецЕсли;
				//ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
			CIS="("+Сред(ООО,1,2)+")";
			
			ГТИН=Сред(ООО,3);
			//CIS=CIS+Сред(ГТИН,1,Найти(ГТИН,"21")-1)+Символы.ПС+"(21)";
			//ГТИН=Сред(ГТИН,Найти(ГТИН,"21")+2);
			CIS=CIS+Сред(ГТИН,1,15-1)+Символы.ПС+"(21)";
			ГТИН=Сред(ГТИН,15+2);
			ТутУправляющийСимвол=ГТИН;
	CIS=CIS+Сред(ТутУправляющийСимвол,1,Найти(ТутУправляющийСимвол,Символ(29))-1);
					ТутУправляющийСимвол=КодироватьСтроку(ТутУправляющийСимвол,СпособКодированияСтроки.КодировкаURL);
			ТутУправляющийСимвол=СтрЗАменить(ТутУправляющийСимвол,"%1D","");
			
			Если Сред(ТутУправляющийСимвол,14,3)="240" Тогда
				CIS=CIS+Символы.ПС+"(240)";
		
				ГТИН=Сред(ГТИН,14+3);
			
				ТутУправляющийСимвол=Сред(ГТИН,1,6-1);
				ТутУправляющийСимвол=КодироватьСтроку(ТутУправляющийСимвол,СпособКодированияСтроки.КодировкаURL);
				ТутУправляющийСимвол=СтрЗАменить(ТутУправляющийСимвол,"%1D","");
				CIS=CIS+ТутУправляющийСимвол;
			КонецЕсли;
			//CIS=КодироватьСтроку(CIS,СпособКодированияСтроки.КодировкаURL);
			//CIS=СтрЗаменить(CIS,"%1D","");
			
			//Если           Найти(ГТИН,"91")>0 Тогда
				ГТИН=Сред(ГТИН,6);
			
			ОблМ.Параметры.cis=CIS;
			
			//ГУДИ=Сайт+"/pub/operatorui?_language=ru&_action=showVetDocumentFormByUuid&uuid="+Стр_В.ГУИД;
			
			
			
			ГУДИ=GTIN.КодВУчетнойСистеме;
			//ОблМ.Параметры.ШтрихКод=ГУДИ;
			
			ОблМ.Параметры.ШтрихКод=ГУДИ;
			
			Попытка
				Если ВерсияПравильная Тогда
						Картинка = ГенераторМатрицы.Сгенерировать(ООО);
					Иначе
					ГенераторМатрицы=Обработки.ГенерацияDataMatrix_8_3_6_ХамелеонЦРПТ.Создать();

					Картинка = ГенераторМатрицы.Сгенерировать(ООО);
						
					КонецЕсли;
			ОблМ.Рисунки.ДатаМ.Картинка=Новый Картинка(Картинка);
			Если ЗначениеЗАполнено(ГУДИ) Тогда
				Если ВерсияПравильная Тогда
				Генератор=Обработки.ГенерацияEAN13_ХамелеонЦРПТ.Создать();
		
			Картинка = Генератор.Сгенерировать(ГУДИ);
		Иначе
						Генератор=Обработки.ГенерацияDataMatrix_8_3_6_ХамелеонЦРПТ.Создать();
		
			Картинка = Генератор.Сгенерировать13(ГУДИ);
Конецесли;
			ОблМ.Рисунки.D2.Картинка=Новый Картинка(Картинка);
			
			КонецЕсли;
			
			
		Исключение
				Сообщить("Для печати Data Matrix необходим релиз 8.3.9 или выше");
			//	Возврат;
			
			КонецПопытки;
			
		
							
				Если ПервыйРисунок Тогда
					Если НЕ Таб.ПроверитьВывод(ОблМ) Тогда
						Таб.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					Таб.Вывести(ОблМ);
					ПервыйРисунок=ложь;
				Иначе
					Таб.Присоединить(ОблМ);
					
					ПервыйРисунок=Истина;
					
				Конецесли;
			
		КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСПО(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	Счетч=1;
		Форм=ОткрытьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.ВводЧисла",,,,,,Новый ОписаниеОповещения("ПослеВводПервогоЧисла",ЭтаФорма));
	Форм.Число=Счетч;
	Форм.Заголовок="Начать печать с № КМ";
	//ПоказатьВводЧисла(Новый ОписаниеОповещения("ПослеВводПервогоЧисла",ЭтаФорма),Счетч,"Начать печать с № КМ");
КонецПроцедуры
&НаКлиенте  
Процедура ПослеВводПервогоЧисла(РР,ДД) Экспорт
	Если ЗначениеЗаполнено(РР) Тогда
		Форм=ОткрытьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.ВводЧисла",,,,,,Новый ОписаниеОповещения("ПослеВводВторогоЧисла",ЭтаФорма,РР));
	Форм.Число=30;
	Форм.Заголовок="Допечатать указанное количество № КМ";
		//ПоказатьВводЧисла(Новый ОписаниеОповещения("ПослеВводВторогоЧисла",ЭтаФорма,РР),30,"Допечатать указанное количество № КМ");
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПослеВводВторогоЧисла(РР,ДД) Экспорт
	Если ЗначениеЗаполнено(РР) Тогда
		
		
		Если ЗначениеЗаполненО(ЧислоПараллельныхПотоков) тогда
			Таб = ПечатьЭти_1_Функция(ДД,РР);
			Таб.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КМ";
			
			Таб.Показать();
			
		Иначе
		
			Таб=Новый ТабличныйДокумент;
			ПечатьЭти_1(Таб,ДД,РР);
			Таб.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КМ";
			
			Таб.Показать();
		Конецесли;
//		Таб=Новый ТабличныйДокумент;
//		ПечатьЭти_1(Таб,ДД,РР);
//		Таб.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КМ";
		
//		Таб.Показать();
		
	КонецЕсли;
КонецПроцедуры



Функция ПечатьЭти_1_Функция(Смещение,Количество) Экспорт
	
	Ссылка=Объект.Ссылка;
	НомерТТН=Объект.Номер;
	Таб = Новый ТабличныйДокумент;
	
	Мак=Документы.ЗаказМарок_ХамелеонЦРПТ.ПолучитьМакет("Макет");
	ОблМ=Мак.ПолучитьОбласть("Строка|Шапка");
	ПервыйРисунок=Истина;
	
	
		//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Если ВерсияПравильная Тогда
	ГенераторМатрицы=Обработки.ГенерацияDataMatrix_ХамелеонЦРПТ.Создать();
	ГенераторМатрицы.Инициализировать();
	                           КонецЕсли;
							   
							   МассивЗаданий = Новый Массив;
	ЧислоПараллельныхПотоков = РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().КоличествоЯдерДляГенерацииDataMatrix; 
	//ВремПапка = КаталогВременныхФайлов() + Формат(ТекущаяДата(), "ДФ=yyyyMMddHHmmss") + "\";
	ВремПапка=ПолучитьИмяВременногоФайла()+"\";	
	СчРисунков = 0;
	
	
			Если Смещение>Объект.НомераКМ.Количество() Тогда
			Возврат Таб;
		КонецЕсли;
		МинимумМ=Мин(Объект.НомераКМ.Количество()+1,СМещение+Количество)-1;
		Для СЧ=Смещение По МинимумМ
			//+1 
			Цикл
		ОблМ=Мак.ПолучитьОбласть("Строка|Шапка");
			Стр=Объект.НомераКМ[СЧ-1];
			
			//НСтр=Объект.Товары.НайтиСтроки(Новый Структура("ID",Стр.Order_Id_Line));
			//Если НСтр.Количество()=0  Тогда
			//	Продолжить;
			//Иначе
			//	НСтр=НСтр[0];
			//КонецЕсли;
			
			Если ЗначениеЗаполнено(Стр.КороткийНомер) Тогда
				НомерКМ=Стр.КороткийНомер
			Иначе
				НомерКМ=Стр.НомерКМ
				
			КонецЕсли;
			
			
			ГТИН=Сред(НомерКМ,3);
			ГТИН=Сред(ГТИН,1,15-1);
			GTIN=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(ГТИН));
			
			ОблМ.Параметры.Марка=GTIN.БрендТорговаяМарка;
			Если ЗначениеЗаполнено(GTIN.Размер) Тогда
				ОблМ.Параметры.Размер=GTIN.Размер;
			Иначе
				ОблМ.Параметры.Размер="--";
			Конецесли;
			ОблМ.Параметры.Артикул=GTIN.МодельПроизводителяАртикул;
			ОблМ.Параметры.Проудкция=GTIN;
			ОблМ.Параметры.Цвет=GTIN.Цвет;
			ОблМ.Параметры.Вверх=GTIN.МатериалВерха;
			ОблМ.Параметры.Подладка=GTIN.МатериалПодкладки;
			ОблМ.Параметры.Стелька=GTIN.Стелька;
			ОблМ.Параметры.Низ=GTIN.МатериалНиза;
			Если ЗначениеЗаполнено(GTIN.Изготовитель) Тогда
				ОблМ.Параметры.Изготовитель=GTIN.Изготовитель	;
			Иначе
				ОблМ.Параметры.Изготовитель=GTIN.ИННПроизводителяИмпортёра;
			КонецЕсли;
			ОблМ.Параметры.страна=GTIN.СтранаПроизводства;
			ОблМ.Параметры.Дата=Формат(GTIN.ДатаПубликации,"ДЛФ=Д");
			ОблМ.Параметры.Сезон=GTIN.Сезон;
			ОблМ.Параметры.Адрес=GTIN.ИННПроизводителяИмпортёра.ЮридическийАдрес;
			
			
			
			
			
								//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор
		|ИЗ
		|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Обороты(, , Регистратор, СерийныйНомер = &cis) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты
		|ГДЕ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор ССЫЛКА Документ.ЗаказМарок_ХамелеонЦРПТ";
	
	Запрос.УстановитьПараметр("cis", НомерКМ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	РРР=КодироватьСтроку(стр.НомерКМ,СпособКодированияСТроки.КодировкаURL);
	//НомерКМ=стр.НомерКМ;
	Есть=Ложь;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Для Каждого Стр_111 Из  ВыборкаДетальныеЗаписи.Регистратор.КМИзAPI Цикл
			Если Найти(Стр_111.НомерКМ,РРР)=1 Тогда
				НомерКМ=Стр_111.НомерКМ;
				Есть=Истина;Прервать;
			КонецЕсли;
			
		Конеццикла;
		
		
	КонецЕсли;
	

			
			
			
			 Если Есть=Истина Тогда
			
				ООО=РаскодироватьСтроку(НомерКМ,СпособКодированияСтроки.КодировкаURL);
				
			Иначе	
				Если ЗначениеЗАполнено(Стр.КороткийНомер) Тогда
					ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
				Иначе
					ООО=Стр.НомерКМ
				КонецЕсли;
			КонецЕсли;
			
			//ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
			CIS="("+Сред(ООО,1,2)+")";
			
			ГТИН=Сред(ООО,3);
			//CIS=CIS+Сред(ГТИН,1,Найти(ГТИН,"21")-1)+Символы.ПС+"(21)";
			//ГТИН=Сред(ГТИН,Найти(ГТИН,"21")+2);
			CIS=CIS+Сред(ГТИН,1,15-1)+Символы.ПС+"(21)";
			ГТИН=Сред(ГТИН,15+2);
			ТутУправляющийСимвол=ГТИН;
	CIS=CIS+Сред(ТутУправляющийСимвол,1,Найти(ТутУправляющийСимвол,Символ(29))-1);
		ТутУправляющийСимвол=КодироватьСтроку(ТутУправляющийСимвол,СпособКодированияСтроки.КодировкаURL);
			ТутУправляющийСимвол=СтрЗАменить(ТутУправляющийСимвол,"%1D","");
			
			
			
			Если Сред(ТутУправляющийСимвол,14,3)="240" Тогда
				CIS=CIS+Символы.ПС+"(240)";
		
				ГТИН=Сред(ГТИН,14+3);
			
				ТутУправляющийСимвол=Сред(ГТИН,1,6-1);
				ТутУправляющийСимвол=КодироватьСтроку(ТутУправляющийСимвол,СпособКодированияСтроки.КодировкаURL);
				ТутУправляющийСимвол=СтрЗАменить(ТутУправляющийСимвол,"%1D","");
				CIS=CIS+ТутУправляющийСимвол;
			КонецЕсли;
			//CIS=КодироватьСтроку(CIS,СпособКодированияСтроки.КодировкаURL);
			//CIS=СтрЗаменить(CIS,"%1D","");
			
			//Если           Найти(ГТИН,"91")>0 Тогда
				ГТИН=Сред(ГТИН,6);
			
			ОблМ.Параметры.cis=CIS;
			
			//ГУДИ=Сайт+"/pub/operatorui?_language=ru&_action=showVetDocumentFormByUuid&uuid="+Стр_В.ГУИД;
			
			
			
			ГУДИ=GTIN.КодВУчетнойСистеме;
			//ОблМ.Параметры.ШтрихКод=ГУДИ;
			
			ОблМ.Параметры.ШтрихКод=ГУДИ;
			Попытка
				Если ЗначениеЗАполнено(ГУДИ) Тогда
				Если ВерсияПравильная Тогда
			Генератор=Обработки.ГенерацияEAN13_ХамелеонЦРПТ.Создать();
		
			Картинка = Генератор.Сгенерировать(ГУДИ);
		Иначе
					Генератор=Обработки.ГенерацияDataMatrix_8_3_6_ХамелеонЦРПТ.Создать();
		
			Картинка = Генератор.Сгенерировать13(ГУДИ);

			КонецЕсли;
			ОблМ.Рисунки.D2.Картинка=Новый Картинка(Картинка);
			КонецЕсли;
			
			
			
			Исключение
				Сообщить("Для печати Data Matrix необходим релиз 8.3.9 или выше");
				//Возврат;
			КонецПопытки;
			МассивПараметров = Новый Массив;
			МассивПараметров.Добавить(ООО);
			МассивПараметров.Добавить(ВремПапка + СчРисунков + ".bmp");
			МассивПараметров.Добавить(ГенераторМатрицы.ПобитИсклИли);
			
			Задание = ФоновыеЗадания.Выполнить("ОбщийМодуль_НаСервере_ХамелеонЦРПТ.СгенерироватьDataMatrix", МассивПараметров);
			МассивЗаданий.Добавить(Задание);
			
			Если МассивЗаданий.Количество() >= ЧислоПараллельныхПотоков Тогда
				Попытка
					ФоновыеЗадания.ОжидатьЗавершения(МассивЗаданий);
				Исключение
				КонецПопытки;
				МассивЗаданий.Очистить();
			КонецЕсли;
			
			ОблМ.Рисунки.ДатаМ.Имя = "Рис" + СчРисунков;
			СчРисунков = СчРисунков + 1;
			
		
							
				Если ПервыйРисунок Тогда
					Если НЕ Таб.ПроверитьВывод(ОблМ) Тогда
						Таб.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					Таб.Вывести(ОблМ);
					ПервыйРисунок=ложь;
				Иначе
					Таб.Присоединить(ОблМ);
					
					ПервыйРисунок=Истина;
					
				Конецесли;
			
			КонецЦикла;
	Если МассивЗаданий.Количество() > 0 Тогда
		Попытка
			ФоновыеЗадания.ОжидатьЗавершения(МассивЗаданий);
		Исключение
		КонецПопытки;
		МассивЗаданий.Очистить();
	КонецЕсли;
	
	Для Сч = 0 По СчРисунков - 1 Цикл
		ИсходнаяКартинка = Новый Картинка(ВремПапка + Сч + ".bmp");
		Таб.Рисунки["Рис"+Сч].Картинка = ИсходнаяКартинка.Преобразовать(ФорматКартинки.PNG);
	КонецЦикла;
	
	УдалитьФайлы(ВремПапка);
	Возврат Таб;
КонецФункции


Процедура ПечатьЭти_1(Таб,Смещение,Количество) Экспорт
	Мак=Документы.ЗаказМарок_ХамелеонЦРПТ.ПолучитьМакет("Макет");
	ОблМ=Мак.ПолучитьОбласть("Строка|Шапка");
	ПервыйРисунок=Истина;
	
	
	
	Если ВерсияПравильная Тогда
	ГенераторМатрицы=Обработки.ГенерацияDataMatrix_ХамелеонЦРПТ.Создать();
	ГенераторМатрицы.Инициализировать();
	                           КонецЕсли;
		Если Смещение>Объект.НомераКМ.Количество() Тогда
			Возврат;
		КонецЕсли;
		МинимумМ=Мин(Объект.НомераКМ.Количество()+1,СМещение+Количество)-1;
		Для СЧ=Смещение По МинимумМ
			//+1 
			Цикл
			ОблМ=Мак.ПолучитьОбласть("Строка|Шапка");
			Стр=Объект.НомераКМ[СЧ-1];
			
			//НСтр=Объект.Товары.НайтиСтроки(Новый Структура("ID",Стр.Order_Id_Line));
			//Если НСтр.Количество()=0  Тогда
			//	Продолжить;
			//Иначе
			//	НСтр=НСтр[0];
			//КонецЕсли;
			Если ЗначениеЗаполнено(Стр.КороткийНомер) Тогда
				НомерКМ=Стр.КороткийНомер
			Иначе
				НомерКМ=Стр.НомерКМ
			КонецЕсли;
			
			
			ГТИН=Сред(НомерКМ,3);
			ГТИН=Сред(ГТИН,1,15-1);
			GTIN=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(ГТИН));
			
			ОблМ.Параметры.Марка=GTIN.БрендТорговаяМарка;
			Если ЗначениеЗаполнено(GTIN.Размер) Тогда
				ОблМ.Параметры.Размер=GTIN.Размер;
			Иначе
				ОблМ.Параметры.Размер="--";
			Конецесли;
			ОблМ.Параметры.Артикул=GTIN.МодельПроизводителяАртикул;
			ОблМ.Параметры.Проудкция=GTIN;
			ОблМ.Параметры.Цвет=GTIN.Цвет;
			ОблМ.Параметры.Вверх=GTIN.МатериалВерха;
			ОблМ.Параметры.Подладка=GTIN.МатериалПодкладки;
			ОблМ.Параметры.Стелька=GTIN.Стелька;
			ОблМ.Параметры.Низ=GTIN.МатериалНиза;
			Если ЗначениеЗаполнено(GTIN.Изготовитель) Тогда
				ОблМ.Параметры.Изготовитель=GTIN.Изготовитель	;
			Иначе
				ОблМ.Параметры.Изготовитель=GTIN.ИННПроизводителяИмпортёра;
			КонецЕсли;
			ОблМ.Параметры.страна=GTIN.СтранаПроизводства;
			ОблМ.Параметры.Дата=Формат(GTIN.ДатаПубликации,"ДЛФ=Д");
			ОблМ.Параметры.Сезон=GTIN.Сезон;
			ОблМ.Параметры.Адрес=GTIN.ИННПроизводителяИмпортёра.ЮридическийАдрес;
			
							//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор
		|ИЗ
		|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Обороты(, , Регистратор, СерийныйНомер = &cis) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты
		|ГДЕ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор ССЫЛКА Документ.ЗаказМарок_ХамелеонЦРПТ";
	
	Запрос.УстановитьПараметр("cis", НомерКМ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	РРР=КодироватьСтроку(стр.НомерКМ,СпособКодированияСТроки.КодировкаURL);
	//НомерКМ=стр.НомерКМ;
	Есть=Ложь;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Для Каждого Стр_111 Из  ВыборкаДетальныеЗаписи.Регистратор.КМИзAPI Цикл
			Если Найти(Стр_111.НомерКМ,РРР)=1 Тогда
				НомерКМ=Стр_111.НомерКМ;
				Есть=Истина;Прервать;
			КонецЕсли;
			
		Конеццикла;
		
		
	КонецЕсли;
	

			
			
			
			 Если Есть=Истина Тогда
			
				ООО=РаскодироватьСтроку(НомерКМ,СпособКодированияСтроки.КодировкаURL);
				
			Иначе	
				Если ЗначениеЗАполнено(Стр.КороткийНомер) Тогда
					ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
				Иначе
					ООО=Стр.НомерКМ	
				КонецЕсли;
			КонецЕсли;
			//ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
			CIS="("+Сред(ООО,1,2)+")";
			
			ГТИН=Сред(ООО,3);
			//CIS=CIS+Сред(ГТИН,1,Найти(ГТИН,"21")-1)+Символы.ПС+"(21)";
			//ГТИН=Сред(ГТИН,Найти(ГТИН,"21")+2);
			CIS=CIS+Сред(ГТИН,1,15-1)+Символы.ПС+"(21)";
			ГТИН=Сред(ГТИН,15+2);
			ТутУправляющийСимвол=ГТИН;
	CIS=CIS+Сред(ТутУправляющийСимвол,1,Найти(ТутУправляющийСимвол,Символ(29))-1);
		ТутУправляющийСимвол=КодироватьСтроку(ТутУправляющийСимвол,СпособКодированияСтроки.КодировкаURL);
			ТутУправляющийСимвол=СтрЗАменить(ТутУправляющийСимвол,"%1D","");
			
			
			
			Если Сред(ТутУправляющийСимвол,14,3)="240" Тогда
				CIS=CIS+Символы.ПС+"(240)";
		
				ГТИН=Сред(ГТИН,14+3);
			
				ТутУправляющийСимвол=Сред(ГТИН,1,6-1);
				ТутУправляющийСимвол=КодироватьСтроку(ТутУправляющийСимвол,СпособКодированияСтроки.КодировкаURL);
				ТутУправляющийСимвол=СтрЗАменить(ТутУправляющийСимвол,"%1D","");
				CIS=CIS+ТутУправляющийСимвол;
			КонецЕсли;
			//CIS=КодироватьСтроку(CIS,СпособКодированияСтроки.КодировкаURL);
			//CIS=СтрЗаменить(CIS,"%1D","");
			
			//Если           Найти(ГТИН,"91")>0 Тогда
				ГТИН=Сред(ГТИН,6);
			
			ОблМ.Параметры.cis=CIS;
			
			//ГУДИ=Сайт+"/pub/operatorui?_language=ru&_action=showVetDocumentFormByUuid&uuid="+Стр_В.ГУИД;
			
			
			
			ГУДИ=GTIN.КодВУчетнойСистеме;
			//ОблМ.Параметры.ШтрихКод=ГУДИ;
			
			ОблМ.Параметры.ШтрихКод=ГУДИ;
			Попытка
				Если ВерсияПравильная Тогда
			Картинка = ГенераторМатрицы.Сгенерировать(ООО); Иначе					ГенераторМатрицы=Обработки.ГенерацияDataMatrix_8_3_6_ХамелеонЦРПТ.Создать();

					Картинка = ГенераторМатрицы.Сгенерировать(ООО);
КонецЕсли;
			ОблМ.Рисунки.ДатаМ.Картинка=Новый Картинка(Картинка);
			Если ЗначениеЗАполнено(ГУДИ) Тогда
				Если ВерсияПравильная Тогда
			Генератор=Обработки.ГенерацияEAN13_ХамелеонЦРПТ.Создать();
		
			Картинка = Генератор.Сгенерировать(ГУДИ);
		Иначе
					Генератор=Обработки.ГенерацияDataMatrix_8_3_6_ХамелеонЦРПТ.Создать();
		
			Картинка = Генератор.Сгенерировать13(ГУДИ);

			КонецЕсли;
			ОблМ.Рисунки.D2.Картинка=Новый Картинка(Картинка);
			КонецЕсли;
			
			
			Исключение
				Сообщить("Для печати Data Matrix необходим релиз 8.3.9 или выше");
				//Возврат;
			КонецПопытки;
		
							
				Если ПервыйРисунок Тогда
					Если НЕ Таб.ПроверитьВывод(ОблМ) Тогда
						Таб.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					Таб.Вывести(ОблМ);
					ПервыйРисунок=ложь;
				Иначе
					Таб.Присоединить(ОблМ);
					
					ПервыйРисунок=Истина;
					
				Конецесли;
			
			КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСПОКакВЦРПТ(Команда)
	// Вставить содержимое обработчика.
	Счетч=1;
		Форм=ОткрытьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.ВводЧисла",,,,,,Новый ОписаниеОповещения("ПослеВводПервогоЧисла_ЦРПТ",ЭтаФорма));
	Форм.Число=Счетч;
	Форм.Заголовок="Начать печать с № КМ";
//	ПоказатьВводЧисла(Новый ОписаниеОповещения("ПослеВводПервогоЧисла_ЦРПТ",ЭтаФорма),Счетч,"Начать печать с № КМ");
КонецПроцедуры
&НаКлиенте
Процедура ПослеВводПервогоЧисла_ЦРПТ(РР,ДД) Экспорт
	Если ЗначениеЗаполнено(РР) Тогда
		Форм=ОткрытьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.ВводЧисла",,,,,,Новый ОписаниеОповещения("ПослеВводВторогоЧисла_ЦРПТ",ЭтаФорма,РР));
	Форм.Число=30;
	Форм.Заголовок="Допечатать указанное количество № КМ";
		//ПоказатьВводЧисла(Новый ОписаниеОповещения("ПослеВводВторогоЧисла_ЦРПТ",ЭтаФорма,РР),30,"Допечатать указанное количество № КМ");
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПослеВводВторогоЧисла_ЦРПТ(РР,ДД) Экспорт
	Если ЗначениеЗаполнено(РР) Тогда
		Если ЗначениеЗаполненО(ЧислоПараллельныхПотоков) тогда
			Таб = ПечатьЭти_1_ЦРПТ_Функция(ДД,РР);
			Таб.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КМ";
			
			Таб.Показать();
			
		Иначе
		
			Таб=Новый ТабличныйДокумент;
			ПечатьЭти_1_ЦРПТ(Таб,ДД,РР);
			Таб.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КМ";
			
			Таб.Показать();
		Конецесли;
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПечатьЭти_1_ЦРПТ_Функция(Смещение,Количество,НомерТТН="") Экспорт
	
	//Обр=РеквизитФормыВЗначение("Объект_1");
	Ссылка=Объект.Ссылка;
	НомерТТН=Объект.Номер;
	Таб = Новый ТабличныйДокумент;
	
	Мак=Документы.ЗаказМарок_ХамелеонЦРПТ.ПолучитьМакет("Макет1");
	ОблМ=Мак.ПолучитьОбласть("Строка");
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВерсияПравильная Тогда
		ГенераторМатрицы=Обработки.ГенерацияDataMatrix_ХамелеонЦРПТ.Создать();
		ГенераторМатрицы.Инициализировать();
	КонецЕсли;
	
	МассивЗаданий = Новый Массив;
	ЧислоПараллельныхПотоков = РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().КоличествоЯдерДляГенерацииDataMatrix; 
	//ВремПапка = КаталогВременныхФайлов() + Формат(ТекущаяДата(), "ДФ=yyyyMMddHHmmss") + "\";
	ВремПапка=ПолучитьИмяВременногоФайла()+"\";	
	СчРисунков = 0;
	
			Если Смещение>Объект.НомераКМ.Количество() Тогда
			Возврат ПоместитьВоВременноеХранилище(Таб);
		КонецЕсли;
		МинимумМ=Мин(Объект.НомераКМ.Количество()+1,СМещение+Количество)-1;
		Для СЧ=Смещение По МинимумМ
			//+1 
			Цикл
			ОблМ=Мак.ПолучитьОбласть("Строка");
			
			Стр=Ссылка.НомераКМ[СЧ-1];
			
			//НСтр=Объект.Товары.НайтиСтроки(Новый Структура("ID",Стр.Order_Id_Line));
			//Если НСтр.Количество()=0  Тогда
			//	Продолжить;
			//Иначе
			//	НСтр=НСтр[0];
			//КонецЕсли;
			
			Если ЗначениеЗаполнено(Стр.КороткийНомер) Тогда
				НомерКМ=Стр.КороткийНомер
			Иначе
				НомерКМ=Стр.НомерКМ
			КонецЕсли;
			ГТИН=Сред(НомерКМ,3);
			ГТИН=Сред(ГТИН,1,15-1);
			GTIN=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(ГТИН));
			
			ОблМ.Параметры.Модель=GTIN.МодельПроизводителяАртикул;
			Если ЗначениеЗаполнено(GTIN.Размер) Тогда
				ОблМ.Параметры.Размер=GTIN.Размер;
			Иначе
				ОблМ.Параметры.Размер="--";
			Конецесли;
			ОблМ.Параметры.Цвет=GTIN.Цвет;
			
					//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор
		|ИЗ
		|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Обороты(, , Регистратор, СерийныйНомер = &cis) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты
		|ГДЕ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор ССЫЛКА Документ.ЗаказМарок_ХамелеонЦРПТ";
	
	Запрос.УстановитьПараметр("cis", НомерКМ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	РРР=КодироватьСтроку(стр.НомерКМ,СпособКодированияСТроки.КодировкаURL);
//	НомерКМ=стр.НомерКМ;
	Есть=Ложь;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Для Каждого Стр_111 Из  ВыборкаДетальныеЗаписи.Регистратор.КМИзAPI Цикл
			Если Найти(Стр_111.НомерКМ,РРР)=1 Тогда
				НомерКМ=Стр_111.НомерКМ;
				Есть=Истина;Прервать;
			КонецЕсли;
			
		Конеццикла;
		
		
	КонецЕсли;
	

			
			
			
			 Если Есть=Истина Тогда
			
				ООО=РаскодироватьСтроку(НомерКМ,СпособКодированияСтроки.КодировкаURL);
				
			Иначе	
				Если ЗначениеЗаполнено(Стр.КороткийНомер) тогда
					ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
				Иначе
					ООО=Стр.НомерКМ	
				КонецЕсли;
			КонецЕсли;
			//ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
			CIS="("+Сред(ООО,1,2)+")";
			
			ГТИН=Сред(ООО,3);
			//CIS=CIS+Сред(ГТИН,1,Найти(ГТИН,"21")-1)+Символы.ПС+"(21)";
			//ГТИН=Сред(ГТИН,Найти(ГТИН,"21")+2);
			CIS=CIS+Сред(ГТИН,1,15-1)+Символы.ПС+"(21)";
			ГТИН=Сред(ГТИН,15+2);
			ТутУправляющийСимвол=ГТИН;
			CIS=CIS+Сред(ТутУправляющийСимвол,1,Найти(ТутУправляющийСимвол,Символ(29))-1);
			ТутУправляющийСимвол=КодироватьСтроку(ТутУправляющийСимвол,СпособКодированияСтроки.КодировкаURL);
			ТутУправляющийСимвол=СтрЗАменить(ТутУправляющийСимвол,"%1D","");
			
			
			
			Если Сред(ТутУправляющийСимвол,14,3)="240" Тогда
				CIS=CIS+Символы.ПС+"(240)";
				
				ГТИН=Сред(ГТИН,14+3);
				
				ТутУправляющийСимвол=Сред(ГТИН,1,6-1);
				ТутУправляющийСимвол=КодироватьСтроку(ТутУправляющийСимвол,СпособКодированияСтроки.КодировкаURL);
				ТутУправляющийСимвол=СтрЗАменить(ТутУправляющийСимвол,"%1D","");
				CIS=CIS+ТутУправляющийСимвол;
			КонецЕсли;
			//CIS=КодироватьСтроку(CIS,СпособКодированияСтроки.КодировкаURL);
			//CIS=СтрЗаменить(CIS,"%1D","");
			
			//Если           Найти(ГТИН,"91")>0 Тогда
			ГТИН=Сред(ГТИН,6);
			
			ОблМ.Параметры.cis=CIS;
			
			//ГУДИ=Сайт+"/pub/operatorui?_language=ru&_action=showVetDocumentFormByUuid&uuid="+Стр_В.ГУИД;
			
			//Попытка
			//	Если ВерсияПравильная Тогда
			//		Картинка = ГенераторМатрицы.Сгенерировать(ООО);
			//	Иначе
			//		ГенераторМатрицы=Обработки.ГенерацияDataMatrix_8_3_6_ХамелеонЦРПТ.Создать();
			//		
			//		Картинка = ГенераторМатрицы.Сгенерировать(ООО);
			//	КонецЕсли;
			//	ОблМ.Рисунки.ДатаМ.Картинка=Новый Картинка(Картинка);
			//	
			//Исключение
			//	Сообщить("Для печати Data Matrix необходим релиз 8.3.9 или выше");
			//	//Возврат;
			//КонецПопытки;
			
			МассивПараметров = Новый Массив;
			МассивПараметров.Добавить(ООО);
			МассивПараметров.Добавить(ВремПапка + СчРисунков + ".bmp");
			МассивПараметров.Добавить(ГенераторМатрицы.ПобитИсклИли);
			
			Задание = ФоновыеЗадания.Выполнить("ОбщийМодуль_НаСервере_ХамелеонЦРПТ.СгенерироватьDataMatrix", МассивПараметров);
			МассивЗаданий.Добавить(Задание);
			
			Если МассивЗаданий.Количество() >= ЧислоПараллельныхПотоков Тогда
				Попытка
					ФоновыеЗадания.ОжидатьЗавершения(МассивЗаданий);
				Исключение
				КонецПопытки;
				МассивЗаданий.Очистить();
			КонецЕсли;
			
			ОблМ.Рисунки.ДатаМ.Имя = "Рис" + СчРисунков;
			СчРисунков = СчРисунков + 1;
			
			Таб.Вывести(ОблМ);
			Таб.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЦикла;
	
	Если МассивЗаданий.Количество() > 0 Тогда
		Попытка
			ФоновыеЗадания.ОжидатьЗавершения(МассивЗаданий);
		Исключение
		КонецПопытки;
		МассивЗаданий.Очистить();
	КонецЕсли;
	
	Для Сч = 0 По СчРисунков - 1 Цикл
		ИсходнаяКартинка = Новый Картинка(ВремПапка + Сч + ".bmp");
		Таб.Рисунки["Рис"+Сч].Картинка = ИсходнаяКартинка.Преобразовать(ФорматКартинки.PNG);
	КонецЦикла;
	
	УдалитьФайлы(ВремПапка);
	Возврат Таб;
	
КонецФункции


Процедура ПечатьЭти_1_ЦРПТ(Таб,Смещение,Количество,НомерТТН="") Экспорт
	//Обр=РеквизитФормыВЗначение("Объект_1");
	Ссылка=Объект.Ссылка;
	НомерТТН=Объект.Номер;
	//Если ВерсияПравильная Тогда
	//	ГенераторМатрицы=Обработки.ГенерацияDataMatrix_ХамелеонЦРПТ.Создать();
	//	ГенераторМатрицы.Инициализировать();
	//КонецЕсли;
	
	Мак=Документы.ЗаказМарок_ХамелеонЦРПТ.ПолучитьМакет("Макет1");
	ОблМ=Мак.ПолучитьОбласть("Строка");

	Если ВерсияПравильная Тогда
	ГенераторМатрицы=Обработки.ГенерацияDataMatrix_ХамелеонЦРПТ.Создать();
	ГенераторМатрицы.Инициализировать();
	                           КонецЕсли;
			Если Смещение>Объект.НомераКМ.Количество() Тогда
			Возврат;
		КонецЕсли;
		МинимумМ=Мин(Объект.НомераКМ.Количество()+1,СМещение+Количество)-1;
		Для СЧ=Смещение По МинимумМ
			//+1 
			Цикл
			ОблМ=Мак.ПолучитьОбласть("Строка");
			
			Стр=Ссылка.НомераКМ[СЧ-1];
			
			//НСтр=Объект.Товары.НайтиСтроки(Новый Структура("ID",Стр.Order_Id_Line));
			//Если НСтр.Количество()=0  Тогда
			//	Продолжить;
			//Иначе
			//	НСтр=НСтр[0];
			//КонецЕсли;
			
			Если ЗначениеЗаполнено(Стр.КороткийНомер) Тогда
				НомерКМ=Стр.КороткийНомер
			Иначе
				НомерКМ=Стр.НомерКМ
			КонецЕсли;
			
			ГТИН=Сред(НомерКМ,3);
			ГТИН=Сред(ГТИН,1,15-1);
			GTIN=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(ГТИН));
			
			ОблМ.Параметры.Модель=GTIN.МодельПроизводителяАртикул;
			Если ЗначениеЗаполнено(GTIN.Размер) Тогда
				ОблМ.Параметры.Размер=GTIN.Размер;
			Иначе
				ОблМ.Параметры.Размер="--";
			Конецесли;
			ОблМ.Параметры.Цвет=GTIN.Цвет;
			
					//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор
		|ИЗ
		|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Обороты(, , Регистратор, СерийныйНомер = &cis) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты
		|ГДЕ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор ССЫЛКА Документ.ЗаказМарок_ХамелеонЦРПТ";
	
	Запрос.УстановитьПараметр("cis", НомерКМ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	РРР=КодироватьСтроку(стр.НомерКМ,СпособКодированияСТроки.КодировкаURL);
	//НомерКМ=стр.НомерКМ;
	Есть=Ложь;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Для Каждого Стр_111 Из  ВыборкаДетальныеЗаписи.Регистратор.КМИзAPI Цикл
			Если Найти(Стр_111.НомерКМ,РРР)=1 Тогда
				НомерКМ=Стр_111.НомерКМ;
				Есть=Истина;Прервать;
			КонецЕсли;
			
		Конеццикла;
		
		
	КонецЕсли;
	

			
			
			
			 Если Есть=Истина Тогда
			
				ООО=РаскодироватьСтроку(НомерКМ,СпособКодированияСтроки.КодировкаURL);
				
			Иначе	
				Если ЗначениеЗаполнено(Стр.КороткийНомер) Тогда
					ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
				Иначе
					ООО=Стр.НомерКМ	
				Конецесли;
			КонецЕсли;
			//ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
			CIS="("+Сред(ООО,1,2)+")";
			
			ГТИН=Сред(ООО,3);
			//CIS=CIS+Сред(ГТИН,1,Найти(ГТИН,"21")-1)+Символы.ПС+"(21)";
			//ГТИН=Сред(ГТИН,Найти(ГТИН,"21")+2);
			CIS=CIS+Сред(ГТИН,1,15-1)+Символы.ПС+"(21)";
			ГТИН=Сред(ГТИН,15+2);
			ТутУправляющийСимвол=ГТИН;
	CIS=CIS+Сред(ТутУправляющийСимвол,1,Найти(ТутУправляющийСимвол,Символ(29))-1);
		ТутУправляющийСимвол=КодироватьСтроку(ТутУправляющийСимвол,СпособКодированияСтроки.КодировкаURL);
			ТутУправляющийСимвол=СтрЗАменить(ТутУправляющийСимвол,"%1D","");
			
			
			
			Если Сред(ТутУправляющийСимвол,14,3)="240" Тогда
				CIS=CIS+Символы.ПС+"(240)";
		
				ГТИН=Сред(ГТИН,14+3);
			
				ТутУправляющийСимвол=Сред(ГТИН,1,6-1);
				ТутУправляющийСимвол=КодироватьСтроку(ТутУправляющийСимвол,СпособКодированияСтроки.КодировкаURL);
				ТутУправляющийСимвол=СтрЗАменить(ТутУправляющийСимвол,"%1D","");
				CIS=CIS+ТутУправляющийСимвол;
			КонецЕсли;
			//CIS=КодироватьСтроку(CIS,СпособКодированияСтроки.КодировкаURL);
			//CIS=СтрЗаменить(CIS,"%1D","");
			
			//Если           Найти(ГТИН,"91")>0 Тогда
				ГТИН=Сред(ГТИН,6);
			
			ОблМ.Параметры.cis=CIS;
			
			//ГУДИ=Сайт+"/pub/operatorui?_language=ru&_action=showVetDocumentFormByUuid&uuid="+Стр_В.ГУИД;
			
			
			
			Попытка
				Если ВерсияПравильная Тогда
			Картинка = ГенераторМатрицы.Сгенерировать(ООО); Иначе					ГенераторМатрицы=Обработки.ГенерацияDataMatrix_8_3_6_ХамелеонЦРПТ.Создать();

					Картинка = ГенераторМатрицы.Сгенерировать(ООО);
КонецЕсли;
			ОблМ.Рисунки.ДатаМ.Картинка=Новый Картинка(Картинка);
						
			Исключение
				Сообщить("Для печати Data Matrix необходим релиз 8.3.9 или выше");
				//Возврат;
			КонецПопытки;
		
							
					Таб.Вывести(ОблМ);
					Таб.ВывестиГоризонтальныйРазделительСтраниц();
			
			КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСПоОтстатки(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	
	Счетч=1;
		Форм=ОткрытьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.ВводЧисла",,,,,,Новый ОписаниеОповещения("ПослеВводПервогоЧисла_Остаток",ЭтаФорма));
	Форм.Число=Счетч;
	Форм.Заголовок="Начать печать с № КМ";
//	ПоказатьВводЧисла(Новый ОписаниеОповещения("ПослеВводПервогоЧисла_Остаток",ЭтаФорма),Счетч,"Начать печать с № КМ");
КонецПроцедуры
&НаКлиенте
Процедура ПослеВводПервогоЧисла_Остаток(РР,ДД) Экспорт
	Если ЗначениеЗаполнено(РР) Тогда
		Форм=ОткрытьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.ВводЧисла",,,,,,Новый ОписаниеОповещения("ПослеВводВторогоЧисла_Остаток",ЭтаФорма,РР));
	Форм.Число=30;
	Форм.Заголовок="Допечатать указанное количество № КМ";
		//ПоказатьВводЧисла(Новый ОписаниеОповещения("ПослеВводВторогоЧисла_Остаток",ЭтаФорма,РР),30,"Допечатать указанное количество № КМ");
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПослеВводВторогоЧисла_Остаток(РР,ДД) Экспорт
	Если ЗначениеЗаполнено(РР) Тогда
		
		Если ЗначениеЗаполненО(ЧислоПараллельныхПотоков) тогда
			Таб = ПечатьЭти_1_Остатки_Функция(ДД,РР);
			Таб.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КМ";
			
			Таб.Показать();
			
		Иначе
		
			Таб=Новый ТабличныйДокумент;
			ПечатьЭти_1_Остатки(Таб,ДД,РР);
			Таб.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КМ";
			
			Таб.Показать();
		Конецесли;
		//
		//Таб=Новый ТабличныйДокумент;
		//ПечатьЭти_1_Остатки(Таб,ДД,РР);
		//Таб.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КМ";
		//
		//Таб.Показать();
		
	КонецЕсли;
КонецПроцедуры


Функция ПечатьЭти_1_Остатки_Функция(Смещение,Количество) Экспорт
	//Обр=РеквизитФормыВЗначение("Объект_1");
	Ссылка=Объект.Ссылка;
	НомерТТН=Объект.Номер;
	Таб = Новый ТабличныйДокумент;
	Если ВерсияПравильная Тогда
		ГенераторМатрицы=Обработки.ГенерацияDataMatrix_ХамелеонЦРПТ.Создать();
		ГенераторМатрицы.Инициализировать();
	КонецЕсли;
	
	Мак=Документы.ЗаказМарок_ХамелеонЦРПТ.ПолучитьМакет("Макет2");
	ОблМ=Мак.ПолучитьОбласть("Строка");
		//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Если ВерсияПравильная Тогда
	ГенераторМатрицы=Обработки.ГенерацияDataMatrix_ХамелеонЦРПТ.Создать();
	ГенераторМатрицы.Инициализировать();
	                           КонецЕсли;
	МассивЗаданий = Новый Массив;
	ЧислоПараллельныхПотоков = РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().КоличествоЯдерДляГенерацииDataMatrix; 
	//ВремПапка = КаталогВременныхФайлов() + Формат(ТекущаяДата(), "ДФ=yyyyMMddHHmmss") + "\";
	ВремПапка=ПолучитьИмяВременногоФайла()+"\";	
	СчРисунков = 0;
		Если Смещение>Объект.НомераКМ.Количество() Тогда
			Возврат Таб;
		КонецЕсли;
		МинимумМ=Мин(Объект.НомераКМ.Количество()+1,СМещение+Количество)-1;
		Для СЧ=Смещение По МинимумМ
			//+1 
			Цикл
			Стр=Ссылка.НомераКМ[СЧ-1];
			ОблМ=Мак.ПолучитьОбласть("Строка");
			
			//НСтр=Объект.Товары.НайтиСтроки(Новый Структура("ID",Стр.Order_Id_Line));
			//Если НСтр.Количество()=0  Тогда
			//	Продолжить;
			//Иначе
			//	НСтр=НСтр[0];
			//КонецЕсли;
			
			Если ЗначениеЗаполнено(Стр.КороткийНомер) Тогда
				НомерКМ=Стр.КороткийНомер;
			Иначе
				НомерКМ=Стр.НомерКМ
			КонецЕсли;
			
			ГТИН=Сред(НомерКМ,3);
			ГТИН=Сред(ГТИН,1,15-1);
			GTIN=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(ГТИН));
			
			ОблМ.Параметры.Пол=GTIN.Пол;
				ОблМ.Параметры.Страна=GTIN.СтранаПроизводства;
			ОблМ.Параметры.GTIN=Обработки._Запуск_ХамелеонЦРПТ.ДополнитьСтроку_11(xmlString(GTIN.GTIN),14,"0");
			
				//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор
		|ИЗ
		|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Обороты(, , Регистратор, СерийныйНомер = &cis) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты
		|ГДЕ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор ССЫЛКА Документ.ЗаказМарок_ХамелеонЦРПТ";
	
	Запрос.УстановитьПараметр("cis", НомерКМ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	РРР=КодироватьСтроку(стр.НомерКМ,СпособКодированияСТроки.КодировкаURL);
//	НомерКМ=стрНомерКМ;
	Есть=Ложь;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Для Каждого Стр_111 Из  ВыборкаДетальныеЗаписи.Регистратор.КМИзAPI Цикл
			Если Найти(Стр_111.НомерКМ,РРР)=1 Тогда
				НомерКМ=Стр_111.НомерКМ;
				Есть=Истина;Прервать;
			КонецЕсли;
			
		Конеццикла;
		
		
	КонецЕсли;
	

			
			
			
			 Если Есть=Истина Тогда
			
				ООО=РаскодироватьСтроку(НомерКМ,СпособКодированияСтроки.КодировкаURL);
				
			Иначе	
				Если ЗначениеЗаполнено(Стр.КороткийНомер) тогда
					ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
					
				Иначе
					ООО=Стр.НомерКМ	
				КонецЕсли;
			КонецЕсли;
			//ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
			CIS="("+Сред(ООО,1,2)+")";
			
			ГТИН=Сред(ООО,3);
			//CIS=CIS+Сред(ГТИН,1,Найти(ГТИН,"21")-1)+Символы.ПС+"(21)";
			//ГТИН=Сред(ГТИН,Найти(ГТИН,"21")+2);
			CIS=CIS+Сред(ГТИН,1,15-1)+Символы.ПС+"(21)";
			ГТИН=Сред(ГТИН,15+2);
			ТутУправляющийСимвол=ГТИН;
	CIS=CIS+Сред(ТутУправляющийСимвол,1,Найти(ТутУправляющийСимвол,Символ(29))-1);
		ТутУправляющийСимвол=КодироватьСтроку(ТутУправляющийСимвол,СпособКодированияСтроки.КодировкаURL);
			ТутУправляющийСимвол=СтрЗАменить(ТутУправляющийСимвол,"%1D","");
			
			
			
			Если Сред(ТутУправляющийСимвол,14,3)="240" Тогда
				CIS=CIS+Символы.ПС+"(240)";
		
				ГТИН=Сред(ГТИН,14+3);
			
				ТутУправляющийСимвол=Сред(ГТИН,1,6-1);
				ТутУправляющийСимвол=КодироватьСтроку(ТутУправляющийСимвол,СпособКодированияСтроки.КодировкаURL);
				ТутУправляющийСимвол=СтрЗАменить(ТутУправляющийСимвол,"%1D","");
				CIS=CIS+ТутУправляющийСимвол;
			КонецЕсли;
			//CIS=КодироватьСтроку(CIS,СпособКодированияСтроки.КодировкаURL);
			//CIS=СтрЗаменить(CIS,"%1D","");
			
			//Если           Найти(ГТИН,"91")>0 Тогда
				ГТИН=Сред(ГТИН,6);
			
			ОблМ.Параметры.cis=CIS;
			
			//ГУДИ=Сайт+"/pub/operatorui?_language=ru&_action=showVetDocumentFormByUuid&uuid="+Стр_В.ГУИД;
			
			
			
						МассивПараметров = Новый Массив;
			МассивПараметров.Добавить(ООО);
			МассивПараметров.Добавить(ВремПапка + СчРисунков + ".bmp");
			МассивПараметров.Добавить(ГенераторМатрицы.ПобитИсклИли);
			
			Задание = ФоновыеЗадания.Выполнить("ОбщийМодуль_НаСервере_ХамелеонЦРПТ.СгенерироватьDataMatrix", МассивПараметров);
			МассивЗаданий.Добавить(Задание);
			
			Если МассивЗаданий.Количество() >= ЧислоПараллельныхПотоков Тогда
				Попытка
					ФоновыеЗадания.ОжидатьЗавершения(МассивЗаданий);
				Исключение
				КонецПопытки;
				МассивЗаданий.Очистить();
			КонецЕсли;
			
			ОблМ.Рисунки.ДатаМ.Имя = "Рис" + СчРисунков;
			СчРисунков = СчРисунков + 1;
							
					Таб.Вывести(ОблМ);
					Таб.ВывестиГоризонтальныйРазделительСтраниц();
			
			КонецЦикла;

	Если МассивЗаданий.Количество() > 0 Тогда
		Попытка
			ФоновыеЗадания.ОжидатьЗавершения(МассивЗаданий);
		Исключение
		КонецПопытки;
		МассивЗаданий.Очистить();
	КонецЕсли;
	
	Для Сч = 0 По СчРисунков - 1 Цикл
		ИсходнаяКартинка = Новый Картинка(ВремПапка + Сч + ".bmp");
		Таб.Рисунки["Рис"+Сч].Картинка = ИсходнаяКартинка.Преобразовать(ФорматКартинки.PNG);
	КонецЦикла;
	
	УдалитьФайлы(ВремПапка);
	Возврат Таб;
Конецфункции


Процедура ПечатьЭти_1_Остатки(Таб,Смещение,Количество) Экспорт
	//Обр=РеквизитФормыВЗначение("Объект_1");
	Ссылка=Объект.Ссылка;
	Если ВерсияПравильная Тогда
		ГенераторМатрицы=Обработки.ГенерацияDataMatrix_ХамелеонЦРПТ.Создать();
		ГенераторМатрицы.Инициализировать();
	КонецЕсли;
	
	Мак=Документы.ЗаказМарок_ХамелеонЦРПТ.ПолучитьМакет("Макет2");
	ОблМ=Мак.ПолучитьОбласть("Строка");
		//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Если ВерсияПравильная Тогда
	ГенераторМатрицы=Обработки.ГенерацияDataMatrix_ХамелеонЦРПТ.Создать();
	ГенераторМатрицы.Инициализировать();
	                           КонецЕсли;
			Если Смещение>Объект.НомераКМ.Количество() Тогда
			Возврат;
		КонецЕсли;
		МинимумМ=Мин(Объект.НомераКМ.Количество()+1,СМещение+Количество)-1;
		Для СЧ=Смещение По МинимумМ
			//+1 
			Цикл
			ОблМ=Мак.ПолучитьОбласть("Строка");
			
			Стр=Ссылка.НомераКМ[СЧ-1];
			
			//НСтр=Объект.Товары.НайтиСтроки(Новый Структура("ID",Стр.Order_Id_Line));
			//Если НСтр.Количество()=0  Тогда
			//	Продолжить;
			//Иначе
			//	НСтр=НСтр[0];
			//КонецЕсли;
			
			Если ЗначениеЗаполнено(Стр.КороткийНомер) Тогда
				НомерКМ=Стр.КороткийНомер
			Иначе
				НомерКМ=Стр.НомерКМ
			КонецЕсли;
			
			ГТИН=Сред(НомерКМ,3);
			ГТИН=Сред(ГТИН,1,15-1);
			GTIN=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(ГТИН));
			
			ОблМ.Параметры.Пол=GTIN.Пол;
				ОблМ.Параметры.Страна=GTIN.СтранаПроизводства;
			ОблМ.Параметры.GTIN=Обработки._Запуск_ХамелеонЦРПТ.ДополнитьСтроку_11(xmlString(GTIN.GTIN),14,"0");
			
				//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор
		|ИЗ
		|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Обороты(, , Регистратор, СерийныйНомер = &cis) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты
		|ГДЕ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОбороты.Регистратор ССЫЛКА Документ.ЗаказМарок_ХамелеонЦРПТ";
	
	Запрос.УстановитьПараметр("cis", НомерКМ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	РРР=КодироватьСтроку(стр.НомерКМ,СпособКодированияСТроки.КодировкаURL);
	//НомерКМ=стр.НомерКМ;
	Есть=Ложь;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Для Каждого Стр_111 Из  ВыборкаДетальныеЗаписи.Регистратор.КМИзAPI Цикл
			Если Найти(Стр_111.НомерКМ,РРР)=1 Тогда
				НомерКМ=Стр_111.НомерКМ;
				Есть=Истина;Прервать;
			КонецЕсли;
			
		Конеццикла;
		
		
	КонецЕсли;
	

			
			
			
			 Если Есть=Истина Тогда
			
				ООО=РаскодироватьСтроку(НомерКМ,СпособКодированияСтроки.КодировкаURL);
			
				
			Иначе	
				
				Если ЗначениеЗаполнено(Стр.КороткийНомер) тогда
			
					ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
					
				Иначе
					ООО=Стр.НомерКМ	
				КонецЕсли;
			КонецЕсли;
			//ООО=РаскодироватьСтроку(Стр.НомерКМ,СпособКодированияСтроки.КодировкаURL);
			CIS="("+Сред(ООО,1,2)+")";
			
			ГТИН=Сред(ООО,3);
			//CIS=CIS+Сред(ГТИН,1,Найти(ГТИН,"21")-1)+Символы.ПС+"(21)";
			//ГТИН=Сред(ГТИН,Найти(ГТИН,"21")+2);
			CIS=CIS+Сред(ГТИН,1,15-1)+Символы.ПС+"(21)";
			ГТИН=Сред(ГТИН,15+2);
			ТутУправляющийСимвол=ГТИН;
	CIS=CIS+Сред(ТутУправляющийСимвол,1,Найти(ТутУправляющийСимвол,Символ(29))-1);
		ТутУправляющийСимвол=КодироватьСтроку(ТутУправляющийСимвол,СпособКодированияСтроки.КодировкаURL);
			ТутУправляющийСимвол=СтрЗАменить(ТутУправляющийСимвол,"%1D","");
			
			
			
			Если Сред(ТутУправляющийСимвол,14,3)="240" Тогда
				CIS=CIS+Символы.ПС+"(240)";
		
				ГТИН=Сред(ГТИН,14+3);
			
				ТутУправляющийСимвол=Сред(ГТИН,1,6-1);
				ТутУправляющийСимвол=КодироватьСтроку(ТутУправляющийСимвол,СпособКодированияСтроки.КодировкаURL);
				ТутУправляющийСимвол=СтрЗАменить(ТутУправляющийСимвол,"%1D","");
				CIS=CIS+ТутУправляющийСимвол;
			КонецЕсли;
			//CIS=КодироватьСтроку(CIS,СпособКодированияСтроки.КодировкаURL);
			//CIS=СтрЗаменить(CIS,"%1D","");
			
			//Если           Найти(ГТИН,"91")>0 Тогда
				ГТИН=Сред(ГТИН,6);
			
			ОблМ.Параметры.cis=CIS;
			
			//ГУДИ=Сайт+"/pub/operatorui?_language=ru&_action=showVetDocumentFormByUuid&uuid="+Стр_В.ГУИД;
			
			
			
			Попытка
				Если ВерсияПравильная Тогда
			Картинка = ГенераторМатрицы.Сгенерировать(ООО); Иначе					ГенераторМатрицы=Обработки.ГенерацияDataMatrix_8_3_6_ХамелеонЦРПТ.Создать();

					Картинка = ГенераторМатрицы.Сгенерировать(ООО);
КонецЕсли;
			ОблМ.Рисунки.ДатаМ.Картинка=Новый Картинка(Картинка);
						
			Исключение
				Сообщить("Для печати Data Matrix необходим релиз 8.3.9 или выше");
				//Возврат;
			КонецПопытки;
		
							
					Таб.Вывести(ОблМ);
					Таб.ВывестиГоризонтальныйРазделительСтраниц();
			
			КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущийПользовательПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ДанныеИзПользователя=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьИзПользователя(Объект.ТекущийПользователь);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	// Вставить содержимое обработчика.
	МассивКМ=ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ВернутьКМИзФайлов();
	Для Каждого Стр Из МассивКМ Цикл
		ШтрихКод=Стр;
		ШтрихКодПриИзменении(Команда);
	Конеццикла;
КонецПроцедуры





