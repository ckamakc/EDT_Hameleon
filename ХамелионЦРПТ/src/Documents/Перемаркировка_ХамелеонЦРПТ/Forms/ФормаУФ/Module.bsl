Функция ВернутьКодТНВЭД(V_WEB_90001683)
		Если Не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.КодТНВЭД_ХамелеонЦРПТ.ПустаяСсылка()
	КонецЕсли;
	еСЛИ Найти(V_WEB_90001683,">") Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
 	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
 Иначе
	 //КодВида=V_WEB_90001683;
	 Наименование=V_WEB_90001683;
	 СпрВидОбуви=Справочники.КодТНВЭД_ХамелеонЦРПТ.НайтиПоНаименованию(Наименование);
	 Если СпрВидОбуви=Справочники.КодТНВЭД_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 Возврат Справочники.КодТНВЭД_ХамелеонЦРПТ.ПустаяСсылка()
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	КонецЕсли;
	 
 КонецЕсли;
 
 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КодТНВЭД_ХамелеонЦРПТ.Ссылка
		|ИЗ
		|	Справочник.КодТНВЭД_ХамелеонЦРПТ КАК КодТНВЭД_ХамелеонЦРПТ
		|ГДЕ
		|	КодТНВЭД_ХамелеонЦРПТ.Код ПОДОБНО &Код";
	
	Запрос.УстановитьПараметр("Код", КодВида+"%");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		 Возврат ВыборкаДетальныеЗаписи.Ссылка
	Иначе
		 СпрВидОбуви=Справочники.КодТНВЭД_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	КонецЕсли;
КонецФункции


Функция ВернутьСтрану(V_WEB_90000187)
	 КодВида_1=Сред(V_WEB_90000187,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.СтранаПроизводства_ХамелеонЦРПТ.НайтиПоРеквизиту("Альфа2",КодВида);
	 Если СпрВидОбуви=Справочники.СтранаПроизводства_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.СтранаПроизводства_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Альфа2=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	КонецЕсли;
КонецФункции

Функция РазмерСправочник(V_WEB_90001683) Экспорт
	Если Не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.ПустаяСсылка()
	КонецЕсли;
	еСЛИ Найти(V_WEB_90001683,">") Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
 	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
 Иначе
	 //КодВида=V_WEB_90001683;
	 Наименование=V_WEB_90001683;
	 СпрВидОбуви=Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.НайтиПоНаименованию(Наименование,истина);
	 Если СпрВидОбуви=Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 Возврат Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.ПустаяСсылка()
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	КонецЕсли;
	 
 КонецЕсли;
	 
	 СпрВидОбуви=Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.РазмерВШтихмассовойСистеме_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	КонецЕсли;
КонецФункции

Функция ВернутьПроизводителя(V_WEB_90000626)
	СпрПр=Справочники.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.НайтиПоРеквизиту("ИНН",V_WEB_90000626);
	Если СпрПр=Справочники.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		СпрПр=Справочники.ПроизводителиИмпортерыКонтрагенты_ХамелеонЦРПТ.СоздатьЭлемент();
		СпрПр.ИНН=V_WEB_90000626;
		СпрПр.Наименование=V_WEB_90000626;
		СпрПр.Записать();
		Возврат СпрПр.Ссылка
		
	Иначе
		Возврат СпрПр.Ссылка
	Конецесли;
	
КонецФункции

Функция ВидОбуви_ХамелеонЦРПТ(V_WEB_90001683) Экспорт
	Если не ЗначениеЗаполнено(V_WEB_90001683) Тогда
		Возврат Справочники.ВидОбуви_ХамелеонЦРПТ.ПустаяСсылка() 
	КонецЕсли;
	
	Если Сред(V_WEB_90001683,1,1)="<" Тогда
	 КодВида_1=Сред(V_WEB_90001683,2);
	 КодВида=Сред(КодВида_1,1,Найти(КодВида_1,">")-1);
	 
	 Наименование=СокрЛП(Сред(КодВида_1,Найти(КодВида_1,">")+1));
	 СпрВидОбуви=Справочники.ВидОбуви_ХамелеонЦРПТ.НайтиПоКоду(КодВида);
	 Если СпрВидОбуви=Справочники.ВидОбуви_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		 СпрВидОбуви=Справочники.ВидОбуви_ХамелеонЦРПТ.СоздатьЭлемент();
		 СпрВидОбуви.Код=КодВида;
		 СпрВидОбуви.Наименование=Наименование;
		 СпрВидОбуви.Записать();;
		 Возврат СпрВидОбуви.Ссылка
	 Иначе
		 Возврат СпрВидОбуви.Ссылка
	 КонецЕсли;
 Иначе
	 Возврат Справочники.ВидОбуви_ХамелеонЦРПТ.НайтиПоНаименованию(СокрЛП(V_WEB_90001683))
	 
	КонецЕсли;
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	
	//Для Каждого Стр Из УФ.Объект. Цикл
//	Конеццикла;
	
	
	Возврат;
КонецПроцедуры

&НаКлиенте
Процедура КопированиеФайла(РР,ДД_1) Экспорт
	ДД=ДД_1.Имя;
		ДовичнДанные=Новый ДвоичныеДанные(РР);
		НачатьУдалениеФайлов(Новый ОписаниеОповещения("УдаленияФайла",ЭтаФорма),РР);
		АдресВр=ПоместитьВоВременноеХранилище(ДовичнДанные);
		ЗагрузитьФайл(АдресВр,ДД,ДД_1.Расширение);
		ЭтаФорма.ВладелецФормы.Прочитать();
КонецПроцедуры

&НаКлиенте
Процедура УдаленияФайла(РР) Экспорт
	ЭтаФорма.Закрыть();
КонецПроцедуры


Процедура ОбработкаЗагрузкиДокумента(Докум,Адр,Расширение="xlsx") Экспорт
		
	ДДД=Документ1.ПолучитьОбъект();
	ДДД.СерийныеНомера.Очистить();
	ДДД.Товары.Очистить();
	
	
	Имяекселя_1=ПолучитьИмяВременногоФайла(Расширение);
	
	Дан=ПолучитьИзВременногоХранилища(Адр);
	Дан.Записать(Имяекселя_1);
	ОбластьФайла = Новый ТабличныйДокумент;
	Попытка
		// Выполняется долго на больших файлах.
		ОбластьФайла.Прочитать(Имяекселя_1, СпособЧтенияЗначенийТабличногоДокумента.Значение);
		УдалитьФайлы(Имяекселя_1);
	Исключение
		Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
		УдалитьФайлы(Имяекселя_1);
		Возврат;
	КонецПопытки;
	
	
	
	КолСтр = ОбластьФайла.ВысотаТаблицы;
	КолКолонок = ОбластьФайла.ШиринаТаблицы;
	
	ТаблицаРезультат = Новый ТаблицаЗначений;
	
	ТаблицаРезультат.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№", 4);
	ТаблицаРезультат.Колонки.Добавить("Сопоставлено", Новый ОписаниеТипов("Булево"), "Сопоставлено", 1);
	
	Для Сч = 1 ПО КолКолонок Цикл
		нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
		ИмяКолонки = "N" + нКолонка;
		ТаблицаРезультат.Колонки.Добавить(ИмяКолонки);
	КонецЦикла;
	
	// 1-я строка. Заголовки.
	НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
	НоваяСтрокаТФ.НомерСтроки = 1;
	Для Сч=1 ПО КолКолонок Цикл
		нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
		ИмяКолонки = "N" + нКолонка;
		НоваяСтрокаТФ[ИмяКолонки] = ОбластьФайла.ПолучитьОбласть("R1" + "C"+нКолонка).ТекущаяОбласть.Текст;
		
		// Используется при формировании таблицы на форме обработки.
		ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
		ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
		ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
	КонецЦикла;
	
	НачСтрока = ?(Не ЗначениеЗаполнено(НачСтрока), 2, НачСтрока);
	КонСтрока = ?(Не ЗначениеЗаполнено(КонСтрока), КолСтр, КонСтрока);
	
	Для нСтрокаТФ = НачСтрока ПО КонСтрока Цикл
		НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
		НоваяСтрокаТФ[0] = нСтрокаТФ;
		нСтрока = СтрЗаменить(нСтрокаТФ, Символы.НПП, "");
		Для Колонка = 1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Колонка, Символы.НПП, "");
			Область = ОбластьФайла.ПолучитьОбласть("R"+нСтрока+"C"+нКолонка);
			ТекущаяОбласть = Область.ТекущаяОбласть;
			Если Колонка=2 Или Колонка=5 Тогда
				ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
				Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
					ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
				Иначе
					ЗначениеЯчейки = Неопределено;
				КонецЕсли;
			Иначе
				Попытка
					ЗначениеЯчейки = xmlString(ТекущаяОбласть.Значение);        // Число, Дата.
				Исключение
					ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
					Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
						ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
					Иначе
						ЗначениеЯчейки = Неопределено;
					КонецЕсли;
				КонецПопытки;
			КонецЕсли;
			ИмяКолонки = "N" + нКолонка;
			НоваяСтрокаТФ[ИмяКолонки] = ЗначениеЯчейки;
			
			// Используется при формировании таблицы на форме обработки.
			ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
			ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
			ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
		КонецЦикла;
	КонецЦикла;
	
	// Юзабилити. Удалить пустые колонки.
 	
		//	Возврат ТаблицаРезультат;	
	//Докум.GS1.Очистить();
	НачинаемЗаписывать=Ложь;
	Для Каждого Стр Из ТаблицаРезультат Цикл
		
		Попытка
			GTIN=Число(xmlString(Стр.N5));
		Исключение
			Продолжить;
			
		КонецПопытки;
		Если Не ЗначениеЗаполнено(GTIN) Тогда
			Продолжить;
		КонецЕсли;
		
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		// Данный фрагмент построен конструктором.
		// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.СерийныйНомер КАК СерийныйНомер,
			|	СУММА(ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.КоличествоОстаток) КАК КоличествоОстаток
			|ИЗ
			|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Остатки(
			|			,
			|			Продукция.GTIN = &ГТИН
			|				И Организация = &Организация) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки
			|
			|СГРУППИРОВАТЬ ПО
			|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.СерийныйНомер
			|ИТОГИ
			|	СУММА(КоличествоОстаток)
			|ПО
			|	СерийныйНомер";
		
		Запрос.УстановитьПараметр("ГТИН", GTIN);
		Запрос.УстановитьПараметр("Организация", Документ1.Организация);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаСерийныйНомер = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если 
		     ВыборкаСерийныйНомер.Количество()=0 Тогда
			 Сообщить("ГТИН "+GTIN+" нет на остатках " );
			 Продолжить;
			КонецЕсли;
		Пока ВыборкаСерийныйНомер.Следующий() Цикл
			// Вставить обработку выборки ВыборкаСерийныйНомер
			
			Если                 ВыборкаСерийныйНомер.КоличествоОстаток<=0 Тогда
				Продолжить;
			КонецЕсли;
			    ШтрихКод=ВыборкаСерийныйНомер.СерийныйНомер;
	ШтрихКод_1=(ШтрихКод);
	
	//ШтрихКод_1=КодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	//штрихКод=СтрЗаменить(ШтрихКод_1,"%1D","");
		Если ДДД.СерийныеНомера.НайтиСтроки(Новый Структура("cis",ШтрихКод)).Количество()>0 Тогда
			Сообщить("CiS "+ШтрихКод+" уже присутствует в документе");
			Продолжить;
		КонецЕсли;
	///КонецЕсли;	
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция
		|ИЗ
		|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Остатки(
		|			,
		|			Организация = &Организация
		|				И СерийныйНомер = &СерийныйНомер) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки";
	
	Запрос.УстановитьПараметр("Организация", Документ1.Организация);
	Запрос.УстановитьПараметр("СерийныйНомер", ШтрихКод);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		Продукция=ВыборкаДетальныеЗаписи.Продукция;
			Добав=ДДД.СерийныеНомера.Добавить();
		Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
		Добав.НаименованиеТовара=Продукция;
		Добав.cis=ШтрихКод;
		
		
		ППП=ДДД.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
		Если ППП.Количество()=0 Тогда
			Добав_1=ДДД.Товары.Добавить();
			Добав_1.GTIN=Продукция;
			Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
	Если Продукция.СтранаПроизводства.Альфа2="RU" Тогда
		//СтрП="Производство в РФ";
			Добав_1.СпособВыпускаТоваров="Производство в РФ";
	Иначе
		//СтрП="Ввезен в РФ";
			Добав_1.СпособВыпускаТоваров="Ввезен в РФ";
		
	КонецЕсли;
			Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
			Добав_1.КоличествоКМ=1;
			Добав_1.ДекларацияИлиСертификатСоответствия=РегистрыСведений.ПодтверждающиеДокументы_ХамелеонЦРПТ.ПолучитьПоследнее(ДДД.Дата,
			Новый Структура("Продукция",Продукция)).Документ;
		Иначе
			Добав_1=ППП[0];
			Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
			
		КонецЕсли;
		Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
		
	КонецЦикла;
	
			
		КонецЦикла;
		
		//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

		
		
		
	Конеццикла;	
	
	ДДД.Записать();

КонецПроцедуры

Функция дополнитьСтроку(Ср)
	ВОзврат Обработки._Запуск_ХамелеонЦРПТ.ДополнитьСтроку_11(Ср,14,"0");
	
Конецфункции



Процедура ЗагрузитьФайл(АдресВр,ИмяФ,Расширение)
	
	ОбработкаЗагрузкиДокумента(Объект,АдресВр,Расширение);
		
КонецПроцедуры

Функция СоздатьДекларацию()
	
			Сертификат_1=Справочники.Сертификат_ДекларацияСоответствия_ХамелеонЦРПТ.НайтиПоНаименованию(
			 НаименованиеСертификата);
			 Если ЗначениеЗаполнено(Сертификат_1) тогда
				 Сертификат_1=Сертификат_1.ПолучитьОбъект();
			 Иначе
				 Сертификат_1=Справочники.Сертификат_ДекларацияСоответствия_ХамелеонЦРПТ.СоздатьЭлемент();
			  КонецЕсли;
			Сертификат_1.Наименование=НаименованиеСертификата;
			Сертификат_1.ДатаНачалаДействия=ДатаС;
			 //Сертификат.ВидСертификатаGSI=ВидСертификатов(Тип);
			 Сертификат_1.ЭтоСертификат=Сертификат;
			 Сертификат_1.Записать();
			    Возврат  Сертификат_1.Ссылка
	
КонецФункции

//Процедура ЗагрузитьДекларацииВВСД(ВВ)
//	Декларация=СоздатьДекларацию();
//	
//	ДД=ВВ.ПолучитьОбъект();
//	Для Каждого Стр_1 Из ДД.Товары Цикл
//		Стр_1.ДекларацияИлиСертификатСоответствия=Декларация;
//	КонецЦикла;
//	ДД.Записать();
//	
//КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	// Вставить содержимое обработчика.
	//Декларация=СоздатьДекларацию();
	Для Каждого Стр_1 Из ЭтаФорма.ВладелецФормы.Элементы.Товары.ВыделенныеСтроки Цикл
		Стр=ЭтаФорма.ВладелецФормы.Объект.Товары.НайтиПоИдентификатору(Стр_1);
		Стр.ДекларацияИлиСертификатСоответствия=ДекларацияИлиСертификат;
		//ЗагрузитьДекларацииВВСД(Стр);
		//Стр.ДекларацияИлиСертификатСоответствия=Декларация;
	Конеццикла;
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

