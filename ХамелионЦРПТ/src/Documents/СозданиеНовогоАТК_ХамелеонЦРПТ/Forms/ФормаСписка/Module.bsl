
&НаКлиенте
Процедура ОтправитьВЦРПТ(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	Для Каждого Стр Из Элементы.Список.ВыделенныеСтроки Цикл
		Форм=ПолучитьФорму("Документ.СозданиеНовогоАТК_ХамелеонЦРПТ.Форма.ФормаДокумента",Новый Структура(
		"Ключ",Стр));
		Форм.ОтправитьВЦРПТ(Команда);
	КонецциклА;
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	// Вставить содержимое обработчика.
		Таб=Новый ТабличныйДокумент;
		
		Для Каждого Стр Из Элементы.Список.ВыделенныеСтроки Цикл
			Форм=ПолучитьФорму("Документ.СозданиеНовогоШкНаКороба_ХамелеонЦРПТ.Форма.ФормаДокумента",Новый Структура(
			"Ключ",Стр));
			Форм.ВывестиТаблКодCODE128_КОРОБА(Таб);
		КонецциклА;
		Таб.Показать();
КонецПроцедуры

&НаСервере
Функция HELPНаСервере()
	// Вставить содержимое обработчика.
	Возврат Документы.СозданиеНовогоШкНаКороба_ХамелеонЦРПТ.ПолучитьМакет("HELP");
КонецФункции

&НаКлиенте
Процедура HELP(Команда)
	Текст=HELPНаСервере();
	Текст.Показать();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВнешниеОбработки(Команда)
	// Вставить содержимое обработчика.
		// Вставить содержимое обработчика.
		ОткрытьФорму("Справочник.ВнешниеОбработки_ХамелеонЦРПТ.Форма.ФормаСписка",
		Новый структура("Тип",
			"СозданиеАгрегации"));

	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ЗаполнитьСправочникВнешний("СозданиеАгрегации","1",Элементы.ГруппаКнопокВнешняя1,"Подключаемый_ВыполнитьКомандуВнешняя_Агрегации");
	ЗаписыватьДанныеПриОтправкеЗаказа=РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().ЗаписыватьДанныеПриОтправкеЗаказа;
	ПроверятьПередОтправкойНомерКоробаИСоздаватьНовый=РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().ПроверятьПередОтправкойНомерКоробаИСоздаватьНовый;
	
КонецПроцедуры

Процедура   ЗаполнитьСправочникВнешний(ИмяСпрД,Доп,ГруппаКнопокВнешняя,ИмяДейстия)
			//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВнешниеОбработки_ХамелеонЦРПТ.ИмяВнешнейОБработки,
		|	ВнешниеОбработки_ХамелеонЦРПТ.НаименованиеКнопки,
		|	ВнешниеОбработки_ХамелеонЦРПТ.Код
		|ИЗ
		|	Справочник.ВнешниеОбработки_ХамелеонЦРПТ КАК ВнешниеОбработки_ХамелеонЦРПТ
		|ГДЕ
		|	ВнешниеОбработки_ХамелеонЦРПТ.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", ИмяСпрД); //"Документ.ВетеринарныеСправки_ХамелеонЦРПТ");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		ИмяКоманды="Команда"+ВыборкаДетальныеЗаписи.Код;
		Попытка
		КомандаФормы = Команды.Добавить(ИмяКоманды);
		КомандаФормы.Действие = ИмяДейстия;
		КомандаФормы.Заголовок = ВыборкаДетальныеЗаписи.ИмяВнешнейОБработки;
		КомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
		КомандаФормы.Отображение = ОтображениеКнопки.Текст;
		
		//ОписаниеКомандыПечати.ИмяКомандыНаФорме = ИмяКоманды;
		
		НовыйЭлемент = Элементы.Добавить("ГруппаКнопокВнешняя"+Доп+ ИмяКоманды, Тип("КнопкаФормы"), ГруппаКнопокВнешняя);
		НовыйЭлемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		НовыйЭлемент.Заголовок=ВыборкаДетальныеЗаписи.НаименованиеКнопки;
		НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	Исключение
		КонецПопытки;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
КонецПроцедуры


&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуВнешняя_Агрегации(Команда)
	
//	// Вставить содержимое обработчика.	// Вставить содержимое обработчика.
	Если Элементы.Список.ТекущиеДанные<>Неопределено Тогда
		
		Попытка
			ВернДв=ВернутьИмяФайла(Команда.Имя);
			Если Тип("ДвоичныеДанные")=ТипЗнч(ВернДв) Тогда
				ДвоичныеДанные=ВернДв;
			Иначе
				ДвоичныеДанные=Новый ДвоичныеДанные(ВернДв);
			Конецесли;
			ОбработкаИмя=ПолучитьИмяВнешней(Двоичныеданные);
			ОткрытьФорму("ВнешняяОбработка."+ОбработкаИмя+".Форма",Новый Структура("Ссылка",Элементы.Список.ТекущиеДанные.Ссылка),ЭтаФорма);
		Исключение
			Попытка
#Если ТолстыйКлиентОбычноеПриложение  Тогда
		ВернДв=ВернутьИмяФайла(Команда.Имя);
		Если Тип("ДвоичныеДанные")=ТипЗнч(ВернДв) Тогда
			//ДвоичныеДанные=ВернДв;
			ДвоичныеДанные=ПолучитьИмяВременногоФайла();
			ВернДв.Записать(ДвоичныеДанные);
			
		Иначе
			ДвоичныеДанные=ВернДв;
		Конецесли;
				ВернутьВн(ДвоичныеДанные);
				Если Тип("ДвоичныеДанные")=ТипЗнч(ВернДв) Тогда
					УдалитьФайлы(ДвоичныеДанные);
				КонецЕсли;
#Иначе
				
			ПоказатьПредупреждение(,"Не удалось выполнить внешнюю обработку");
#КонецЕсли
			Исключение
				ПоказатьПредупреждение(,"Не удалось выполнить внешнюю обработку");
			КонецПопытки;
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

#Если ТолстыйКлиентОбычноеПриложение  Тогда
&НаКлиенте
Процедура ВернутьВн(ДвоичныеДанные)
	//ИмяВременФ=ПолучитьИмяВременногоФайла();
	//ДвоичныеДанные.Записать(ИмяВременФ);
	ВнешняяОбработка=ВнешниеОбработки.Создать(ДвоичныеДанные);
	Фоорма=ВнешняяОбработка.ПолучитьФорму(,ЭтаФорма);
	Попытка
		Фоорма.УФ=ЭтаФорма;
	Исключение
	КонецПопытки;
	Фоорма.Открыть();
Конецпроцедуры      	
#КонецЕсли



Функция ВернутьИмяФайла(Команда)
//	Если РегистрыСведений.НастройкиПрограммыЦРПТ.Получить().ЗагружатьВнешниеОбработкиИзХранилища Тогда
		Возврат Справочники.ВнешниеОбработки_ХамелеонЦРПТ.НайтиПоКоду(Сред(Команда,8)).Хранилище.Получить();
//	Иначе
//		СпрВн=Справочники.ВнешниеОбработки_ХамелеонЦРПТ.НайтиПоКоду(Сред(Команда,8));
//	Конецесли;
	
//	Возврат СпрВн.ИмяВнешнейОБработки
	//НаимСправочника=Метаданные.НайтиПоТипу(ТипЗнч(Объект.Ссылка)).ПолноеИмя();
	//Спр=Справочники.ВнешниеОбработки_ХамелеонЦРПТ.НайтиПоНаименованию(НаимСправочника,Истина);
	//Если Спр<>Справочники.ВнешниеОбработки_ХамелеонЦРПТ.ПустаяСсылка() Тогда
	//	Возврат Спр.ИмяВнешнейОБработки;
	//Конецесли;
	
КонецФункции

Функция ПолучитьИмяВнешней(ИмяФайла)
    АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ИмяФайла);
    ИмяОбр = ВнешниеОбработки.Подключить(АдресВоВременномХранилище,,Ложь);
    Возврат ИмяОбр;
КонецФункции

&НаСервере
Процедура АннулироватьНаСервере()
	// Вставить содержимое обработчика.
	Для Каждого Стр_1 Из Элементы.Список.ВыделенныеСтроки Цикл
		СоздатьДокум(Стр_1);
	Конеццикла;
	
КонецПроцедуры

Процедура СоздатьДокум(Докум)
	Если Докум.Статус=Перечисления.СтатусыДокументов_ХамелеонЦРПТ.Обработан Тогда
		Докум_2=Документы.СозданиеНовогоАТК_ХамелеонЦРПТ.СоздатьДокумент();
		ЗаполнитьЗначенияСвойств(Докум_2,Докум,,"Номер");
		Докум_2.Дата=Текущаядата();
		Докум_2.Статус="";
		Докум_2.ОшибкаОтправки="";
		Докум_2._Order_ID="";
		Если Докум.ТипДОкумента=Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Расформирование Тогда
			
			Для Каждого Стр_1 Из Докум.Марки Цикл
				Докум_2=Документы.СозданиеНовогоАТК_ХамелеонЦРПТ.СоздатьДокумент();
				ЗаполнитьЗначенияСвойств(Докум_2,Докум,,"Номер");
				Докум_2.Дата=Текущаядата();
				Докум_2.Статус="";
				Докум_2.ОшибкаОтправки="";
				Докум_2._Order_ID="";
				Докум_2.ТипДокумента=Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Формирование;
				//Докум_2.НомерКороба=Стр_1.Марка;
				
				НСтр=Докум.МаркиОприходовать.НайтиСтроки(Новый Структура("НомерКороба",Стр_1.Марка));
				Для Каждого Стр_МАрк из Нстр Цикл
					Штрихкод=Стр_МАрк.Марка;
					Если СтрДлина(Штрихкод)=18 Тогда
						Если Докум_2.Марки.НайтиСтроки(Новый Структура("Марка",ШтрихКод)).Количество()>0 Тогда
							Сообщить("Данный CIS "+Штрихкод+" уже присутствует в документе");
							Возврат;
						КонецЕсли;
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция КАК Продукция,
							|	СУММА(ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.КоличествоОстаток-ЕСТЬNULL(Резервы_ХамелеонЦРПТОстатки.КоличествоОстаток, 0)) КАК Остаток
							|ИЗ
							|	РегистрНакопления.ОстаткиКМ_в_Обороте_ХамелеонЦРПТ.Остатки(
							|			,
							|			Организация = &Организация
							|				И СерийныйНомер = &СерийныйНомер) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки
							|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резервы_ХамелеонЦРПТ.Остатки(
							|				,
							|				Организация = &Организация
							|					И СерийныйНомер = &СерийныйНомер) КАК Резервы_ХамелеонЦРПТОстатки
							|		ПО ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.СерийныйНомер = Резервы_ХамелеонЦРПТОстатки.СерийныйНомер
							|			И ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Организация = Резервы_ХамелеонЦРПТОстатки.Организация
							|
							|СГРУППИРОВАТЬ ПО
							|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция
							|ИТОГИ
							|	СУММА(Остаток)
							|ПО
							|	Продукция";
						
						Запрос.УстановитьПараметр("Организация", Докум_2.Организация);
						Запрос.УстановитьПараметр("СерийныйНомер", ШтрихКод);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							// Вставить обработку выборки ВыборкаДетальныеЗаписи
							Если 		                   ВыборкаДетальныеЗаписи.Остаток<=0 Тогда
								Продолжить;
							КонецЕсли;
							Добав=Докум_2.Марки.Добавить();
							Добав.Марка=ШтрихКод;
							Добав.Продукция=ВыборкаДетальныеЗаписи.Продукция;
							
						КонецЦикла;
						
						
						Возврат;
					КонецЕсли;
					
					ШтрихКод=КодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
					штрихКод_1=СтрЗаменить(ШтрихКод,"%1D","");
					ШтрихКод=Сред(штрихКод_1,1,38);
							Если Сред(ШтрихКод,32,3)<>"240" Тогда
								//ШтрихКод=Сред(ШтрихКод,1,31);
								ШтрихКод=Сред(штрихКод_1,1,Найти(штрихКод_1,"%1D")-1);
								ШтрихКод=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
								
							КонецЕсли;

					
					Если Докум_2.Марки.НайтиСтроки(Новый Структура("Марка",ШтрихКод)).Количество()>0 Тогда
						Сообщить("Данный CIS "+Штрихкод+" уже присутствует в документе");
						Возврат;
					КонецЕсли;
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция КАК Продукция,
						|	СУММА(ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.КоличествоОстаток - -ЕСТЬNULL(Резервы_ХамелеонЦРПТОстатки.КоличествоОстаток, 0)) КАК Остаток
						|ИЗ
						|	РегистрНакопления.ОстаткиКМ_в_Обороте_ХамелеонЦРПТ.Остатки(
						|			,
						|			Организация = &Организация
						|				И СерийныйНомер = &СерийныйНомер) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки
						|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резервы_ХамелеонЦРПТ.Остатки(
						|				,
						|				Организация = &Организация
						|					И СерийныйНомер = &СерийныйНомер) КАК Резервы_ХамелеонЦРПТОстатки
						|		ПО ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.СерийныйНомер = Резервы_ХамелеонЦРПТОстатки.СерийныйНомер
						|			И ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Организация = Резервы_ХамелеонЦРПТОстатки.Организация
						|
						|СГРУППИРОВАТЬ ПО
						|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция
						|
						|ОБЪЕДИНИТЬ ВСЕ
						|
						|ВЫБРАТЬ
						|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция,
						|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.КоличествоОстаток
						|ИЗ
						|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Остатки(
						|			,
						|			Организация = &Организация
						|				И СерийныйНомер = &СерийныйНомер) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки
						|
						|СГРУППИРОВАТЬ ПО
						|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция,
						|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.КоличествоОстаток
						|ИТОГИ
						|	СУММА(Остаток)
						|ПО
						|	Продукция";
					
					Запрос.УстановитьПараметр("Организация", Докум_2.Организация);
					Запрос.УстановитьПараметр("СерийныйНомер", ШтрихКод);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						Если 		                   ВыборкаДетальныеЗаписи.Остаток<=0 Тогда
							Продолжить;
						КонецЕсли;
						Добав=Докум_2.Марки.Добавить();
						Добав.Марка=ШтрихКод;
						Добав.Продукция=ВыборкаДетальныеЗаписи.Продукция;
							
						
					КонецЦикла;
					
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					
				КонецЦикла;
				Докум_2.Записать();
				Сообщить("Создан документ "+Строка(Докум_2.Ссылка));
			Конеццикла;
			
			
			
		Иначеесли Докум.типДокумента=Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Формирование 
			ИЛИ Не ЗначениеЗаполнено(Докум.типДокумента) Тогда
			Докум_2.ТипДокумента=Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Расформирование;
			Докум_2.НомерКороба="";
			Добав=Докум_2.Марки.Добавить();
			Добав.Марка=Докум.НомерКороба;
			Добав.Продукция=Докум.Продукция;
			Докум_2.Записать();
			Сообщить("Создан документ "+Строка(Докум_2.Ссылка));
			
			
		КонецЕсли;
	КонецЕслИ;
КонецПроцедуры

&НаКлиенте
Процедура Аннулировать(Команда)
	
	
	АннулироватьНаСервере();
	Элементы.Список.Обновить();;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	// Вставить содержимое обработчика.
	Обр=ОткрытьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Обр.ОбновитьСтатусыДокументов(Команда);
	Попытка
		ЭтаФорма.ВладелецФормы.Активизировать();
	исключение
	КонецПопытки;
	
	ЭтаФорма.Активизировать();
	Элементы.Список.Обновить();;
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	// Вставить содержимое обработчика.
	
	Массив=Новый Массив;
	Для Каждого Стр_1 Из Элементы.Список.ВыделенныеСтроки Цикл
		Если ТипЗнч(Стр_1)=Тип("ДокументСсылка.СозданиеНовогоШкНаКороба_ХамелеонЦРПТ") Тогда
		  Массив.Добавить(Стр_1);
		 КонецЕсли;
	  Конеццикла;
	  КоличествоДокументов=0;
	  КоличествоШтук=0;
	НаСервереПодсчет(Массив,КоличествоШтук,КоличествоДокументов);
	ЭтаФорма.Заголовок="Количество документов "+Строка(КоличествоДокументов)+", количество марок "+Формат(КоличествоШтук,"ЧГ=");
	
КонецПроцедуры

Процедура НаСервереПодсчет(ММММ,КоличествоШтук,КоличествоДокументов)
		КоличествоШтук=0;
	КоличествоДокументов=0;
	Для Каждого Стр Из                     ММММ Цикл
		КоличествоШтук=КоличествоШтук+Стр.КоличествоВКоробе;
		КоличествоДокументов=КоличествоДокументов+1;
	Конеццикла;
КонецПроцедуры


&НаКлиенте
Процедура РасформироватьВыделенныеСтрочки(Команда)
	// Вставить содержимое обработчика.
	МассивДокументов=Новый Массив;
	Для Каждого Стр_1 Из Элементы.Список.ВыделенныеСтроки Цикл
		МассивДокументов.Добавить(Стр_1);
		
	Конеццикла;
	СоздатьДокументРасформированияОдин(МассивДокументов);
	
	Элементы.Список.Обновить();
КонецПроцедуры


Процедура СоздатьДокументРасформированияОдин(МассивДокументов)
	
	МассивДокументов_1=Новый ТаблицаЗначений;
	МассивДокументов_1.Колонки.Добавить("ТекущийПользователь");
	МассивДокументов_1.Колонки.Добавить("Документ");
	
	
	Для Каждого Стр_1 Из МассивДокументов Цикл
		Если 
			Не ЗначениеЗаполнено(Стр_1.НомерКороба)
			  ИЛИ
			ЗначениеЗаполнено(Стр_1.ТипДокумента) И Стр_1.ТипДокумента<>Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Формирование Тогда 
			
			
			
			Если Стр_1.ТипДокумента=Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Расформирование Тогда
				МММ=МассивДокументов_1.Найти(Стр_1.ТекущийПользователь);
				Если МММ=Неопределено тогда
					
					МММ=МассивДокументов_1.Добавить();
					МММ.ТекущийПользователь=Стр_1.ТекущийПользователь;
					
					Докум_2=Документы.СозданиеНовогоАТК_ХамелеонЦРПТ.СоздатьДокумент();
					Докум_2.Дата=Текущаядата();
					Докум_2.ТекущийПользователь=Стр_1.ТекущийПользователь;
					Докум_2.Организация=Стр_1.Организация;
					Докум_2.ТипДокумента=Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Расформирование;
					Докум_2.НомерКороба="";
					МММ.Документ=Докум_2;
					
					
					
					
				КонецЕсли;
				
				Для Каждого Стр_20 Из Стр_1.МаркиОприходовать Цикл
					Если СтрДлина(Стр_20.Марка)=18 Тогда
						Добав=МММ.Документ.Марки.Добавить();
						Добав.Марка=Стр_20.Марка;
						Добав.Продукция=Стр_1.Продукция;
					КонецЕсли;
				Конеццикла;
			     Продолжить;
					
			Иначе
			
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		
		МММ=МассивДокументов_1.Найти(Стр_1.ТекущийПользователь);
		Если МММ=Неопределено тогда
			
			МММ=МассивДокументов_1.Добавить();
			МММ.ТекущийПользователь=Стр_1.ТекущийПользователь;
			
			Докум_2=Документы.СозданиеНовогоАТК_ХамелеонЦРПТ.СоздатьДокумент();
			Докум_2.Дата=Текущаядата();
			Докум_2.ТекущийПользователь=Стр_1.ТекущийПользователь;
			Докум_2.Организация=Стр_1.Организация;
			Докум_2.ТипДокумента=Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Расформирование;
			Докум_2.НомерКороба="";
			МММ.Документ=Докум_2;
								
			
			
			
		КонецЕсли;
		
			Добав=МММ.Документ.Марки.Добавить();
			Добав.Марка=Стр_1.НомерКороба;
			Добав.Продукция=Стр_1.Продукция;
		
	Конеццикла;
	
	Для каждого Стр Из МассивДокументов_1 Цикл
		Если Стр.Документ.Марки.Количество()>0 Тогда
			Стр.Документ.Записать();
		КонецЕсли;
		
		Сообщить("Создан документ "+Строка(Стр.Документ.Ссылка));
	Конеццикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСКМ(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
		Таб=Новый ТабличныйДокумент;
		
		Для Каждого Стр Из Элементы.Список.ВыделенныеСтроки Цикл
			Форм=ПолучитьФорму("Документ.СозданиеНовогоШкНаКороба_ХамелеонЦРПТ.Форма.ФормаДокумента",Новый Структура(
			"Ключ",Стр));
			Форм.ВывестиТаблКодCODE128_КОРОБА_КМ(Таб);
		КонецциклА;
		Таб.Показать();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусыВыделенных(Команда)
	// Вставить содержимое обработчика.
	Обр=ОткрытьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Для Каждого Стр_11 Из Элементы.Список.ВыделенныеСтроки Цикл
		Обр.ОбновитьСтатусыДокументов(Команда,,,Стр_11,,4);
	Конеццикла;
	Попытка
		ЭтаФорма.ВладелецФормы.Активизировать();
	исключение
	КонецПопытки;
	ЭтаФорма.Активизировать();
	Элементы.Список.Обновить();;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьОтгрузкуПоВыделенным(Команда)
	// Вставить содержимое обработчика.
	СписокАг=Новый Массив;
	
	Для Каждого Стр_1 Из Элементы.Список.ВыделенныеСтроки Цикл
		СписокАг.Добавить(Стр_1);
		
	Конеццикла;
	
	Отгрузка=ФормируемОтгрузку(СписокАг);
	
	Если ЗначениеЗаполнено(Отгрузка) тогда
		ОткрытьФорму("Документ.Отгрузка_ХамелеонЦРПТ.Форма.ФормаДокумента",
		Новый Структура("Ключ",Отгрузка));
	Иначе
		ПоказатьПредупреждение(,"Нет агрегаций для формирования отгрузки");
	КонецЕслИ;
КонецПроцедуры


&НаСервереБезКонтекста
Функция дополнитьСтроку(Ср)
	ВОзврат Обработки._Запуск_ХамелеонЦРПТ.ДополнитьСтроку_11(Ср,14,"0");
	
Конецфункции


Функция ФормируемОтгрузку(СписокАг)
	
Если СписокАг.Количество()>0 Тогда
		Транз=Документы.Отгрузка_ХамелеонЦРПТ.СоздатьДокумент();
		
	
	Транз.ВидТоварооборота=Перечисления.ВидТоварооборота_ХамелеонЦРПТ.SELLING;
	Транз.Дата=СписокАг[0].Дата;
	Транз.ДатаПередачиТовара=Транз.Дата;
	
	Транз.Организация=СписокАг[0].Организация;
	Транз.Статус="";
	Транз.ТекущийПользователь=СписокАг[0].ТекущийПользователь;
	
	Для Каждого Стр_1 из списокАг Цикл
		
		
		Если Стр_1.ТипДокумента=Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Формирование Тогда
			
			//Для Каждого Стр Из Стр_1.Марки Цикл
				
//				Добав=Транз.СерийныеНомера.Добавить();
				
				//Добав.cis=Стр.cis;
				
				//Если ЗначениеЗаполнено(Стр.Марка) Тогда
				  //Штрихкод=Стр.Марка;
				//Иначе
				  //Штрихкод=Стр.cis;
				//КонецЕсли;
				Штрихкод=Стр_1.НомерКороба;
	//Если СтрДлина(Штрихкод)=18 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция КАК Продукция,
			|	СУММА(ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.КоличествоОстаток-ЕСТЬNULL(Резервы_ХамелеонЦРПТОстатки.КоличествоОстаток, 0)) КАК Остаток
			|ИЗ
			|	РегистрНакопления.ОстаткиКМ_в_Обороте_ХамелеонЦРПТ.Остатки(
			|			,
			|			Организация = &Организация
			|				И СерийныйНомер = &СерийныйНомер) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резервы_ХамелеонЦРПТ.Остатки(
			|				,
			|				Организация = &Организация
			|					И СерийныйНомер = &СерийныйНомер) КАК Резервы_ХамелеонЦРПТОстатки
			|		ПО ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.СерийныйНомер = Резервы_ХамелеонЦРПТОстатки.СерийныйНомер
			|			И ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Организация = Резервы_ХамелеонЦРПТОстатки.Организация
			|
			|СГРУППИРОВАТЬ ПО
			|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция
			|ИТОГИ
			|	СУММА(Остаток)
			|ПО
			|	Продукция";
		
		Запрос.УстановитьПараметр("Организация", Транз.Организация);
		Запрос.УстановитьПараметр("СерийныйНомер", ШтрихКод);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			// Вставить обработку выборки ВыборкаДетальныеЗаписи
			Если 		                   ВыборкаДетальныеЗаписи.Остаток<=0 Тогда
				Продолжить;
			КонецЕсли;
			Продукция=ВыборкаДетальныеЗаписи.Продукция;
			Добав=Транз.СерийныеНомера.Добавить();
			Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
			Добав.НаименованиеТовара=Продукция;
			Добав.cis=ШтрихКод;
			
			
			ППП=Транз.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
			Если ППП.Количество()=0 Тогда
				Добав_1=Транз.Товары.Добавить();
				Добав_1.GTIN=Продукция;
				Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
	//			Добав_1.СпособВыпускаТоваров="";
				Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
			Иначе
				Добав_1=ППП[0];
			КонецЕсли;
			Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
			Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
			
		КонецЦикла;  Продолжить;
		
		
//	КонецЕсли;
	
	
	//ШтрихКод=КодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	ШтрихКод_1=(ШтрихКод);
	
	//ШтрихКод_1=КодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	//штрихКод=СтрЗаменить(ШтрихКод_1,"%1D","");
	ШтрихКод=Сред(ШтрихКод,1,38);
	//штрихКод_1=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	Если Сред(штрихКод_1,32,3)<>"240" Тогда
		Если Стр_1.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фото" тогда
								ШтрихКод=Сред(ШтрихКод,1,38);
		Иначе	
			
								ШтрихКод=Сред(ШтрихКод,1,31);
								Конецесли;
								//ШтрихКод=Сред(штрихКод_1,1,Найти(штрихКод_1,"%1D")-1);
								//ШтрихКод=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
							Иначе
								
								           ШтрихКод=штрихКод_1;
							
							КонецЕсли;
	
	Если Транз.СерийныеНомера.НайтиСтроки(Новый Структура("cis",ШтрихКод)).Количество()>0 Тогда
		Сообщить("Данный CIS "+Штрихкод+" уже присутствует в документе");
		Продолжить;
	КонецЕсли;
	
	Если РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().ПриЗаполненииОтгрузкиНеУчитыватьОстаток Тогда
		
		Попытка
			Продукция=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("gtin",
			Число(Сред(ШтрихКод,3,14)));
			
			Если Продукция.GTIN<>Число(Сред(ШтрихКод,3,14)) Тогда
				Пр=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				Пр.GTIN=Число(Сред(ШтрихКод,3,14));
				Пр.Наименование=Сред(ШтрихКод,3,14);
				Пр.НаименованиеТовара=Сред(ШтрихКод,3,14);
				Пр.Записать();
				Продукция=Пр.Ссылка;
				
			КонецЕсли;
			
		Исключение
		КонецПопытки;
			Добав=Транз.СерийныеНомера.Добавить();
			Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
			Добав.НаименованиеТовара=Продукция;
			Добав.cis=ШтрихКод;
			
			
			ППП=Транз.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
			Если ППП.Количество()=0 Тогда
				Добав_1=Транз.Товары.Добавить();
				Добав_1.GTIN=Продукция;
				Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
	//			Добав_1.СпособВыпускаТоваров="";
				Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
			Иначе
				Добав_1=ППП[0];
			КонецЕсли;
			Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
			Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
			
		
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция КАК Продукция,
			|	СУММА(ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.КоличествоОстаток-ЕСТЬNULL(Резервы_ХамелеонЦРПТОстатки.КоличествоОстаток, 0)) КАК Остаток
			|ИЗ
			|	РегистрНакопления.ОстаткиКМ_в_Обороте_ХамелеонЦРПТ.Остатки(
			|			,
			|			Организация = &Организация
			|				И СерийныйНомер = &СерийныйНомер) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резервы_ХамелеонЦРПТ.Остатки(
			|				,
			|				Организация = &Организация
			|					И СерийныйНомер = &СерийныйНомер) КАК Резервы_ХамелеонЦРПТОстатки
			|		ПО ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.СерийныйНомер = Резервы_ХамелеонЦРПТОстатки.СерийныйНомер
			|			И ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Организация = Резервы_ХамелеонЦРПТОстатки.Организация
			|
			|СГРУППИРОВАТЬ ПО
			|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция
			|ИТОГИ
			|	СУММА(Остаток)
			|ПО
			|	Продукция";
		
		Запрос.УстановитьПараметр("Организация", Транз.Организация);
		Запрос.УстановитьПараметр("СерийныйНомер", ШтрихКод);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			// Вставить обработку выборки ВыборкаДетальныеЗаписи
			Если 		                   ВыборкаДетальныеЗаписи.Остаток<=0 Тогда
				Продолжить;
			КонецЕсли;
			Продукция=ВыборкаДетальныеЗаписи.Продукция;
			Добав=Транз.СерийныеНомера.Добавить();
			Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
			Добав.НаименованиеТовара=Продукция;
			Добав.cis=ШтрихКод;
			
			
			ППП=Транз.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
			Если ППП.Количество()=0 Тогда
				Добав_1=Транз.Товары.Добавить();
				Добав_1.GTIN=Продукция;
				Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
	//			Добав_1.СпособВыпускаТоваров="";
				Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
			Иначе
				Добав_1=ППП[0];
			КонецЕсли;
			Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
			Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
			
		КонецЦикла;
		
		//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	КонецЕсли;
				
				
				
				//Добав=Транз.Товары.Добавить();
				//Добав.GTIN=Стр.НоменклатураМеркурия;
				//Добав.ЕдиницаИзмерения=СоздатьнайтиЕдиницуИзмерения(Стр.ЕдиницаИзмерения);
				//Добав.КодТНВЭД=Добав.GTIN.КодТНВЭД;
				//Добав.КоличествоКМ=Стр.КоличествоКМ;
				//Добав.НДС=Стр.НДС;
				//Добав.Сумма=Стр.Сумма;
				//Если Добав.КоличествоКМ<>0 Тогда
				//	Добав.Цена=Добав.Сумма/Добав.КоличествоКМ
				//Конецесли;
				
		//	Конеццикла;
		ИначеЕсли Стр_1.ТипДокумента=Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Расформирование Тогда
			
			Для Каждого Стр Из Стр_1.МаркиОприходовать Цикл
				
				//Добав=Транз.СерийныеНомера.Добавить();
				
				//Добав.cis=Стр.cis;
				
				  Штрихкод=Стр.Марка;
				
	Если СтрДлина(Штрихкод)=18 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция КАК Продукция,
			|	СУММА(ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.КоличествоОстаток-ЕСТЬNULL(Резервы_ХамелеонЦРПТОстатки.КоличествоОстаток, 0)) КАК Остаток
			|ИЗ
			|	РегистрНакопления.ОстаткиКМ_в_Обороте_ХамелеонЦРПТ.Остатки(
			|			,
			|			Организация = &Организация
			|				И СерийныйНомер = &СерийныйНомер) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резервы_ХамелеонЦРПТ.Остатки(
			|				,
			|				Организация = &Организация
			|					И СерийныйНомер = &СерийныйНомер) КАК Резервы_ХамелеонЦРПТОстатки
			|		ПО ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.СерийныйНомер = Резервы_ХамелеонЦРПТОстатки.СерийныйНомер
			|			И ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Организация = Резервы_ХамелеонЦРПТОстатки.Организация
			|
			|СГРУППИРОВАТЬ ПО
			|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция
			|ИТОГИ
			|	СУММА(Остаток)
			|ПО
			|	Продукция";
		
		Запрос.УстановитьПараметр("Организация", Транз.Организация);
		Запрос.УстановитьПараметр("СерийныйНомер", ШтрихКод);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			// Вставить обработку выборки ВыборкаДетальныеЗаписи
			Если 		                   ВыборкаДетальныеЗаписи.Остаток<=0 Тогда
				Продолжить;
			КонецЕсли;
			Продукция=ВыборкаДетальныеЗаписи.Продукция;
			Добав=Транз.СерийныеНомера.Добавить();
			Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
			Добав.НаименованиеТовара=Продукция;
			Добав.cis=ШтрихКод;
			
			
			ППП=Транз.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
			Если ППП.Количество()=0 Тогда
				Добав_1=Транз.Товары.Добавить();
				Добав_1.GTIN=Продукция;
				Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
	//			Добав_1.СпособВыпускаТоваров="";
				Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
			Иначе
				Добав_1=ППП[0];
			КонецЕсли;
			Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
			Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
			
		КонецЦикла;
		
		
	КонецЕсли;
	
	
	//ШтрихКод=КодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	ШтрихКод_1=(ШтрихКод);
	
	//ШтрихКод_1=КодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	//штрихКод=СтрЗаменить(ШтрихКод_1,"%1D","");
	ШтрихКод=Сред(ШтрихКод,1,38);
	//штрихКод_1=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	Если Сред(штрихКод_1,32,3)<>"240" Тогда
Если Стр_1.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фото" тогда
								ШтрихКод=Сред(ШтрихКод,1,38);
		Иначе	
				
								ШтрихКод=Сред(ШтрихКод,1,31);
								Конецесли;
								//ШтрихКод=Сред(штрихКод_1,1,Найти(штрихКод_1,"%1D")-1);
								//ШтрихКод=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
							Иначе
								
								           ШтрихКод=штрихКод_1;
							
							КонецЕсли;
	
	Если Транз.СерийныеНомера.НайтиСтроки(Новый Структура("cis",ШтрихКод)).Количество()>0 Тогда
		Сообщить("Данный CIS "+Штрихкод+" уже присутствует в документе");
		Продолжить;
	КонецЕсли;
	
	Если РегистрыСведений.НастройкиПрограммы_ХамелеонЦРПТ.Получить().ПриЗаполненииОтгрузкиНеУчитыватьОстаток Тогда
		
		Попытка
			Продукция=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("gtin",
			Число(Сред(ШтрихКод,3,14)));
			
			Если Продукция.GTIN<>Число(Сред(ШтрихКод,3,14)) Тогда
				Пр=Справочники.Продукция_ХамелеонЦРПТ.СоздатьЭлемент();
				Пр.GTIN=Число(Сред(ШтрихКод,3,14));
				Пр.Наименование=Сред(ШтрихКод,3,14);
				Пр.НаименованиеТовара=Сред(ШтрихКод,3,14);
				Пр.Записать();
				Продукция=Пр.Ссылка;
				
			КонецЕсли;
			
		Исключение
		КонецПопытки;
			Добав=Транз.СерийныеНомера.Добавить();
			Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
			Добав.НаименованиеТовара=Продукция;
			Добав.cis=ШтрихКод;
			
			
			ППП=Транз.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
			Если ППП.Количество()=0 Тогда
				Добав_1=Транз.Товары.Добавить();
				Добав_1.GTIN=Продукция;
				Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
	//			Добав_1.СпособВыпускаТоваров="";
				Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
			Иначе
				Добав_1=ППП[0];
			КонецЕсли;
			Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
			Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
			
		
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция КАК Продукция,
			|	СУММА(ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.КоличествоОстаток-ЕСТЬNULL(Резервы_ХамелеонЦРПТОстатки.КоличествоОстаток, 0)) КАК Остаток
			|ИЗ
			|	РегистрНакопления.ОстаткиКМ_в_Обороте_ХамелеонЦРПТ.Остатки(
			|			,
			|			Организация = &Организация
			|				И СерийныйНомер = &СерийныйНомер) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резервы_ХамелеонЦРПТ.Остатки(
			|				,
			|				Организация = &Организация
			|					И СерийныйНомер = &СерийныйНомер) КАК Резервы_ХамелеонЦРПТОстатки
			|		ПО ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.СерийныйНомер = Резервы_ХамелеонЦРПТОстатки.СерийныйНомер
			|			И ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Организация = Резервы_ХамелеонЦРПТОстатки.Организация
			|
			|СГРУППИРОВАТЬ ПО
			|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция
			|ИТОГИ
			|	СУММА(Остаток)
			|ПО
			|	Продукция";
		
		Запрос.УстановитьПараметр("Организация", Транз.Организация);
		Запрос.УстановитьПараметр("СерийныйНомер", ШтрихКод);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			// Вставить обработку выборки ВыборкаДетальныеЗаписи
			Если 		                   ВыборкаДетальныеЗаписи.Остаток<=0 Тогда
				Продолжить;
			КонецЕсли;
			Продукция=ВыборкаДетальныеЗаписи.Продукция;
			Добав=Транз.СерийныеНомера.Добавить();
			Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
			Добав.НаименованиеТовара=Продукция;
			Добав.cis=ШтрихКод;
			
			
			ППП=Транз.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
			Если ППП.Количество()=0 Тогда
				Добав_1=Транз.Товары.Добавить();
				Добав_1.GTIN=Продукция;
				Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
	//			Добав_1.СпособВыпускаТоваров="";
				Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
			Иначе
				Добав_1=ППП[0];
			КонецЕсли;
			Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
			Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
			
		КонецЦикла;
		
		//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	КонецЕсли;
				
				
				
				//Добав=Транз.Товары.Добавить();
				//Добав.GTIN=Стр.НоменклатураМеркурия;
				//Добав.ЕдиницаИзмерения=СоздатьнайтиЕдиницуИзмерения(Стр.ЕдиницаИзмерения);
				//Добав.КодТНВЭД=Добав.GTIN.КодТНВЭД;
				//Добав.КоличествоКМ=Стр.КоличествоКМ;
				//Добав.НДС=Стр.НДС;
				//Добав.Сумма=Стр.Сумма;
				//Если Добав.КоличествоКМ<>0 Тогда
				//	Добав.Цена=Добав.Сумма/Добав.КоличествоКМ
				//Конецесли;
				
			Конеццикла;
			
			
			
			
		КонецЕсли;
		Конеццикла;
	Транз.Записать();
	Возврат Транз.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
Конецфункции

&НаКлиенте
Процедура СоздатьВводВОборотПоВыделенным(Команда)
	// Вставить содержимое обработчика.
	СписокАг=Новый Массив;
	
	Для Каждого Стр_1 Из Элементы.Список.ВыделенныеСтроки Цикл
		СписокАг.Добавить(Стр_1);
		
	Конеццикла;
	
	Отгрузка=ВводВОборот(СписокАг);
	
	Если ЗначениеЗаполнено(Отгрузка) тогда
		ОткрытьФорму("Документ.ВводВОборот_ХамелеонЦРПТ.Форма.ФормаДокумента",
		Новый Структура("Ключ",Отгрузка));
	Иначе
		ПоказатьПредупреждение(,"Нет агрегаций для формирования отгрузки");
	КонецЕслИ;
	
	Элементы.Список.Обновить();
КонецПроцедуры


Функция ВводВОборот(СписокАг)
	
Если СписокАг.Количество()>0 Тогда
		Транз=Документы.ВводВОборот_ХамелеонЦРПТ.СоздатьДокумент();
		
	
	//Транз.Видт=Перечисления.ВидТоварооборота_ХамелеонЦРПТ.SELLING;
	Транз.Дата=СписокАг[0].Дата;
	//Транз.ДатаПередачиТовара=Транз.Дата;
	
	Транз.Организация=СписокАг[0].Организация;
	Транз.Статус="";
	Транз.ТекущийПользователь=СписокАг[0].ТекущийПользователь;
	Транз.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ИмпортСФТС;
	//Транз.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВводВОборот;
	Если Транз.ТипДокумента=перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВводВОборот Тогда
		Транз.СпособПроизводства=Перечисления.СпособПроизводства_ХамелеонЦРПТ.СобственноеПроизводство;
	ИначеЕсли Транз.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВводВОборотИмпорт Тогда
	ИначеЕсли Транз.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВводВОборотКонтракт Тогда
		Транз.СпособПроизводства=Перечисления.СпособПроизводства_ХамелеонЦРПТ.ПроизводствоТовараПоДоговору;
	ИначеЕсли Транз.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВводВОборотФизЛицо Тогда
		Транз.СпособПроизводства=Перечисления.СпособПроизводства_ХамелеонЦРПТ.ПолученоОтФизическогоЛицаКомиссионнаяТорговля;
	ИначеЕсли Транз.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВыводИзОборота Тогда
		Транз.ВидПервичногоДокумента=Перечисления.ВидПервичногоДокумента_ХамелеонЦРПТ.ФискальныйДокумент;
		Транз.ПричинаВыводаИзОборота=Перечисления.ПричинаВыводаИзОборота_ХамлеонЦРПТ.РозничнаяРеализация;
	КонецЕсли;
	
		
	
	
	Для Каждого Стр_1 из списокАг Цикл
		
		
		Если Стр_1.ТипДокумента=Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Формирование Тогда
			
			Если Стр_1.ТекущийПользователь.СайтыВходаВСистему.Наименование<>"Фармацевтика" Тогда

			Для Каждого Стр Из Стр_1.Марки Цикл
				
//				Добав=Транз.СерийныеНомера.Добавить();
				
				//Добав.cis=Стр.cis;
				
				Если ЗначениеЗаполнено(Стр.Марка) Тогда
				  Штрихкод=Стр.Марка;
				Иначе
				  Штрихкод=Стр.cis;
				КонецЕсли;
	ШтрихКод_1=(ШтрихКод);
	
	ШтрихКод=Сред(ШтрихКод,1,38);
	//штрихКод_1=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	Если Сред(штрихКод_1,32,3)<>"240" Тогда
		Если Стр_1.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фото" тогда
								ШтрихКод=Сред(ШтрихКод,1,38);
		Иначе	
				

								ШтрихКод=Сред(ШтрихКод,1,31);
						Конецесли;
								//ШтрихКод=Сред(штрихКод_1,1,Найти(штрихКод_1,"%1D")-1);
								//ШтрихКод=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
							Иначе
								
								           ШтрихКод=штрихКод_1;
							
							КонецЕсли;
						
	Если Стр_1=Неопределено Тогда
		Если Транз.СерийныеНомера.НайтиСтроки(Новый Структура("cis",ШтрихКод)).Количество()>0 Тогда
			Сообщить("CiS "+ШтрихКод+" уже присутствует в документе");
			Продолжить;
		КонецЕсли;
	КонецЕсли;	
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция
		|ИЗ
		|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Остатки(
		|			,
		|			Организация = &Организация
		|				И СерийныйНомер = &СерийныйНомер) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки";
	
	Запрос.УстановитьПараметр("Организация", Транз.Организация);
	Запрос.УстановитьПараметр("СерийныйНомер", ШтрихКод);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		Продукция=ВыборкаДетальныеЗаписи.Продукция;
		//Если Стр=Неопределено тогда
			Добав=Транз.СерийныеНомера.Добавить();
		//Иначе
		//	Добав=Стр;
		//КонецЕсли;
		Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
		Добав.НаименованиеТовара=Продукция;
		Добав.cis=ШтрихКод;
		Добав.ТипУпаковки=Перечисления.Тип_КМ_ХамелеонЦРПТ.АТК;
		
		
		ППП=Транз.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
		Если ППП.Количество()=0 Тогда
			Добав_1=Транз.Товары.Добавить();
			Добав_1.GTIN=Продукция;
			Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
	Если Продукция.СтранаПроизводства.Альфа2="RU" Тогда
		//СтрП="Производство в РФ";
			Добав_1.СпособВыпускаТоваров="Производство в РФ";
	Иначе
		//СтрП="Ввезен в РФ";
			Добав_1.СпособВыпускаТоваров="Ввезен в РФ";
		
	КонецЕсли;
			Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
			Добав_1.КоличествоКМ=1;
			Добав_1.ДекларацияИлиСертификатСоответствия=РегистрыСведений.ПодтверждающиеДокументы_ХамелеонЦРПТ.ПолучитьПоследнее(Транз.Дата,
			Новый Структура("Продукция",Продукция)).Документ;
		Иначе
			Добав_1=ППП[0];
			Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
			
		КонецЕсли;
		Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Конеццикла;
	КонецЕсли;
	
	//ШтрихКод=КодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	ШтрихКод=Стр_1.НомерКороба;
	ШтрихКод_1=(ШтрихКод);
	
	ШтрихКод=Сред(ШтрихКод,1,38);
	//штрихКод_1=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	Если Сред(штрихКод_1,32,3)<>"240" Тогда
Если Стр_1.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фото" тогда
								ШтрихКод=Сред(ШтрихКод,1,38);
		Иначе	
				
		
								ШтрихКод=Сред(ШтрихКод,1,31);
							Конецесли;
								//ШтрихКод=Сред(штрихКод_1,1,Найти(штрихКод_1,"%1D")-1);
								//ШтрихКод=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
							Иначе
								
								           ШтрихКод=штрихКод_1;
							
							КонецЕсли;
						
	Если Стр_1=Неопределено Тогда
		Если Транз.СерийныеНомера.НайтиСтроки(Новый Структура("cis",ШтрихКод)).Количество()>0 Тогда
			Сообщить("CiS "+ШтрихКод+" уже присутствует в документе");
			Продолжить;
		КонецЕсли;
	КонецЕсли;	
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция
		|ИЗ
		|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Остатки(
		|			,
		|			Организация = &Организация
		|				И СерийныйНомер = &СерийныйНомер) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки";
	
	Запрос.УстановитьПараметр("Организация", Транз.Организация);
	Запрос.УстановитьПараметр("СерийныйНомер", ШтрихКод);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		Продукция=ВыборкаДетальныеЗаписи.Продукция;
//		Если Стр=Неопределено тогда
			Добав=Транз.СерийныеНомера.Добавить();
//		Иначе
//			Добав=Стр;
//		КонецЕсли;
		Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
		Добав.НаименованиеТовара=Продукция;
		Добав.cis=ШтрихКод;
		
		
		ППП=Транз.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
		Если ППП.Количество()=0 Тогда
			Добав_1=Транз.Товары.Добавить();
			Добав_1.GTIN=Продукция;
			Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
	Если Продукция.СтранаПроизводства.Альфа2="RU" Тогда
		//СтрП="Производство в РФ";
			Добав_1.СпособВыпускаТоваров="Производство в РФ";
	Иначе
		//СтрП="Ввезен в РФ";
			Добав_1.СпособВыпускаТоваров="Ввезен в РФ";
		
	КонецЕсли;
			Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
			Добав_1.КоличествоКМ=1;
			Добав_1.ДекларацияИлиСертификатСоответствия=РегистрыСведений.ПодтверждающиеДокументы_ХамелеонЦРПТ.ПолучитьПоследнее(Транз.Дата,
			Новый Структура("Продукция",Продукция)).Документ;
		Иначе
			Добав_1=ППП[0];
			Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
			
		КонецЕсли;
		Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				
				
				//Добав=Транз.Товары.Добавить();
				//Добав.GTIN=Стр.НоменклатураМеркурия;
				//Добав.ЕдиницаИзмерения=СоздатьнайтиЕдиницуИзмерения(Стр.ЕдиницаИзмерения);
				//Добав.КодТНВЭД=Добав.GTIN.КодТНВЭД;
				//Добав.КоличествоКМ=Стр.КоличествоКМ;
				//Добав.НДС=Стр.НДС;
				//Добав.Сумма=Стр.Сумма;
				//Если Добав.КоличествоКМ<>0 Тогда
				//	Добав.Цена=Добав.Сумма/Добав.КоличествоКМ
				//Конецесли;
				
			//Конеццикла;
		ИначеЕсли Стр_1.ТипДокумента=Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Расформирование Тогда
			
			Для Каждого Стр Из Стр_1.МаркиОприходовать Цикл
				
				//Добав=Транз.СерийныеНомера.Добавить();
				
				//Добав.cis=Стр.cis;
				
				  Штрихкод=Стр.Марка;
				  
			ШтрихКод=Сред(ШтрихКод,1,38);
	//штрихКод_1=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	Если Сред(штрихКод_1,32,3)<>"240" Тогда
		Если Стр_1.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фото" тогда
								ШтрихКод=Сред(ШтрихКод,1,38);
		Иначе	
				

								ШтрихКод=Сред(ШтрихКод,1,31);
								Конецесли;
								//ШтрихКод=Сред(штрихКод_1,1,Найти(штрихКод_1,"%1D")-1);
								//ШтрихКод=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
							Иначе
								
								           ШтрихКод=штрихКод_1;
							
							КонецЕсли;
						
	Если Стр_1=Неопределено Тогда
		Если Транз.СерийныеНомера.НайтиСтроки(Новый Структура("cis",ШтрихКод)).Количество()>0 Тогда
			Сообщить("CiS "+ШтрихКод+" уже присутствует в документе");
			Продолжить;
		КонецЕсли;
	КонецЕсли;	
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция
		|ИЗ
		|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Остатки(
		|			,
		|			Организация = &Организация
		|				И СерийныйНомер = &СерийныйНомер) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки";
	
	Запрос.УстановитьПараметр("Организация", Транз.Организация);
	Запрос.УстановитьПараметр("СерийныйНомер", ШтрихКод);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		Продукция=ВыборкаДетальныеЗаписи.Продукция;
		Если Стр=Неопределено тогда
			Добав=Транз.СерийныеНомера.Добавить();
		Иначе
			Добав=Стр;
		КонецЕсли;
		Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
		Добав.НаименованиеТовара=Продукция;
		Добав.cis=ШтрихКод;
		
		
		
		ППП=Транз.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
		Если ППП.Количество()=0 Тогда
			Добав_1=Транз.Товары.Добавить();
			Добав_1.GTIN=Продукция;
			Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
	Если Продукция.СтранаПроизводства.Альфа2="RU" Тогда
		//СтрП="Производство в РФ";
			Добав_1.СпособВыпускаТоваров="Производство в РФ";
	Иначе
		//СтрП="Ввезен в РФ";
			Добав_1.СпособВыпускаТоваров="Ввезен в РФ";
		
	КонецЕсли;
			Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
			Добав_1.КоличествоКМ=1;
			Добав_1.ДекларацияИлиСертификатСоответствия=РегистрыСведений.ПодтверждающиеДокументы_ХамелеонЦРПТ.ПолучитьПоследнее(Транз
			.Дата,
			Новый Структура("Продукция",Продукция)).Документ;
		Иначе
			Добав_1=ППП[0];
			Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
			
		КонецЕсли;
		Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		  
				  
			  Конеццикла;
		  КонецЕсли;
		Конеццикла;
	Транз.Записать();
	
	Для Каждого Стр_1 из СписокАг Цикл
		ЛДЛЛ=Стр_1.ПолучитьОбъект();
		ЛДЛЛ.ВводВоборот=Транз.Ссылка;
		ЛДЛЛ.Записать();
	Конеццикла;
	Возврат Транз.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
Конецфункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	Форм=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если Форм.Организации.Количество()>0 Тогда
		УстановитьОтбор(Форм.Организации[0].Организация);
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьОтбор(Организация)
	Стр=Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Стр.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
	Стр.Использование=Истина;
	Стр.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Организация");
	Стр.ПравоеЗначение=Организация; 
	Стр.Представление="ОТБОР_ПРЕДПРИЯТИЕ";
	Стр.РежимОтображения=РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	
КонецПроцедуры


&НаКлиенте
Процедура СоздатьВводВОоборотПоВыделеннымНеУчитываяСтатус(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	СписокАг=Новый Массив;
	
	Для Каждого Стр_1 Из Элементы.Список.ВыделенныеСтроки Цикл
		СписокАг.Добавить(Стр_1);
		
	Конеццикла;
	
	Отгрузка=ВводВОборот_Все(СписокАг);
	
	Если ЗначениеЗаполнено(Отгрузка) тогда
		ОткрытьФорму("Документ.ВводВОборот_ХамелеонЦРПТ.Форма.ФормаДокумента",
		Новый Структура("Ключ",Отгрузка));
	Иначе
		ПоказатьПредупреждение(,"Нет агрегаций для формирования отгрузки");
	КонецЕслИ;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

Функция ВводВОборот_Все(СписокАг)
	
Если СписокАг.Количество()>0 Тогда
		Транз=Документы.ВводВОборот_ХамелеонЦРПТ.СоздатьДокумент();
		
	
	//Транз.Видт=Перечисления.ВидТоварооборота_ХамелеонЦРПТ.SELLING;
	Транз.Дата=СписокАг[0].Дата;
	//Транз.ДатаПередачиТовара=Транз.Дата;
	
	Транз.Организация=СписокАг[0].Организация;
	Транз.Статус="";
	Транз.ТекущийПользователь=СписокАг[0].ТекущийПользователь;
	Транз.ТипДокумента=Транз.ТекущийПользователь.ТипВводаВОборот;
	//Транз.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВводВОборот;
	Если Транз.ТипДокумента=перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВводВОборот Тогда
		Транз.СпособПроизводства=Перечисления.СпособПроизводства_ХамелеонЦРПТ.СобственноеПроизводство;
	ИначеЕсли Транз.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВводВОборотИмпорт Тогда
	ИначеЕсли Транз.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВводВОборотКонтракт Тогда
		Транз.СпособПроизводства=Перечисления.СпособПроизводства_ХамелеонЦРПТ.ПроизводствоТовараПоДоговору;
	ИначеЕсли Транз.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВводВОборотФизЛицо Тогда
		Транз.СпособПроизводства=Перечисления.СпособПроизводства_ХамелеонЦРПТ.ПолученоОтФизическогоЛицаКомиссионнаяТорговля;
	ИначеЕсли Транз.ТипДокумента=Перечисления.ТипыДокументаВводВОборот_ХамелеонЦРПТ.ВыводИзОборота Тогда
		Транз.ВидПервичногоДокумента=Перечисления.ВидПервичногоДокумента_ХамелеонЦРПТ.ФискальныйДокумент;
		Транз.ПричинаВыводаИзОборота=Перечисления.ПричинаВыводаИзОборота_ХамлеонЦРПТ.РозничнаяРеализация;
	КонецЕсли;
	
		
	
	
	Для Каждого Стр_1 из списокАг Цикл
		
		
		Если Стр_1.ТипДокумента=Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Формирование Тогда
			
//			Для Каждого Стр Из Стр_1.Марки Цикл
//				
////				Добав=Транз.СерийныеНомера.Добавить();
//				
//				//Добав.cis=Стр.cis;
//				
//				Если ЗначениеЗаполнено(Стр.Марка) Тогда
//				  Штрихкод=Стр.Марка;
//				Иначе
//				  Штрихкод=Стр.cis;
//				КонецЕсли;
//	ШтрихКод_1=(ШтрихКод);
//	
//	ШтрихКод=Сред(ШтрихКод,1,38);
//	//штрихКод_1=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
//		Если Сред(штрихКод_1,32,3)<>"240" Тогда
//								ШтрихКод=Сред(ШтрихКод,1,31);
//								//ШтрихКод=Сред(штрихКод_1,1,Найти(штрихКод_1,"%1D")-1);
//								//ШтрихКод=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
//							Иначе
//								
//								           ШтрихКод=штрихКод_1;
//							
//							КонецЕсли;
//						
//	Если Стр_1=Неопределено Тогда
//		Если Транз.СерийныеНомера.НайтиСтроки(Новый Структура("cis",ШтрихКод)).Количество()>0 Тогда
//			Сообщить("CiS "+ШтрихКод+" уже присутствует в документе");
//			Продолжить;
//		КонецЕсли;
//	КонецЕсли;	
//	
//	
//	    
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция
//		|ИЗ
//		|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Остатки(
//		|			,
//		|			Организация = &Организация
//		|				И СерийныйНомер = &СерийныйНомер) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки";
//	
//	Запрос.УстановитьПараметр("Организация", Транз.Организация);
//	Запрос.УстановитьПараметр("СерийныйНомер", ШтрихКод);
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//	
//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//		// Вставить обработку выборки ВыборкаДетальныеЗаписи
//		
//		Продукция=ВыборкаДетальныеЗаписи.Продукция;
//		//Если Стр=Неопределено тогда
//			Добав=Транз.СерийныеНомера.Добавить();
//		//Иначе
//		//	Добав=Стр;
//		//КонецЕсли;
//		Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
//		Добав.НаименованиеТовара=Продукция;
//		Добав.cis=ШтрихКод;
//		
//		
//		ППП=Транз.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
//		Если ППП.Количество()=0 Тогда
//			Добав_1=Транз.Товары.Добавить();
//			Добав_1.GTIN=Продукция;
//			Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
//	Если Продукция.СтранаПроизводства.Альфа2="RU" Тогда
//		//СтрП="Производство в РФ";
//			Добав_1.СпособВыпускаТоваров="Производство в РФ";
//	Иначе
//		//СтрП="Ввезен в РФ";
//			Добав_1.СпособВыпускаТоваров="Ввезен в РФ";
//		
//	КонецЕсли;
//			Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
//			Добав_1.КоличествоКМ=1;
//			Добав_1.ДекларацияИлиСертификатСоответствия=РегистрыСведений.ПодтверждающиеДокументы_ХамелеонЦРПТ.ПолучитьПоследнее(Транз.Дата,
//			Новый Структура("Продукция",Продукция)).Документ;
//		Иначе
//			Добав_1=ППП[0];
//			Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
//			
//		КонецЕсли;
//		Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
//		
//	КонецЦикла;
//	
//	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
//	Конеццикла;
	//КонецЕсли;
	
	//ШтрихКод=КодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	ШтрихКод=Стр_1.НомерКороба;
	ШтрихКод_1=(ШтрихКод);
	
	ШтрихКод=Сред(ШтрихКод,1,38);
	//штрихКод_1=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	Если Сред(штрихКод_1,32,3)<>"240" Тогда
		Если Стр_1.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фото" тогда
								ШтрихКод=Сред(ШтрихКод,1,38);
		Иначе	
				

								ШтрихКод=Сред(ШтрихКод,1,31);
							Конецесли;
								//ШтрихКод=Сред(штрихКод_1,1,Найти(штрихКод_1,"%1D")-1);
								//ШтрихКод=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
							Иначе
								
								           ШтрихКод=штрихКод_1;
							
							КонецЕсли;
						
	//Если Стр_1=Неопределено Тогда
		Если Транз.СерийныеНомера.НайтиСтроки(Новый Структура("cis",ШтрихКод)).Количество()>0 Тогда
			Сообщить("CiS "+ШтрихКод+" уже присутствует в документе");
			Продолжить;
		КонецЕсли;
//	КонецЕсли;	
	
	
	 		Продукция=Стр_1.Марки[0].Продукция;
//		Если Стр=Неопределено тогда
			Добав=Транз.СерийныеНомера.Добавить();
//		Иначе
//			Добав=Стр;
//		КонецЕсли;
		Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
		Добав.НаименованиеТовара=Продукция;
		Добав.cis=ШтрихКод;
		
		
		ППП=Транз.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
		Если ППП.Количество()=0 Тогда
			Добав_1=Транз.Товары.Добавить();
			Добав_1.GTIN=Продукция;
			Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
	Если Продукция.СтранаПроизводства.Альфа2="RU" Тогда
		//СтрП="Производство в РФ";
			Добав_1.СпособВыпускаТоваров="Производство в РФ";
	Иначе
		//СтрП="Ввезен в РФ";
			Добав_1.СпособВыпускаТоваров="Ввезен в РФ";
		
	КонецЕсли;
			Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
			Добав_1.КоличествоКМ=1;
			Добав_1.ДекларацияИлиСертификатСоответствия=РегистрыСведений.ПодтверждающиеДокументы_ХамелеонЦРПТ.ПолучитьПоследнее(Транз.Дата,
			Новый Структура("Продукция",Продукция)).Документ;
		Иначе
			Добав_1=ППП[0];
			Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
			
		КонецЕсли;
		Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
		
	//КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				
				
				//Добав=Транз.Товары.Добавить();
				//Добав.GTIN=Стр.НоменклатураМеркурия;
				//Добав.ЕдиницаИзмерения=СоздатьнайтиЕдиницуИзмерения(Стр.ЕдиницаИзмерения);
				//Добав.КодТНВЭД=Добав.GTIN.КодТНВЭД;
				//Добав.КоличествоКМ=Стр.КоличествоКМ;
				//Добав.НДС=Стр.НДС;
				//Добав.Сумма=Стр.Сумма;
				//Если Добав.КоличествоКМ<>0 Тогда
				//	Добав.Цена=Добав.Сумма/Добав.КоличествоКМ
				//Конецесли;
				
			//Конеццикла;
		ИначеЕсли Стр_1.ТипДокумента=Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Расформирование Тогда
			
			Для Каждого Стр Из Стр_1.МаркиОприходовать Цикл
				
				//Добав=Транз.СерийныеНомера.Добавить();
				
				//Добав.cis=Стр.cis;
				
				  Штрихкод=Стр.Марка;
				  
			ШтрихКод=Сред(ШтрихКод,1,38);
	//штрихКод_1=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
	Если Сред(штрихКод_1,32,3)<>"240" Тогда
		Если Стр_1.ТекущийПользователь.СайтыВходаВСистему.Наименование="Фото" тогда
								ШтрихКод=Сред(ШтрихКод,1,38);
		Иначе	
				

								ШтрихКод=Сред(ШтрихКод,1,31);
							КонецеслИ;
								//ШтрихКод=Сред(штрихКод_1,1,Найти(штрихКод_1,"%1D")-1);
								//ШтрихКод=РаскодироватьСтроку(ШтрихКод,СпособКодированияСтроки.КодировкаURL);
							Иначе
								
								           ШтрихКод=штрихКод_1;
							
							КонецЕсли;
						
	Если Стр_1=Неопределено Тогда
		Если Транз.СерийныеНомера.НайтиСтроки(Новый Структура("cis",ШтрихКод)).Количество()>0 Тогда
			Сообщить("CiS "+ШтрихКод+" уже присутствует в документе");
			Продолжить;
		КонецЕсли;
	КонецЕсли;	
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки.Продукция
		|ИЗ
		|	РегистрНакопления.ОстаткиКМЭмитированые_ХамелеонЦРПТ.Остатки(
		|			,
		|			Организация = &Организация
		|				И СерийныйНомер = &СерийныйНомер) КАК ОстаткиКМЭмитированые_ХамелеонЦРПТОстатки";
	
	Запрос.УстановитьПараметр("Организация", Транз.Организация);
	Запрос.УстановитьПараметр("СерийныйНомер", ШтрихКод);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		Продукция=ВыборкаДетальныеЗаписи.Продукция;
		Если Стр=Неопределено тогда
			Добав=Транз.СерийныеНомера.Добавить();
		Иначе
			Добав=Стр;
		КонецЕсли;
		Добав.GTIN=ДополнитьСтроку(xmlString(Продукция.GTIN));
		Добав.НаименованиеТовара=Продукция;
		Добав.cis=ШтрихКод;
		
		
		ППП=Транз.Товары.НайтиСтроки(Новый структура("gtin",Продукция));
		Если ППП.Количество()=0 Тогда
			Добав_1=Транз.Товары.Добавить();
			Добав_1.GTIN=Продукция;
			Добав_1.КодТНВЭД=Продукция.КодТНВЭД;
	Если Продукция.СтранаПроизводства.Альфа2="RU" Тогда
		//СтрП="Производство в РФ";
			Добав_1.СпособВыпускаТоваров="Производство в РФ";
	Иначе
		//СтрП="Ввезен в РФ";
			Добав_1.СпособВыпускаТоваров="Ввезен в РФ";
		
	КонецЕсли;
			Добав_1.НомерСтрокиСвязи=Добав_1.НомерСтроки;
			Добав_1.КоличествоКМ=1;
			Добав_1.ДекларацияИлиСертификатСоответствия=РегистрыСведений.ПодтверждающиеДокументы_ХамелеонЦРПТ.ПолучитьПоследнее(Транз
			.Дата,
			Новый Структура("Продукция",Продукция)).Документ;
		Иначе
			Добав_1=ППП[0];
			Добав_1.КоличествоКМ=Добав_1.КоличествоКМ+1;
			
		КонецЕсли;
		Добав.НомерСтрокиСвязи=Добав_1.НомерСтрокиСвязи;
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		  
				  
			  Конеццикла;
		  КонецЕсли;
		Конеццикла;
	Транз.Записать();
	
	Для Каждого Стр_1 из СписокАг Цикл
		ЛДЛЛ=Стр_1.ПолучитьОбъект();
		ЛДЛЛ.ВводВоборот=Транз.Ссылка;
		ЛДЛЛ.Записать();
	Конеццикла;
	Возврат Транз.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
Конецфункции

Функция СоздатьРАсформирование_1(Ссылка_1)
		Агр=Документы.СозданиеНовогоАТК_ХамелеонЦРПТ.СоздатьДокумент();
		
	Для Каждого Ссылка Из Ссылка_1 Цикл
		Если не ЗначениеЗАполнено(Ссылка.РасформированиеКоробов) Тогда
		
					  ДокОснование=Ссылка;
					  ЗаполнитьЗначенияСвойств(Агр,ДокОснование,,"Номер,Дата,_Order_ID,Статус");
					  Агр.ТипДокумента=перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Расформирование;
					        Агр.Дата=Текущаядата();
							//Агр.СтатусКМ=Перечисления.СтатусыКМДляАгрегации_ХамелеонЦРПТ.КМВОбороте;
				
		РегДвиж=РегистрыНакопления.ОстаткиКМ_в_Обороте_ХамелеонЦРПТ.ВыбратьПоРегистратору(Ссылка);;
		Пока регдвиж.Следующий() Цикл
			Если регДвиж.ВидДвижения=ВидДвиженияНакопления.Приход Тогда
						 						  Добав=Агр.Марки.Добавить();
						  Добав.cis=регДвиж.СерийныйНомер;
						  Добав.Марка=регДвиж.СерийныйНомер;
				
			КонецЕсли;
		Конеццикла;
		
		Агр.Записать();
		
		Поступ=Ссылка.ПолучитьОбъект();
		Поступ.РасформированиеКоробов=Агр.Ссылка;
		Поступ.Записать();
		
		
		
	Иначе
		Сообщить("По документу "+Строка(Ссылка)+" уже создана агрегация");
		//Возврат Ссылка.РасформированиеКоробов
	КонецЕсли;
	//КонецЕсли;
	КонецциклА;
	Если Агр.Марки.Количество()>0 Тогда
		Возврат Агр.Ссылка;
		КонецЕсли;
КонецФункции


&НаКлиенте
Процедура СоздатьРасформирвоание(Команда)
	// Вставить содержимое обработчика.
	
	//Если Элементы.Список.ТекущиеДанные<>Неопределено Тогда
	
	МассивВыд=Новый массив;
	Для каждого Стр_1 Из Элементы.Список.ВыделенныеСтроки Цикл
		МассивВыд.Добавить(Стр_1);
	Конеццикла;
		Агрег=СоздатьРАсформирование_1(МассивВыд);
		Если ЗначениеЗаполнено(Агрег) Тогда
			ОткрытьФорму("Документ.СозданиеНовогоАТК_ХамелеонЦРПТ.Форма.ФормаДокумента",
			Новый Структура("Ключ",Агрег));
		КонецЕсли;
	//КонецЕсли;
	Элементы.Список.Обновить();;
	
КонецПроцедуры


&НаСервере
Функция СоздатьАгрегациюНаСервере(Ссылка_1)
	// Вставить содержимое обработчика.
	Агр=Документы.СозданиеНовогоАТК_ХамелеонЦРПТ.СоздатьДокумент();
		
	Для Каждого Ссылка Из Ссылка_1 Цикл
		
					  ДокОснование=Ссылка;
					  ЗаполнитьЗначенияСвойств(Агр,ДокОснование,,"Номер,Дата,_Order_ID,Статус");
					  Агр.ТипДокумента=перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Формирование;
					  
					  Агр.НомерКороба="";
					  Агр.Дата=Текущаядата();
							//Агр.СтатусКМ=Перечисления.СтатусыКМДляАгрегации_ХамелеонЦРПТ.КМВОбороте;
			
		Если ЗначениеЗаполнено(Ссылка.НомерКороба) Тогда
		
								  Добав=Агр.Марки.Добавить();
						  Добав.cis=Ссылка.НомерКороба;
						  Добав.Марка=Ссылка.НомерКороба;
						КонецЕсли;
						
						
	Конеццикла;
		
		
	Если Агр.Марки.Количество()>0 Тогда
		Агр.НомерКороба="";
		Агр.Записать();
		Возврат Агр.Ссылка;
		КонецЕсли;
	
КонецФункции


&НаКлиенте
Процедура СоздатьАгрегацию(Команда)
	МассивВыд=Новый массив;
	Для каждого Стр_1 Из Элементы.Список.ВыделенныеСтроки Цикл
		МассивВыд.Добавить(Стр_1);
	Конеццикла;
		Агрег=СоздатьАгрегациюНаСервере(МассивВыд);
		Если ЗначениеЗаполнено(Агрег) Тогда
			Фор=ОткрытьФорму("Документ.СозданиеНовогоАТК_ХамелеонЦРПТ.Форма.ФормаДокумента",
			Новый Структура("Ключ",Агрег));
			//Фор.СформироватьСлучайныйКороб(Команда);
		КонецЕсли;
	//КонецЕсли;
	Элементы.Список.Обновить();;
КонецПроцедуры


&НаКлиенте
Процедура СоздатьИзXML(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
		// Вставить содержимое обработчика.
		
	Перем Файл;
	ВклЗаг = 0;
	//ДанныеЛиста.Очистить();
	Режим=РежимДиалогаВыбораФайла.Открытие;
	нДиалог= НОвый ДиалогВыбораФайла(Режим);
	//Фильтр="Файл xls/txt/xml|*.xls;*.xlsx;*.txt;*.xml|Файл txt|*.txt|Файл xls|*.xls;*.xlsx|Файл xml|*.xml";
	Фильтр="Файл xml|*.xml";
	нДиалог.МножественныйВыбор=Истина;
	нДиалог.Фильтр=Фильтр;
	нДиалог.Заголовок="Выберите файл для загрузки..." ;
	нДиалог.Показать(Новый ОписаниеОповещения("ПослеВыбораФайлаСозданиеАгрегации_ХамелеонЦРПТ",ЭтаФорма,Ложь));
	
КонецПроцедуры

Процедура СоздатьАгрегацииПоФайлу(ДвоичнДанные,МассивАгрегация)
	
	Текст=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьСтрокуИзДвоичныхДанных_Сервер(ДвоичнДанные,"UTF-8");
	ЧтениеXML = Новый ЧтениеXML;
	Текст=СтрЗаменить(Текст,символ(29),"");
	ЧтениеXML.УстановитьСтроку(Текст);
	Сведения = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	
	
	ИНН=Сведения.Document.organisation.id_info.LP_info.LP_TIN;
	Организация=Справочники.Организации_ХамелеонЦРПТ.НайтиПоРеквизиту("ИНН",ИНН);
	Если Не ЗначениеЗаполнено(Организация) тогда
		Сообщить("Не удалось загрузить агрегации из файла, так как нет организации с данным ИНН "+ИНН);
		Возврат;
	КонецЕсли;
	
	
	ТекущийПользователь=Справочники.Пользователи_ХамелеонЦРПТ.НайтиПоРеквизиту("Организация",Организация);
	Если Не ЗначениеЗаполнено(ТекущийПользователь) тогда
		Сообщить("Нет пользователя для подключения к организации по ИНН "+ИНН);
		Возврат;
	КонецЕсли;
	
	ДатаД=Сведения.Document.operation_date_time;
	Если ТипЗнч(Сведения.Document.pack_content)=Тип("ОбъектXDTO") Тогда
		Стр_1=Сведения.Document.pack_content;
		Докум=ЗаполнитьДокумент(Стр_1,Организация,ТекущийПользователь,ДатаД);
		МассивАгрегация.Добавить(Докум);
	Иначе
		Для Каждого Стр_1 Из Сведения.Document.pack_content Цикл
			Докум=ЗаполнитьДокумент(Стр_1,Организация,ТекущийПользователь,ДатаД);
			МассивАгрегация.Добавить(Докум);
		КонецЦикла;
	КонецЕсли
		
КонецПроцедуры

Функция ЗаполнитьДокумент(Стр_1,Организация,ТекущийПользователь,ДатаД)
	НомерАгр=Стр_1.pack_code;
			СоздатьАгрегацию=Документы.СозданиеНовогоШкНаКороба_ХамелеонЦРПТ.СоздатьДокумент();
			СоздатьАгрегацию.ТекущийПользователь=ТекущийПользователь;
			СоздатьАгрегацию.Организация=Организация;
			СоздатьАгрегацию.ТипДокумента=Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Формирование;
	СоздатьАгрегацию.Дата=Дата(Число(Сред(ДатаД,1,4)),Число(Сред(ДатаД,6,2)),Число(Сред(ДатаД,9,2)),Число(Сред(ДатаД,12,2)),Число(Сред(ДатаД,15,2)),Число(Сред(ДатаД,18,2)));
	СоздатьАгрегацию.НомерКороба=НомерАгр;
	
	Если Стр_1.Свойства().Получить("cis")<>Неопределено Тогда
	
	Если ТипЗнч(Стр_1.cis)<>Тип("СписокXDTO") тогда
		Стр_2=Стр_1.cis;
		
				Если ТекущийПользователь.СайтыВходаВСистему.Наименование="Молоко" Тогда
					//Стр_2=Сред(cis,1,39);
						Если Сред(Стр_2,32,4)="7003" Тогда	
						 	Стр_2=Сред(Стр_2,1,45);
						ИначеЕсли Сред(Стр_2,32,2)="17" Тогда
						 	Стр_2=Сред(Стр_2,1,39);
						ИначеЕсли СтрДлина(Стр_2)<=30 Тогда
							Стр_2=Сред(Стр_2,1,24);
						Иначе
						 	Стр_2=Сред(Стр_2,1,31);
							
							
						КонецЕсли;
					ИначеЕсли ТекущийПользователь.СайтыВходаВСистему.Наименование="Альтернативный табак"
						ИЛИ ТекущийПользователь.СайтыВходаВСистему.Наименование="Табак"
						Тогда
						Если Сред(Стр_2,1,2)="01" Тогда
									Стр_2=Сред(Стр_2,1,25);
								Иначе
									Стр_2=Сред(Стр_2,1,21);
									
								КонецЕсли;
						ИначеЕсли ТекущийПользователь.СайтыВходаВСистему.Наименование="Фото" Тогда
					Стр_2=Сред(Стр_2,1,38);
								
				Иначе

					Стр_2=Сред(Стр_2,1,31);
					
				КонецЕсли;
						
		
		
			Добав=СоздатьАгрегацию.Марки.Добавить();
			Добав.cis=Стр_2;
			Добав.Марка=Стр_2;
			Попытка
				Добав.Продукция=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(Сред(Стр_2,3,14)));
			Исключение
			Конецпопытки;
	Иначе
		Для Каждого Стр_2 ИЗ Стр_1.cis Цикл
			
				Если ТекущийПользователь.СайтыВходаВСистему.Наименование="Молоко" Тогда
					//Стр_2=Сред(cis,1,39);
						Если Сред(Стр_2,32,4)="7003" Тогда	
						 	Стр_2=Сред(Стр_2,1,45);
						ИначеЕсли Сред(Стр_2,32,2)="17" Тогда
						 	Стр_2=Сред(Стр_2,1,39);
						ИначеЕсли СтрДлина(Стр_2)<=30 Тогда
							Стр_2=Сред(Стр_2,1,24);
						Иначе
						 	Стр_2=Сред(Стр_2,1,31);
							
							
						КонецЕсли;
					ИначеЕсли ТекущийПользователь.СайтыВходаВСистему.Наименование="Альтернативный табак"
						ИЛИ ТекущийПользователь.СайтыВходаВСистему.Наименование="Табак"
						Тогда
						Если Сред(Стр_2,1,2)="01" Тогда
									Стр_2=Сред(Стр_2,1,25);
								Иначе
									Стр_2=Сред(Стр_2,1,21);
									
								КонецЕсли;
				ИначеЕсли ТекущийПользователь.СайтыВходаВСистему.Наименование="Фото" Тогда
					Стр_2=Сред(Стр_2,1,38);
				Иначе
					Стр_2=Сред(Стр_2,1,31);
					
				КонецЕсли;
						
		
			
			Добав=СоздатьАгрегацию.Марки.Добавить();
			Добав.cis=Стр_2;
			Добав.Марка=Стр_2;
			Попытка
				Добав.Продукция=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(Сред(Стр_2,3,14)));
			Исключение
			КонецПопытки;
			
		Конеццикла;
		
		
	КонецЕсли;
КонецЕсли;

	Если Стр_1.Свойства().Получить("sscc")<>Неопределено Тогда
	
	Если ТипЗнч(Стр_1.sscc)<>Тип("СписокXDTO") тогда
		Стр_2=Стр_1.sscc;
			Добав=СоздатьАгрегацию.Марки.Добавить();
			Добав.cis=Стр_2;
			Добав.Марка=Стр_2;
			//Добав.Продукция=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(Сред(Стр_2,3,14)));
	Иначе
		Для Каждого Стр_2 ИЗ Стр_1.sscc Цикл
			Добав=СоздатьАгрегацию.Марки.Добавить();
			Добав.cis=Стр_2;
			Добав.Марка=Стр_2;
			//Добав.Продукция=Справочники.Продукция_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",Число(Сред(Стр_2,3,14)));
			
		Конеццикла;
		
		
	КонецЕсли;
КонецЕсли;


	СоздатьАгрегацию.Записать();
	
	Возврат СоздатьАгрегацию.Ссылка;
	
			
			
Конецфункции

&НаКлиенте
Процедура ПослеВыбораФайлаСозданиеАгрегации_ХамелеонЦРПТ(РР,ДД) Экспорт
	МассивАгрегация=Новый Массив;
	МассивАгрегация.Очистить();
	Если РР<>Неопределено тогда
		Для Каждого Стр_Ф Из РР Цикл
			
			ДвоичнДанные=Новый ДвоичныеДанные(Стр_Ф);
			СоздатьАгрегацииПоФайлу(ДвоичнДанные,МассивАгрегация);
			
			
			
		Конеццикла;
		
		Если дД=Истина Тогда
			
			 ОтправитьАгрегацииНаКлиентеМассив(МассивАгрегация);
			//Для Каждого Стр_1 Из МассивАгрегация Цикл
			//	Форм=ПолучитьФорму("Документ.СозданиеНовогоШкНаКороба_ХамелеонЦРПТ.Форма.ФормаДокумента",Новый Структура(
			//	"Ключ",Стр_1));
			//	Форм.ОтправитьВЦРПТ(ДД);
				
			//Конеццикла;
			
		КонецЕслИ;
		Элементы.Список.Обновить();
	КонецЕсли;
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьИзXMLИОтправить(Команда)
	// Вставить содержимое обработчика.
	Перем Файл;
	ВклЗаг = 0;
	//ДанныеЛиста.Очистить();
	Режим=РежимДиалогаВыбораФайла.Открытие;
	нДиалог= НОвый ДиалогВыбораФайла(Режим);
	//Фильтр="Файл xls/txt/xml|*.xls;*.xlsx;*.txt;*.xml|Файл txt|*.txt|Файл xls|*.xls;*.xlsx|Файл xml|*.xml";
	Фильтр="Файл xml|*.xml";
	нДиалог.МножественныйВыбор=Истина;
	нДиалог.Фильтр=Фильтр;
	нДиалог.Заголовок="Выберите файл для загрузки..." ;
	нДиалог.Показать(Новый ОписаниеОповещения("ПослеВыбораФайлаСозданиеАгрегации_ХамелеонЦРПТ",ЭтаФорма,Истина));
	
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ОчиститьТокенСрегистра(ТТ)
	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаписатьТокенВРегистр(ТТ,"")
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ЗапишемВРегистр_Ответ(ТекстДокумент,Об)
	РегДв=РегистрыСведений.ОтправленныеПолученные_ХамелеонЦРПТ.СоздатьНаборЗаписей();
	РегДв.Отбор.Документ.Установить(Об.Ссылка);
	РегДв.Отбор.Вид.Установить("Получили ответ");
	Добав=РегДв.Добавить();
	Добав.Документ=Об.Ссылка;
	Добав.Вид="Получили ответ";
	Добав.Файл=Новый ХранилищеЗначения(ТекстДокумент,Новый СжатиеДанных(9));
	РегДв.Записать(Истина);
КонецПроцедуры



&НаКлиенте
Процедура ОтправитьФормированиеАгрегации(Команда)
	// Вставить содержимое обработчика.
	
	//Thumbprint_1=ПолучитьИзПользователя();	
	
//	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ОтправитьАгрегациюНаСервере_ХамелеонЦРПТ(Объект.ТекущийПользователь,Объект.Ссылка);
//	Возврат;
	МассивАгрегаций=Новый Массив;
	Для Каждого Стр_1 Из Элементы.Список.ВыделенныеСтроки Цикл
		МассивАгрегаций.Добавить(Стр_1);
	Конеццикла;
	ОтправитьАгрегацииНаКлиентеМассив(МассивАгрегаций)
КонецПроцедуры

Функция ПолучимМассивКоробов(МассивДляОбработки,МассивКМ)
	МассивВернуть=Новый массив;
	Для Каждого Стр Из МассивДляОбработки Цикл
 		МассивВернуть.Добавить(Новый Структура("НомерК,Ссылка",Стр.НомерКороба,Стр));
		МассивКМ.Добавить(Стр.НомерКороба);
		
	Конеццикла;
	Возврат МассивВернуть
	
КонецФункции

Процедура МеняемКоробНаНовый(Стр_11);
	
	ПолОб=Стр_11.Ссылка.Получитьобъект();
	СтарыйКороб=ПолОб.НомерКороба;
	Если не ЗначениеЗаполнено(ПолОб.СтарыйКороб) Тогда
		ПолОб.СтарыйКороб=Полоб.НомерКороба;
	КонецЕсли;
	ВВ=Истина;
	ПолОб.НомерКороба="";
	Обработки._Запуск_ХамелеонЦРПТ.СформироватьСлучайныйКоробСервер(ПолОб,ВВ);
	ПолОб.Записать();
	Сообщить("Поменяли номер короба с "+СтарыйКороб+" на "+ПолОб.НомерКороба);
						
КонецПроцедуры
&НаКлиенте
Процедура ОтправитьАгрегацииНаКлиентеМассив(МассивАгрегаций,УжеОтправили=Ложь) Экспорт
	Обр=ПолучитьФорму("Обработка._Запуск_ХамелеонЦРПТ.Форма.Форма");
	Если Не Обр.Открыта() Тогда
		Обр.Открыть();
		ЭтаФорма.Активизировать();
	КонецЕсли;
	//
	//ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ОтправитьФормированиеАгрегации_Сервер(Обр.Пользователь,МассивАгрегаций);
	//
	//Возврат;
	//
	
	
	Если МассивАгрегаций.Количество()>0 Тогда	
		
		ТекПользователь=Обр.Пользователь;
		МассивДляОбработки=Новый Массив;
		МассивДляОбработки.Очистить();
		СформироватьФайлДляОтправки=СформироватьДляОтправкиТекст(МассивАгрегаций,ТекПользователь,МассивДляОбработки);
		Если НЕ ЗначениеЗаполнено(СформироватьФайлДляОтправки) ИЛИ МассивДляОбработки.Количество()=0 Тогда
			Возврат;
		КонецЕсли;
		Если ПроверятьПередОтправкойНомерКоробаИСоздаватьНовый Тогда
			Thumbprint_1=ПолучитьИзПользователя(ТекПользователь);	
			
			
			Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
				Прокси=Новый ИнтернетПрокси;
				Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
			
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			Иначе
				HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
			КонецЕсли;
			
			
			СРегистра=Thumbprint_1.ТокенПоОтпечатку;
			Если Не ЗначениеЗаполнено(СРегистра) тогда
				Попытка
					СРегистра=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучениеТокенаНаСервере(Thumbprint_1);	
				исключение
					СРегистра=Неопределено;
				КонецПопытки;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СРегистра) Тогда
				Сообщить("Не удалось получить токен по организации");
				Возврат;
			Конецесли;
			Что=Thumbprint_1.Что;
			МассивКМ=Новый Массив;
			МассивКМ.Очистить();
			СчитаемКМЫ=ПолучимМассивКоробов(МассивДляОбработки,МассивКМ);
			
			Тело=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьтелоПоcis(МассивКМ);
			HTTPЗапрос=Новый HTTPЗапрос("api/v4/facade/cis/cis_list?pg="+Что);
						
			HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
			HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
			#Если ВебКлиент Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8);
			#Иначе
				HTTPЗапрос.УстановитьТелоИзСтроки(Тело,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
			#КонецЕсли
			
			//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
			///Константин           
			Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
			//Текст1=Ответ.ПолучитьТелоКакСтроку();
			Поменяли=ложь;
			Если Ответ.КодСостояния=200 Тогда
				NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON_Соответствие(
				Ответ.ПолучитьТелоКакСтроку());
				Для Каждого Стр_11 Из СчитаемКМЫ Цикл
				
					Если NNN[Стр_11.НомерК]<>Неопределено Тогда
						//Объект.СтарыйКороб=Объект.НомерКороба;
						//Объект.НомерКороба="";
						//Обработки._Запуск_ХамелеонЦРПТ.СформироватьСлучайныйКоробСервер(
						//выбранаНоменклатура=Истина;
						МеняемКоробНаНовый(Стр_11);
						Поменяли=Истина;
						//ОтправитьВЦРПТ(Команда,УжеОтправили);
						//Возврат;
					КонецЕсли;
				Конеццикла;
			КонецЕслИ;
			
			Если Поменяли=Истина Тогда
				
    			ОтправитьАгрегацииНаКлиентеМассив(МассивДляОбработки,УжеОтправили);
				Возврат;
			КонецЕсли;
			
			
		КонецЕслИ;
		
	Иначе
		Возврат
	КонецЕсли;
	
	Thumbprint_1=ПолучитьИзПользователя(ТекПользователь);	
	
//	ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ОтправитьАгрегациюНаСервере_ХамелеонЦРПТ(Объект.ТекущийПользователь,Объект.Ссылка);
//	Возврат;
	
	Если Не ЗначениеЗаполнено(Thumbprint_1) Тогда
		Возврат;
	КонецЕслИ;
	
	СРегистра=Thumbprint_1.ТокенПоОтпечатку;
	Если Не ЗначениеЗаполнено(СРегистра) тогда
		Попытка
			СРегистра=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучениеТокенаНаСервере(Thumbprint_1);	
		исключение
			СРегистра=Неопределено;
		КонецПопытки;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СРегистра) Тогда
		Сообщить("Не удалось получить токен по организации");
		Возврат;
	Конецесли;
	
	
	Подписанный="";
	СформироватьФайлДляОтправки=СтрЗаменить(СформироватьФайлДляОтправки,Символы.ПС,"");
	СформироватьФайлДляОтправки=СтрЗаменить(СформироватьФайлДляОтправки,Символы.ВК,"");
		
		
	Подписанный="";
	ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.ПодписатьФайл(Thumbprint_1.Внешняя,СформироватьФайлДляОтправки,Thumbprint_1,Подписанный,Истина);
	
	//Подписанный=base64Строка(ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьДвоичныеДанныеИзСтроки_Сервер(
	//Подписанный,КодировкаТекста.UTF8,Ложь));
	
	Подписанный=СтрЗаменить(Подписанный,Символы.ПС,"\r\n");
	Подписанный=СтрЗаменить(Подписанный,Символы.ВК,"\r\n");
	Подписанный=СтрЗаменить(Подписанный,"\r\n","");
	
	
	Добав=base64Строка(ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьДвоичныеДанныеИзСтроки_Сервер(
	СформироватьФайлДляОтправки,КодировкаТекста.UTF8,Ложь));
	Добав=СтрЗаменить(Добав,Символы.ПС,"\r\n");
	Добав=СтрЗаменить(Добав,Символы.ВК,"\r\n");
	Добав=СтрЗаменить(Добав,"\r\n","");

	Тело="{
	|""product_document"":"""+Добав+""",
	|""document_format"": ""MANUAL"",
	|""signature"":"""+Подписанный+"""}";
	

	Если ЗначениеЗАполнено(Thumbprint_1.АдресПрокси) Тогда
		Прокси=Новый ИнтернетПрокси;
		Прокси.Установить("http",Thumbprint_1.АдресПрокси,Thumbprint_1.ПортПрокси,Thumbprint_1.ПользовательПрокси,Thumbprint_1.ПарольПрокси);
	
		HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,Прокси,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
	Иначе
		HTTPСервисЗапрос=Новый HTTPСоединение(Thumbprint_1.АдресКАПИ,,,,,Thumbprint_1.Таймаут,Новый ЗащищенноеСоединениеopenSSL());
	КонецЕсли;
	
			
 	что=Thumbprint_1.что;
	HTTPЗапрос=Новый HTTPЗапрос("api/v3/lk/documents/aggregation/create?pg="+Что);
	HTTPЗапрос.Заголовки.Вставить("Content-Type","application/json;charset=UTF-8");
	HTTPЗапрос.Заголовки.Вставить("Authorization","Bearer "+СРегистра);
	//HTTPЗапрос.Заголовки.Вставить("Host","ismotp.crptech.ru");
	///Константин           
	HTTPЗапрос.УстановитьТелоИзСтроки(Тело);
	Ответ=HTTPСервисЗапрос.ОтправитьДляОбработки(HTTPЗапрос);
	Текст1=Ответ.ПолучитьТелоКакСтроку();
	
	Если 	ЗаписыватьДанныеПриОтправкеЗаказа тогда
		ЗапишемВРегистр_Ответ(Текст1,МассивДляОбработки[0]);
	КонецЕсли;
		
	
	
	Если Ответ.КодСостояния=202 ИЛИ Ответ.КодСостояния=200 
		ИЛИ Ответ.КодСостояния=201 
		Тогда
		
			ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ОбработкаВсехОрошо(МассивДляОбработки,Текст1);
			//Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отправлен");
			//Объект._Order_ID=Текст1;
			
	ИначеЕсли Ответ.КодСостояния=401 		ИЛИ Ответ.КодСостояния=502    Тогда
			Если УжеОтправили=Истина Тогда
				ОчиститьТокенСрегистра(Thumbprint_1.Thumbprint_1)
			Иначе
				ОбщийМодуль_НаСервере_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1);
				ОтправитьАгрегацииНаКлиентеМассив(МассивАгрегаций,Истина)			
			КонецЕсли
	Иначе
		//	Если УжеОтправили=Истина Тогда
				//Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ");
					Попытка
						//ЧтениеJSON = Новый ЧтениеJSON;
						//ЧтениеJSON.УстановитьСтроку(Текст1);
						
						ОшибкаОтправки="";
						Если Найти(Текст1,"Billing contract for shoes product group not signed by participant")>0 Тогда
							Сообщить("Договор биллинга для выбранной группы не подписан участником.");
						Иначе
						NNN=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ЗаполнитьСтруктуруИзОтветаJSON(Текст1);//ПрочитатьJSON(ЧтениеJSON);
						попытка
							
							ОшибкаОтправки=NNN.error_message;
						Исключение
							Попытка
								ОшибкаОтправки=NNN.error_description;
								Если NNN.error="access_denied" Тогда
									Сообщить(NNN.error_description+" "+" сайт ЦРПТ не доступен. Повторите отправку позже");
								КонецЕсли;
							Исключение
							КонецПопытки;
							
						КонецПопытки;
							КонецЕсли;
						ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ОбработкаВсеПлохо(МассивДляОбработки,ОшибкаОтправки);

					
					Исключение
					КонецПопытки;
		//	Иначе
		//		ОбщиеМетоды_НаКлиенте_ХамелеонЦРПТ.Получение_Токена(Thumbprint_1,ЭтаФорма,"ПодписатьФайлПослеПолученияТокена");
		//		ОтправитьЗаявку(Команда,Истина)			
		//	КонецЕсли
	//КонецЕсли;
	
	КонецЕсли;
	
	
	
	
	
	

КонецПроцедуры

Функция ПолучитьИзПользователя(ТекПользователь)
	Возврат Обработки._Запуск_ХамелеонЦРПТ.ПолучитьИзПользователя(ТекПользователь);
	
КонецФункции

&НаСервереБезКонтекста
Функция СформироватьДляОтправкиТекст(МассивАгрегаций,ТекПользователь,МассивДляОбработки)
	
	Организация=МассивАгрегаций[0].Организация;
	СайтВходВСистему=МассивАгрегаций[0].ТекущийПользователь.СайтыВходаВСистему;
	Если СайтВходВСистему="Фармацевтика" Тогда
		Сообщить("По фармацевтике необходимо отправлять каждый документ отдельно");
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТекПользователь.Организация<>Организация ИЛИ 
		ТекПользователь.СайтыВходаВСистему<>СайтВходВСистему Тогда
			//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		// Данный фрагмент построен конструктором.
		// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Пользователи_ХамелеонЦРПТ.Ссылка
			|ИЗ
			|	Справочник.Пользователи_ХамелеонЦРПТ КАК Пользователи_ХамелеонЦРПТ
			|ГДЕ
			|	Пользователи_ХамелеонЦРПТ.Организация = &Организация
			|	И Пользователи_ХамелеонЦРПТ.СайтыВходаВСистему = &СайтыВходаВСистему
			|	И НЕ Пользователи_ХамелеонЦРПТ.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("СайтыВходаВСистему", СайтВходВСистему);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			// Вставить обработку выборки ВыборкаДетальныеЗаписи
			ТекПользователь=ВыборкаДетальныеЗаписи.Ссылка
		КонецЦикла;
		
		//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

		
		
	КонецЕсли;
	
	Чтен=Новый  ЗаписьJSON;
	Чтен.УстановитьСтроку(Новый ПараметрыЗаписиJSON());
	Чтен.ЗаписатьНачалоОбъекта();
	Чтен.ЗаписатьИмяСвойства("participantId");
	Чтен.ЗаписатьЗначение(Организация.ИНН);
	Чтен.ЗаписатьИмяСвойства("aggregationUnits");
		
		
		
	Чтен.ЗаписатьНачалоМассива();
	
	
	Для Каждого Стр Из МассивАгрегаций Цикл
		
		Если Стр.Организация<>Организация 
			ИЛИ Стр.ТекущийПользователь.СайтыВходаВСистему<>СайтВходВСистему
			Тогда
			Сообщить("Пропускаем документ агрегации "+Строка(Стр));
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(Стр.ТипДокумента) И Стр.ТипДокумента<>Перечисления.ВидДокументаУпаковок_ХамелеонЦРПТ.Формирование Тогда
			Сообщить("Пропускаем документ агрегации "+Строка(Стр)+". В групповой можем отправить только формирования агрегации");
			Продолжить;
		КонецЕслИ;
		Если (ЗначениеЗаполнено(Стр._Order_ID) 
			И Стр.Статус<>ПредопределенноеЗначение("Перечисление.СтатусыДокументов_ХамелеонЦРПТ.Отказ")
			) ИЛИ Стр.ВходитВГрупповую=Истина
			Тогда
			Сообщить("Агрегация "+Строка(Стр)+" отправлена.");
			Продолжить;
		КонецЕслИ;
		
		Чтен.ЗаписатьНачалоОбъекта();
		Чтен.ЗаписатьИмяСвойства("unitSerialNumber");
		Чтен.ЗаписатьЗначение(Стр.НомерКороба);
		Чтен.ЗаписатьИмяСвойства("aggregationType");
		Чтен.ЗаписатьЗначение("AGGREGATION");
		
		Чтен.ЗаписатьИмяСвойства("sntins");
		Чтен.ЗаписатьНачалоМассива();
		Для Каждого Стр_М Из Стр.Марки Цикл
			Чтен.ЗаписатьЗначение(Стр_М.Марка);
		Конеццикла;
		Чтен.ЗаписатьКонецМассива();
		Чтен.ЗаписатьКонецОбъекта();
		
		МассивДляОбработки.Добавить(Стр);
	Конеццикла;
	Чтен.ЗаписатьКонецМассива();
	Чтен.ЗаписатьКонецОбъекта();
		
	Возврат Чтен.Закрыть();
	
	
	
КонецФункции


&НаКлиенте
Процедура ПечатьТабакСПО(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	Таб=Новый ТабличныйДокумент;
	
	Для Каждого Стр Из Элементы.Список.ВыделенныеСтроки Цикл
		Форм=ПолучитьФорму("Документ.СозданиеНовогоШкНаКороба_ХамелеонЦРПТ.Форма.ФормаДокумента",Новый Структура(
		"Ключ",Стр));
		Форм.ПечатьЭтикеткиТабакСервер(Таб);
	КонецциклА;
	Таб.Показать();
КонецПроцедуры

