
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	//Ссылка=Неопределено;
	//Параметры.Свойство("Ссылка",Ссылка);
	//ХСОтправитель=Ссылка.ХС;
	//НомерТТН=Ссылка.НомерТТН;
	//ДатаТТн=Ссылка.ДатаТТН;
	//Статус=Ссылка.Тип;
	//
	//Если ЗначениеЗаполнено(Ссылка) Тогда
	////{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	//// Данный фрагмент построен конструктором.
	//// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ОтложенныеДействия_ХамелеонМеркурия.applic
	//	|ИЗ
	//	|	РегистрСведений.ОтложенныеДействия_ХамелеонМеркурия КАК ОтложенныеДействия_ХамелеонМеркурия
	//	|ГДЕ
	//	|	ОтложенныеДействия_ХамелеонМеркурия.Объект = &Объект
	//	|	И ОтложенныеДействия_ХамелеонМеркурия.Тип = &Тип";
	//
	//Запрос.УстановитьПараметр("Объект", Ссылка);
	//Запрос.УстановитьПараметр("Тип", Перечисления.ТипОтправкиAPI_ХамелеонМеркурий.ЗаявкаПоТранзакции);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//	Тикет=ВыборкаДетальныеЗаписи.applic
	//КонецЦикла;
	//
	////}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	//Если Не ЗначениеЗаполнено(Тикет) Тогда
	//	Если Найти(Ссылка.Ошибка,"Тикет ")=1 Тогда
	//		Тикет=Сред(Ссылка.Ошибка,6);
	//		Тикет=Сред(Тикет,1,Найти(Тикет,".")-1);
	//		Тикет=СокрЛП(Тикет);
	//	КонецЕсли;
	//КонецЕсли;
	//
	//КонецЕсли;
	//
КонецПроцедуры

Процедура ДобавитьПараметр(Тело, ИмяПарам, ЗначПарам) Экспорт
	Тело = Тело + "&" + ИмяПарам + "=" + КодироватьСтроку(ЗначПарам, СпособКодированияСтроки.КодировкаURL);
КонецПроцедуры


&НаСервере
Процедура Команда1НаСервере()
	// Вставить содержимое обработчика.
	HTTPСервисЗапрос=New COMObject("WinHttp.WinHttpRequest.5.1");
	Если НЕ ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПодключитьсяКМеркурию_ПОСТОЯННО(HTTPСервисЗапрос,ТекущийПользователь.Инициатор,ТекущийПользователь.ПарольМеркурий,ТекущийПользователь) Тогда
		Возврат;
	Конецесли;
	
		

	Сайт=ОбщийМодуль_НаСервере_ХамелеонЦРПТ.ПолучитьСайт();
	Если Сайт="" Тогда
		Сообщить("Не определен режим работы программы!! Зайдите в пользователя и выберите режим работы (тестовый или рабочий)");
		Возврат;
	КонецЕсли;
	
		TimeStamp = 1000 * (CurrentDate() - Date(1970,1,1) - 3 * 3600);
//		HTTPСервисЗапрос.Open("POST", Сайт+"/operatorui?_action=listTransactionAjax&formed=false&status=&_language=ru&pageList="+
//		1+"&all=true&request=false&template=false&input=false&timestamp="+
//		TimeStamp, 0);
//		Если ЗначениеЗаполнено(ТекущийПользователь) Тогда
//			ОбщийМодуль_НаСервере_ХамелеонЦРПТ.УстановитьПрокси(HTTPСервисЗапрос,,,ТекущийПользователь);
//		Конецесли;	
////		
////					Обработки._Запуск_ХамелеонМеркурий.УстановитьПрокси(HTTPСервисЗапрос);
//					HTTPСервисЗапрос.Send();
//					HTTPСервисЗапрос.WaitForResponse();
					
					HTTPСервисЗапрос.Open("POST", Сайт+"/operatorui", 0);
					
					Секунд=360*1000;
							HTTPСервисЗапрос.SetTimeouts(Секунд,Секунд,Секунд,Секунд);
		Если ЗначениеЗаполнено(ТекущийПользователь) Тогда
			ОбщийМодуль_НаСервере_ХамелеонЦРПТ.УстановитьПрокси(HTTPСервисЗапрос,,,ТекущийПользователь);
		Конецесли;	

//					Обработки._Запуск_ХамелеонМеркурий.УстановитьПрокси(HTTPСервисЗапрос);
					
					Тело="";
					ДобавитьПараметр(Тело,"","");	
					ДобавитьПараметр(Тело,"_action","findTransactionAjax");	
					ДобавитьПараметр(Тело,"_language","ru");	
					ДобавитьПараметр(Тело,"find","true");	
					ДобавитьПараметр(Тело,"pk","");	
					ДобавитьПараметр(Тело,"orerby","");	
					ДобавитьПараметр(Тело,"pagelist","1");	
					ДобавитьПараметр(Тело,"preview","true");	
					ДобавитьПараметр(Тело,"status","");	
					ДобавитьПараметр(Тело,"request","");	
					ДобавитьПараметр(Тело,"temp","");	
					ДобавитьПараметр(Тело,"template","false");	
					ДобавитьПараметр(Тело,"templateName","");	
					ДобавитьПараметр(Тело,"timestamp",timestamp);	
					ДобавитьПараметр(Тело,"transportOrTrailer","");	
					ДобавитьПараметр(Тело,"waybill.waybillNumber",НомерТТН);	
					ДобавитьПараметр(Тело,"waybill.waybillDate",Формат(ДатаТТН,"ДФ=""дд.ММ.гггг"""));	
					ДобавитьПараметр(Тело,"transactionTypeCheck","on");	
					ДобавитьПараметр(Тело,"servicedEnterprise.select2View","");	
					ДобавитьПараметр(Тело,"firm.select2View","");	
					ДобавитьПараметр(Тело,"timestamp",TimeStamp);	
					Тело=Сред(Тело,2);
					
					HTTPСервисЗапрос.SetRequestHeader("Content-Type","application/x-www-form-urlencoded");
					HTTPСервисЗапрос.Send(Тело);
					HTTPСервисЗапрос.WaitForResponse();

					ПолучСтр=HTTPСервисЗапрос.ResponseText;	
					Чтение=Новый ЧтениеHTML;
					Чтение.УстановитьСтроку(ПолучСтр);
					ПостроительDOM = Новый ПостроительDOM;
					ДокументHTML = ПостроительDOM.Прочитать(Чтение);
		БылиДокумента=Ложь;
		Сч=Истина;
		Для Каждого Стр_Т Из ДокументHTML.ПолучитьЭлементыПоИмени("tr") Цикл//ДокументHTML.ПолучитьЭлементыПоИмени("listContent")[0].ДочерниеУзлы[0].ДочерниеУзлы Цикл
			//ПЕРВУЮ Строчку пропускаем
			Если Сч Тогда
				Сч=Ложь;
				Продолжить;
			КонецЕсли;
			
			Добав=Транзакции.Добавить();
			Добав.ХСОтправитель=ХСОтправитель;
			добав.НомерВМеркурии=Стр_Т.ДочерниеУзлы[0].ТекстовоеСодержимое;
			Добав.Идентификатор=Стр_Т.Идентификатор;
			Добав.ДатаДокумента=Стр_Т.ДочерниеУзлы[2].ТекстовоеСодержимое;
				//Обработки._Запуск_ХамелеонМеркурий.ЗапишемВсеВТранзакцию(HTTPСервисЗапрос,"",Стр_Т.ДочерниеУзлы[0].ТекстовоеСодержимое,Стр_Т.Идентификатор,1,Стр_Т.ДочерниеУзлы[2].ТекстовоеСодержимое,Перечисления.ВидТранзакций_ХамелеонМеркурий.ИсходящееРешение,Транзакция.ХС);
			КонецЦикла;
			Если Транзакции.Количество()=0 Тогда
				Сообщить("Накладные в Меркурии не нашли");
			КонецЕсли;
						
	
КонецПроцедуры

Процедура ОсновныеДействияФормыВосстановитьТранзакции(Кнопка)
	// Вставить содержимое обработчика.
	Сайт=Обработки._Запуск_ХамелеонМеркурий.ПолучитьСайт();
	Если Сайт="" Тогда
		Сообщить("Не определен режим работы программы!! Зайдите в пользователя и выберите режим работы (тестовый или рабочий)");
		Возврат;
	КонецЕсли;
	
			ХранилищесистемныхНастроек.Сохранить("Предприятие_Меркурий","Предприятие_Меркурий",Неопределено);
			
			ХранилищесистемныхНастроек.Сохранить("ХС_МЕРКУРИЙ","ХС_МЕРКУРИЙ",ХСОтправитель);
		HTTPСервисЗапрос=New COMObject("WinHttp.WinHttpRequest.5.1");
	Попытка
		// ************************** Начало блока по отключению защищенного соединения **********
		Скрипт= Новый COMОбъект("MSScriptControl.ScriptControl");
		Скрипт.language="javascript";
		Скрипт.AddObject("WinHttp",HTTPСервисЗапрос);
		
		Скрипт.Eval("WinHttp.Option(4)=13056");//intSslErrorIgnoreFlags Игноировать ошбибки при SSL соединении
		//Скрипт.Eval("WinHttp.Option(6)=true");//blnEnableRedirects Разрешить перенаправления
		//Скрипт.Eval("WinHttp.Option(12)=true");//blnEnableHttpsToHttpRedirects Разрешить перенаправления с защищенного на не защиещенное соединение
		// ************************** Конец блока по отключению защищенного соединения **********	
	Исключение
	КонецПопытки;
		
	Если НЕ Обработки._Запуск_ХамелеонМеркурий.ПодключитьсяКМеркурию_ПОСТОЯННО(HTTPСервисЗапрос) Тогда
		Возврат;
	КонецЕсли;
	
	Если Транзакции.Количество()>0 Тогда
		Если НЕ ЗначениеЗаполнено(Ссылка.НомерВМеркурии) Тогда
			Докум=Ссылка.ПолучитьОбъект();
			Докум.НомерВМеркурии=Транзакции[0].НомерВМеркурии;
			Попытка
			Докум.Записать();
		исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Стр Из Транзакции Цикл
		Тр=Обработки._Запуск_ХамелеонМеркурий.ЗапишемВсеВТранзакцию(HTTPСервисЗапрос,"",Стр.НомерВМеркурии,Стр.Идентификатор,1,,Перечисления.ВидТранзакций_ХамелеонМеркурий.ИсходящееРешение,Стр.ХСОтправитель);
		Сообщить("Восстановлена транзакци "+Строка(тр));
	Конеццикла;
	Попытка
			Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	Команда1НаСервере();
КонецПроцедуры

&НаСервере
Процедура Команда2НаСервере()
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	Сайт=Обработки._Запуск_ХамелеонМеркурий.ПолучитьСайт();
	Если Сайт="" Тогда
		Сообщить("Не определен режим работы программы!! Зайдите в пользователя и выберите режим работы (тестовый или рабочий)");
		Возврат;
	КонецЕсли;
	
			ХранилищесистемныхНастроек.Сохранить("Предприятие_Меркурий","Предприятие_Меркурий",Неопределено);
			
			ХранилищесистемныхНастроек.Сохранить("ХС_МЕРКУРИЙ","ХС_МЕРКУРИЙ",ХСОтправитель);
		HTTPСервисЗапрос=New COMObject("WinHttp.WinHttpRequest.5.1");
	Попытка
		// ************************** Начало блока по отключению защищенного соединения **********
		Скрипт= Новый COMОбъект("MSScriptControl.ScriptControl");
		Скрипт.language="javascript";
		Скрипт.AddObject("WinHttp",HTTPСервисЗапрос);
		
		Скрипт.Eval("WinHttp.Option(4)=13056");//intSslErrorIgnoreFlags Игноировать ошбибки при SSL соединении
		//Скрипт.Eval("WinHttp.Option(6)=true");//blnEnableRedirects Разрешить перенаправления
		//Скрипт.Eval("WinHttp.Option(12)=true");//blnEnableHttpsToHttpRedirects Разрешить перенаправления с защищенного на не защиещенное соединение
		// ************************** Конец блока по отключению защищенного соединения **********	
	Исключение
	КонецПопытки;
		
	Если НЕ Обработки._Запуск_ХамелеонМеркурий.ПодключитьсяКМеркурию_ПОСТОЯННО(HTTPСервисЗапрос) Тогда
		Возврат;
	КонецЕсли;
	
	Докум=Ссылка.ПолучитьОбъект();
	
//	Если Транзакции.Количество()>0 Тогда
//		Если НЕ ЗначениеЗаполнено(Ссылка.НомерВМеркурии) Тогда
			//Докум=Ссылка.ПолучитьОбъект();
//			Докум.НомерВМеркурии=Транзакции[0].НомерВМеркурии;
			
//		КонецЕсли;
//	КонецЕсли;
//	Докум.ЗаписатьВЛюбомСлучае=Истина;
//	Докум.Записать();
	//Докум.ЗаписатьВЛюбомСлучае=Истина;
	
	ЗаписалиПервыйПопавшися=ЛожЬ;
	Для Каждого Стр_1 Из Элементы.Таблица1.ВыделенныеСтроки Цикл
		
		Стр=Транзакции.НайтиПоИдентификатору(Стр_1);
		Если ЗаписалиПервыйПопавшися=Ложь Тогда
			Если НЕ ЗначениеЗаполнено(Ссылка.НомерВМеркурии) Тогда
				Докум.НомерВМеркурии=Стр.НомерВМеркурии;
				Докум.ЗаписатьВЛюбомСлучае=Истина;
				Попытка
				Докум.Записать();
				Исключение
				КонецПопытки;
				ЗаписалиПервыйПопавшися=Истина
			КонецЕсли;
			
		КонецЕсли;
		
		
		Тр=Обработки._Запуск_ХамелеонМеркурий.ЗапишемВсеВТранзакцию(HTTPСервисЗапрос,"",Стр.НомерВМеркурии,Стр.Идентификатор,1,,Перечисления.ВидТранзакций_ХамелеонМеркурий.ИсходящееРешение,Стр.ХСОтправитель,Истина);
		Сообщить("Восстановлена транзакци "+Строка(тр));
	Конеццикла;
КонецПроцедуры

&НаКлиенте
Процедура Команда2(Команда)
	Команда2НаСервере();
КонецПроцедуры

&НаСервере
Процедура Команда3НаСервере()
	// Вставить содержимое обработчика.
			ПришелXML="";
			Текущаядата=Текущаядата();
			ДЛ="";
			ТекущийПользователь=ХранилищеСистемныхНастроек.Загрузить("ТекущийПользователь","ТекущийПользователь");
			
		//Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Версия) Тогда
			Версия="2.1";
			Р=Обработки._Запуск_ХамелеонМеркурий.ОбработатьОтложенныйРезультат(ТекущийПользователь,
			Тикет,Ссылка.ХС.GUID,ПришелXML,ДЛ,Версия);
			
			Если РегистрыСведений.НастройкиПрограммы_ХамелеонМеркурий.Получить().ЗаписыватьXMLдляОтладки Тогда
			
							регДв=РегистрыСведений.ПолученныеОтправленныеXML_ХамелеонМеркурий.СоздатьНаборЗаписей();
				РегДв.Отбор.Тип.Установить("Поучиили ответ");
				РегДв.Отбор.Период.Установить(Текущаядата);
				РегДв.Отбор.Документ.Установить(Ссылка);
		
		ДД=РегДв.Добавить();
				ДД.Тип="Поучиили ответ";
				ДД.Период=Текущаядата;
				ДД.Документ=Ссылка;
				ДД.xmlХранилище=Новый ХранилищеЗначения(ПришелXML,Новый СжатиеДанных(9));
				РегДв.Записать(Истина);
КонецЕсли;
			Если Р<>Неопределено  Тогда

				Транз=Ссылка;
					  
				Если  Р="В ПРОЦЕССЕ" Тогда
					
								Сообщить("Ждем....");

		ИначеЕсли Р="УДАЛИЛИ ТИКЕТЫ" Тогда
//			                        Транз=ВыборкаДетальныеЗаписи.Объект;
							//Если Транз.Тип=Перечисления.ВидТранзакций_ХамелеонМеркурий.ЗаявкаВAPI Тогда
									Транз_1=Ссылка.ПолучитьОбъект();
									Транз_1.ЗаписатьВЛюбомСлучае=Истина;
									//Транз_1.Тип=Перечисления.ВидТранзакций_ХамелеонМеркурий.ОтказанаВAPI;
									//Транз_1.ЗаписатьВЛюбомСлучае=Истина;
									Транз_1.Ошибка="Тикет "+Тикет+". НЕ УДАЛОСЬ ОБРАБОТАТЬ "+"тикет(запрос) "+Тикет+" был удален в Меркурии. Дальнейшая его обработка невозможна";
									//Транз_1.Пометка=Истина;
									Попытка
									Транз_1.Записать();
								Исключение
									КонецПопытки;
								//Конецесли;
			
			
			Сообщить("Тикет(запрос) "+Тикет+" был удален в Меркурии. Дальнейшая его обработка невозможна");
			регДв=РегистрыСведений.ОтложенныеДействия_ХамелеонМеркурия.СоздатьНаборЗаписей();
			РегДв.Отбор.Объект.Установить(Ссылка);
			РегДв.Отбор.Тип.Установить(Перечисления.ТипОтправкиAPI_ХамелеонМеркурий.ЗаявкаПоТранзакции);
	
			ДД=РегДв.Добавить();
			ДД.Тип=Перечисления.ТипОтправкиAPI_ХамелеонМеркурий.ЗаявкаПоТранзакции;
			ДД.Объект=Ссылка;
			ДД.applic="";
			ДД.issuerId="";
			ДД.Ошибка=ПришелXML;
			ДД.ТекущийПользователь="";
			РегДв.Записать(Истина);
					
				ИначеЕсли Р.Body.receiveApplicationResultResponse.application.status="COMPLETED" Тогда
					Обработки._Запуск_ХамелеонМеркурий.ОбработатьРезультатПроводкиТранзакции(Р,Транз.Ссылка,ТекущийПользователь);		
				Сообщить("Транзакция обработана. Проверьте результат");
								регДв=РегистрыСведений.ОтложенныеДействия_ХамелеонМеркурия.СоздатьНаборЗаписей();
				РегДв.Отбор.Объект.Установить(Транз.Ссылка);
				РегДв.Отбор.Тип.Установить(Перечисления.ТипОтправкиAPI_ХамелеонМеркурий.ЗаявкаПоТранзакции);
		
				РегДв.Записать(Истина);					
			ИначеЕсли Р.Body.receiveApplicationResultResponse.application.status<>"IN_PROCESS" 
				И  Р.Body.receiveApplicationResultResponse.application.status<>"ACCEPTED"  Тогда
					Транз=Ссылка.ПолучитьОбъект();

			Попытка
				транз.Ошибка="";
				Если Тип("ОбъектXDTO")=ТипЗнч(Р.Body.receiveApplicationResultResponse.application.errors) Тогда
					errors=Р.Body.receiveApplicationResultResponse.application.errors;
					Если ТипЗнч(errors.error)=Тип("ОбъектXDTO") Тогда
						ошибка=errors.error;
						Если Найти(ошибка.code,"MERC")>0 Тогда
							транз.Ошибка=транз.Ошибка+" "+ошибка.Последовательность().ПолучитьТекст(0);
						КонецЕсли;
					Иначе
						Для Каждого Ошибка Из errors.error Цикл
							
							Если Найти(ошибка.code,"MERC")>0 Тогда
								транз.Ошибка=транз.Ошибка+" "+ошибка.Последовательность().ПолучитьТекст(0);
							КонецЕсли;
							
						КонецЦикла;
						
					КонецЕсли;
				Иначе
					Для Каждого errors Из Р.Body.receiveApplicationResultResponse.application.errors Цикл
						Если ТипЗнч(errors.error)=Тип("ОбъектXDTO") Тогда
							ошибка=errors.error;
							Если Найти(ошибка.code,"MERC")>0 Тогда
								транз.Ошибка=транз.Ошибка+" "+ошибка.Последовательность().ПолучитьТекст(0);
							КонецЕсли;
						Иначе
							Для Каждого Ошибка Из errors.error Цикл
								
								Если Найти(ошибка.code,"MERC")>0 Тогда
									транз.Ошибка=транз.Ошибка+" "+ошибка.Последовательность().ПолучитьТекст(0);
								КонецЕсли;
								
							КонецЦикла;
							
						КонецЕсли;
						
					КонецЦикла;
				КонецЕсли;
				Если ЗначениеЗаполнено(транз.ошибка) тогда
					Транз.Тип=Перечисления.ВидТранзакций_ХамелеонМеркурий.ОтказанаВAPI;
					Попытка
					Транз.Записать(РежимЗаписиДокумента.Проведение);
				исключение
					КонецПопытки;
									регДв=РегистрыСведений.ОтложенныеДействия_ХамелеонМеркурия.СоздатьНаборЗаписей();
				РегДв.Отбор.Объект.Установить(Транз.Ссылка);
				РегДв.Отбор.Тип.Установить(Перечисления.ТипОтправкиAPI_ХамелеонМеркурий.ЗаявкаПоТранзакции);
		
				ДД=РегДв.Добавить();
				ДД.Тип=Перечисления.ТипОтправкиAPI_ХамелеонМеркурий.ЗаявкаПоТранзакции;
				ДД.Объект=Транз.Ссылка;
				ДД.applic="";
				ДД.issuerId="";
				ДД.Ошибка=ПришелXML;
				ДД.ТекущийПользователь="";
				РегДв.Записать(Истина);
					
				КонецЕсли;
				
			Исключение
				КонецПопытки;

					
			КонецЕсли;
		ИначеЕсли Тип("ОбъектXDTO")=ТипЗнч(Дл) Тогда
			
					Транз=Ссылка.ПолучитьОбъект();
			Попытка
				транз.Ошибка="";
				Если Тип("ОбъектXDTO")=ТипЗнч(Дл.Body.receiveApplicationResultResponse.application.errors) Тогда
					errors=Дл.Body.receiveApplicationResultResponse.application.errors;
					Если ТипЗнч(errors.error)=Тип("ОбъектXDTO") Тогда
						ошибка=errors.error;
						Если Найти(ошибка.code,"MERC")>0 Тогда
							транз.Ошибка=транз.Ошибка+" "+ошибка.Последовательность().ПолучитьТекст(0);
						КонецЕсли;
					Иначе
						Для Каждого Ошибка Из errors.error Цикл
							
							Если Найти(ошибка.code,"MERC")>0 Тогда
								транз.Ошибка=транз.Ошибка+" "+ошибка.Последовательность().ПолучитьТекст(0);
							КонецЕсли;
							
						КонецЦикла;
						
					КонецЕсли;
				Иначе
					Для Каждого errors Из Дл.Body.receiveApplicationResultResponse.application.errors Цикл
						Если ТипЗнч(errors.error)=Тип("ОбъектXDTO") Тогда
							ошибка=errors.error;
							Если Найти(ошибка.code,"MERC")>0 Тогда
								транз.Ошибка=транз.Ошибка+" "+ошибка.Последовательность().ПолучитьТекст(0);
							КонецЕсли;
						Иначе
							Для Каждого Ошибка Из errors.error Цикл
								
								Если Найти(ошибка.code,"MERC")>0 Тогда
									транз.Ошибка=транз.Ошибка+" "+ошибка.Последовательность().ПолучитьТекст(0);
								КонецЕсли;
								
							КонецЦикла;
							
						КонецЕсли;
						
					КонецЦикла;
				КонецЕсли;
				Если ЗначениеЗаполнено(транз.ошибка) тогда
					Транз.ЗаписатьВЛюбомСлучае=Истина;
					
					Транз.Тип=Перечисления.ВидТранзакций_ХамелеонМеркурий.ОтказанаВAPI;
					Попытка
					Транз.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					КонецПопытки;
									регДв=РегистрыСведений.ОтложенныеДействия_ХамелеонМеркурия.СоздатьНаборЗаписей();
				РегДв.Отбор.Объект.Установить(Транз.Ссылка);
				РегДв.Отбор.Тип.Установить(Перечисления.ТипОтправкиAPI_ХамелеонМеркурий.ЗаявкаПоТранзакции);
		
				ДД=РегДв.Добавить();
				ДД.Тип=Перечисления.ТипОтправкиAPI_ХамелеонМеркурий.ЗаявкаПоТранзакции;
				ДД.Объект=Транз.Ссылка;
				ДД.applic="";
				ДД.issuerId="";
				ДД.Ошибка=ПришелXML;
				ДД.ТекущийПользователь="";
				РегДв.Записать(Истина);
					
				КонецЕсли;
				
			Исключение
				КонецПопытки;
			Конецесли;			
				Статус=Ссылка.Ссылка.Тип;

//			Ссылка_1=Ссылка;
//			Ссылка=Неопределено;
	//Ссылка=Ссылка_1.Ссылка;
КонецПроцедуры

&НаКлиенте
Процедура Команда3(Команда)
	Команда3НаСервере();
	//Ссылка=Ссылка.Ссылка;
	ЭтаФорма.Прочитать();
	Элементы.Поле6.ОбновитьТекстРедактирования();;
//ПодключитьОбработчикОжидания("аа",0.1,Истина);

КонецПроцедуры

&НаКлиенте
Процедура аа()
	НаСервере();
КонецПроцедуры
Процедура НАСервере()
	Ссылка=Ссылка_1.Ссылка
КонецПроцедуры

&НаСервере
Функция Команда4НаСервере()
	// Вставить содержимое обработчика.
	
	Возврат Документы.Транзакции_ХамелеонМеркурий.ПолучитьМакет("HELPПоЗагрузкеТраназкцииПоНомеруТТНДата");
КонецФункции

&НаКлиенте
Процедура Команда4(Команда)
	Текст=Команда4НаСервере();
	Текст.Показать();
КонецПроцедуры

&НаКлиенте
Процедура Команда5(Команда)
	// Вставить содержимое обработчика.
	УдалитьСвязь()
КонецПроцедуры

Процедура УдалитьСвязь()
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Докум=Ссылка;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СопоставлениеСправочниковДокументов_ХамелеонМеркурий.Справочник_Документ КАК Справочник_Документ
		|ИЗ
		|	РегистрСведений.СопоставлениеСправочниковДокументов_ХамелеонМеркурий КАК СопоставлениеСправочниковДокументов_ХамелеонМеркурий
		|ГДЕ
		|	СопоставлениеСправочниковДокументов_ХамелеонМеркурий.СправочникДокумент_Меркурия = &СправочникДокумент_Меркурия";
	
	Запрос.УстановитьПараметр("СправочникДокумент_Меркурия", Докум);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Справочник_Документ) Тогда
			РегДв=РегистрыСведений.СопоставлениеСправочниковДокументов_ХамелеонМеркурий.СоздатьНаборЗаписей();
			РегДв.Отбор.Справочник_Документ.Установить(ВыборкаДетальныеЗаписи.Справочник_Документ);
			Добав=РегДв.Добавить();
			Добав.Справочник_Документ=ВыборкаДетальныеЗаписи.Справочник_Документ;
			Добав.СправочникДокумент_Меркурия=Документы.Транзакции_ХамелеонМеркурий.ПустаяСсылка();
			РегДв.Записать(Истина);
		КонецЕсли;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	Если Найти(ВреГ(ВернутьСтатусДокумента(Докум)),"ОФОРМЛЕН")=0 Тогда

		Тр=Докум.ПолучитьОбъект();
		//тр.Тип=Перечисления.ВидТранзакций_ХамелеонМеркурий.;
		Тр.ЗаписатьВЛюбомСлучае=Истина;
		Тр.Свойства.Очистить();
		Попытка
			Тр.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

Функция ВернутьСтатусДокумента(Транз)
	НайтиСтр=Транз.Свойства.НайтиСтроки(Новый Структура("Имя","Статус"));
	Если НайтиСтр.Количество()=0 Тогда
		Возврат "";
	Иначе
		Возврат НайтиСтр[0].Значение;
	КонецЕсли;
	
конецФункции


&НаКлиенте
Процедура ВыборТранзакции(Команда)
	// Вставить содержимое обработчика.
	Если Элементы.Таблица1.ВыделенныеСтроки<>Неопределено тогда
		ЭтаФорма.Закрыть(Элементы.Таблица1.ТекущиеДанные.НомерВМеркурии);
		
	Конецесли;
КонецПроцедуры


&НаКлиенте
Процедура ПодключитьсяДляОпределенияНомера(Команда)
	// Вставить содержимое обработчика.
	Форм=ОткрытьФорму("Справочник.Пользователи_ХамелеонЦРПТ.Форма.ФормаПодключениеПоГВЭ");
	Форм.Пользователь=ТекущийПользователь;
КонецПроцедуры

