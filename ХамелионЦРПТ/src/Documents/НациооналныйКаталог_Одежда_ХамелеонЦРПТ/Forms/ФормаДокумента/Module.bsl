
&НаКлиенте
Процедура ЗагрузитьИзXLS(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	ДиалогФыбораФайла								=	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогФыбораФайла.Фильтр="Файл xls/xlsx|*.xls;*.xlsx|Файл xlsx (*.xlsx)|*.xlsx|Файл xls (*.xls)|*.xls";
	ДиалогФыбораФайла.Заголовок						=	"Выберите загружаемый файл с данными";
	ДиалогФыбораФайла.ПредварительныйПросмотр		=	Ложь;
	ДиалогФыбораФайла.Расширение					=	"xls";
	ДиалогФыбораФайла.ИндексФильтра					=	0;
	ДиалогФыбораФайла.ПолноеИмяФайла				=	"";
	ДиалогФыбораФайла.ПроверятьСуществованиеФайла	=	Истина;
	
	Подразделение=НеопределенО;
	
	ДиалогФыбораФайла.Показать(Новый ОписаниеОповещения("ВыборФайла",ЭтаФорма));
	
КонецПроцедуры

&наКлиенте
Процедура ВыборФайла(ВыборЗагрExcel,РР) Экспорт
	Если ЗначениеЗАполнено(ВыборЗагрExcel)
		И ВыборЗагрExcel.Количество()>0  тогда
		AAA=Новый Файл(ВыборЗагрExcel[0]);
		
		
		НачатьПолучениеКаталогаВременныхФайлов(Новый ОписаниеОповещения("ПослеПолученияКаталогаВр",ЭтаФорма,Новый Структура("AAA,В",AAA,ВыборЗагрExcel[0])));
		
		//Каталог = КаталогВременныхФайлов();
		//ИмяФайла = Строка(Новый УникальныйИдентификатор) + AAA.Расширение;
		//ВремФ = Каталог + ИмяФайла;
		//
		////ВремФ=ПолучитьИмяВременногоФайла(AAA.Расширение);
		//Объект.ИмяФайла=AAA.Имя;
		//НачатьКопированиеФайла(Новый ОписаниеОповещения("КопированиеФайла",ЭтаФорма,AAA),ВыборЗагрExcel[0],ВремФ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеПолученияКаталогаВр(Каталог,ДД) Экспорт
	AAA=ДД.AAA;
		ИмяФайла = Строка(Новый УникальныйИдентификатор) + AAA.Расширение;
		ВремФ = Каталог + ИмяФайла;
		
		//ВремФ=ПолучитьИмяВременногоФайла(AAA.Расширение);
//		Объект.ИмяФайла=AAA.Имя;
		НачатьКопированиеФайла(Новый ОписаниеОповещения("КопированиеФайла",ЭтаФорма,AAA),ДД.В,ВремФ);
КонецПроцедуры
&НаКлиенте
Процедура КопированиеФайла(РР,ДД_1) Экспорт
	ДД=ДД_1.Имя;
		ДовичнДанные=Новый ДвоичныеДанные(РР);
		НачатьУдалениеФайлов(Новый ОписаниеОповещения("УдаленияФайла",ЭтаФорма),РР);
		АдресВр=ПоместитьВоВременноеХранилище(ДовичнДанные);
		ЗагрузитьФайл(АдресВр,ДД,ДД_1.Расширение);
		//Если ЗагрузитьИОтправить Тогда
		//	ОтправитьВGS46(РР);
		//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдаленияФайла(РР) Экспорт
КонецПроцедуры


Процедура ЗагрузитьФайл(АдресВр,ИмяФ,Расширение)
	//Обработки._Запуск_ХамелеонЦРПТ.ОбработкаЗагрузкиДокумента(Объект,АдресВр,Расширение);
	Если Прав(ИмяФ,4)="xlsx" Тогда
		ИмяВр=ПолучитьИмяВременногоФайла("xlsx");
	Иначе
		ИмяВр=ПолучитьИмяВременногоФайла("xls");
		
	КонецЕсли;
	ДовичнДанные=ПолучитьИзВременногоХранилища(АдресВр);
	ДовичнДанные.Записать(ИмяВр);
	ОбластьФайла = Новый ТабличныйДокумент;
	Попытка
		// Выполняется долго на больших файлах.
		ОбластьФайла.Прочитать(ИмяВр, СпособЧтенияЗначенийТабличногоДокумента.Значение);
		УдалитьФайлы(ИмяВр);
	Исключение
		Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
		УдалитьФайлы(ИмяВр);
		Возврат;
	КонецПопытки;
	
	КолСтр = ОбластьФайла.ВысотаТаблицы;
	КолКолонок = ОбластьФайла.ШиринаТаблицы;
	
	ТаблицаРезультат = Новый ТаблицаЗначений;
	
	ТаблицаРезультат.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№", 4);
	ТаблицаРезультат.Колонки.Добавить("Сопоставлено", Новый ОписаниеТипов("Булево"), "Сопоставлено", 1);
	
	Для Сч = 1 ПО КолКолонок Цикл
		нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
		ИмяКолонки = "N" + нКолонка;
		ТаблицаРезультат.Колонки.Добавить(ИмяКолонки);
	КонецЦикла;
	
	// 1-я строка. Заголовки.
	НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
	НоваяСтрокаТФ.НомерСтроки = 1;
	Для Сч=1 ПО КолКолонок Цикл
		нКолонка = СтрЗаменить(Сч, Символы.НПП, "");
		ИмяКолонки = "N" + нКолонка;
		НоваяСтрокаТФ[ИмяКолонки] = ОбластьФайла.ПолучитьОбласть("R1" + "C"+нКолонка).ТекущаяОбласть.Текст;
		
		// Используется при формировании таблицы на форме обработки.
		ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
		ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
		ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
	КонецЦикла;
	
	НачСтрока = ?(Не ЗначениеЗаполнено(НачСтрока), 2, НачСтрока);
	КонСтрока = ?(Не ЗначениеЗаполнено(КонСтрока), КолСтр, КонСтрока);
	
	Для нСтрокаТФ = НачСтрока ПО КонСтрока Цикл
		НоваяСтрокаТФ = ТаблицаРезультат.Добавить();
		НоваяСтрокаТФ[0] = нСтрокаТФ;
		нСтрока = СтрЗаменить(нСтрокаТФ, Символы.НПП, "");
		Для Колонка = 1 ПО КолКолонок Цикл
			нКолонка = СтрЗаменить(Колонка, Символы.НПП, "");
			Область = ОбластьФайла.ПолучитьОбласть("R"+нСтрока+"C"+нКолонка);
			ТекущаяОбласть = Область.ТекущаяОбласть;
			Если Колонка=2 Тогда
				ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
				Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
					ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
				Иначе
					ЗначениеЯчейки = Неопределено;
				КонецЕсли;
			Иначе
				Попытка
					ЗначениеЯчейки = xmlString(ТекущаяОбласть.Значение);        // Число, Дата.
				Исключение
					ЗначениеЯчейки = xmlstring(сокрЛП(ТекущаяОбласть.Текст));    // Строка, Булево. (Булево как строка "ИСТИНА"/"ЛОЖЬ")
					Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
						ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
					Иначе
						ЗначениеЯчейки = Неопределено;
					КонецЕсли;
				КонецПопытки;
			КонецЕсли;
			ИмяКолонки = "N" + нКолонка;
			НоваяСтрокаТФ[ИмяКолонки] = ЗначениеЯчейки;
			
			// Используется при формировании таблицы на форме обработки.
			ШиринаКолонки = ТаблицаРезультат.Колонки[ИмяКолонки].Ширина;
			ДлинаСтроки    = СтрДлина(СокрЛП(НоваяСтрокаТФ[ИмяКолонки]));
			ТаблицаРезультат.Колонки[ИмяКолонки].Ширина = ?(ШиринаКолонки < ДлинаСтроки, ДлинаСтроки, ШиринаКолонки);
		КонецЦикла;
	КонецЦикла;
	
	// Юзабилити. Удалить пустые колонки.
	 
		//	Возврат ТаблицаРезультат;	

		
	Объект.Одежда.Очистить();
	
	НомСтр=0;
	Для Каждого Стр Из ТаблицаРезультат Цикл
		
		НомСтр=НомСтр+1;
		
		Если НомСтр<3 Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Стр.N4) тогда
			Продолжить;
		Конецесли;
		
		
		Добав=Объект.Одежда.Добавить();
		Добав.НаименованиеЗаявителя=Стр.N1;
		Добав.ИННЗаявителя=Стр.N2;
		Добав.НаименованиеТовараНаЭтикетке=Стр.N3;
		Добав.КодТНВЭД=Обработки._Запуск_ХамелеонЦРПТ.КодТВЭДПоКОду(Стр.N5);
		Добав.КодВУчетнойСистеме=Стр.N6;
		Добав.БрендТорговаяМарка=Стр.N7;
		Добав.СтранаПроизводства=Обработки._Запуск_ХамелеонЦРПТ.ВернутьСтрану(Стр.N8);
		Добав.ВидИзделия=Обработки._Запуск_ХамелеонЦРПТ.ВидИзделия_ХамелеонЦРПТ(Стр.N9);
		ТипМА=Стр.N10;
		Если ТипМА="Модель" Тогда
			Добав.МодельИзделияТип=Перечисления.МодельИзделия_ХамелеонЦРПТ.Модель;
		Иначе
			Добав.МодельИзделияТип=Перечисления.МодельИзделия_ХамелеонЦРПТ.Артикул;
		Конецесли;
		Добав.МодельИзделияЗначение=Стр.N11;
		Добав.РазмерИзделияТип=Обработки._Запуск_ХамелеонЦРПТ.РазмерИзделияГОСТ_ХамелеонЦРПТ(Стр.N12);
		Добав.РазмерИзделияЗначение=Стр.N13;
		
		Добав.РазмерВИныхСистемахТип=Обработки._Запуск_ХамелеонЦРПТ.СтраныДляИныхРазмеровОдежды_ХамелеонЦРПТ(Стр.N14);
		Добав.РазмерВИныхСистемахЗначение=Стр.N15;
		
		Добав.Цвет=Стр.N16;
		Добав.СоставСырья=Стр.N17;
		Добав.ЦелевойПол=Обработки._Запуск_ХамелеонЦРПТ.ЦелевойПол_ХамелеонЦРПТ(Стр.N18);
		Добав.ВозвратПотребителя=Обработки._Запуск_ХамелеонЦРПТ.ВозвратПотребителя_Одежда_ХамелеонЦРПТ(Стр.N19);
		
		Добав.Стандарт=Обработки._Запуск_ХамелеонЦРПТ.Стандарты_ХамелеонЦРПТ(Стр.N20);
		
		
		//Попытка
		//	ГТИНЧисло=Число(Стр.N2);
		//	
		//	Если ГТИНЧисло<=1000000 Тогда
		//		Продолжить;
		//	КонецЕсли;
		//Исключение
		//	Продолжить;
		//КонецПопытки;
		//Пояснение=xmlString(Стр.N1);
		//V_PROD_COVER_GTIN=Число(Стр.N2);
		//V_ID_IS=xmlString(Стр.N3);
		//V_MANUFACTURER_CODE=xmlString(Стр.N4);
		//V_PUBLICATION_DATE=xmlString(Стр.N5);
		//V_PROD_DESC_RU=xmlString(Стр.N6);
		//V_PROD_NAME_RU=xmlString(Стр.N7);
		//V_WEB_90000626=xmlString(Стр.N8);///ИНН
		//V_WEB_90000187=xmlString(Стр.N9);///страна
		//V_WEB_90001683=xmlString(Стр.N10);///Вид обуви
		//V_WEB_90001685=xmlString(Стр.N11);///Материал вверха
		//V_WEB_90001686=xmlString(Стр.N12);///Материал подладки
		//V_WEB_90001687=xmlString(Стр.N13);///Материал низа
		//V_WEB_90001688=xmlString(Стр.N14);///Цвет
		//V_WEB_90001690=xmlString(Стр.N15);///Размер
		//Попытка
		//	РезультатОбработки=xmlString(Стр.N16);
		//Исключение
		//КонецПопытки;
		//СпрОб=Справочники.Обувь_ХамелеонЦРПТ.НайтиПоРеквизиту("GTIN",V_PROD_COVER_GTIN);
		//Если Спроб=Справочники.Обувь_ХамелеонЦРПТ.ПустаяСсылка() Тогда
		//	Спроб=Справочники.Обувь_ХамелеонЦРПТ.СоздатьЭлемент();
		//	
		//Иначе
		//	СпрОб=СпрОб.ПолучитьОбъект();
		//	
		//КонецЕсли;
		//СпрОб.GTIN=V_PROD_COVER_GTIN;
		//СпрОб.НаименованиеТовара=V_PROD_DESC_RU;
		//Спроб.БрендТорговаяМарка=V_PROD_NAME_RU;
		//СпрОб.ВидОбуви=ВидОбуви_ХамелеонЦРПТ(V_WEB_90001683);
		//СпрОб.ИННПроизводителяИмпортёра=ВернутьПроизводителя(V_WEB_90000626);
		//СпрОб.КодВУчетнойСистеме=V_ID_IS;
		//СпрОб.МатериалВерха=V_WEB_90001685;
		//СпрОб.МатериалНиза=V_WEB_90001687;
		//СпрОб.МатериалПодкладки=V_WEB_90001686;
		//СпрОб.МодельПроизводителяАртикул=V_MANUFACTURER_CODE;
		//СпрОб.Наименование=Спроб.НаименованиеТовара;
		//СпрОб.СтранаПроизводства=ВернутьСтрану(V_WEB_90000187);
		//СпрОб.Цвет=V_WEB_90001688;
		//СпрОб.Записать();
		//Если Объект.GS1.НайтиСтроки(Новый Структура("GTIN",V_PROD_COVER_GTIN)).Количество()=0 Тогда
		//	ДобавСтр=Объект.GS1.Добавить();
		//	ДобавСтр.Пояснение=Пояснение;
		//	ЗаполнитьЗначенияСвойств(ДобавСтр,Спроб);
		//	ДобавСтр.РазмерВШтихмассовойСистеме=V_WEB_90001690;
		//	ДобавСтр.НаименованиеТовараНаЭтикетке=Спроб.НаименованиеТовара;
		//	Попытка
		//		Добавстр.ДатаПубликацииПлан=Дата(Сред(V_PUBLICATION_DATE,1,4),Сред(V_PUBLICATION_DATE,6,2),Сред(V_PUBLICATION_DATE,9,2));
		//	Исключение
		//	КонецПопытки;
		//КонецЕсли;
				
		
	Конеццикла;	
	
КонецПроцедуры

